{
    "data/dataset_gray.py": {
        "torch": {}
    },
    "data/preprocess.py": {
        "torch": {}
    },
    "lr_models/GRU.py": {
        "torch": {
            "GRU_15": {
                "variable": {
                    "value": "self.gru",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "dropout": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_16": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_17": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.4",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "lr_models/ResNet18.py": {
        "torch": {
            "Conv2d_11": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_21": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_22": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_24": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_52": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_53": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_68": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_80": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_71": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "lr_models/ResNet18_real.py": {
        "torch": {
            "Conv2d_11": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_21": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_22": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_24": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_52": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_53": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_68": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_80": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_71": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "lr_models/ResNet18_real_bn.py": {
        "torch": {
            "Conv2d_11": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_21": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_22": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_24": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_52": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_53": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_68": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_80": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_71": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "models/base_model.py": {
        "torch": {
            "device_22": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "no_grad_56": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/lr_gan_model.py": {
        "torch": {
            "DataParallel_56": {
                "variable": {
                    "value": "self.Encoder_fab",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.Encoder_fab",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_58": {
                "variable": {
                    "value": "self.Encoder_W_df",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.Encoder_W_df",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_59": {
                "variable": {
                    "value": "self.Encoder_W_real",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.Encoder_W_real",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_61": {
                "variable": {
                    "value": "self.Classifier_W_real",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.Classifier_W_real",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_62": {
                "variable": {
                    "value": "self.Classifier_W_df",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.Classifier_W_df",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_82": {
                "variable": {
                    "value": "self.optimizer_DFN",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "params",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[{'params': self.Encoder_fab.parameters(), 'lr': opt['gan']['lr']}, {'params': self.FAB.parameters(), 'lr': opt['gan']['lr']}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_fab.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Encoder_W_real.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_real.parameters(), 'lr': opt['gan']['lr'] * 0.1}, {'params': self.Encoder_W_df.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_df.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_W_real.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_real.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_W_df.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_df.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ]
                    ]
                },
                "betas": {
                    "value": "(opt['gan']['beta1'], 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_95": {
                "variable": {
                    "value": "self.optimizer_fusion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "params",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[{'params': self.Encoder_fab.parameters(), 'lr': opt['gan']['lr']}, {'params': self.FAB.parameters(), 'lr': opt['gan']['lr']}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_fab.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Encoder_W_real.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_real.parameters(), 'lr': opt['gan']['lr'] * 0.1}, {'params': self.Encoder_W_df.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_df.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_W_real.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_real.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_W_df.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_df.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ]
                    ]
                },
                "betas": {
                    "value": "(opt['gan']['beta1'], 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_102": {
                "variable": {
                    "value": "self.optimizer_baseline",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "params",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[{'params': self.Encoder_fab.parameters(), 'lr': opt['gan']['lr']}, {'params': self.FAB.parameters(), 'lr': opt['gan']['lr']}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_fab.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Encoder_W_real.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_real.parameters(), 'lr': opt['gan']['lr'] * 0.1}, {'params': self.Encoder_W_df.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_df.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_W_real.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_real.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_W_df.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_df.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ]
                    ]
                },
                "betas": {
                    "value": "(opt['gan']['beta1'], 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_110": {
                "variable": {
                    "value": "self.optimizer_df",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "params",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[{'params': self.Encoder_fab.parameters(), 'lr': opt['gan']['lr']}, {'params': self.FAB.parameters(), 'lr': opt['gan']['lr']}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_fab.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Encoder_W_real.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_real.parameters(), 'lr': opt['gan']['lr'] * 0.1}, {'params': self.Encoder_W_df.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_df.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_W_real.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_real.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ],
                        [
                            "[{'params': self.Encoder_W_df.parameters(), 'lr': opt['gan']['lr']}, {'params': self.Classifier_W_df.parameters(), 'lr': opt['gan']['lr'] * 0.1}]",
                            "List"
                        ]
                    ]
                },
                "betas": {
                    "value": "(opt['gan']['beta1'], 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_114": {
                "variable": {
                    "value": "self.criterion_LR",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "NLLLoss_115": {
                "variable": {
                    "value": "self.criterion_NLL",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_116": {
                "variable": {
                    "value": "self.criterion_CE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KLDivLoss_117": {
                "variable": {
                    "value": "self.kl_dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "L1Loss_118": {
                "variable": {
                    "value": "self.criterion_recon",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_165": {
                "variable": {
                    "value": "xs",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "xs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.linspace(-1, 1, sampler.size(2))",
                            "Call"
                        ],
                        [
                            "np.meshgrid(xs, xs)",
                            "Call"
                        ],
                        [
                            "np.stack(xs, 2)",
                            "Call"
                        ],
                        [
                            "torch.tensor(xs, requires_grad=False).unsqueeze(0).repeat(batch_size, 1, 1, 1).cuda()",
                            "Call"
                        ],
                        [
                            "xs.float()",
                            "Call"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "unsqueeze_165": {
                "variable": {
                    "value": "xs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "grid_sample_168": {
                "variable": {
                    "value": "output_img",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "source_img.detach()",
                    "type": "Call",
                    "possible_values": []
                },
                "grid": {
                    "value": "sampler_xs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(sampler.permute(0, 2, 3, 1) + xs).clamp(min=-1, max=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_183": {
                "variable": {
                    "value": "self.input_pair",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.source_img.unsqueeze(1), self.target_img.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_188": {
                "variable": {
                    "value": "xc_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ew_source, ew_target]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_205": {
                "variable": {
                    "value": "ff_ew",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ew[:, 1:29, :], ew[:, 28:29, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_206": {
                "variable": {
                    "value": "xc",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ff_ew, ew]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_241": {
                "variable": {
                    "value": "ff_ew",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ew[:, 1:29, :], ew[:, 28:29, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_242": {
                "variable": {
                    "value": "xc",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ff_ew, ew]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_282": {
                "variable": {
                    "value": "(maxvalues, maxindices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "output.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_297": {
                "variable": {
                    "value": "ff_ew",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ew[:, 1:29, :], ew[:, 28:29, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_298": {
                "variable": {
                    "value": "xc",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ff_ew, ew]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_331": {
                "variable": {
                    "value": "ff_ew",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ew[:, 1:29, :], ew[:, 28:29, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_332": {
                "variable": {
                    "value": "xc",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[ff_ew, ew]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_339": {
                "variable": {
                    "value": "(maxvalues, maxindices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "output.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_356": {
                "variable": {
                    "value": "img_save",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.input[0, 0:8, :, :, :], self.input[0, 8:16, :, :, :], self.input[0, 16:24, :, :, :], self.input[0, 24:29, :, :, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_256": {
                "variable": {
                    "value": "(maxvalues, maxindices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "output[k].data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_318": {
                "variable": {
                    "value": "self.flow_frame",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.flow_frame, flow2rgb(samplers[0, i + 1, :, :, :]).unsqueeze(0)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_127": {
                "variable": {
                    "value": "load_dict",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "load_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.weights_dir, load_filename)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_314": {
                "ndarray": {
                    "value": "rgb_map.clip(0, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_142": {
                "obj": {
                    "value": "net.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "save_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.weights_dir_out, save_filename)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/networks.py": {
        "torch": {
            "Sequential_50": {
                "variable": {
                    "value": "self.frontend3D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv3d(1, 64, kernel_size=(5, 7, 7), stride=(1, 2, 2), padding=(2, 3, 3), bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_57": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_74": {
                "variable": {
                    "value": "self.frontend2D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(2, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_81": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_96": {
                "variable": {
                    "value": "self.frontend2D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 64, kernel_size=(7, 7), stride=(2, 2), padding=(3, 3), bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_103": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "DataParallel_124": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_125": {
                "variable": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.decoder",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_128": {
                "variable": {
                    "value": "conv1",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_nc",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_129": {
                "variable": {
                    "value": "conv2",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_filters * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_130": {
                "variable": {
                    "value": "conv3",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_131": {
                "variable": {
                    "value": "conv4",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_132": {
                "variable": {
                    "value": "conv5",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_133": {
                "variable": {
                    "value": "conv6",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_134": {
                "variable": {
                    "value": "conv7",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_137": {
                "variable": {
                    "value": "batch_norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_138": {
                "variable": {
                    "value": "batch_norm2_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_139": {
                "variable": {
                    "value": "batch_norm4_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_140": {
                "variable": {
                    "value": "batch_norm8_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_141": {
                "variable": {
                    "value": "batch_norm8_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_142": {
                "variable": {
                    "value": "batch_norm8_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_145": {
                "variable": {
                    "value": "leaky_relu",
                    "type": "Variable",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_153": {
                "variable": {
                    "value": "up",
                    "type": "Variable",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_155": {
                "variable": {
                    "value": "dconv1",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_input_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_156": {
                "variable": {
                    "value": "dconv2",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_157": {
                "variable": {
                    "value": "dconv3",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_158": {
                "variable": {
                    "value": "dconv4",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_159": {
                "variable": {
                    "value": "dconv5",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_160": {
                "variable": {
                    "value": "dconv6",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_filters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_161": {
                "variable": {
                    "value": "dconv7",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_filters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "num_output_channels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_164": {
                "variable": {
                    "value": "batch_norm1_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ],
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_165": {
                "variable": {
                    "value": "batch_norm2_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_167": {
                "variable": {
                    "value": "batch_norm4_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_169": {
                "variable": {
                    "value": "batch_norm8_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_170": {
                "variable": {
                    "value": "batch_norm8_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_171": {
                "variable": {
                    "value": "batch_norm8_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "num_filters * 8",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_178": {
                "variable": {
                    "value": "leaky_relu",
                    "type": "Variable",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "ReLU_179": {
                "variable": {
                    "value": "relu",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_180": {
                "variable": {
                    "value": "tanh",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_210": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "NLLLoss_211": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_146": {
                "*args": {
                    "value": "conv1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_182": {
                "*args": {
                    "value": "relu",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv3d_51": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(5, 7, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(2, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_52": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool3d_54": {
                "kernel_size": {
                    "value": "(1, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_75": {
                "in_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(7, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_76": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_78": {
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_97": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(7, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_98": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_99": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_100": {
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Upsample_182": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_183": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_184": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_185": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_186": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_187": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Upsample_188": {
                "size": {
                    "value": "(96, 96)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "torch": {
            "DataLoader_19": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "LipreadingDataset(opt['validation']['dataset'], 'val')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt['input']['batchsize']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "toml.loads(optFile.read())",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "opt['input']['shuffle']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "toml.loads(optFile.read())",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt['input']['numworkers']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "toml.loads(optFile.read())",
                            "Call"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "no_grad_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "DataLoader_25": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "LipreadingDataset(opt['training']['dataset'], 'train')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt['input']['batchsize']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "toml.loads(optFile.read())",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "opt['input']['shuffle']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "toml.loads(optFile.read())",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt['input']['numworkers']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "toml.loads(optFile.read())",
                            "Call"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_34": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "LipreadingDataset(opt['validation']['dataset'], 'val')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt['input']['batchsize']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "toml.loads(optFile.read())",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "opt['input']['shuffle']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "toml.loads(optFile.read())",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt['input']['numworkers']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "toml.loads(optFile.read())",
                            "Call"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "no_grad_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}