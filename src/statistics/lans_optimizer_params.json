{
    "lans.py": {
        "tensorflow": {
            "get_variable_67": {
                "variable": {
                    "value": "m",
                    "type": "Name",
                    "possible_values": []
                },
                "name": {
                    "value": "param_name + '/lans_m'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "param.shape.as_list()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_variable_74": {
                "variable": {
                    "value": "v",
                    "type": "Name",
                    "possible_values": []
                },
                "name": {
                    "value": "param_name + '/lans_v'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "param.shape.as_list()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.zeros_initializer()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cast_89": {
                "variable": {
                    "value": "steps",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "global_step + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_103": {
                "variable": {
                    "value": "w_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "param",
                    "type": "Name",
                    "possible_values": []
                },
                "ord": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_104": {
                "variable": {
                    "value": "g_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "update",
                    "type": "Name",
                    "possible_values": [
                        [
                            "next_m_unbiased / (tf.sqrt(next_v_unbiased) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "update + self.weight_decay_rate * next_param",
                            "BinOp"
                        ],
                        [
                            "grad / (tf.sqrt(next_v_unbiased) + self.epsilon)",
                            "BinOp"
                        ]
                    ]
                },
                "ord": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_107": {
                "variable": {
                    "value": "ratio_m",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "tf.greater(w_norm, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.where(tf.greater(g_norm, 0), w_norm / g_norm, 1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_122": {
                "variable": {
                    "value": "g_norm",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "update",
                    "type": "Name",
                    "possible_values": [
                        [
                            "next_m_unbiased / (tf.sqrt(next_v_unbiased) + self.epsilon)",
                            "BinOp"
                        ],
                        [
                            "update + self.weight_decay_rate * next_param",
                            "BinOp"
                        ],
                        [
                            "grad / (tf.sqrt(next_v_unbiased) + self.epsilon)",
                            "BinOp"
                        ]
                    ]
                },
                "ord": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_123": {
                "variable": {
                    "value": "ratio_g",
                    "type": "Name",
                    "possible_values": []
                },
                "condition": {
                    "value": "tf.greater(w_norm, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.where(tf.greater(g_norm, 0), w_norm / g_norm, 1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "group_136": {
                "*inputs": {
                    "value": "*assignments",
                    "type": "Starred",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'LANSOptimizer'",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "norm_63": {
                "tensor": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": [
                        [
                            "grad / tf.norm(grad, ord=2)",
                            "BinOp"
                        ]
                    ]
                },
                "ord": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multiply_83": {
                "x": {
                    "value": "1.0 - self.beta_1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": [
                        [
                            "grad / tf.norm(grad, ord=2)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "multiply_84": {
                "x": {
                    "value": "1.0 - self.beta_2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.square(grad)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "greater_108": {
                "x": {
                    "value": "w_norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.norm(param, ord=2)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_109": {
                "condition": {
                    "value": "tf.greater(g_norm, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "x": {
                    "value": "w_norm / g_norm",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "greater_124": {
                "x": {
                    "value": "w_norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.norm(param, ord=2)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_125": {
                "condition": {
                    "value": "tf.greater(g_norm, 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "x": {
                    "value": "w_norm / g_norm",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_initializer_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_initializer_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "square_85": {
                "x": {
                    "value": "grad",
                    "type": "Name",
                    "possible_values": [
                        [
                            "grad / tf.norm(grad, ord=2)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_94": {
                "x": {
                    "value": "next_v_unbiased",
                    "type": "Name",
                    "possible_values": [
                        [
                            "next_v / beta2_correction",
                            "BinOp"
                        ]
                    ]
                }
            },
            "greater_109": {
                "x": {
                    "value": "g_norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.norm(update, ord=2)",
                            "Call"
                        ],
                        [
                            "tf.norm(update, ord=2)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_117": {
                "x": {
                    "value": "next_v_unbiased",
                    "type": "Name",
                    "possible_values": [
                        [
                            "next_v / beta2_correction",
                            "BinOp"
                        ]
                    ]
                }
            },
            "greater_125": {
                "x": {
                    "value": "g_norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.norm(update, ord=2)",
                            "Call"
                        ],
                        [
                            "tf.norm(update, ord=2)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}