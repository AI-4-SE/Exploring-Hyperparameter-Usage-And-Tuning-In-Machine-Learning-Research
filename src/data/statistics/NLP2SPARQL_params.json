{
    "fairseq_script/nl2sparql/transformer_with_pretrained_bert.py": {
        "torch": {
            "no_grad_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Linear_49": {
                "variable": {
                    "value": "self.dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "variable": {
                    "value": "self.lm_head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.vocab_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LogSoftmax_51": {
                "variable": {
                    "value": "self.lsm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Linear_151": {
                "variable": {
                    "value": "self.dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_152": {
                "variable": {
                    "value": "self.lm_head",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.vocab_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LogSoftmax_153": {
                "variable": {
                    "value": "self.lsm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_22": {
                "variable": {
                    "value": "true_dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred.log_softmax(dim=self.dim)",
                            "Call"
                        ],
                        [
                            "beam.buildTargetTokens(hyp)[:self.beam_size]",
                            "Subscript"
                        ],
                        [
                            "[torch.cat([x.view(-1) for x in p] + [zero] * (self.max_length - len(p))).view(1, -1) for p in pred]",
                            "ListComp"
                        ],
                        [
                            "beam.buildTargetTokens(hyp)[:self.beam_size]",
                            "Subscript"
                        ],
                        [
                            "[torch.cat([x.view(-1) for x in p] + [zero] * (self.max_length - len(p))).view(1, -1) for p in pred]",
                            "ListComp"
                        ],
                        [
                            "preds",
                            "Name"
                        ]
                    ]
                }
            },
            "mean_25": {
                "input": {
                    "value": "torch.sum(-true_dist * pred, dim=self.dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_63": {
                "variable": {
                    "value": "first_module.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "second_module.weight.clone()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_82": {
                "variable": {
                    "value": "hidden_states",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.dense(out[0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_127": {
                "variable": {
                    "value": "preds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "preds",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(preds, 0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(preds, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_166": {
                "variable": {
                    "value": "first_module.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "second_module.weight.clone()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_185": {
                "variable": {
                    "value": "hidden_states",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.dense(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "permute_185": {
                "variable": {
                    "value": "hidden_states",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "[1, 0, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_229": {
                "variable": {
                    "value": "preds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "preds",
                    "type": "List",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(preds, 0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(preds, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_25": {
                "input": {
                    "value": "-true_dist * pred",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "self.dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tril_48": {
                "input": {
                    "value": "torch.ones(2048, 2048)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tril_150": {
                "input": {
                    "value": "torch.ones(2048, 2048)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_48": {
                "*size": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_120": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(input_ids, beam.getCurrentState())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "ones_150": {
                "*size": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_217": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.dense(out)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_222": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(input_ids, beam.getCurrentState())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_123": {
                "tensors": {
                    "value": "[x.view(-1) for x in p] + [zero] * (self.max_length - len(p))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_125": {
                "tensors": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred.log_softmax(dim=self.dim)",
                            "Call"
                        ],
                        [
                            "beam.buildTargetTokens(hyp)[:self.beam_size]",
                            "Subscript"
                        ],
                        [
                            "[torch.cat([x.view(-1) for x in p] + [zero] * (self.max_length - len(p))).view(1, -1) for p in pred]",
                            "ListComp"
                        ],
                        [
                            "beam.buildTargetTokens(hyp)[:self.beam_size]",
                            "Subscript"
                        ],
                        [
                            "[torch.cat([x.view(-1) for x in p] + [zero] * (self.max_length - len(p))).view(1, -1) for p in pred]",
                            "ListComp"
                        ],
                        [
                            "preds",
                            "Name"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_125": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_225": {
                "tensors": {
                    "value": "[x.view(-1) for x in p] + [zero] * (self.max_length - len(p))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_227": {
                "tensors": {
                    "value": "pred",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred.log_softmax(dim=self.dim)",
                            "Call"
                        ],
                        [
                            "beam.buildTargetTokens(hyp)[:self.beam_size]",
                            "Subscript"
                        ],
                        [
                            "[torch.cat([x.view(-1) for x in p] + [zero] * (self.max_length - len(p))).view(1, -1) for p in pred]",
                            "ListComp"
                        ],
                        [
                            "beam.buildTargetTokens(hyp)[:self.beam_size]",
                            "Subscript"
                        ],
                        [
                            "[torch.cat([x.view(-1) for x in p] + [zero] * (self.max_length - len(p))).view(1, -1) for p in pred]",
                            "ListComp"
                        ],
                        [
                            "preds",
                            "Name"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_227": {
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_116": {
                "input": {
                    "value": "self.dense(out[0])",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "run.py": {
        "torch": {
            "manual_seed_151": {
                "seed": {
                    "value": "seed",
                    "type": "Name",
                    "possible_values": [
                        [
                            "42",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "manual_seed_152": {
                "seed": {
                    "value": "seed",
                    "type": "Name",
                    "possible_values": [
                        [
                            "42",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "device_244": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and (not args.no_cuda) else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "device_count_245": {
                "variable": {
                    "value": "args.n_gpu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_248": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "args.local_rank",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TransformerDecoderLayer_268": {
                "variable": {
                    "value": "decoder_layer",
                    "type": "Variable",
                    "possible_values": []
                },
                "d_model": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nhead": {
                    "value": "config.num_attention_heads",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TransformerDecoder_269": {
                "variable": {
                    "value": "decoder",
                    "type": "Variable",
                    "possible_values": []
                },
                "decoder_layer": {
                    "value": "decoder_layer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "nn.TransformerDecoderLayer(d_model=config.hidden_size, nhead=config.num_attention_heads)",
                            "Call"
                        ]
                    ]
                },
                "num_layers": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_306": {
                "variable": {
                    "value": "all_source_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[f.source_ids for f in train_features]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_307": {
                "variable": {
                    "value": "all_source_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[f.source_mask for f in train_features]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_308": {
                "variable": {
                    "value": "all_target_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[f.target_ids for f in train_features]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_309": {
                "variable": {
                    "value": "all_target_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[f.target_mask for f in train_features]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorDataset_310": {
                "variable": {
                    "value": "train_data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "all_source_ids",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_316": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TensorDataset(all_source_ids, all_source_mask, all_target_ids, all_target_mask)",
                            "Call"
                        ]
                    ]
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Call",
                    "possible_values": [
                        [
                            "RandomSampler(train_data)",
                            "Call"
                        ],
                        [
                            "DistributedSampler(train_data)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.train_batch_size // args.gradient_accumulation_steps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "set_device_247": {
                "device": {
                    "value": "args.local_rank",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_300": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Seq2Seq(encoder=encoder, decoder=decoder, config=config, beam_size=args.beam_size, max_length=args.max_target_length, sos_id=tokenizer.cls_token_id, eos_id=tokenizer.sep_token_id)",
                            "Call"
                        ],
                        [
                            "BertSeq2Seq(encoder=encoder, decoder=decoder, config=config, beam_size=args.beam_size, max_length=args.max_target_length, sos_id=tokenizer.cls_token_id, eos_id=tokenizer.sep_token_id)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "DDP(model)",
                            "Call"
                        ]
                    ]
                }
            },
            "RandomSampler_313": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TensorDataset(all_source_ids, all_source_mask, all_target_ids, all_target_mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "DistributedSampler_315": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "TensorDataset(all_source_ids, all_source_mask, all_target_ids, all_target_mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_449": {
                "variable": {
                    "value": "all_source_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[f.source_ids for f in eval_features]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_450": {
                "variable": {
                    "value": "all_source_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[f.source_mask for f in eval_features]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorDataset_451": {
                "variable": {
                    "value": "eval_data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "all_source_ids",
                    "type": null,
                    "possible_values": []
                }
            },
            "SequentialSampler_454": {
                "variable": {
                    "value": "eval_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "eval_data",
                    "type": "Call",
                    "possible_values": [
                        [
                            "TensorDataset(all_source_ids, all_source_mask)",
                            "Call"
                        ],
                        [
                            "TensorDataset(all_source_ids, all_source_mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_455": {
                "variable": {
                    "value": "eval_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "eval_data",
                    "type": "Call",
                    "possible_values": [
                        [
                            "TensorDataset(all_source_ids, all_source_mask)",
                            "Call"
                        ],
                        [
                            "TensorDataset(all_source_ids, all_source_mask)",
                            "Call"
                        ]
                    ]
                },
                "sampler": {
                    "value": "eval_sampler",
                    "type": "Call",
                    "possible_values": [
                        [
                            "SequentialSampler(eval_data)",
                            "Call"
                        ],
                        [
                            "SequentialSampler(eval_data)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.eval_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_286": {
                "f": {
                    "value": "args.load_model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SequentialSampler_387": {
                "variable": {
                    "value": "eval_sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "eval_data",
                    "type": "Call",
                    "possible_values": [
                        [
                            "TensorDataset(all_source_ids, all_source_mask)",
                            "Call"
                        ],
                        [
                            "TensorDataset(all_source_ids, all_source_mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_388": {
                "variable": {
                    "value": "eval_dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "eval_data",
                    "type": "Call",
                    "possible_values": [
                        [
                            "TensorDataset(all_source_ids, all_source_mask)",
                            "Call"
                        ],
                        [
                            "TensorDataset(all_source_ids, all_source_mask)",
                            "Call"
                        ]
                    ]
                },
                "sampler": {
                    "value": "eval_sampler",
                    "type": "Call",
                    "possible_values": [
                        [
                            "SequentialSampler(eval_data)",
                            "Call"
                        ],
                        [
                            "SequentialSampler(eval_data)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.eval_batch_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_382": {
                "variable": {
                    "value": "all_source_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[f.source_ids for f in eval_features]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_383": {
                "variable": {
                    "value": "all_source_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[f.source_mask for f in eval_features]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorDataset_384": {
                "variable": {
                    "value": "eval_data",
                    "type": "Variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "all_source_ids",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_244": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_437": {
                "obj": {
                    "value": "model_to_save.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "output_model_file",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(output_dir, 'pytorch_model.bin')",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_462": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_395": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}