{
    "module/modules.py": {
        "torch": {
            "tensor_387": {
                "variable": {
                    "value": "max_prob",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "possible_values": []
                }
            },
            "tensor_418": {
                "variable": {
                    "value": "max_prob",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "possible_values": []
                }
            },
            "stack_254": {
                "tensors": {
                    "value": "ret",
                    "possible_values": [
                        [
                            "func(inputs)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "max_403": {
                "variable": {
                    "value": "max_prob",
                    "possible_values": []
                },
                "input": {
                    "value": "max_prob",
                    "possible_values": [
                        [
                            "torch.tensor(0.0)",
                            "Call"
                        ],
                        [
                            "torch.max(max_prob, current_prob)",
                            "Call"
                        ],
                        [
                            "torch.tensor(0.0)",
                            "Call"
                        ],
                        [
                            "torch.max(max_prob, current_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_261": {
                "input": {
                    "value": "torch.sum(lst) - (len(lst) - 1)",
                    "possible_values": []
                }
            },
            "max_274": {
                "input": {
                    "value": "lst",
                    "possible_values": [
                        [
                            "to_tensor(lst)",
                            "Call"
                        ],
                        [
                            "t",
                            "Name"
                        ],
                        [
                            "to_tensor(lst)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_402": {
                "variable": {
                    "value": "current_prob",
                    "possible_values": []
                },
                "data": {
                    "value": "current_prob",
                    "possible_values": [
                        [
                            "geq(dist, 0, soft)",
                            "Call"
                        ],
                        [
                            "_and([current_prob, prob1, okey.confidence, ow.confidence], soft)",
                            "Call"
                        ],
                        [
                            "torch.tensor(current_prob)",
                            "Call"
                        ],
                        [
                            "_and([okey1.confidence, okey2.confidence, eq(d0, d1, soft)], soft)",
                            "Call"
                        ],
                        [
                            "_and([eq(d2, 0, soft), eq(d3, 0, soft), current_prob], soft)",
                            "Call"
                        ],
                        [
                            "torch.tensor(current_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_431": {
                "variable": {
                    "value": "max_prob",
                    "possible_values": []
                },
                "input": {
                    "value": "max_prob",
                    "possible_values": [
                        [
                            "torch.tensor(0.0)",
                            "Call"
                        ],
                        [
                            "torch.max(max_prob, current_prob)",
                            "Call"
                        ],
                        [
                            "torch.tensor(0.0)",
                            "Call"
                        ],
                        [
                            "torch.max(max_prob, current_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_251": {
                "data": {
                    "value": "item",
                    "possible_values": [
                        [
                            "lst",
                            "Name"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_261": {
                "data": {
                    "value": "0.0",
                    "possible_values": []
                }
            },
            "tensor_430": {
                "variable": {
                    "value": "current_prob",
                    "possible_values": []
                },
                "data": {
                    "value": "current_prob",
                    "possible_values": [
                        [
                            "geq(dist, 0, soft)",
                            "Call"
                        ],
                        [
                            "_and([current_prob, prob1, okey.confidence, ow.confidence], soft)",
                            "Call"
                        ],
                        [
                            "torch.tensor(current_prob)",
                            "Call"
                        ],
                        [
                            "_and([okey1.confidence, okey2.confidence, eq(d0, d1, soft)], soft)",
                            "Call"
                        ],
                        [
                            "_and([eq(d2, 0, soft), eq(d3, 0, soft), current_prob], soft)",
                            "Call"
                        ],
                        [
                            "torch.tensor(current_prob)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_261": {
                "input": {
                    "value": "lst",
                    "possible_values": [
                        [
                            "to_tensor(lst)",
                            "Call"
                        ],
                        [
                            "t",
                            "Name"
                        ],
                        [
                            "to_tensor(lst)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "parser/match_squad_hard.py": {
        "torch": {}
    },
    "parser/rule.py": {
        "torch": {}
    }
}