{
    "hybrid_sac_goal.py": {
        "torch": {
            "SummaryWriter_129": {
                "variable": {
                    "value": "writer",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "f'runs/{experiment_name}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "device_144": {
                "variable": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_278": {
                "variable": {
                    "value": "values_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "list(qf1.parameters()) + list(qf2.parameters())",
                    "type": "BinOp",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.q_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_279": {
                "variable": {
                    "value": "policy_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "list(pg.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.policy_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_280": {
                "variable": {
                    "value": "loss_fn",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SummaryWriter_141": {
                "variable": {
                    "value": "writer",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "f'/tmp/{experiment_name}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "manual_seed_152": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_285": {
                "variable": {
                    "value": "log_alpha",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.device('cuda' if torch.cuda.is_available() and args.cuda else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_287": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "[log_alpha]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_290": {
                "variable": {
                    "value": "log_alpha_d",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.device('cuda' if torch.cuda.is_available() and args.cuda else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_292": {
                "variable": {
                    "value": "a_d_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "[log_alpha_d]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_434": {
                "obj": {
                    "value": "pg.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "goal.pth",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_183": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "17",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_184": {
                "variable": {
                    "value": "self.mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Linear_185": {
                "variable": {
                    "value": "self.logstd",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "4",
                            "Constant"
                        ]
                    ]
                }
            },
            "Linear_187": {
                "variable": {
                    "value": "self.pi_d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ]
                    ]
                }
            },
            "relu_194": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_195": {
                "variable": {
                    "value": "mean",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.mean(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_198": {
                "variable": {
                    "value": "log_std",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "log_std",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.logstd(x)",
                            "Call"
                        ],
                        [
                            "torch.tanh(log_std)",
                            "Call"
                        ],
                        [
                            "LOG_STD_MIN + 0.5 * (LOG_STD_MAX - LOG_STD_MIN) * (log_std + 1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Normal_207": {
                "variable": {
                    "value": "normal",
                    "type": "Name",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tanh(self.mean(x))",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "std",
                    "type": "Name",
                    "possible_values": [
                        [
                            "log_std.exp()",
                            "Call"
                        ]
                    ]
                }
            },
            "tanh_209": {
                "variable": {
                    "value": "action_c",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "normal.rsample()",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_212": {
                "variable": {
                    "value": "log_prob_c",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[all_log_prob_c[:, :2].sum(1, keepdim=True), all_log_prob_c[:, 2:]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Categorical_214": {
                "variable": {
                    "value": "dist",
                    "type": "Name",
                    "possible_values": []
                },
                "logits": {
                    "value": "pi_d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.pi_d(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_217": {
                "variable": {
                    "value": "log_prob_d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "prob_d + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_233": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape + out_c",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_234": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ]
                    ]
                }
            },
            "cat_239": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, a]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_240": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_211": {
                "input": {
                    "value": "1.0 - action_c.pow(2) + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_144": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_324": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "min_350": {
                "variable": {
                    "value": "min_qf_pi",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "qf1_pi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "qf1.forward(s_obs, actions_c, device)",
                            "Call"
                        ]
                    ]
                }
            },
            "Tensor_330": {},
            "min_329": {
                "input": {
                    "value": "qf1_next_target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "qf1_target.forward(s_next_obses, next_state_actions_c, device)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_361": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tensor_331": {}
        }
    },
    "hybrid_sac_platform.py": {
        "torch": {
            "SummaryWriter_129": {
                "variable": {
                    "value": "writer",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "f'runs/{experiment_name}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "device_144": {
                "variable": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_264": {
                "variable": {
                    "value": "values_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "list(qf1.parameters()) + list(qf2.parameters())",
                    "type": "BinOp",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.q_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_265": {
                "variable": {
                    "value": "policy_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "list(pg.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.policy_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_266": {
                "variable": {
                    "value": "loss_fn",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SummaryWriter_141": {
                "variable": {
                    "value": "writer",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "f'/tmp/{experiment_name}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "manual_seed_151": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_272": {
                "variable": {
                    "value": "log_alpha",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.device('cuda' if torch.cuda.is_available() and args.cuda else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_274": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "[log_alpha]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_278": {
                "variable": {
                    "value": "log_alpha_d",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.device('cuda' if torch.cuda.is_available() and args.cuda else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_280": {
                "variable": {
                    "value": "a_d_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "[log_alpha_d]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_414": {
                "obj": {
                    "value": "pg.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "platform.pth",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_179": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "9",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_180": {
                "variable": {
                    "value": "self.mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_c",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_181": {
                "variable": {
                    "value": "self.logstd",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_c",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_182": {
                "variable": {
                    "value": "self.pi_d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_d",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "relu_189": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_190": {
                "variable": {
                    "value": "mean",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.mean(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_191": {
                "variable": {
                    "value": "log_std",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.logstd(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Normal_200": {
                "variable": {
                    "value": "normal",
                    "type": "Name",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tanh(self.mean(x))",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "std",
                    "type": "Name",
                    "possible_values": [
                        [
                            "log_std.exp()",
                            "Call"
                        ]
                    ]
                }
            },
            "tanh_202": {
                "variable": {
                    "value": "action_c",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "normal.rsample()",
                            "Call"
                        ]
                    ]
                }
            },
            "Categorical_206": {
                "variable": {
                    "value": "dist",
                    "type": "Name",
                    "possible_values": []
                },
                "logits": {
                    "value": "pi_d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.pi_d(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_209": {
                "variable": {
                    "value": "log_prob_d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "prob_d + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_219": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape + out_c",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_220": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_d",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cat_225": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, a]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_226": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_204": {
                "input": {
                    "value": "1.0 - action_c.pow(2) + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_144": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_310": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "min_336": {
                "variable": {
                    "value": "min_qf_pi",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "qf1_pi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "qf1.forward(s_obs, actions_c, device)",
                            "Call"
                        ]
                    ]
                }
            },
            "Tensor_316": {},
            "min_315": {
                "input": {
                    "value": "qf1_next_target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "qf1_target.forward(s_next_obses, next_state_actions_c, device)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_347": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tensor_317": {}
        }
    },
    "hybrid_sac_soccer.py": {
        "torch": {
            "SummaryWriter_132": {
                "variable": {
                    "value": "writer",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "f'runs/{experiment_name}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "device_147": {
                "variable": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_283": {
                "variable": {
                    "value": "values_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "list(qf1.parameters()) + list(qf2.parameters())",
                    "type": "BinOp",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.q_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_284": {
                "variable": {
                    "value": "policy_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "list(pg.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.policy_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MSELoss_285": {
                "variable": {
                    "value": "loss_fn",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SummaryWriter_144": {
                "variable": {
                    "value": "writer",
                    "type": "Name",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "f'/tmp/{experiment_name}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "manual_seed_152": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_290": {
                "variable": {
                    "value": "log_alpha",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.device('cuda' if torch.cuda.is_available() and args.cuda else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_292": {
                "variable": {
                    "value": "a_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "[log_alpha]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.q_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_295": {
                "variable": {
                    "value": "log_alpha_d",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.device('cuda' if torch.cuda.is_available() and args.cuda else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_297": {
                "variable": {
                    "value": "a_d_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "[log_alpha_d]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.q_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_451": {
                "obj": {
                    "value": "pg.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "soccer.pth",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_181": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "59",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_182": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_183": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_184": {
                "variable": {
                    "value": "self.mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "5",
                            "Constant"
                        ]
                    ]
                }
            },
            "Linear_185": {
                "variable": {
                    "value": "self.logstd",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "5",
                            "Constant"
                        ]
                    ]
                }
            },
            "Linear_187": {
                "variable": {
                    "value": "self.pi_d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ]
                    ]
                }
            },
            "leaky_relu_194": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "leaky_relu_195": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "leaky_relu_196": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc3(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tanh_197": {
                "variable": {
                    "value": "mean",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.mean(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_198": {
                "variable": {
                    "value": "log_std",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.logstd(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Normal_208": {
                "variable": {
                    "value": "normal",
                    "type": "Name",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.tanh(self.mean(x))",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "std",
                    "type": "Name",
                    "possible_values": [
                        [
                            "log_std.exp()",
                            "Call"
                        ]
                    ]
                }
            },
            "tanh_210": {
                "variable": {
                    "value": "action_c",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "normal.rsample()",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_213": {
                "variable": {
                    "value": "log_prob_c",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[all_log_prob_c[:, :2].sum(1, keepdim=True), all_log_prob_c[:, 2].unsqueeze(-1), all_log_prob_c[:, 3:].sum(1, keepdim=True)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Categorical_215": {
                "variable": {
                    "value": "dist",
                    "type": "Name",
                    "possible_values": []
                },
                "logits": {
                    "value": "pi_d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.pi_d(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_218": {
                "variable": {
                    "value": "log_prob_d",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "prob_d + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_234": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_shape + out_c",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_235": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_236": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_237": {
                "variable": {
                    "value": "self.fc4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ]
                    ]
                }
            },
            "cat_242": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, a]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "leaky_relu_243": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "leaky_relu_244": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "leaky_relu_245": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc3(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_212": {
                "input": {
                    "value": "1.0 - action_c.pow(2) + 1e-06",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_grad_norm__349": {
                "parameters": {
                    "value": "list(qf1.parameters()) + list(qf2.parameters())",
                    "type": "BinOp",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_147": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_331": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "min_358": {
                "variable": {
                    "value": "min_qf_pi",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "qf1_pi",
                    "type": "Name",
                    "possible_values": [
                        [
                            "qf1.forward(s_obs, actions_c, device)",
                            "Call"
                        ]
                    ]
                }
            },
            "Tensor_337": {},
            "clip_grad_norm__366": {
                "parameters": {
                    "value": "pg.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__377": {
                "parameters": {
                    "value": "log_alpha",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.zeros(1, requires_grad=True, device=device)",
                            "Call"
                        ]
                    ]
                },
                "max_norm": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_norm__383": {
                "parameters": {
                    "value": "log_alpha_d",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.zeros(1, requires_grad=True, device=device)",
                            "Call"
                        ]
                    ]
                },
                "max_norm": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "min_336": {
                "input": {
                    "value": "qf1_next_target",
                    "type": "Name",
                    "possible_values": [
                        [
                            "qf1_target.forward(s_next_obses, next_state_actions_c, device)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_370": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tensor_338": {}
        }
    },
    "utils.py": {
        "torch": {
            "Tensor_22": {
                "variable": {
                    "value": "ad",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Tensor_23": {
                "variable": {
                    "value": "ac",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    }
}