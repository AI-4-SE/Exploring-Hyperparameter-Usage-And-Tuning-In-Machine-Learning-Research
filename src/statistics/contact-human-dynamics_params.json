{
    "src/optimize/optimize_trajectory.py": {
        "sklearn": {
            "HuberRegressor_719": {
                "variable": {
                    "value": "huber",
                    "type": "Name",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "1.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "HuberRegressor_743": {
                "variable": {
                    "value": "huber",
                    "type": "Name",
                    "possible_values": []
                },
                "epsilon": {
                    "value": "2.2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/contact_learning/data/openpose_dataset.py": {
        "torch": {
            "from_numpy_357": {
                "variable": {
                    "value": "cur_op_data",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "cur_op_data.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_358": {
                "variable": {
                    "value": "cur_contact_data",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "cur_contact_data.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "src/contact_learning/data/real_video_dataset.py": {
        "torch": {
            "from_numpy_267": {
                "variable": {
                    "value": "cur_op_data",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "cur_op_data.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_269": {
                "variable": {
                    "value": "cur_contact_data",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "cur_contact_data.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "src/contact_learning/models/openpose_only.py": {
        "torch": {
            "BCEWithLogitsLoss_23": {
                "variable": {
                    "value": "self.bce_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sigmoid_24": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_29": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(window_size * joints * self.feat_size, 1024)",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_104": {
                "variable": {
                    "value": "true_pos_cnt",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "true_pos",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred & labels",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_107": {
                "variable": {
                    "value": "false_pos_cnt",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "false_pos",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred & ~labels",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_110": {
                "variable": {
                    "value": "false_neg_cnt",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "false_neg",
                    "type": "Name",
                    "possible_values": [
                        [
                            "~pred & labels",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_113": {
                "variable": {
                    "value": "true_neg_cnt",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "true_neg",
                    "type": "Name",
                    "possible_values": [
                        [
                            "~pred & ~labels",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Linear_30": {
                "in_features": {
                    "value": "window_size * joints * self.feat_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm1d_31": {
                "num_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_33": {
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm1d_34": {
                "num_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_36": {
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm1d_37": {
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_39": {
                "p": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm1d_41": {
                "num_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_43": {
                "in_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4 * pred_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "src/contact_learning/test.py": {
        "torch": {
            "DataLoader_273": {
                "variable": {
                    "value": "test_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "RealVideoDataset(data_root, split='test', window_size=window_size, contact_size=pred_size, load_img=viz, use_confidence=use_confidence, joint_set=joint_set)",
                            "Call"
                        ],
                        [
                            "OpenPoseDataset(data_root, split='test', window_size=window_size, contact_size=pred_size, load_img=viz, overlap_test=full_vid_eval, use_confidence=use_confidence, joint_set=joint_set)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "-1",
                            "UnaryOp"
                        ],
                        [
                            "input_data.size()[0]",
                            "Subscript"
                        ],
                        [
                            "flags.batch_size",
                            "Attribute"
                        ],
                        [
                            "test_dataset.get_num_test_windows_per_seq()",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_287": {
                "variable": {
                    "value": "saved_weights",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "weights_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "torch.device('cpu')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_289": {
                "variable": {
                    "value": "saved_weights",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "weights_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sum_84": {
                "input": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model.loss(output_data, label_data)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_137": {
                "ndarray": {
                    "value": "contact_preds.reshape((-1, 1, 4))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_138": {
                "ndarray": {
                    "value": "contact_labels.reshape((-1, 1, 4))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_287": {
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/contact_learning/train.py": {
        "torch": {
            "DataLoader_72": {
                "variable": {
                    "value": "train_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "OpenPoseDataset(data_root, split='train', window_size=window_size, contact_size=pred_size, use_confidence=use_confidence, joint_set=joint_set)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "flags.batch_size",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_74": {
                "variable": {
                    "value": "val_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "OpenPoseDataset(data_root, split='val', window_size=window_size, contact_size=pred_size, use_confidence=use_confidence, joint_set=joint_set)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "flags.batch_size",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_82": {
                "variable": {
                    "value": "op_optim",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "op_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Name",
                    "possible_values": [
                        [
                            "flags.lr",
                            "Attribute"
                        ]
                    ]
                },
                "betas": {
                    "value": "betas",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(flags.beta1, flags.beta2)",
                            "Tuple"
                        ]
                    ]
                },
                "eps": {
                    "value": "eps",
                    "type": "Name",
                    "possible_values": [
                        [
                            "flags.eps",
                            "Attribute"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "Name",
                    "possible_values": [
                        [
                            "flags.decay",
                            "Attribute"
                        ]
                    ]
                }
            },
            "save_179": {
                "obj": {
                    "value": "op_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(out_dir, 'op_only_weights_FINAL.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_114": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": [
                        [
                            "op_model.loss(output_data, label_data)",
                            "Call"
                        ],
                        [
                            "torch.mean(loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_169": {
                "obj": {
                    "value": "op_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "weights_out_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(out_dir, 'op_only_weights.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "save_175": {
                "obj": {
                    "value": "op_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "best_weights_out_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(out_dir, 'op_only_weights_BEST.pth')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/contact_learning/utils.py": {
        "torch": {
            "device_57": {
                "variable": {
                    "value": "device",
                    "type": "Name",
                    "possible_values": []
                },
                "type": {
                    "value": "device_str",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'cuda:0' if torch.cuda.is_available() else 'cpu'",
                            "IfExp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sum_39": {
                "input": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model.loss(output_data, label_data)",
                            "Call"
                        ]
                    ]
                }
            },
            "device_count_67": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_count_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}