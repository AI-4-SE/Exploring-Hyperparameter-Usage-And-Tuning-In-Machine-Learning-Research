{
    "code/gmm.py": {
        "torch": {
            "Parameter_53": {
                "variable": {
                    "value": "self.pi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(1, n_components, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "exp_131": {
                "variable": {
                    "value": "exponent",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-0.5 * torch.sum((x - mu) * (x - mu) / var, 2, keepdim=True)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "rsqrt_133": {
                "variable": {
                    "value": "prefactor",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(2.0 * pi) ** self.n_features * torch.prod(var, dim=2, keepdim=True) + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_165": {
                "variable": {
                    "value": "n_k",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pi * p_k",
                            "BinOp"
                        ],
                        [
                            "self.__e_step(self.pi, self.__p_k(x, self.mu, self.var))",
                            "Call"
                        ],
                        [
                            "pi * p_k",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "div_166": {
                "variable": {
                    "value": "pi_new",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "n_k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(weights, 0, keepdim=True)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "torch.sum(n_k, 1, keepdim=True) + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "div_168": {
                "variable": {
                    "value": "mu_new",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sum(weights * x, 0, keepdim=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "n_k + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "div_170": {
                "variable": {
                    "value": "var_new",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sum(weights * (x - mu_new) * (x - mu_new), 0, keepdim=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "n_k + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Parameter_41": {
                "variable": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "mu_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_43": {
                "variable": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.randn(1, n_components, n_features)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_48": {
                "variable": {
                    "value": "self.var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "var_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_50": {
                "variable": {
                    "value": "self.var",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(1, n_components, n_features)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "max_111": {
                "variable": {
                    "value": "(_, predictions)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "p_k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.__p_k(x, self.mu, self.var)",
                            "Call"
                        ]
                    ]
                }
            },
            "div_149": {
                "input": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pi * p_k",
                            "BinOp"
                        ],
                        [
                            "self.__e_step(self.pi, self.__p_k(x, self.mu, self.var))",
                            "Call"
                        ],
                        [
                            "pi * p_k",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "torch.sum(weights, 1, keepdim=True) + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_199": {
                "input": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pi * p_k",
                            "BinOp"
                        ],
                        [
                            "self.__e_step(self.pi, self.__p_k(x, self.mu, self.var))",
                            "Call"
                        ],
                        [
                            "pi * p_k",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_112": {
                "input": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_168": {
                "input": {
                    "value": "weights * x",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_170": {
                "input": {
                    "value": "weights * (x - mu_new) * (x - mu_new)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "log_199": {
                "input": {
                    "value": "torch.sum(weights, 1) + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randn_43": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "n_components",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "n_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ones_50": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "n_components",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "n_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_131": {
                "input": {
                    "value": "(x - mu) * (x - mu) / var",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_149": {
                "input": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pi * p_k",
                            "BinOp"
                        ],
                        [
                            "self.__e_step(self.pi, self.__p_k(x, self.mu, self.var))",
                            "Call"
                        ],
                        [
                            "pi * p_k",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_166": {
                "input": {
                    "value": "n_k",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(weights, 0, keepdim=True)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "prod_133": {
                "input": {
                    "value": "var",
                    "type": "variable",
                    "possible_values": [
                        [
                            "var.expand(x.size(0), self.n_components, self.n_features)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "code/main.py": {
        "torch": {}
    }
}