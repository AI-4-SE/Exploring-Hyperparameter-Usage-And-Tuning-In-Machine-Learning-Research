{
    "kb/metrics.py": {
        "sklearn": {
            "confusion_matrix_34": {
                "variable": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "labels.ravel()",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predictions.ravel()",
                    "type": "Call",
                    "possible_values": []
                },
                "labels": {
                    "value": "np.arange(self.n_classes, dtype=np.int32)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "ones_like_184": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "labels.cpu().numpy()",
                            "Call"
                        ],
                        [
                            "labels.cpu().numpy()",
                            "Call"
                        ],
                        [
                            "list(labels.flatten())",
                            "Call"
                        ],
                        [
                            "labels.view(-1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "bin/cloze_task_example.py": {
        "torch": {}
    },
    "bin/combine_wordnet_embeddings.py": {
        "torch": {}
    },
    "bin/evaluate_wiki_linking.py": {
        "torch": {}
    },
    "kb/bert_utils.py": {
        "torch": {
            "tanh_25": {
                "input": {
                    "value": "math.sqrt(2 / math.pi) * (x + 0.044715 * torch.pow(x, 3))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_25": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "exponent": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "kb/common.py": {
        "torch": {
            "Linear_169": {
                "variable": {
                    "value": "ret",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "eye_170": {
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "kb/entity_linking.py": {
        "torch": {
            "MarginRankingLoss_152": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "margin": {
                    "value": "margin",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "NLLLoss_155": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "-100",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "LogSoftmax_157": {
                "variable": {
                    "value": "self._log_softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "arange_190": {
                "start": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "unsqueeze_190": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "arange_244": {
                "start": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "unsqueeze_244": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_329": {
                "input": {
                    "value": "non_masked_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "labels[candidate_mask]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "tensor_628": {
                "variable": {
                    "value": "batch[dataset_index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "self.dataset_index",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_185": {
                "tensors": {
                    "value": "[gold_mask, gold_mask]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "kb/evaluation/classification_model.py": {
        "torch": {
            "Dropout_61": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_prob",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_62": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "classifier_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "bert_dim * 3",
                            "BinOp"
                        ],
                        [
                            "bert_dim * 2",
                            "BinOp"
                        ],
                        [
                            "bert_dim * 2",
                            "BinOp"
                        ],
                        [
                            "bert_dim",
                            "variable"
                        ],
                        [
                            "bert_dim",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_labels",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "MSELoss_78": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_73": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_76": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_95": {
                "variable": {
                    "value": "pooled_output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[model_output['pooled_output'], word_a, word_b]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "pooled_output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[word_a, word_b]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "max_120": {
                "variable": {
                    "value": "(_, predictions)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.classifier(self.dropout(pooled_output)).view(-1, self.num_labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_104": {
                "variable": {
                    "value": "pooled_output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[model_output['pooled_output'], word_a]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "kb/evaluation/fbeta_measure.py": {
        "torch": {
            "zeros_115": {
                "variable": {
                    "value": "self._true_positive_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_116": {
                "variable": {
                    "value": "self._true_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_117": {
                "variable": {
                    "value": "self._pred_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_118": {
                "variable": {
                    "value": "self._total_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_121": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "gold_labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gold_labels.float()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_132": {
                "variable": {
                    "value": "true_positive_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "bincount_134": {
                "variable": {
                    "value": "true_positive_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "true_positives_bins.long()",
                    "type": "Call",
                    "possible_values": []
                },
                "minlength": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "bincount_140": {
                "variable": {
                    "value": "pred_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_bins",
                    "type": "variable",
                    "possible_values": [
                        [
                            "argmax_predictions[mask].long()",
                            "Call"
                        ]
                    ]
                },
                "minlength": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_142": {
                "variable": {
                    "value": "pred_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "bincount_146": {
                "variable": {
                    "value": "true_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "gold_labels_bins",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gold_labels[mask].long()",
                            "Call"
                        ]
                    ]
                },
                "minlength": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_148": {
                "variable": {
                    "value": "true_sum",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predictions.size(-1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "kb/kg_embedding.py": {
        "torch": {
            "Embedding_134": {
                "variable": {
                    "value": "self.entities",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "num_entities",
                    "type": "variable",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "entity_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "e1_embedded.size(1)",
                            "Call"
                        ]
                    ]
                },
                "padding_idx": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_135": {
                "variable": {
                    "value": "self.relations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "num_relations",
                    "type": "variable",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "relation_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_137": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.randn(weight_shape, dtype=torch.float)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_139": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dropout_140": {
                "variable": {
                    "value": "self.hidden_dropout1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "hidden_dropout1",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dropout_141": {
                "variable": {
                    "value": "self.hidden_dropout2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "hidden_dropout2",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm1d_143": {
                "variable": {
                    "value": "self.bn0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "entity_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "e1_embedded.size(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "BatchNorm1d_144": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "entity_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "e1_embedded.size(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_173": {
                "variable": {
                    "value": "W_mat",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "rel_embedded",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.relations(rel)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "self.W.view(rel_dim, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "bmm_178": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bn0(e1_embedded)",
                            "Call"
                        ],
                        [
                            "self.input_dropout(x)",
                            "Call"
                        ],
                        [
                            "x.view(-1, 1, entity_dim)",
                            "Call"
                        ],
                        [
                            "torch.bmm(x, W_mat)",
                            "Call"
                        ],
                        [
                            "x.view(-1, entity_dim)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.hidden_dropout2(x)",
                            "Call"
                        ],
                        [
                            "torch.mm(x, self.entities.weight.transpose(1, 0))",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "W_mat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.mm(rel_embedded, self.W.view(rel_dim, -1))",
                            "Call"
                        ],
                        [
                            "W_mat.view(-1, entity_dim, entity_dim)",
                            "Call"
                        ],
                        [
                            "self.hidden_dropout1(W_mat)",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_183": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bn0(e1_embedded)",
                            "Call"
                        ],
                        [
                            "self.input_dropout(x)",
                            "Call"
                        ],
                        [
                            "x.view(-1, 1, entity_dim)",
                            "Call"
                        ],
                        [
                            "torch.bmm(x, W_mat)",
                            "Call"
                        ],
                        [
                            "x.view(-1, entity_dim)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.hidden_dropout2(x)",
                            "Call"
                        ],
                        [
                            "torch.mm(x, self.entities.weight.transpose(1, 0))",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "self.entities.weight.transpose(1, 0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_184": {
                "variable": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bn0(e1_embedded)",
                            "Call"
                        ],
                        [
                            "self.input_dropout(x)",
                            "Call"
                        ],
                        [
                            "x.view(-1, 1, entity_dim)",
                            "Call"
                        ],
                        [
                            "torch.bmm(x, W_mat)",
                            "Call"
                        ],
                        [
                            "x.view(-1, entity_dim)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.hidden_dropout2(x)",
                            "Call"
                        ],
                        [
                            "torch.mm(x, self.entities.weight.transpose(1, 0))",
                            "Call"
                        ]
                    ]
                }
            },
            "BCELoss_223": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sort_317": {
                "variable": {
                    "value": "(max_values, argsort)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": [
                        [
                            "predicted.cpu()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "descending": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ones_like_197": {
                "input": {
                    "value": "entity_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.float",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randn_137": {
                "*size": {
                    "value": "weight_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(relation_dim, entity_dim, entity_dim)",
                            "Tuple"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "kb/knowbert.py": {
        "torch": {
            "CrossEntropyLoss_74": {
                "variable": {
                    "value": "self.nsp_loss_function",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_75": {
                "variable": {
                    "value": "self.lm_loss_function",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_180": {
                "variable": {
                    "value": "new_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.remap_segment_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "embed_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "token_type_embeddings.shape[1]",
                            "Subscript"
                        ],
                        [
                            "token_type_embeddings.shape[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Linear_242": {
                "variable": {
                    "value": "self.out_layer_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_feed_forward_hidden_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_243": {
                "variable": {
                    "value": "self.out_layer_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "output_feed_forward_hidden_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_284": {
                "variable": {
                    "value": "scores_with_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[scores.unsqueeze(-1), candidate_entity_prior.unsqueeze(-1).to(dtype)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_326": {
                "variable": {
                    "value": "normed_linking_scores",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "linking_scores",
                    "type": "variable",
                    "possible_values": [
                        [
                            "linking_score.masked_fill(invalid_candidate_mask, -10000.0)",
                            "Call"
                        ],
                        [
                            "linking_scores.masked_fill(below_threshold, -10000.0)",
                            "Call"
                        ],
                        [
                            "disambiguator_output['linking_scores']",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Dropout_368": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_370": {
                "variable": {
                    "value": "self.bert_to_kg_projector",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "contextual_embedding_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "entity_embedding_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "entity_embedding.embedding_dim",
                            "Attribute"
                        ],
                        [
                            "entity_embedding.get_output_dim()",
                            "Call"
                        ],
                        [
                            "concat_entity_embedder.get_output_dim()",
                            "Call"
                        ]
                    ]
                }
            },
            "Dropout_660": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_677": {
                "variable": {
                    "value": "self.kg_to_bert_projection",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.entity_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.contextual_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_842": {
                "variable": {
                    "value": "new_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.remap_segment_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "embed_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "token_type_embeddings.shape[1]",
                            "Subscript"
                        ],
                        [
                            "token_type_embeddings.shape[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "sum_275": {
                "input": {
                    "value": "projected_span_representations.unsqueeze(-2) * candidate_entity_embeddings",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tensor_698": {
                "data": {
                    "value": "w_pseudo_inv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.dot(np.linalg.inv(np.dot(w.T, w)), w.T)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_699": {
                "data": {
                    "value": "b_pseudo_inv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.dot(w_pseudo_inv, b)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_818": {
                "variable": {
                    "value": "state_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weights_file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "fin.extractfile('weights.th')",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device_mapping(-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "isnan_36": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_291": {
                "input": {
                    "value": "self.out_layer_1(scores_with_prior)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "kb/multitask.py": {
        "torch": {
            "tensor_149": {
                "variable": {
                    "value": "batch[dataset_index]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "all_indices[index]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "kb/span_attention_layer.py": {
        "torch": {
            "Linear_25": {
                "variable": {
                    "value": "self.query",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.all_head_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "variable": {
                    "value": "self.key",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.all_head_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_27": {
                "variable": {
                    "value": "self.value",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.all_head_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_29": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.attention_probs_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_55": {
                "variable": {
                    "value": "attention_scores",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "query_layer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.transpose_for_scores(mixed_query_layer)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "key_layer.transpose(-1, -2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_72": {
                "variable": {
                    "value": "context_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attention_probs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.nn.Softmax(dim=-1)(attention_scores)",
                            "Call"
                        ],
                        [
                            "self.dropout(attention_probs)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "value_layer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.transpose_for_scores(mixed_value_layer)",
                            "Call"
                        ]
                    ]
                }
            },
            "Softmax_65": {
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "kb/testing.py": {
        "torch": {}
    },
    "kb/wiki_linking_reader.py": {
        "torch": {}
    },
    "kb/wordnet.py": {
        "torch": {
            "Embedding_742": {
                "variable": {
                    "value": "self.entity_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "entity_embeddings.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "entity_embeddings.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_754": {
                "variable": {
                    "value": "self.proj_feed_forward",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "concat_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "entity_embeddings.shape[1]",
                            "Subscript"
                        ],
                        [
                            "entity_embeddings.shape[1] + pos_embedding_dim",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "entity_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dropout_757": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "unique_787": {
                "variable": {
                    "value": "(unique_ids, unique_ids_to_entity_ids)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "entity_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "return_inverse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Embedding_732": {
                "variable": {
                    "value": "self.pos_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "len(entities)",
                    "type": "Call",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "pos_embedding_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Parameter_769": {
                "variable": {
                    "value": "self.null_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(entity_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "embedding_796": {
                "variable": {
                    "value": "unique_pos_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "unique_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "self.entity_id_to_pos_index",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_800": {
                "variable": {
                    "value": "entity_and_pos",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[unique_entity_embeddings, unique_pos_embeddings]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tensor_746": {
                "data": {
                    "value": "entity_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "fin[entity_h5_key][...]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "tensor_730": {
                "data": {
                    "value": "entity_id_to_pos_index",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[self.POS_MAP[entity_to_pos[ent]] for ent in entities]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "zeros_769": {
                "*size": {
                    "value": "entity_dim",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "tests/evaluation/test_semeval2010_task8.py": {
        "torch": {
            "tensor_12": {
                "data": {
                    "value": "[0, 15, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_13": {
                "data": {
                    "value": "[7, 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_16": {
                "data": {
                    "value": "[0, 3, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_17": {
                "data": {
                    "value": "[0, 7]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_bert_pretraining_reader.py": {
        "torch": {
            "tensor_92": {
                "variable": {
                    "value": "expected_tokens_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[16, 18, 19, 20, 1, 19, 21, 13, 17, 21, 3, 4, 12, 13, 17], [16, 1, 13, 17, 21, 1, 1, 13, 17, 0, 0, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_99": {
                "variable": {
                    "value": "expected_entities",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[29, 30], [31, 0], [31, 0]], [[0, 0], [0, 0], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_109": {
                "variable": {
                    "value": "expected_spans",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 3], [2, 3], [5, 6]], [[-1, -1], [-1, -1], [-1, -1]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_120": {
                "variable": {
                    "value": "expected_lm_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0, 0, 0, 0, 20, 0, 0, 2, 0, 0, 0, 0, 0], [0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_126": {
                "variable": {
                    "value": "expected_segment_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_bert_tokenizer_and_candidate_generator.py": {
        "torch": {
            "tensor_255": {
                "data": {
                    "value": "[[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_253": {
                "data": {
                    "value": "[[16, 1, 1, 1, 1, 13, 17], [16, 3, 4, 1, 13, 17, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_258": {
                "data": {
                    "value": "[[[0.1667, 0.8333, 0.0], [1.0, 0.0, 0.0], [1.0, 0.0, 0.0]], [[0.2, 0.3, 0.5], [0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_272": {
                "data": {
                    "value": "[[[1, 2], [2, 2], [4, 4]], [[3, 3], [-1, -1], [-1, -1]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_279": {
                "data": {
                    "value": "[[0, 0, 0], [0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_265": {
                "data": {
                    "value": "[[[29, 30, 0], [31, 0, 0], [31, 0, 0]], [[25, 26, 24], [0, 0, 0], [0, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "abs_285": {
                "input": {
                    "value": "a - b",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_common.py": {
        "torch": {}
    },
    "tests/test_dict_field.py": {
        "torch": {
            "tensor_104": {
                "data": {
                    "value": "[[0.5, 0.5], [1.0, 0.0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_105": {
                "data": {
                    "value": "[[0, 0], [1, 2]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_103": {
                "data": {
                    "value": "[[2, 3], [1, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_131": {
                "data": {
                    "value": "[[[0.5, 0.5], [1.0, 0.0]], [[1.0, 0.0], [0.0, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_136": {
                "data": {
                    "value": "[[[0, 0], [1, 2]], [[1, 1], [-1, -1]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_126": {
                "data": {
                    "value": "[[[2, 3], [1, 0]], [[2, 0], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_entity_linking.py": {
        "torch": {}
    },
    "tests/test_kg_embedding.py": {
        "torch": {
            "rand_18": {
                "variable": {
                    "value": "predicted",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "num_entities",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                }
            },
            "tensor_33": {
                "variable": {
                    "value": "entity_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[5, 6, 1, 0, 0, 0], [1, 2, 3, 4, 5, 6]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_38": {
                "variable": {
                    "value": "expected_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0], [0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_48": {
                "variable": {
                    "value": "entity_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[5, 6, 1, 0, 0, 0], [1, 2, 3, 4, 5, 6]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_53": {
                "variable": {
                    "value": "expected_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0], [0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "abs_43": {
                "input": {
                    "value": "labels - expected_labels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_57": {
                "data": {
                    "value": "[[3.0], [6.0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "abs_59": {
                "input": {
                    "value": "labels - smoothed_labels",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_knowbert.py": {
        "torch": {
            "rand_93": {
                "variable": {
                    "value": "batch[contextual_embeddings]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "timesteps",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "12",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Embedding_106": {
                "variable": {
                    "value": "entity_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "entity_embedding_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "11",
                            "int"
                        ]
                    ]
                }
            },
            "rand_117": {
                "variable": {
                    "value": "contextual_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "timesteps",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "contextual_embedding_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "12",
                            "int"
                        ]
                    ]
                }
            },
            "min_317": {
                "variable": {
                    "value": "batch[tokens][tokens]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "batch['tokens']['tokens']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_318": {
                "variable": {
                    "value": "batch[lm_label_ids][lm_labels]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "batch['lm_label_ids']['lm_labels']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tensor_29": {
                "data": {
                    "value": "[0, 1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_34": {
                "data": {
                    "value": "[[0, 0, 0, 0, 0, 0, 1, 1, 1, 1], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1], [0, 0, 0, 0, 1, 1, 1, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_30": {
                "data": {
                    "value": "[[16, 16, 11, 1, 1, 1, 17, 1, 1, 1], [16, 16, 1, 12, 1, 17, 1, 1, 1, 1], [16, 16, 1, 1, 17, 1, 13, 17, 17, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_38": {
                "data": {
                    "value": "[[0, 1, 0, 0, 13, 0, 1, 1, 13, 0], [0, 0, 1, 0, 0, 2, 1, 1, 13, 0], [0, 1, 1, 0, 1, 1, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_317": {
                "data": {
                    "value": "[17]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_318": {
                "data": {
                    "value": "[17]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_43": {
                "data": {
                    "value": "[[[1.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0]], [[0.25, 0.25, 0.25, 0.25, 0.0], [0.2, 0.2, 0.2, 0.2, 0.2]], [[1.0, 0.0, 0.0, 0.0, 0.0], [0.0, 0.0, 0.0, 0.0, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_63": {
                "data": {
                    "value": "[[0, 1], [0, 1], [0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_65": {
                "data": {
                    "value": "[[[1, 1], [-1, -1]], [[1, 1], [4, 4]], [[-1, -1], [-1, -1]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_77": {
                "data": {
                    "value": "[[[67], [0]], [[349], [46]], [[0], [0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_53": {
                "data": {
                    "value": "[[[67, 0, 0, 0, 0], [0, 0, 0, 0, 0]], [[344, 349, 354, 122, 0], [101, 46, 445, 25, 28]], [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_metrics.py": {
        "torch": {
            "tensor_10": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 2, 3], [1, 2, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_11": {
                "variable": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[-4.0, 1.0, 0.0, -1.0], [-4.0, 1.0, 0.0, -1.0], [-4.0, 0.5, 0.0, 1.0]], [[-4.0, 1.0, 0.0, -1.0], [-4.0, 1.0, 0.0, -1.0], [0.0, 0.0, 0.0, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_20": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 1, 1], [1, 1, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_36": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 1, 1, 1, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_37": {
                "variable": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 1, 0, 1, 1, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_self_attn_iterator.py": {
        "torch": {
            "rand_20": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_span_attention_layer.py": {
        "torch": {
            "rand_24": {
                "variable": {
                    "value": "hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "timesteps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "29",
                            "int"
                        ],
                        [
                            "29",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_27": {
                "variable": {
                    "value": "entity_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "num_entity_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "11",
                            "int"
                        ],
                        [
                            "11",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_43": {
                "variable": {
                    "value": "hidden_states",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "timesteps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "29",
                            "int"
                        ],
                        [
                            "29",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_46": {
                "variable": {
                    "value": "entity_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "num_entity_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "11",
                            "int"
                        ],
                        [
                            "11",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_wordnet.py": {
        "torch": {
            "tensor_26": {
                "variable": {
                    "value": "expected_spans",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[4, 5]], [[2, 2]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_339": {
                "variable": {
                    "value": "entity_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[5, 0], [7, 11]], [[3, 4], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_356": {
                "variable": {
                    "value": "entity_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[5, 0], [7, 11]], [[3, 4], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_53": {
                "data": {
                    "value": "[[[0, 0], [3, 4]], [[1, 1], [-1, -1]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_58": {
                "data": {
                    "value": "[[[1.0, 0.0], [0.25, 0.75]], [[0.4, 0.6], [0.0, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_64": {
                "data": {
                    "value": "[[0, 0], [0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_76": {
                "data": {
                    "value": "[[[3, 4]], [[1, 1]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_78": {
                "data": {
                    "value": "[[[0.25, 0.75, 0.0, 0.0]], [[0.1429, 0.2143, 0.2857, 0.3571]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_81": {
                "data": {
                    "value": "[[0], [0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_40": {
                "data": {
                    "value": "[[2, 3, 4, 5, 6], [7, 5, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_42": {
                "data": {
                    "value": "[[[1, 0], [23, 24]], [[26, 25], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_47": {
                "data": {
                    "value": "[[[22], [23]], [[25], [0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_69": {
                "data": {
                    "value": "[[2, 3, 4, 5, 6], [7, 5, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_71": {
                "data": {
                    "value": "[[[23, 24, 0, 0]], [[26, 25, 27, 28]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_73": {
                "data": {
                    "value": "[[[23]], [[25]]]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    }
}