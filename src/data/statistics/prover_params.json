{
    "R2.py": {
        "torch": {
            "Tensor_187": {
                "variable": {
                    "value": "self.lmb",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_270": {
                "variable": {
                    "value": "res",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bias.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "x_t_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "split_297": {
                "variable": {
                    "value": "(w_i, w_h, w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "expr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tmp_w",
                            "variable"
                        ],
                        [
                            "tmp_w",
                            "variable"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_376": {
                "variable": {
                    "value": "res",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bias.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "x_t_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "split_403": {
                "variable": {
                    "value": "(w_i, w_h, w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "expr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tmp_w",
                            "variable"
                        ],
                        [
                            "tmp_w",
                            "variable"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Softmax_417": {
                "variable": {
                    "value": "sf",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_957": {
                "variable": {
                    "value": "lexpr_w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_958": {
                "variable": {
                    "value": "lexpr_b",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_959": {
                "variable": {
                    "value": "uexpr_w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_960": {
                "variable": {
                    "value": "uexpr_b",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1005": {
                "variable": {
                    "value": "lexpr_w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1006": {
                "variable": {
                    "value": "lexpr_b",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1007": {
                "variable": {
                    "value": "uexpr_w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1008": {
                "variable": {
                    "value": "uexpr_b",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "Tensor_1009": {
                "variable": {
                    "value": "trick",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_1053": {
                "variable": {
                    "value": "lexpr_w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1054": {
                "variable": {
                    "value": "lexpr_b",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1055": {
                "variable": {
                    "value": "uexpr_w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1056": {
                "variable": {
                    "value": "uexpr_b",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1097": {
                "variable": {
                    "value": "lexpr_w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1098": {
                "variable": {
                    "value": "lexpr_b",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1099": {
                "variable": {
                    "value": "uexpr_w",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_1100": {
                "variable": {
                    "value": "uexpr_b",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ],
                        [
                            "prev_dp.dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "device_116": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_135": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "split_148": {
                "variable": {
                    "value": "(w_ii, w_if, w_ig, w_io)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "getattr(cell, f'weight_ih_l{idx}')",
                    "type": "Call",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "cell.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_151": {
                "variable": {
                    "value": "(w_hi, w_hf, w_hg, w_ho)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "getattr(cell, f'weight_hh_l{idx}')",
                    "type": "Call",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "cell.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_154": {
                "variable": {
                    "value": "(b_ii, b_if, b_ig, b_io)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "getattr(cell, f'bias_ih_l{idx}')",
                    "type": "Call",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "cell.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_157": {
                "variable": {
                    "value": "(b_hi, b_hf, b_hg, b_ho)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "getattr(cell, f'bias_hh_l{idx}')",
                    "type": "Call",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "cell.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_185": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cat_425": {
                "variable": {
                    "value": "w_i",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(w_ii, w_hi, torch.zeros(hsize, hsize).to(dev))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_436": {
                "variable": {
                    "value": "w_f",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(w_if, w_hf, torch.zeros(hsize, hsize).to(dev))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_447": {
                "variable": {
                    "value": "w_g",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(w_ig, w_hg, torch.zeros(hsize, hsize).to(dev))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_458": {
                "variable": {
                    "value": "w_o",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(w_io, w_ho, torch.zeros(hsize, hsize).to(dev))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_468": {
                "variable": {
                    "value": "w_c",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.zeros(hsize, jsize), torch.zeros(hsize, hsize), torch.eye(hsize))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_476": {
                "variable": {
                    "value": "b_c",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_494": {
                "variable": {
                    "value": "lexpr_w_c",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "jsize + 2 * hsize",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_495": {
                "variable": {
                    "value": "lexpr_b_c",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_496": {
                "variable": {
                    "value": "uexpr_w_c",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "jsize + 2 * hsize",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_497": {
                "variable": {
                    "value": "uexpr_b_c",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_737": {
                "variable": {
                    "value": "lexpr_w_h",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "jsize + 2 * hsize",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "x_t_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_738": {
                "variable": {
                    "value": "lexpr_b_h",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "x_t_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_739": {
                "variable": {
                    "value": "uexpr_w_h",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "jsize + 2 * hsize",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "x_t_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_740": {
                "variable": {
                    "value": "uexpr_b_h",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "init_w_i.device",
                            "Attribute"
                        ],
                        [
                            "x_t_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ],
                        [
                            "prev_dp.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "device_900": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_908": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_915": {
                "variable": {
                    "value": "self.bias.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.out_features",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_1013": {
                "variable": {
                    "value": "l",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prev_dp.lb[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_1014": {
                "variable": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "l + trick",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "isnan_19": {
                "input": {
                    "value": "self.lb",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "any_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isnan_20": {
                "input": {
                    "value": "self.ub",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "any_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log10_47": {
                "input": {
                    "value": "torch.abs(x).max()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_210": {
                "variable": {
                    "value": "weight_map[i, j, h]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "init_w_h.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "jsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ]
                    ]
                }
            },
            "zeros_211": {
                "variable": {
                    "value": "weight_map[i, j, c]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "init_w_h.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "split_225": {
                "variable": {
                    "value": "(l_w_i, l_w_h, l_w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "cell.h_t_lexpr[i][0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_226": {
                "variable": {
                    "value": "(u_w_i, u_w_h, u_w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "cell.h_t_uexpr[i][0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_247": {
                "variable": {
                    "value": "(l_w_i, l_w_h, l_w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "cell.c_t_lexpr[i][0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_248": {
                "variable": {
                    "value": "(u_w_i, u_w_h, u_w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "cell.c_t_uexpr[i][0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_316": {
                "variable": {
                    "value": "weight_map[i, j, h]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "init_w_h.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "jsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ]
                    ]
                }
            },
            "zeros_317": {
                "variable": {
                    "value": "weight_map[i, j, c]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "init_w_h.size()[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "split_331": {
                "variable": {
                    "value": "(l_w_i, l_w_h, l_w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "cell.h_t_lexpr[i][0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_332": {
                "variable": {
                    "value": "(u_w_i, u_w_h, u_w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "cell.h_t_uexpr[i][0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_353": {
                "variable": {
                    "value": "(l_w_i, l_w_h, l_w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "cell.c_t_lexpr[i][0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_354": {
                "variable": {
                    "value": "(u_w_i, u_w_h, u_w_c)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "cell.c_t_uexpr[i][0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_617": {
                "variable": {
                    "value": "coeff",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "5 if self.method == 'opt' else 1",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "split_731": {
                "variable": {
                    "value": "(w1, w2, w3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "lexpr_w_c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(hsize, jsize + 2 * hsize).to(dev)",
                            "Call"
                        ],
                        [
                            "lexpr_w_c + (torch.diag(Al) @ w_i + torch.diag(Bl) @ w_g)",
                            "BinOp"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_732": {
                "variable": {
                    "value": "(w4, w5, w6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "uexpr_w_c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(hsize, jsize + 2 * hsize).to(dev)",
                            "Call"
                        ],
                        [
                            "uexpr_w_c + (torch.diag(Au) @ w_i + torch.diag(Bu) @ w_g)",
                            "BinOp"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_743": {
                "variable": {
                    "value": "coeff",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "5 if self.method == 'opt' else 1",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "split_875": {
                "variable": {
                    "value": "(w1, w2, w3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "lexpr_w_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(hsize, jsize + 2 * hsize, device=dev)",
                            "Call"
                        ],
                        [
                            "torch.diag(Al) @ w_o + torch.diag(positive_only(Bl)) @ lexpr_w_c + torch.diag(negative_only(Bl)) @ uexpr_w_c",
                            "BinOp"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "split_876": {
                "variable": {
                    "value": "(w4, w5, w6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "uexpr_w_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(hsize, jsize + 2 * hsize, device=dev)",
                            "Call"
                        ],
                        [
                            "torch.diag(Au) @ w_o + torch.diag(positive_only(Bu)) @ uexpr_w_c + torch.diag(negative_only(Bu)) @ lexpr_w_c",
                            "BinOp"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ],
                        [
                            "[jsize, hsize, hsize]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "diag_983": {
                "input": {
                    "value": "lexpr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_984": {
                "input": {
                    "value": "uexpr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_1025": {
                "input": {
                    "value": "lexpr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_1026": {
                "input": {
                    "value": "uexpr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ]
                    ]
                }
            },
            "isnan_1027": {
                "input": {
                    "value": "ub",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x + eps",
                            "BinOp"
                        ],
                        [
                            "positive_only(self.weight) @ self.input_dp.ub + negative_only(self.weight) @ self.input_dp.lb + self.bias",
                            "BinOp"
                        ],
                        [
                            "self.prev_layer._get_ub(self.weight, self.bias)",
                            "Call"
                        ],
                        [
                            "self.prev_layer._get_ub(torch.diag(uexpr_w), uexpr_b)",
                            "Call"
                        ],
                        [
                            "self.prev_layer._get_ub(torch.diag(uexpr_w), uexpr_b)",
                            "Call"
                        ],
                        [
                            "self.prev_layer._get_ub(torch.diag(uexpr_w), uexpr_b)",
                            "Call"
                        ],
                        [
                            "self.prev_layer._get_ub(torch.diag(uexpr_w), uexpr_b)",
                            "Call"
                        ]
                    ]
                }
            },
            "any_1027": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "diag_1071": {
                "input": {
                    "value": "lexpr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_1072": {
                "input": {
                    "value": "uexpr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ]
                    ]
                }
            },
            "min_1108": {
                "variable": {
                    "value": "lmb_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "su * (1 - su)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "diag_1126": {
                "input": {
                    "value": "lexpr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_1127": {
                "input": {
                    "value": "uexpr_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ],
                        [
                            "torch.zeros(dim).to(device=dev)",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_47": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_274": {
                "*size": {
                    "value": "bias.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_380": {
                "*size": {
                    "value": "bias.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_504": {
                "variable": {
                    "value": "coeff",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "5 if self.method == 'opt' else 1",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "sum_706": {
                "variable": {
                    "value": "Al",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_707": {
                "variable": {
                    "value": "Bl",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_708": {
                "variable": {
                    "value": "Cl",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_711": {
                "variable": {
                    "value": "Au",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_712": {
                "variable": {
                    "value": "Bu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_713": {
                "variable": {
                    "value": "Cu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_832": {
                "variable": {
                    "value": "Al",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_833": {
                "variable": {
                    "value": "Bl",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_834": {
                "variable": {
                    "value": "Cl",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_837": {
                "variable": {
                    "value": "Au",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_838": {
                "variable": {
                    "value": "Bu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_839": {
                "variable": {
                    "value": "Cu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "min_1112": {
                "variable": {
                    "value": "lmb_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1 - su * su",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "isnan_22": {
                "input": {
                    "value": "self.lexpr[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "any_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isnan_23": {
                "input": {
                    "value": "self.lexpr[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "any_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isnan_26": {
                "input": {
                    "value": "self.uexpr[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "any_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isnan_27": {
                "input": {
                    "value": "self.uexpr[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "any_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_425": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_429": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_432": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_436": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_440": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_443": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_447": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_451": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_454": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_458": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_462": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_465": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_480": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "jsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ]
                    ]
                }
            },
            "zeros_481": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "eye_482": {
                "n": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_483": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_487": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "jsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ]
                    ]
                }
            },
            "zeros_488": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "eye_489": {
                "n": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_490": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "sum_595": {
                "variable": {
                    "value": "Al",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_596": {
                "variable": {
                    "value": "Bl",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_597": {
                "variable": {
                    "value": "Cl",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_600": {
                "variable": {
                    "value": "Au",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_601": {
                "variable": {
                    "value": "Bu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_602": {
                "variable": {
                    "value": "Cu",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "coeff[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "diag_722": {
                "input": {
                    "value": "Bl",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_724": {
                "input": {
                    "value": "Bu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_851": {
                "input": {
                    "value": "negative_only(Bl)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_862": {
                "input": {
                    "value": "negative_only(Bu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_1106": {
                "input": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.max(l + trick, prev_dp.ub[i])",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_611": {
                "input": {
                    "value": "Bl",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_613": {
                "input": {
                    "value": "Bu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_723": {
                "input": {
                    "value": "Bl",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_725": {
                "input": {
                    "value": "Bu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_849": {
                "input": {
                    "value": "Al",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[0, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_850": {
                "input": {
                    "value": "positive_only(Bl)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_856": {
                "input": {
                    "value": "negative_only(Bl)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_860": {
                "input": {
                    "value": "Au",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[3, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_861": {
                "input": {
                    "value": "positive_only(Bu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_867": {
                "input": {
                    "value": "negative_only(Bu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_1110": {
                "input": {
                    "value": "u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.max(l + trick, prev_dp.ub[i])",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_470": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "jsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == -1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if self.num_layers == 1 else hsize",
                            "IfExp"
                        ],
                        [
                            "isize if i == 0 else hsize",
                            "IfExp"
                        ]
                    ]
                }
            },
            "zeros_471": {
                "*size": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "eye_472": {
                "n": {
                    "value": "hsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ]
                    ]
                }
            },
            "diag_612": {
                "input": {
                    "value": "Bl",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][1, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[1, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_614": {
                "input": {
                    "value": "Bu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[1], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][4, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[4, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_854": {
                "input": {
                    "value": "Al",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][0, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[0, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_855": {
                "input": {
                    "value": "positive_only(Bl)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_865": {
                "input": {
                    "value": "Au",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[0][3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[1][3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "torch.sum(coeff[0], -1)",
                            "Call"
                        ],
                        [
                            "self.precal_bnd[2][3, :, 0]",
                            "Subscript"
                        ],
                        [
                            "coeff[3, :, 0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "diag_866": {
                "input": {
                    "value": "positive_only(Bu)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "models_mnist.py": {
        "torch": {
            "LSTM_21": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_22": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_90": {
                "variable": {
                    "value": "comp_mtx",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lin2.out_features",
                            "Attribute"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_113": {
                "variable": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "lmbs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "LambdaLR_115": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(lmbs)",
                            "Call"
                        ]
                    ]
                },
                "lr_lambda": {
                    "value": "lr_fn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lambda e: 100 * 0.98 ** e",
                            "Lambda"
                        ]
                    ]
                }
            },
            "eye_59": {
                "n": {
                    "value": "self.frame_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "models_speech.py": {
        "torch": {
            "Linear_38": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_filt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "40",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LSTM_39": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nn_linear2.out_features",
                            "Attribute"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "matmul_50": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "frames",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input.unfold(1, self.frame_size, self.frame_step)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "self.mtx1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pow_51": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.matmul(frames, self.mtx1)",
                            "Call"
                        ],
                        [
                            "torch.pow(out, 2)",
                            "Call"
                        ],
                        [
                            "torch.matmul(out, self.mtx2)",
                            "Call"
                        ],
                        [
                            "out + 1e-10",
                            "BinOp"
                        ],
                        [
                            "torch.log(out)",
                            "Call"
                        ],
                        [
                            "self.linear1(out)",
                            "Call"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "out.transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "out[-1]",
                            "Subscript"
                        ],
                        [
                            "self.linear2(out)",
                            "Call"
                        ],
                        [
                            "inp",
                            "variable"
                        ],
                        [
                            "layers[-2](out)",
                            "Call"
                        ],
                        [
                            "layers[-1](out)",
                            "Call"
                        ],
                        [
                            "layer(out)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "matmul_52": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.matmul(frames, self.mtx1)",
                            "Call"
                        ],
                        [
                            "torch.pow(out, 2)",
                            "Call"
                        ],
                        [
                            "torch.matmul(out, self.mtx2)",
                            "Call"
                        ],
                        [
                            "out + 1e-10",
                            "BinOp"
                        ],
                        [
                            "torch.log(out)",
                            "Call"
                        ],
                        [
                            "self.linear1(out)",
                            "Call"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "out.transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "out[-1]",
                            "Subscript"
                        ],
                        [
                            "self.linear2(out)",
                            "Call"
                        ],
                        [
                            "inp",
                            "variable"
                        ],
                        [
                            "layers[-2](out)",
                            "Call"
                        ],
                        [
                            "layers[-1](out)",
                            "Call"
                        ],
                        [
                            "layer(out)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "self.mtx2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_54": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.matmul(frames, self.mtx1)",
                            "Call"
                        ],
                        [
                            "torch.pow(out, 2)",
                            "Call"
                        ],
                        [
                            "torch.matmul(out, self.mtx2)",
                            "Call"
                        ],
                        [
                            "out + 1e-10",
                            "BinOp"
                        ],
                        [
                            "torch.log(out)",
                            "Call"
                        ],
                        [
                            "self.linear1(out)",
                            "Call"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "out.transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "out[-1]",
                            "Subscript"
                        ],
                        [
                            "self.linear2(out)",
                            "Call"
                        ],
                        [
                            "inp",
                            "variable"
                        ],
                        [
                            "layers[-2](out)",
                            "Call"
                        ],
                        [
                            "layers[-1](out)",
                            "Call"
                        ],
                        [
                            "layer(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_57": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.matmul(frames, self.mtx1)",
                            "Call"
                        ],
                        [
                            "torch.pow(out, 2)",
                            "Call"
                        ],
                        [
                            "torch.matmul(out, self.mtx2)",
                            "Call"
                        ],
                        [
                            "out + 1e-10",
                            "BinOp"
                        ],
                        [
                            "torch.log(out)",
                            "Call"
                        ],
                        [
                            "self.linear1(out)",
                            "Call"
                        ],
                        [
                            "F.relu(out)",
                            "Call"
                        ],
                        [
                            "out.transpose(0, 1)",
                            "Call"
                        ],
                        [
                            "out[-1]",
                            "Subscript"
                        ],
                        [
                            "self.linear2(out)",
                            "Call"
                        ],
                        [
                            "inp",
                            "variable"
                        ],
                        [
                            "layers[-2](out)",
                            "Call"
                        ],
                        [
                            "layers[-1](out)",
                            "Call"
                        ],
                        [
                            "layer(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_76": {
                "variable": {
                    "value": "input.lb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(input.lb, torch.zeros(self.frame_step).to(dev))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_77": {
                "variable": {
                    "value": "input.ub",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(input.ub, torch.zeros(self.frame_step).to(dev))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_44": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(input, torch.zeros(self.batch_size, self.frame_step).to(input.device))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_197": {
                "variable": {
                    "value": "comp_mtx",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "out_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nn_linear2.out_features",
                            "Attribute"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_220": {
                "variable": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "lmbs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "LambdaLR_222": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(lmbs)",
                            "Call"
                        ]
                    ]
                },
                "lr_lambda": {
                    "value": "lr_fn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lambda e: 100 * 0.98 ** e",
                            "Lambda"
                        ]
                    ]
                }
            },
            "zeros_76": {
                "*size": {
                    "value": "self.frame_step",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_77": {
                "*size": {
                    "value": "self.frame_step",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_45": {
                "*size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.frame_step",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_118": {
                "*size": {
                    "value": "self.n_filt",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "relaxation.py": {
        "torch": {
            "Tensor_29": {
                "variable": {
                    "value": "candidates",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "min_32": {
                "input": {
                    "value": "candidates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.Tensor([f(lx, ly, tanh), f(lx, uy, tanh), f(ux, ly, tanh), f(ux, uy, tanh)])",
                            "Call"
                        ]
                    ]
                }
            },
            "max_32": {
                "input": {
                    "value": "candidates",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.Tensor([f(lx, ly, tanh), f(lx, uy, tanh), f(ux, ly, tanh), f(ux, uy, tanh)])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "test_hapt.py": {
        "torch": {
            "Tensor_64": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_67": {
                "variable": {
                    "value": "(_, pred_label)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "out[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "load_49": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_dir",
                            "Attribute"
                        ]
                    ]
                },
                "map_location": {
                    "value": "devtxt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if dev == torch.device('cuda') else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "load_51": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_dir",
                            "Attribute"
                        ]
                    ]
                },
                "map_location": {
                    "value": "devtxt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if dev == torch.device('cuda') else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "device_45": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "test_mnist.py": {
        "torch": {
            "load_54": {
                "variable": {
                    "value": "stt_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_dir",
                            "Attribute"
                        ]
                    ]
                },
                "map_location": {
                    "value": "devtxt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if dev == torch.device('cuda') else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "Generator_65": {
                "variable": {
                    "value": "gen",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "randperm_67": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "generator": {
                    "value": "gen",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.Generator()",
                            "Call"
                        ]
                    ]
                }
            },
            "max_79": {
                "variable": {
                    "value": "(_, pred_label)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "res[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "load_57": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_dir",
                            "Attribute"
                        ]
                    ]
                },
                "map_location": {
                    "value": "devtxt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if dev == torch.device('cuda') else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "load_60": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_dir",
                            "Attribute"
                        ]
                    ]
                },
                "map_location": {
                    "value": "devtxt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if dev == torch.device('cuda') else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "device_52": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "test_speech.py": {
        "torch": {
            "Tensor_73": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_76": {
                "variable": {
                    "value": "(_, pred_label)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "out[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "device_42": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_47": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_dir",
                            "Attribute"
                        ]
                    ]
                },
                "map_location": {
                    "value": "devtxt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if dev == torch.device('cuda') else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "load_49": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_dir",
                            "Attribute"
                        ]
                    ]
                },
                "map_location": {
                    "value": "devtxt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if dev == torch.device('cuda') else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "load_57": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_dir",
                            "Attribute"
                        ]
                    ]
                },
                "map_location": {
                    "value": "devtxt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if dev == torch.device('cuda') else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            },
            "load_59": {
                "f": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_dir",
                            "Attribute"
                        ]
                    ]
                },
                "map_location": {
                    "value": "devtxt",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if dev == torch.device('cuda') else 'cpu'",
                            "IfExp"
                        ]
                    ]
                }
            }
        }
    },
    "train_fsdd.py": {
        "torch": {
            "Adam_18": {
                "variable": {
                    "value": "opt_fn",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.001",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Tensor_29": {
                "variable": {
                    "value": "batch_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_32": {
                "variable": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cross_entropy_37": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(batch_input)",
                            "Call"
                        ],
                        [
                            "model(batch_input)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ],
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ]
                    ]
                }
            },
            "save_77": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "saved/fsdd.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "no_grad_50": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tensor_57": {
                "variable": {
                    "value": "batch_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_63": {
                "variable": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cross_entropy_68": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(batch_input)",
                            "Call"
                        ],
                        [
                            "model(batch_input)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ],
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_70": {
                "input": {
                    "value": "pred.argmax(1) == batch_label",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "train_gsc.py": {
        "torch": {
            "Adam_18": {
                "variable": {
                    "value": "opt_fn",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.001",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Tensor_29": {
                "variable": {
                    "value": "batch_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_32": {
                "variable": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cross_entropy_37": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(batch_input)",
                            "Call"
                        ],
                        [
                            "model(batch_input)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ],
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ]
                    ]
                }
            },
            "save_77": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "saved/gsc.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "no_grad_50": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tensor_57": {
                "variable": {
                    "value": "batch_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_63": {
                "variable": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cross_entropy_68": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(batch_input)",
                            "Call"
                        ],
                        [
                            "model(batch_input)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ],
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_70": {
                "input": {
                    "value": "pred.argmax(1) == batch_label",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "train_hapt.py": {
        "torch": {
            "Adam_17": {
                "variable": {
                    "value": "opt_fn",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.001",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Tensor_28": {
                "variable": {
                    "value": "batch_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_31": {
                "variable": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cross_entropy_36": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(batch_input)",
                            "Call"
                        ],
                        [
                            "model(batch_input)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ],
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ]
                    ]
                }
            },
            "save_75": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "saved/hapt_4L_256H.pt",
                    "type": "str",
                    "possible_values": []
                }
            },
            "no_grad_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tensor_55": {
                "variable": {
                    "value": "batch_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_61": {
                "variable": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cross_entropy_66": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(batch_input)",
                            "Call"
                        ],
                        [
                            "model(batch_input)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "batch_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ],
                        [
                            "torch.Tensor(lab).to(dtype=torch.long, device=get_default_device())",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_68": {
                "input": {
                    "value": "pred.argmax(1) == batch_label",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "train_mnist.py": {
        "torch": {
            "SGD_77": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_99": {
                "variable": {
                    "value": "(_, preds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SubsetRandomSampler_114": {
                "variable": {
                    "value": "train_sampler",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "train_indices",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_115": {
                "variable": {
                    "value": "train_dl",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MNIST(root='data/', download=True, transform=ToTensor())",
                            "Call"
                        ],
                        [
                            "[(x[0][0].view(784), x[1]) for x in dataset]",
                            "ListComp"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100",
                            "int"
                        ]
                    ]
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(train_indices)",
                            "Call"
                        ]
                    ]
                }
            },
            "SubsetRandomSampler_118": {
                "variable": {
                    "value": "valid_sampler",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "val_indices",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_119": {
                "variable": {
                    "value": "valid_dl",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MNIST(root='data/', download=True, transform=ToTensor())",
                            "Call"
                        ],
                        [
                            "[(x[0][0].view(784), x[1]) for x in dataset]",
                            "ListComp"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100",
                            "int"
                        ]
                    ]
                },
                "sampler": {
                    "value": "valid_sampler",
                    "type": "variable",
                    "possible_values": [
                        [
                            "SubsetRandomSampler(val_indices)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_139": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "f'saved/{model_name}'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "no_grad_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_100": {
                "input": {
                    "value": "preds == labels",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "is_available_7": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_18": {
                "input": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_61": {
                "variable": {
                    "value": "self.preemph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "hamming_window_62": {
                "variable": {
                    "value": "self.hamming",
                    "type": "Attribute",
                    "possible_values": []
                },
                "window_length": {
                    "value": "N",
                    "type": "variable",
                    "possible_values": [
                        [
                            "frame_size",
                            "variable"
                        ]
                    ]
                }
            },
            "Tensor_76": {
                "variable": {
                    "value": "self.W_comb",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_80": {
                "variable": {
                    "value": "self.real_add_img",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_83": {
                "variable": {
                    "value": "self.fb",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_8": {
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_10": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "relu_14": {
                "input": {
                    "value": "-w",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "device_55": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    }
}