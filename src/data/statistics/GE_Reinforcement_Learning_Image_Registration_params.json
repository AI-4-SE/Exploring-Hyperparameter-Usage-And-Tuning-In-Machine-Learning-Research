{
    "agent/registration.py": {
        "tensorflow": {
            "Progbar_40": {
                "variable": {
                    "value": "progbar",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "samples",
                    "type": "Call",
                    "possible_values": [
                        [
                            "len(generator.dataset)",
                            "Call"
                        ],
                        [
                            "len(generator.dataset)",
                            "Call"
                        ]
                    ]
                },
                "verbose": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "interval": {
                    "value": "0.05",
                    "type": "Constant",
                    "possible_values": []
                },
                "unit_name": {
                    "value": "registration",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "squeeze_43": {
                "variable": {
                    "value": "reference_image",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "reference_image",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(reference_image, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_44": {
                "variable": {
                    "value": "floating_image",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "floating_image",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(floating_image, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_45": {
                "variable": {
                    "value": "full_image",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "full_image",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.squeeze(full_image, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.squeeze(full_image).numpy()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_46": {
                "variable": {
                    "value": "center",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "center",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(center, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_52": {
                "variable": {
                    "value": "transformation",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "transformation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(transformation).numpy()",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_80": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_85": {
                "variable": {
                    "value": "T_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(iterations, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_86": {
                "variable": {
                    "value": "q_values",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(iterations, 6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_88": {
                "variable": {
                    "value": "full_image",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "full_image",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.squeeze(full_image, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.squeeze(full_image).numpy()",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_118": {
                "variable": {
                    "value": "visualization_reference_image",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "reference_image",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(reference_image, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_84": {
                "input": {
                    "value": "reference_image",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(reference_image, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_95": {
                "input": {
                    "value": "prediction",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.dqn.predict(diff_image)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unique_100": {
                "input": {
                    "value": "T_t[:iteration + 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "variable": {
                    "value": "T_t[iteration + 1, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int16",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_101": {
                "input": {
                    "value": "q_values[iteration]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_113": {
                "*size": {
                    "value": "(iterations, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "qvalues/qtable.py": {
        "tensorflow": {
            "Progbar_98": {
                "variable": {
                    "value": "progbar",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "len(transformations)",
                    "type": "Call",
                    "possible_values": []
                },
                "verbose": {
                    "value": "verbose",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "interval": {
                    "value": "0.05",
                    "type": "Constant",
                    "possible_values": []
                },
                "unit_name": {
                    "value": "transform",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "norm_13": {
                "input": {
                    "value": "composed.float()",
                    "type": "Call",
                    "possible_values": []
                },
                "ord": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_25": {
                "variable": {
                    "value": "self.transform",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "transform",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_71": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(self.actions)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "empty_85": {
                "variable": {
                    "value": "self.table",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_106": {
                "variable": {
                    "value": "self.table",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_69": {
                "variable": {
                    "value": "T",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.T_g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_103": {
                "variable": {
                    "value": "transformations",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "transformations",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.from_numpy(transformations)",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "save_125": {
                "obj": {
                    "value": "self.table",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "filepath",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(dirpath, filepath)",
                            "Call"
                        ],
                        [
                            "'qvalues.pt'",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "datasets/dataset.py": {
        "torch": {}
    },
    "deepqnet/deepqnet.py": {
        "torch": {
            "sum_11": {
                "variable": {
                    "value": "acc",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.argmax(y_pred, dim=1) == torch.argmax(y_true, dim=1)",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "eq_16": {
                "variable": {
                    "value": "max_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "other": {
                    "value": "torch.max(y_pred, dim=1, keepdims=True).values",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eq_17": {
                "variable": {
                    "value": "max_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "other": {
                    "value": "torch.max(y_true, dim=1, keepdims=True).values",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_33": {
                "variable": {
                    "value": "self.maxpool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_34": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_36": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_37": {
                "variable": {
                    "value": "self.maxpool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_38": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_44": {
                "variable": {
                    "value": "self.bn4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_60": {
                "variable": {
                    "value": "self.head1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "linear_input_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "convw * convw * 128",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_61": {
                "variable": {
                    "value": "self.head2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_62": {
                "variable": {
                    "value": "self.head3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_63": {
                "variable": {
                    "value": "self.head4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "relu_72": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn1(self.maxpool1(self.conv1(x)))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_73": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn2(self.maxpool2(self.conv2(x)))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_74": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn3(self.conv3(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_75": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn4(self.conv4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_76": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bn5(self.conv5(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_78": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.head1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_79": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.head2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_80": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.head3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_21": {
                "input": {
                    "value": "torch.ge(diff, 0).all(dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MSELoss_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_144": {
                "obj": {
                    "value": "self.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "filepath",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(dirpath, filepath)",
                            "Call"
                        ],
                        [
                            "'dqn.pt'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "argmax_11": {
                "input": {
                    "value": "y_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_16": {
                "input": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_17": {
                "input": {
                    "value": "y_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ge_21": {
                "input": {
                    "value": "diff",
                    "type": "Name",
                    "possible_values": [
                        [
                            "max_true.type(torch.int8) - max_pred.type(torch.int8)",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "all_21": {
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_138": {
                "f": {
                    "value": "filepath",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(dirpath, filepath)",
                            "Call"
                        ],
                        [
                            "'dqn.pt'",
                            "MethodArgument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_116": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}