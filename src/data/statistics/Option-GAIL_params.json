{
    "envir/mujoco_env.py": {
        "torch": {
            "load_46": {
                "variable": {
                    "value": "(samples, filter_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "load_76": {
                "variable": {
                    "value": "(policy_state, filter_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "expert_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "f'./data/ppo-expert/{mujoco_config.env_name}_expert.torch'",
                            "JoinedStr"
                        ]
                    ]
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "save_105": {
                "obj": {
                    "value": "(sample, rs.state_dict())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_97": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_98": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_99": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32).unsqueeze(dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_99": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "as_tensor_91": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.env.reset()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_91": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "envir/rlbench_env.py": {
        "torch": {
            "as_tensor_114": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(s_array, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_115": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(a_array, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_116": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32).unsqueeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_116": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "load_156": {
                "variable": {
                    "value": "(sample, filter_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "''",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "helper/manuel_mujoco_demo.py": {
        "torch": {
            "load_67": {
                "variable": {
                    "value": "(policy_state, filter_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "expert_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "f'./data/ppo-expert/{env_name}_expert.torch'",
                            "JoinedStr"
                        ]
                    ]
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "empty_17": {
                "variable": {
                    "value": "ct",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_27": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_28": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_29": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_29": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_47": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_48": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_49": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_49": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "save_83": {
                "obj": {
                    "value": "(sample, rs.state_dict())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "f'./data/{env_name}_sample.torch'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "no_grad_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "as_tensor_19": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "s.copy()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_19": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_20": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "state_filter(s, fixed)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_20": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "as_tensor_40": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "s.copy()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_40": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_41": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "state_filter(s, fixed)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_41": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "helper/manuel_rlbench_demo.py": {
        "torch": {
            "save_113": {
                "obj": {
                    "value": "(demos, state_filter.state_dict())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "f'./{env_name}_sample.torch'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "as_tensor_78": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(s_array, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_79": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(a_array, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_80": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32).unsqueeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_80": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "helper/render_learned_model.py": {
        "torch": {
            "load_28": {
                "variable": {
                    "value": "(policy_state, filter_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "model_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sys.argv[1]",
                            "Subscript"
                        ]
                    ]
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "model/option_critic.py": {
        "torch": {
            "device_13": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_34": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_52": {
                "variable": {
                    "value": "vs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[v(s) for v in self.value]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "model/option_discriminator.py": {
        "torch": {
            "device_14": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_27": {
                "variable": {
                    "value": "sa",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(s, a)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "device_45": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_56": {
                "variable": {
                    "value": "s_a",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(st, at)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "device_74": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_58": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[m(s_a) for m in self.discriminator]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_87": {
                "variable": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[m(st) for m in self.discriminator]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_23": {
                "tensors": {
                    "value": "(s, a)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "grad_30": {
                "outputs": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discriminator(torch.cat((s, a), dim=-1))",
                            "Call"
                        ],
                        [
                            "self.discriminator(sa)",
                            "Call"
                        ],
                        [
                            "torch.cat([m(s_a) for m in self.discriminator], dim=-1)",
                            "Call"
                        ],
                        [
                            "self.discriminator(s_a)",
                            "Call"
                        ],
                        [
                            "d.view(-1, self.dim_c + 1, self.dim_c)",
                            "Call"
                        ],
                        [
                            "d.gather(dim=-2, index=ct_1).squeeze(dim=-2).gather(dim=-1, index=ct)",
                            "Call"
                        ],
                        [
                            "torch.stack([m(st) for m in self.discriminator], dim=1)",
                            "Call"
                        ],
                        [
                            "self.discriminator(st).unsqueeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "sa",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat((s, a), dim=-1).requires_grad_()",
                            "Call"
                        ]
                    ]
                },
                "grad_outputs": {
                    "value": "torch.ones_like(d)",
                    "type": "Call",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "only_inputs": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ones_like_30": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discriminator(torch.cat((s, a), dim=-1))",
                            "Call"
                        ],
                        [
                            "self.discriminator(sa)",
                            "Call"
                        ],
                        [
                            "torch.cat([m(s_a) for m in self.discriminator], dim=-1)",
                            "Call"
                        ],
                        [
                            "self.discriminator(s_a)",
                            "Call"
                        ],
                        [
                            "d.view(-1, self.dim_c + 1, self.dim_c)",
                            "Call"
                        ],
                        [
                            "d.gather(dim=-2, index=ct_1).squeeze(dim=-2).gather(dim=-1, index=ct)",
                            "Call"
                        ],
                        [
                            "torch.stack([m(st) for m in self.discriminator], dim=1)",
                            "Call"
                        ],
                        [
                            "self.discriminator(st).unsqueeze(dim=-1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "model/option_gail.py": {
        "torch": {
            "device_13": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_20": {
                "variable": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.discriminator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "config.optimizer_lr_discriminator",
                            "Attribute"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_30": {
                "variable": {
                    "value": "sp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s for (s, a, r) in sample_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_31": {
                "variable": {
                    "value": "se",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s for (s, a, r) in demo_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_32": {
                "variable": {
                    "value": "ap",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a for (s, a, r) in sample_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_33": {
                "variable": {
                    "value": "ae",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a for (s, a, r) in demo_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_34": {
                "variable": {
                    "value": "tp",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.mini_bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_35": {
                "variable": {
                    "value": "te",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.mini_bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_55": {
                "variable": {
                    "value": "sp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s for (s, a, r) in sample_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_56": {
                "variable": {
                    "value": "se",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s for (s, a, r) in demo_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_57": {
                "variable": {
                    "value": "ap",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a for (s, a, r) in sample_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_58": {
                "variable": {
                    "value": "ae",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a for (s, a, r) in demo_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_117": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_122": {
                "variable": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.discriminator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_145": {
                "variable": {
                    "value": "sp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s for (s, c, a, r) in sample_scar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_146": {
                "variable": {
                    "value": "se",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s for (s, c, a, r) in demo_scar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_147": {
                "variable": {
                    "value": "c_1p",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[c[:-1] for (s, c, a, r) in sample_scar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_148": {
                "variable": {
                    "value": "c_1e",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[c[:-1] for (s, c, a, r) in demo_scar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_149": {
                "variable": {
                    "value": "cp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[c[1:] for (s, c, a, r) in sample_scar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_150": {
                "variable": {
                    "value": "ce",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[c[1:] for (s, c, a, r) in demo_scar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_151": {
                "variable": {
                    "value": "ap",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a for (s, c, a, r) in sample_scar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_152": {
                "variable": {
                    "value": "ae",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a for (s, c, a, r) in demo_scar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_153": {
                "variable": {
                    "value": "tp",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.mini_bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_154": {
                "variable": {
                    "value": "te",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.mini_bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_212": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_217": {
                "variable": {
                    "value": "self.optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "list(self.discriminator.parameters()) + self.policy.get_param(low_policy=False)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_232": {
                "variable": {
                    "value": "sp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s for (s, a, r) in sample_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_233": {
                "variable": {
                    "value": "se",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s for (s, a, r) in demo_sar]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_234": {
                "variable": {
                    "value": "tp",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.mini_bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_235": {
                "variable": {
                    "value": "te",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.mini_bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randperm_38": {
                "variable": {
                    "value": "inds",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "sp.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randperm_61": {
                "variable": {
                    "value": "inds",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "sp.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randperm_157": {
                "variable": {
                    "value": "inds",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "sp.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randperm_238": {
                "variable": {
                    "value": "inds",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "sp.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "logsigmoid_26": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discriminator.get_unnormed_d(s, a)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s, c_1, a, c)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s, c_1, a, c)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_44": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sp_b, se_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_45": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ap_b, ae_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_46": {
                "variable": {
                    "value": "t_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(tp_b, te_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_86": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "logsigmoid_127": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discriminator.get_unnormed_d(s, a)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s, c_1, a, c)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s, c_1, a, c)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s)",
                            "Call"
                        ]
                    ]
                }
            },
            "logsigmoid_134": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discriminator.get_unnormed_d(s, a)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s, c_1, a, c)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s, c_1, a, c)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_163": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sp_b, se_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_164": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ap_b, ae_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_165": {
                "variable": {
                    "value": "c_1array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(cp_1b, ce_1b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_166": {
                "variable": {
                    "value": "c_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(cp_b, ce_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_167": {
                "variable": {
                    "value": "t_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(tp_b, te_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_179": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_194": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_244": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sp_b, se_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_245": {
                "variable": {
                    "value": "t_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(tp_b, te_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_262": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_273": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_49": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "src",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discriminator.get_unnormed_d(s_array, a_array)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s_array, c_1array, a_array, c_array)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s_array).squeeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "t_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat((tp_b, te_b), dim=0)",
                            "Call"
                        ],
                        [
                            "torch.cat((tp_b, te_b), dim=0)",
                            "Call"
                        ],
                        [
                            "torch.cat((tp_b, te_b), dim=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "rand_71": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "sp_b.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_170": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "src",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discriminator.get_unnormed_d(s_array, a_array)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s_array, c_1array, a_array, c_array)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s_array).squeeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "t_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat((tp_b, te_b), dim=0)",
                            "Call"
                        ],
                        [
                            "torch.cat((tp_b, te_b), dim=0)",
                            "Call"
                        ],
                        [
                            "torch.cat((tp_b, te_b), dim=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_186": {
                "variable": {
                    "value": "c_array",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "s_array.size(0) + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randperm_41": {
                "n": {
                    "value": "se.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randperm_64": {
                "n": {
                    "value": "se.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randperm_160": {
                "n": {
                    "value": "se.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randperm_241": {
                "n": {
                    "value": "se.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "logsigmoid_224": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discriminator.get_unnormed_d(s, a)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s, c_1, a, c)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s, c_1, a, c)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s)",
                            "Call"
                        ]
                    ]
                }
            },
            "binary_cross_entropy_with_logits_249": {
                "input": {
                    "value": "src",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.discriminator.get_unnormed_d(s_array, a_array)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s_array, c_1array, a_array, c_array)",
                            "Call"
                        ],
                        [
                            "self.discriminator.get_unnormed_d(s_array).squeeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "t_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat((tp_b, te_b), dim=0)",
                            "Call"
                        ],
                        [
                            "torch.cat((tp_b, te_b), dim=0)",
                            "Call"
                        ],
                        [
                            "torch.cat((tp_b, te_b), dim=0)",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "model/option_policy.py": {
        "torch": {
            "device_15": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_21": {
                "variable": {
                    "value": "self.a_log_std",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.empty(1, self.dim_a, dtype=torch.float32).fill_(0.0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_61": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_193": {
                "variable": {
                    "value": "log_alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "log_alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[log_tr0 + log_pis[0]]",
                            "List"
                        ],
                        [
                            "torch.stack(log_alpha)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_194": {
                "variable": {
                    "value": "log_beta",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "log_beta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[torch.zeros(self.dim_c, dtype=torch.float32, device=self.device)]",
                            "List"
                        ],
                        [
                            "torch.stack(log_beta)",
                            "Call"
                        ]
                    ]
                }
            },
            "ModuleList_233": {
                "variable": {
                    "value": "self.policies",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[Policy(config, dim_s, dim_a) for _ in range(self.dim_c)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "device_234": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_273": {
                "variable": {
                    "value": "raw_action",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[p.sample_action(st, fixed) for p in self.policies]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_like_39": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "action_mean",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Parameter_73": {
                "variable": {
                    "value": "self.a_log_std",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.empty(1, self.dim_a, dtype=torch.float32).fill_(0.0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ParameterList_76": {
                "variable": {
                    "value": "self.a_log_std",
                    "type": "Attribute",
                    "possible_values": []
                },
                "parameters": {
                    "value": "[torch.nn.Parameter(torch.empty(1, self.dim_a, dtype=torch.float32).fill_(0.0)) for _ in range(self.dim_c)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_91": {
                "variable": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[m(st) for m in self.policy]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_92": {
                "variable": {
                    "value": "logstd",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[m.expand_as(mean[:, 0, :]) for m in self.a_log_std]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "empty_like_142": {
                "variable": {
                    "value": "eps",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "action_mean",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "empty_214": {
                "variable": {
                    "value": "max_path",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "s_array.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_220": {
                "variable": {
                    "value": "c_array",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "s_array.size(0) + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_21": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim_a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_103": {
                "tensors": {
                    "value": "[m(s) for m in self.option_policy]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "gumbel_softmax_151": {
                "logits": {
                    "value": "log_tr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.log_trans(st, ct_1)",
                            "Call"
                        ],
                        [
                            "self.log_trans(st, ct_1)",
                            "Call"
                        ],
                        [
                            "self.log_trans(st, ct_1)",
                            "Call"
                        ],
                        [
                            "self.log_trans(st, ct_1)",
                            "Call"
                        ]
                    ]
                },
                "hard": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "multinomial_151": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_187": {
                "*size": {
                    "value": "self.dim_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_208": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_256": {
                "tensors": {
                    "value": "logstds",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_73": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim_a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_77": {
                "data": {
                    "value": "torch.empty(1, self.dim_a, dtype=torch.float32).fill_(0.0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "empty_77": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.dim_a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "model/option_ppo.py": {
        "torch": {
            "Adam_63": {
                "variable": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.critic.get_param() + self.policy.get_param()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr * lr_mult",
                    "type": "BinOp",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_181": {
                "variable": {
                    "value": "optim_hi",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.critic_lo.get_param() + self.policy.get_param(low_policy=False)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr_option * lr_mult",
                    "type": "BinOp",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_183": {
                "variable": {
                    "value": "optim_lo",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.critic_lo.get_param() + self.policy.get_param(low_policy=True)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr_policy * lr_mult",
                    "type": "BinOp",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_247": {
                "variable": {
                    "value": "optim",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.critic.get_param() + self.policy.get_param()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr * lr_mult",
                    "type": "BinOp",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_52": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_53": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_54": {
                "variable": {
                    "value": "ret_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "ret_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(ret_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(ret_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_55": {
                "variable": {
                    "value": "adv_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "adv_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(adv_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_56": {
                "variable": {
                    "value": "vel_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "vel_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(vel_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randperm_71": {
                "variable": {
                    "value": "inds",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "states.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_167": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_168": {
                "variable": {
                    "value": "c_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "c_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(c_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_169": {
                "variable": {
                    "value": "c_1array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "c_1array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(c_1array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_170": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "ret_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "ret_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(ret_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(ret_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "adv_hi_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "adv_hi_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(adv_hi_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_173": {
                "variable": {
                    "value": "adv_lo_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "adv_lo_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(adv_lo_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_174": {
                "variable": {
                    "value": "vel_hi_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "vel_hi_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(vel_hi_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_175": {
                "variable": {
                    "value": "vel_lo_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "vel_lo_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(vel_lo_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randperm_194": {
                "variable": {
                    "value": "inds",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "states.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randperm_255": {
                "variable": {
                    "value": "inds",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "states.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_29": {
                "variable": {
                    "value": "advantages",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.critic.get_value(s).detach()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_30": {
                "variable": {
                    "value": "returns",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.critic.get_value(s).detach()",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_83": {
                "variable": {
                    "value": "vf_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(vpred - return_b).square()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_83": {
                "variable": {
                    "value": "vf_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_115": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_134": {
                "variable": {
                    "value": "advantages_hi",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_135": {
                "variable": {
                    "value": "advantages_lo",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_136": {
                "variable": {
                    "value": "returns",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "no_grad_186": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_250": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_267": {
                "variable": {
                    "value": "vf_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(vpred - return_b).square()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_267": {
                "variable": {
                    "value": "vf_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_131": {
                "variable": {
                    "value": "vh",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_189": {
                "input": {
                    "value": "advantages_hi",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros_like(r)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_190": {
                "input": {
                    "value": "advantages_lo",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros_like(r)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_191": {
                "input": {
                    "value": "advantages_lo",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros_like(r)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_207": {
                "variable": {
                    "value": "vf_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(vpred - ret_b).square()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_207": {
                "variable": {
                    "value": "vf_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_224": {
                "variable": {
                    "value": "vf_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(vpred - ret_b).square()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_224": {
                "variable": {
                    "value": "vf_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "min_86": {
                "input": {
                    "value": "advantages_b * ratio",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_86": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_132": {
                "input": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "min_270": {
                "input": {
                    "value": "advantages_b * ratio",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_270": {
                "dim": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_270": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "min_210": {
                "input": {
                    "value": "adv_hi_b * ratio",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_210": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "min_227": {
                "input": {
                    "value": "adv_lo_b * ratio",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_227": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "option_bc_learn.py": {
        "torch": {
            "stack_66": {
                "variable": {
                    "value": "log_alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "log_alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[torch.empty(dim_c, dtype=torch.float32, device=device).fill_(-math.log(dim_c))]",
                            "List"
                        ],
                        [
                            "log_alpha[1:]",
                            "Subscript"
                        ],
                        [
                            "torch.stack(log_alpha)",
                            "Call"
                        ],
                        [
                            "[log_tr0 + log_pis[0]]",
                            "List"
                        ],
                        [
                            "torch.stack(log_alpha)",
                            "Call"
                        ],
                        [
                            "(log_alpha.unsqueeze(dim=-1) + log_tr).logsumexp(dim=0) + log_pi",
                            "BinOp"
                        ]
                    ]
                }
            },
            "stack_67": {
                "variable": {
                    "value": "log_beta",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "log_beta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[torch.zeros(dim_c, dtype=torch.float32, device=device)]",
                            "List"
                        ],
                        [
                            "log_beta[1:]",
                            "Subscript"
                        ],
                        [
                            "torch.stack(log_beta)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_169": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "policy.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_24": {
                "variable": {
                    "value": "ss_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s_array for (s_array, a_array) in sa_array]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_25": {
                "variable": {
                    "value": "as_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a_array for (s_array, a_array) in sa_array]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mse_loss_26": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "policy.sample_action(ss_array, fixed=False)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "as_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat([a_array for (s_array, a_array) in sa_array], dim=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "empty_131": {
                "variable": {
                    "value": "log_alpha_0",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "opolicy.dim_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "opolicy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "arange_40": {
                "variable": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "dim_c",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "empty_53": {
                "*size": {
                    "value": "dim_c",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_59": {
                "*size": {
                    "value": "dim_c",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "stack_88": {
                "variable": {
                    "value": "log_alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "log_alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[torch.empty(dim_c, dtype=torch.float32, device=device).fill_(-math.log(dim_c))]",
                            "List"
                        ],
                        [
                            "log_alpha[1:]",
                            "Subscript"
                        ],
                        [
                            "torch.stack(log_alpha)",
                            "Call"
                        ],
                        [
                            "[log_tr0 + log_pis[0]]",
                            "List"
                        ],
                        [
                            "torch.stack(log_alpha)",
                            "Call"
                        ],
                        [
                            "(log_alpha.unsqueeze(dim=-1) + log_tr).logsumexp(dim=0) + log_pi",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_107": {
                "variable": {
                    "value": "marg_a",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.zeros_like(log_alpha[0:1]), log_alpha[:-1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "randint_280": {
                "low": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "()",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "save_205": {
                "obj": {
                    "value": "(policy.state_dict(), StateFilter().state_dict())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "save_name_f(i)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_107": {
                "input": {
                    "value": "log_alpha[0:1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "option_gail_learn.py": {
        "torch": {
            "load_96": {
                "variable": {
                    "value": "(param, filter_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "pretrain_name",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "randint_162": {
                "low": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "()",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "save_139": {
                "obj": {
                    "value": "(gail.state_dict(), sampling_agent.state_dict())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "save_name_f(i)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "option_gail_learn_moe.py": {
        "torch": {
            "randint_107": {
                "low": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "()",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "save_85": {
                "obj": {
                    "value": "(gail.state_dict(), sampling_agent.state_dict())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "save_name_f(i)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "option_ppo_learn.py": {
        "torch": {
            "randint_80": {
                "low": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "()",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "save_62": {
                "obj": {
                    "value": "(policy.state_dict(), sampling_agent.state_dict())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "save_name_f(i)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "pre_train.py": {
        "torch": {
            "cat_14": {
                "variable": {
                    "value": "ss_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s_array for (s_array, a_array) in sa_array]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_15": {
                "variable": {
                    "value": "as_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a_array for (s_array, a_array) in sa_array]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mse_loss_16": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "policy.sample_action(ss_array, fixed=False)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "as_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat([a_array for (s_array, a_array) in sa_array], dim=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_56": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "policy.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_90": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "policy.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "softmax_36": {
                "variable": {
                    "value": "pc2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pc2.view(demo_len - 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "save_122": {
                "obj": {
                    "value": "(policy.state_dict(), StateFilter().state_dict())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "save_name_f(i)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "utils/agent.py": {
        "torch": {
            "Pipe_40": {
                "variable": {
                    "value": "(pipe_c, pipe_p)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "duplex": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "empty_53": {
                "variable": {
                    "value": "ct",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_64": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_65": {
                "variable": {
                    "value": "c_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "c_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(c_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_66": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_67": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_67": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_84": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_85": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_86": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_86": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_103": {
                "variable": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "a_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(a_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_104": {
                "variable": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "s_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(s_array, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "as_tensor_105": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.as_tensor(r_array, dtype=torch.float32, device=policy.device).unsqueeze(dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_105": {
                "variable": {
                    "value": "r_array",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "no_grad_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "as_tensor_56": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "state_filter(s, fixed)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_56": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "as_tensor_78": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "state_filter(s, fixed)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_78": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_91": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "as_tensor_97": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "state_filter(s, fixed)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "policy.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_97": {
                "variable": {
                    "value": "st",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "utils/logger.py": {
        "torch": {
            "SummaryWriter_12": {
                "variable": {
                    "value": "self.writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "self.logdir",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "utils/model_util.py": {
        "torch": {
            "Sequential_22": {
                "*args": {
                    "value": "*l_hidden",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "ModuleList_26": {
                "modules": {
                    "value": "[make_module(in_size, out_size, hidden, activation) for _ in range(n_net)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "no_grad_8": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_21": {
                "in_features": {
                    "value": "n_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_size",
                            "variable"
                        ],
                        [
                            "h",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_18": {
                "in_features": {
                    "value": "n_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_size",
                            "variable"
                        ],
                        [
                            "h",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden",
                            "variable"
                        ]
                    ]
                }
            }
        }
    },
    "utils/state_filter.py": {
        "torch": {
            "as_tensor_40": {
                "data": {
                    "value": "fx",
                    "type": "variable",
                    "possible_values": [
                        [
                            "((x - self.mean) / (np.sqrt(self.var) + 1e-08)).clip(*self.clamp)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "x.device",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_like_24": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.squeeze().cpu().numpy()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "utils/utils.py": {
        "torch": {
            "manual_seed_79": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "no_grad_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}