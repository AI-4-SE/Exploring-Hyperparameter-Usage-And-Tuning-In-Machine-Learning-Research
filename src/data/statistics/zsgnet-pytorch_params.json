{
    "code/anchors.py": {
        "torch": {
            "ger_57": {
                "variable": {
                    "value": "grid[:, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.ones(H)",
                    "type": "Call",
                    "possible_values": []
                },
                "vec2": {
                    "value": "linear_points",
                    "type": "IfExp",
                    "possible_values": [
                        [
                            "torch.linspace(-1 + 1 / W, 1 - 1 / W, W) if W > 1 else torch.tensor([0.0])",
                            "IfExp"
                        ],
                        [
                            "torch.linspace(-1 + 1 / H, 1 - 1 / H, H) if H > 1 else torch.tensor([0.0])",
                            "IfExp"
                        ]
                    ]
                }
            },
            "ger_61": {
                "variable": {
                    "value": "grid[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "linear_points",
                    "type": "IfExp",
                    "possible_values": [
                        [
                            "torch.linspace(-1 + 1 / W, 1 - 1 / W, W) if W > 1 else torch.tensor([0.0])",
                            "IfExp"
                        ],
                        [
                            "torch.linspace(-1 + 1 / H, 1 - 1 / H, H) if H > 1 else torch.tensor([0.0])",
                            "IfExp"
                        ]
                    ]
                },
                "vec2": {
                    "value": "torch.ones(W)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_71": {
                "variable": {
                    "value": "aspects",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "aspects",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[[[s * np.sqrt(r), s * np.sqrt(1 / r)] for s in scales] for r in ratios]",
                            "ListComp"
                        ],
                        [
                            "torch.tensor(aspects).to(device).view(-1, 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_99": {
                "variable": {
                    "value": "top_left_i",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "ancs[..., :2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_100": {
                "variable": {
                    "value": "bot_right_i",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "ancs[..., 2:]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "clamp_102": {
                "variable": {
                    "value": "sizes",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "bot_right_i - top_left_i",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_143": {
                "variable": {
                    "value": "(vals, idxs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "ious",
                    "type": "Call",
                    "possible_values": [
                        [
                            "IoU_values(anchors, targets)",
                            "Call"
                        ],
                        [
                            "IoU_values(targets, anchors)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_147": {
                "variable": {
                    "value": "(vals, idxs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "ious",
                    "type": "Call",
                    "possible_values": [
                        [
                            "IoU_values(anchors, targets)",
                            "Call"
                        ],
                        [
                            "IoU_values(targets, anchors)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_178": {
                "variable": {
                    "value": "thw",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "boxes[..., 2:] / (anchors[..., 2:] + 1e-08)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_195": {
                "variable": {
                    "value": "af",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[a111, a222]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_15": {
                "tensors": {
                    "value": "[top_left, bot_right]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_22": {
                "tensors": {
                    "value": "[center, sizes]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_29": {
                "tensors": {
                    "value": "[top_left, height_width]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_36": {
                "tensors": {
                    "value": "[top_left, bottom_right]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "device_66": {
                "type": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_82": {
                "variable": {
                    "value": "ancs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[base_grid.expand(n, a, 2), sized_aspects.expand(n, a, 2)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_124": {
                "variable": {
                    "value": "top_left_i",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "ancs[..., :2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_125": {
                "variable": {
                    "value": "bot_right_i",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "ancs[..., 2:]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "clamp_126": {
                "variable": {
                    "value": "sizes",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "bot_right_i - top_left_i",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_179": {
                "tensors": {
                    "value": "(trc, thw)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "linspace_55": {
                "start": {
                    "value": "-1 + 1 / W",
                    "type": "BinOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1 - 1 / W",
                    "type": "BinOp",
                    "possible_values": []
                },
                "steps": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "tensor_56": {
                "data": {
                    "value": "[0.0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "linspace_59": {
                "start": {
                    "value": "-1 + 1 / H",
                    "type": "BinOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1 - 1 / H",
                    "type": "BinOp",
                    "possible_values": []
                },
                "steps": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "tensor_60": {
                "data": {
                    "value": "[0.0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_85": {
                "tensors": {
                    "value": "[anc.view(-1, 4) for anc in anchors]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "exp_194": {
                "input": {
                    "value": "b2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "boxes[..., 2:] * std12[1]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ones_57": {
                "*size": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ones_62": {
                "*size": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "tensor_79": {
                "data": {
                    "value": "[2 / h, 2 / w]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "code/dat_loader.py": {
        "torch": {
            "Tensor_188": {
                "variable": {
                    "value": "qlens",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "from_numpy_33": {
                "ndarray": {
                    "value": "a.astype(dtype, copy=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_193": {
                "variable": {
                    "value": "out_dict[k]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[b[k] for b in batch]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "RandomSampler_203": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "SequentialSampler_205": {
                "variable": {
                    "value": "sampler",
                    "type": "Variable",
                    "possible_values": []
                },
                "data_source": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_225": {
                "dataset": {
                    "value": "dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "images_per_gpu",
                            "Name"
                        ],
                        [
                            "images_per_gpu * cfg.num_gpus",
                            "BinOp"
                        ]
                    ]
                },
                "sampler": {
                    "value": "sampler",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.utils.data.sampler.RandomSampler(dataset)",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.SequentialSampler(dataset)",
                            "Call"
                        ],
                        [
                            "make_data_sampler(dataset, shuffle, is_distributed)",
                            "Call"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "is_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cfg.nw",
                            "Attribute"
                        ],
                        [
                            "cfg.nw * cfg.num_gpus",
                            "BinOp"
                        ]
                    ]
                },
                "collate_fn": {
                    "value": "collater",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Generator_50": {
                "variable": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "randperm_52": {
                "variable": {
                    "value": "indices",
                    "type": "Variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(self.dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "generator": {
                    "value": "g",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.Generator()",
                            "Call"
                        ]
                    ]
                }
            },
            "arange_54": {
                "variable": {
                    "value": "indices",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "len(self.dataset)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_138": {
                "data": {
                    "value": "idx",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "from_numpy_139": {
                "ndarray": {
                    "value": "q_chosen_emb_vecs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.array([q.vector for q in q_chosen_emb])",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_140": {
                "data": {
                    "value": "qlen",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(qtmp)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_141": {
                "ndarray": {
                    "value": "target",
                    "type": "Call",
                    "possible_values": [
                        [
                            "np.array(annot)",
                            "Call"
                        ],
                        [
                            "np.array([target[1], target[0], target[3], target[2]])",
                            "Call"
                        ],
                        [
                            "np.array([target[0] / h, target[1] / w, target[2] / h, target[3] / w])",
                            "Call"
                        ],
                        [
                            "2 * target - 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "tensor_142": {
                "data": {
                    "value": "annot",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "tensor_143": {
                "data": {
                    "value": "[h, w]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "code/eval_script.py": {
        "torch": {
            "tensor_49": {
                "variable": {
                    "value": "gt_box",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "annot.bbox",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_50": {
                "variable": {
                    "value": "pred_box",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "p['pred_boxes']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "code/evaluator.py": {
        "torch": {
            "sigmoid_74": {
                "variable": {
                    "value": "att_box_sigmoid",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_box",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out['att_out']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "squeeze_74": {
                "variable": {
                    "value": "att_box_sigmoid",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "gather_109": {
                "variable": {
                    "value": "best_boxes",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "actual_bbox",
                    "type": "Name",
                    "possible_values": [
                        [
                            "reg_params_to_bbox(anchs, reg_box)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "index": {
                    "value": "ids_to_use.view(-1, 1, 1).expand(-1, 1, 4)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_115": {
                "variable": {
                    "value": "ious",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "IoU_values(best_boxes, annot)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "code/fpn_resnet.py": {
        "torch": {
            "Conv2d_22": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_35": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_38": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_70": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_73": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_74": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_75": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_76": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_124": {
                "variable": {
                    "value": "self.P7_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_128": {
                "variable": {
                    "value": "self.P6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c5_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "pad_out(3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_131": {
                "variable": {
                    "value": "self.P5_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c5_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "pad_out(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_135": {
                "variable": {
                    "value": "self.P5_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "pad_out(3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_138": {
                "variable": {
                    "value": "self.P4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c4_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "pad_out(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_142": {
                "variable": {
                    "value": "self.P4_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "pad_out(3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_146": {
                "variable": {
                    "value": "self.P3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c3_ch",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "pad_out(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_150": {
                "variable": {
                    "value": "self.P3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.feat_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "pad_out(3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "interpolate_161": {
                "variable": {
                    "value": "p5_up",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p51",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.P5_1(c5)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(c4.size(2), c4.size(3))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "interpolate_166": {
                "variable": {
                    "value": "p4_up",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p41",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.P4_1(c4) + p5_up",
                            "BinOp"
                        ]
                    ]
                },
                "size": {
                    "value": "(c3.size(2), c3.size(3))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "adaptive_avg_pool2d_177": {
                "variable": {
                    "value": "p8_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p7_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.P7_2(F.relu(p6_out))",
                            "Call"
                        ]
                    ]
                },
                "output_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_190": {
                "variable": {
                    "value": "self.P5_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "C5_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Upsample_192": {
                "variable": {
                    "value": "self.P5_upsampled",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_193": {
                "variable": {
                    "value": "self.P5_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_196": {
                "variable": {
                    "value": "self.P4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "C4_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Upsample_198": {
                "variable": {
                    "value": "self.P4_upsampled",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_199": {
                "variable": {
                    "value": "self.P4_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_202": {
                "variable": {
                    "value": "self.P3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "C3_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_204": {
                "variable": {
                    "value": "self.P3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_207": {
                "variable": {
                    "value": "self.P6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "C5_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_210": {
                "variable": {
                    "value": "self.P7_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_211": {
                "variable": {
                    "value": "self.P7_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "feature_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_244": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_246": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_247": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_248": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_280": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_290": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_172": {
                "input": {
                    "value": "p6_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.P6(c5)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_281": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_283": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "code/loss.py": {
        "torch": {
            "SmoothL1Loss_41": {
                "variable": {
                    "value": "self.box_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sigmoid_104": {
                "variable": {
                    "value": "att_box_sigm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_box",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out['att_out']",
                            "Subscript"
                        ],
                        [
                            "att_box.squeeze(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cross_entropy_109": {
                "variable": {
                    "value": "clas_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_box",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out['att_out']",
                            "Subscript"
                        ],
                        [
                            "att_box.squeeze(-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "gt_ids",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "msk",
                            "Name"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_with_logits_122": {
                "variable": {
                    "value": "clas_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_box",
                    "type": "Name",
                    "possible_values": [
                        [
                            "out['att_out']",
                            "Subscript"
                        ],
                        [
                            "att_box.squeeze(-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "bbx_mask.float()",
                    "type": "Call",
                    "possible_values": []
                },
                "weight": {
                    "value": "weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "encoded_tgt * (1 - ps) + (1 - encoded_tgt) * ps",
                            "BinOp"
                        ],
                        [
                            "weights.detach()",
                            "Call"
                        ],
                        [
                            "None",
                            "Constant"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "eye_79": {
                "n": {
                    "value": "anchs.size(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "isnan_128": {
                "input": {
                    "value": "clas_loss",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.cross_entropy(att_box, gt_ids, reduction='none')",
                            "Call"
                        ],
                        [
                            "clas_loss.sum() / bbx_mask.sum()",
                            "BinOp"
                        ],
                        [
                            "F.binary_cross_entropy_with_logits(att_box, bbx_mask.float(), weight=weights, reduction='none')",
                            "Call"
                        ],
                        [
                            "clas_loss.new_ones(clas_loss.shape)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "code/main.py": {
        "torch": {
            "Adam_34": {
                "variable": {
                    "value": "opt",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "qnet.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.0002",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_count_67": {
                "variable": {
                    "value": "device_count",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_68": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataParallel_82": {
                "variable": {
                    "value": "qnet",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "qnet",
                    "type": "Call",
                    "possible_values": [
                        [
                            "learn.model",
                            "Attribute"
                        ],
                        [
                            "get_default_net(num_anchors=num_anchors, cfg=cfg)",
                            "Call"
                        ],
                        [
                            "qnet.to(device)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(qnet)",
                            "Call"
                        ]
                    ]
                }
            },
            "device_count_108": {
                "variable": {
                    "value": "cfg.num_gpus",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_57": {
                "variable": {
                    "value": "full_eval_tensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "full_eval_lists",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_51": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "code/main_dist.py": {
        "torch": {
            "device_19": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_count_65": {
                "variable": {
                    "value": "num_gpus",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DistributedDataParallel_37": {
                "variable": {
                    "value": "mdl",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "mdl",
                    "type": "Call",
                    "possible_values": [
                        [
                            "get_default_net(num_anchors=num_anchors, cfg=cfg)",
                            "Call"
                        ],
                        [
                            "torch.nn.parallel.DistributedDataParallel(mdl, device_ids=[cfg.local_rank], output_device=cfg.local_rank, broadcast_buffers=True, find_unused_parameters=True)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(mdl)",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[cfg.local_rank]",
                    "type": "List",
                    "possible_values": []
                },
                "output_device": {
                    "value": "cfg.local_rank",
                    "type": "Attribute",
                    "possible_values": []
                },
                "broadcast_buffers": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "find_unused_parameters": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataParallel_43": {
                "variable": {
                    "value": "mdl",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "mdl",
                    "type": "Call",
                    "possible_values": [
                        [
                            "get_default_net(num_anchors=num_anchors, cfg=cfg)",
                            "Call"
                        ],
                        [
                            "torch.nn.parallel.DistributedDataParallel(mdl, device_ids=[cfg.local_rank], output_device=cfg.local_rank, broadcast_buffers=True, find_unused_parameters=True)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(mdl)",
                            "Call"
                        ]
                    ]
                }
            },
            "set_device_73": {
                "device": {
                    "value": "kwargs['local_rank']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "code/mdl.py": {
        "torch": {
            "device_432": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cfg.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "in_channels": {
                    "value": "ni",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "ks",
                    "type": "Variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "ks // 2",
                            "BinOp"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.zeros(5 * self.n_anchors)",
                            "Call"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_41": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_57": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cfg.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_184": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cfg.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_227": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.emb_dim",
                    "type": null,
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "self.bid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pack_padded_sequence_315": {
                "variable": {
                    "value": "packed_embed_inp",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "embeds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "qtoks.permute(1, 0, 2).contiguous()",
                            "Call"
                        ]
                    ]
                },
                "lengths": {
                    "value": "qlens1",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_packed_sequence_322": {
                "variable": {
                    "value": "(lstm_out, req_lens)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "sequence": {
                    "value": "lstm_out1",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "total_length": {
                    "value": "max_qlen",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(qlens.max().item())",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_391": {
                "variable": {
                    "value": "feat_sizes",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[f.size(2), f.size(3)] for f in feat_out]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "tensor_395": {
                "variable": {
                    "value": "num_f_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[len(feat_out)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_104": {
                "tensors": {
                    "value": "(x, word_emb_tile, grid_tile)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_214": {
                "variable": {
                    "value": "bias",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "5 * self.n_anchors",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_244": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_277": {
                "tensors": {
                    "value": "(x, word_emb_tile)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_285": {
                "variable": {
                    "value": "hidden_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.lstm_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_286": {
                "variable": {
                    "value": "hidden_b",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.lstm_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_288": {
                "variable": {
                    "value": "hidden_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.lstm_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randn_289": {
                "variable": {
                    "value": "hidden_b",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.lstm_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_379": {
                "variable": {
                    "value": "att_bbx_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.permute_correctly(self.att_reg_box(feature), 5) for feature in feat_out]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_384": {
                "variable": {
                    "value": "att_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.permute_correctly(self.att_box(feature), 1) for feature in feat_out]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_387": {
                "variable": {
                    "value": "bbx_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.permute_correctly(self.reg_box(feature), 4) for feature in feat_out]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_40": {
                "num_features": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_276": {
                "tensors": {
                    "value": "(x, word_emb_tile, grid_tile)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "arange_215": {
                "start": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "5 * self.n_anchors",
                    "type": "BinOp",
                    "possible_values": []
                },
                "step": {
                    "value": "5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_416": {
                "f": {
                    "value": "./weights/vgg16_reducedfc.pth",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/ssd_vgg.py": {
        "torch": {
            "MaxPool2d_132": {
                "variable": {
                    "value": "pool5",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_133": {
                "variable": {
                    "value": "conv6",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_134": {
                "variable": {
                    "value": "conv7",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModuleList_42": {
                "variable": {
                    "value": "self.vgg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "base",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'300': [64, 64, 'M', 128, 128, 'M', 256, 256, 256, 'C', 512, 512, 512, 'M', 512, 512, 512], '512': []}",
                            "Dict"
                        ]
                    ]
                }
            },
            "Conv2d_46": {
                "variable": {
                    "value": "self.fproj1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "variable": {
                    "value": "self.fproj2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "self.fproj3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModuleList_49": {
                "variable": {
                    "value": "self.extras",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "extras",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'300': [256, 'S', 512, 128, 'S', 256, 128, 256, 128, 256], '512': []}",
                            "Dict"
                        ]
                    ]
                }
            },
            "ModuleList_51": {
                "variable": {
                    "value": "self.loc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "head[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ModuleList_52": {
                "variable": {
                    "value": "self.conf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "head[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "relu_92": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "v(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_136": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_126": {
                "variable": {
                    "value": "conv2d",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "i",
                            "Name"
                        ],
                        [
                            "v",
                            "Name"
                        ],
                        [
                            "i",
                            "Name"
                        ],
                        [
                            "v",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_162": {
                "in_channels": {
                    "value": "vgg[v].out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "cfg[k] * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_164": {
                "in_channels": {
                    "value": "vgg[v].out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "cfg[k] * num_classes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_167": {
                "in_channels": {
                    "value": "v.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "cfg[k] * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_169": {
                "in_channels": {
                    "value": "v.out_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "cfg[k] * num_classes",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_108": {
                "f": {
                    "value": "base_file",
                    "type": "Variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "MaxPool2d_122": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_124": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_148": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "i",
                            "Name"
                        ],
                        [
                            "v",
                            "Name"
                        ],
                        [
                            "i",
                            "Name"
                        ],
                        [
                            "v",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "cfg[k + 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 3)[flag]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_151": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "i",
                            "Name"
                        ],
                        [
                            "v",
                            "Name"
                        ],
                        [
                            "i",
                            "Name"
                        ],
                        [
                            "v",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 3)[flag]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "BatchNorm2d_128": {
                "num_features": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "cfg",
                            "Name"
                        ]
                    ]
                }
            },
            "ReLU_128": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_130": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "code/utils.py": {
        "torch": {
            "stack_81": {
                "variable": {
                    "value": "values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "values",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(values, dim=0)",
                            "Call"
                        ],
                        [
                            "values / world_size",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_195": {
                "type": {
                    "value": "cuda",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_initialized_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_initialized_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_initialized_54": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_384": {
                "variable": {
                    "value": "nums",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "nums",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(nums).float().to(self.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_453": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "open(mfile, 'rb')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_497": {
                "obj": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.load(open(mfile, 'rb'))",
                            "Call"
                        ],
                        [
                            "{'model_state_dict': self.mdl.state_dict(), 'optimizer_state_dict': self.optimizer.state_dict(), 'scheduler_state_dict': self.lr_scheduler.state_dict(), 'num_it': self.num_it, 'num_epoch': self.num_epoch, 'cfgtxt': json.dumps(self.cfg), 'best_met': self.best_met}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "self.model_file.open('wb')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_678": {
                "variable": {
                    "value": "lr_sched",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "opt",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.opt_fn(params, lr=self.lr)",
                            "Call"
                        ],
                        [
                            "self.prepare_optimizer(epochs, lr)",
                            "Call"
                        ]
                    ]
                },
                "factor": {
                    "value": "self.cfg.reduce_factor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "patience": {
                    "value": "self.cfg.patience",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LambdaLR_681": {
                "variable": {
                    "value": "lr_sched",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "opt",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.opt_fn(params, lr=self.lr)",
                            "Call"
                        ],
                        [
                            "self.prepare_optimizer(epochs, lr)",
                            "Call"
                        ]
                    ]
                },
                "lr_lambda": {
                    "value": "lambda epoch: 1",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "no_grad_361": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_163": {
                "tensors": {
                    "value": "inp",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}