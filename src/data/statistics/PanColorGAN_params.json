{
    "dataset.py": {
        "torch": {}
    },
    "networks.py": {
        "torch": {
            "conv2d_28": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "kernel",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_262": {
                "variable": {
                    "value": "self.color1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*color1",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_263": {
                "variable": {
                    "value": "self.color2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*color2",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_264": {
                "variable": {
                    "value": "self.color3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*color3",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_265": {
                "variable": {
                    "value": "self.model1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model1",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_266": {
                "variable": {
                    "value": "self.model2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model2",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_267": {
                "variable": {
                    "value": "self.model3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model3",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_268": {
                "variable": {
                    "value": "self.model_resnet",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model_resnet",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_269": {
                "variable": {
                    "value": "self.model4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model4",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_270": {
                "variable": {
                    "value": "self.model5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model5",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_271": {
                "variable": {
                    "value": "self.model6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model6",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_272": {
                "variable": {
                    "value": "self.model7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model7",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_273": {
                "variable": {
                    "value": "self.model8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model8",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_274": {
                "variable": {
                    "value": "self.model9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model9",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_275": {
                "variable": {
                    "value": "self.out_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*out_model",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_393": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*sequence",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "interpolate_36": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "scale_factor": {
                    "value": "self.scale_factor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LeakyReLU_75": {
                "variable": {
                    "value": "activation_layer",
                    "type": "Variable",
                    "possible_values": []
                },
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "is_available_87": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_134": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_136": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LeakyReLU_167": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_285": {
                "variable": {
                    "value": "mc1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m1, c1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_288": {
                "variable": {
                    "value": "mc2",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m2, c2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_291": {
                "variable": {
                    "value": "mc3",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m3, c3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_294": {
                "variable": {
                    "value": "m34",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m3, m4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_297": {
                "variable": {
                    "value": "m26",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m2, m6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_300": {
                "variable": {
                    "value": "m18",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m1, m8)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_307": {
                "variable": {
                    "value": "mc1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m1, c1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_310": {
                "variable": {
                    "value": "mc2",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m2, c2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_313": {
                "variable": {
                    "value": "mc3",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m3, c3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_316": {
                "variable": {
                    "value": "m34",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m3, m4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_319": {
                "variable": {
                    "value": "m26",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m2, m6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_322": {
                "variable": {
                    "value": "m18",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(m1, m8)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_348": {
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_183": {
                "in_channels": {
                    "value": "self.input_nc - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_186": {
                "in_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_191": {
                "in_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ngf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_195": {
                "in_channels": {
                    "value": "ngf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ngf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_200": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_203": {
                "in_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_208": {
                "in_channels": {
                    "value": "ngf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ngf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_213": {
                "in_channels": {
                    "value": "ngf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ngf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_226": {
                "in_channels": {
                    "value": "ngf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ngf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_239": {
                "in_channels": {
                    "value": "ngf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ngf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_250": {
                "in_channels": {
                    "value": "ngf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_255": {
                "in_channels": {
                    "value": "ngf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_258": {
                "in_channels": {
                    "value": "ngf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "output_nc",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_340": {
                "in_channels": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "p",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "LeakyReLU_342": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_345": {
                "in_channels": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "p",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0",
                            "Constant"
                        ],
                        [
                            "1",
                            "Constant"
                        ]
                    ]
                }
            },
            "Conv2d_364": {
                "in_channels": {
                    "value": "input_nc",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ndf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kw",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "4",
                            "Constant"
                        ]
                    ]
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "padw",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "int(np.ceil((kw - 1) / 2))",
                            "Call"
                        ]
                    ]
                }
            },
            "LeakyReLU_365": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_382": {
                "in_channels": {
                    "value": "ndf * nf_mult_prev",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ndf * nf_mult",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kw",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "4",
                            "Constant"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "padw",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "int(np.ceil((kw - 1) / 2))",
                            "Call"
                        ]
                    ]
                }
            },
            "LeakyReLU_384": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_387": {
                "in_channels": {
                    "value": "ndf * nf_mult",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kw",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "4",
                            "Constant"
                        ]
                    ]
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "padw",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "int(np.ceil((kw - 1) / 2))",
                            "Call"
                        ]
                    ]
                }
            },
            "Dropout_344": {
                "p": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_374": {
                "in_channels": {
                    "value": "ndf * nf_mult_prev",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ndf * nf_mult",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kw",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "4",
                            "Constant"
                        ]
                    ]
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "padw",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "int(np.ceil((kw - 1) / 2))",
                            "Call"
                        ]
                    ]
                }
            },
            "LeakyReLU_376": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_391": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "DataLoader_112": {
                "variable": {
                    "value": "training_data_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "PanColorDataset(mode='train', dataset=opt.dataset, random_downsampling=opt.useRD)",
                            "Call"
                        ],
                        [
                            "PanSRDataset(mode='train', dataset=opt.dataset)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt.threads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batchSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_114": {
                "variable": {
                    "value": "testing_data_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "PanColorDataset(mode='test', dataset=opt.dataset)",
                            "Call"
                        ],
                        [
                            "PanSRDataset(mode='test', dataset=opt.dataset)",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "opt.threads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batchSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "L1Loss_127": {
                "variable": {
                    "value": "criterionL1",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_128": {
                "variable": {
                    "value": "criterionMSE",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_131": {
                "variable": {
                    "value": "optimizerG",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "netG.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.regTerm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_133": {
                "variable": {
                    "value": "optimizerD",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "opt.regTerm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "set_device_102": {
                "device": {
                    "value": "gpus[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_219": {
                "variable": {
                    "value": "fake_ab",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_a, fake_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_223": {
                "variable": {
                    "value": "real_ab",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_a, real_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_383": {
                "obj": {
                    "value": "netG.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "net_g_model_out_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'{}/{}/netG_model_epoch_{}.pth'.format(path, opt.savePath, epoch)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_384": {
                "obj": {
                    "value": "netD.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "net_d_model_out_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'{}/{}/netD_model_epoch_{}.pth'.format(path, opt.savePath, epoch)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_385": {
                "obj": {
                    "value": "optimizerD.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "optim_d_model_out_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'{}/{}/optimD_model_epoch_{}.pth'.format(path, opt.savePath, epoch)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_386": {
                "obj": {
                    "value": "optimizerG.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "optim_g_model_out_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'{}/{}/optimG_model_epoch_{}.pth'.format(path, opt.savePath, epoch)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_140": {
                "f": {
                    "value": "'checkpoint/{}/netG_model_epoch_{}.pth'.format(opt.savePath, opt.contEpoch)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_143": {
                "f": {
                    "value": "'checkpoint/{}/netD_model_epoch_{}.pth'.format(opt.savePath, opt.contEpoch)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_149": {
                "f": {
                    "value": "'{}checkpoint/{}/optimG_model_epoch_{}.pth'.format(opt.hddPath, opt.savePath, opt.contEpoch)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "load_156": {
                "f": {
                    "value": "'{}checkpoint/{}/optimD_model_epoch_{}.pth'.format(opt.hddPath, opt.savePath, opt.contEpoch)",
                    "type": "Call",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "clip_grad_norm__252": {
                "parameters": {
                    "value": "netD.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "clip_grad_norm__253": {
                "parameters": {
                    "value": "netG.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_265": {
                "variable": {
                    "value": "fake_ab",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_a, fake_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_269": {
                "variable": {
                    "value": "real_ab",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_a, real_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_280": {
                "variable": {
                    "value": "fake_ab",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_a, fake_b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_229": {
                "input": {
                    "value": "pred_real",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "netD.forward(real_ab)",
                            "Call"
                        ],
                        [
                            "netD.forward(real_ab)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_230": {
                "input": {
                    "value": "pred_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "netD.forward(fake_ab.detach())",
                            "Call"
                        ],
                        [
                            "netD.forward(fake_ab)",
                            "Call"
                        ],
                        [
                            "netD.forward(fake_ab)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_272": {
                "input": {
                    "value": "pred_fake",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "netD.forward(fake_ab.detach())",
                            "Call"
                        ],
                        [
                            "netD.forward(fake_ab)",
                            "Call"
                        ],
                        [
                            "netD.forward(fake_ab)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_273": {
                "input": {
                    "value": "pred_real",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "netD.forward(real_ab)",
                            "Call"
                        ],
                        [
                            "netD.forward(real_ab)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}