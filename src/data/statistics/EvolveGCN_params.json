{
    "models/evolve_gcn.py": {
        "tensorflow": {
            "shape_26": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_shape",
                            "variable"
                        ],
                        [
                            "l.get_initial_weigths(s)",
                            "Call"
                        ],
                        [
                            "tf.shape(s)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/gcn.py": {
        "tensorflow": {}
    },
    "models/gcn_skip.py": {
        "tensorflow": {}
    },
    "models/layers/e_gcu_h.py": {
        "tensorflow": {
            "get_13": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "matmul_21": {
                "a": {
                    "value": "tf.sparse.sparse_dense_matmul(adj, nodes)",
                    "type": "Call",
                    "possible_values": []
                },
                "b": {
                    "value": "weigths_new",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.gru_cell([tf.transpose(node_summary), weigths])",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_19": {
                "a": {
                    "value": "node_summary",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.summarize([nodes, tf.shape(weigths)[-1]])",
                            "Call"
                        ]
                    ]
                }
            },
            "sparse_dense_matmul_21": {
                "sp_a": {
                    "value": "adj",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "nodes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shape_18": {
                "input": {
                    "value": "weigths",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "models/layers/gcn_layer.py": {
        "tensorflow": {
            "get_10": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_11": {
                "variable": {
                    "value": "self.kernel_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "kernel_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'glorot_uniform'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "TensorShape_15": {
                "dims": {
                    "value": "input_shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_27": {
                "a": {
                    "value": "tf.sparse.sparse_dense_matmul(adj, nodes)",
                    "type": "Call",
                    "possible_values": []
                },
                "b": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sparse_dense_matmul_27": {
                "sp_a": {
                    "value": "adj",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "nodes",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "models/layers/gcn_skip_layer.py": {
        "tensorflow": {
            "get_11": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_12": {
                "variable": {
                    "value": "self.kernel_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "kernel_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'glorot_uniform'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "matmul_34": {
                "variable": {
                    "value": "kernel_branch",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.sparse.sparse_dense_matmul(adj, nodes)",
                    "type": "Call",
                    "possible_values": []
                },
                "b": {
                    "value": "self.kernel_nodes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_35": {
                "variable": {
                    "value": "skip_branch",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "skip_input",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.kernel_skip",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorShape_15": {
                "dims": {
                    "value": "input_shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "TensorShape_16": {
                "dims": {
                    "value": "input_shape[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sparse_dense_matmul_34": {
                "sp_a": {
                    "value": "adj",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "nodes",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "models/layers/h_gru.py": {
        "tensorflow": {
            "get_17": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'tanh'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_18": {
                "variable": {
                    "value": "self.recurrent_activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "recurrent_activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'sigmoid'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_20": {
                "variable": {
                    "value": "self.kernel_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "kernel_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'glorot_uniform'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_21": {
                "variable": {
                    "value": "self.recurrent_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "recurrent_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'orthogonal'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "get_22": {
                "variable": {
                    "value": "self.bias_initializer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "identifier": {
                    "value": "bias_initializer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'zeros'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "TensorShape_25": {
                "variable": {
                    "value": "inp_shape",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "TensorShape_26": {
                "variable": {
                    "value": "rec_shape",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "input_shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "split_75": {
                "variable": {
                    "value": "(Z, R)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "ZR",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.activation(tf.matmul(X, self.kernel_inp_x) + tf.matmul(H, self.kernel_inp_h) + self.bias_inp)",
                            "Call"
                        ]
                    ]
                },
                "num_or_size_splits": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "TensorShape_81": {
                "variable": {
                    "value": "inp_shape",
                    "type": "variable",
                    "possible_values": []
                },
                "dims": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_82": {
                "shape": {
                    "value": "inp_shape[-1:] + [self.units]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "matmul_74": {
                "a": {
                    "value": "H",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.kernel_inp_h",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_76": {
                "a": {
                    "value": "R * H",
                    "type": "BinOp",
                    "possible_values": []
                },
                "b": {
                    "value": "self.kernel_rec_h",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "models/layers/summarize.py": {
        "tensorflow": {
            "top_k_26": {
                "variable": {
                    "value": "top_y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.linalg.matvec(x, self.p) / tf.linalg.norm(self.p)",
                            "BinOp"
                        ]
                    ]
                },
                "k": {
                    "value": "k",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "TensorShape_12": {
                "dims": {
                    "value": "input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matvec_25": {
                "a": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_25": {
                "tensor": {
                    "value": "self.p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_27": {
                "params": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "top_y.indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_27": {
                "input": {
                    "value": "tf.tanh(top_y.values)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tanh_27": {
                "x": {
                    "value": "top_y.values",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "train_evolve_gcn.py": {
        "tensorflow": {
            "Adam_32": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "LEARNING_RATE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.001",
                            "float"
                        ]
                    ]
                }
            },
            "CategoricalCrossentropy_33": {
                "variable": {
                    "value": "loss_func",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Mean_47": {
                "variable": {
                    "value": "train_loss_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Accuracy_48": {
                "variable": {
                    "value": "train_accuracy_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Precision_49": {
                "variable": {
                    "value": "train_precision_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Recall_50": {
                "variable": {
                    "value": "train_recall_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Mean_51": {
                "variable": {
                    "value": "test_loss_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Accuracy_52": {
                "variable": {
                    "value": "test_accuracy_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Precision_53": {
                "variable": {
                    "value": "test_precision_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Recall_54": {
                "variable": {
                    "value": "test_recall_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_36": {
                "variable": {
                    "value": "weigths",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "CLASS_WEIGTHS * targets",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cast_68": {
                "variable": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(t, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_69": {
                "variable": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(logits, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_78": {
                "variable": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(t, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_79": {
                "variable": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(logits, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "shape_37": {
                "input": {
                    "value": "nodes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "GradientTape_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "argmax_71": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_81": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_68": {
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_69": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_78": {
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_79": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "train_gcn.py": {
        "tensorflow": {
            "Adam_29": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "LEARNING_RATE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.001",
                            "float"
                        ]
                    ]
                }
            },
            "CategoricalCrossentropy_30": {
                "variable": {
                    "value": "loss_func",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Mean_39": {
                "variable": {
                    "value": "train_loss_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Accuracy_40": {
                "variable": {
                    "value": "train_accuracy_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Precision_41": {
                "variable": {
                    "value": "train_precision_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Recall_42": {
                "variable": {
                    "value": "train_recall_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Mean_43": {
                "variable": {
                    "value": "test_loss_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Accuracy_44": {
                "variable": {
                    "value": "test_accuracy_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Precision_45": {
                "variable": {
                    "value": "test_precision_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Recall_46": {
                "variable": {
                    "value": "test_recall_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_33": {
                "variable": {
                    "value": "weigths",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "CLASS_WEIGTHS * targets",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cast_60": {
                "variable": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(t, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_61": {
                "variable": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(logits, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(t, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_71": {
                "variable": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(logits, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_26": {
                "rate": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "GradientTape_54": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "argmax_63": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model([adj, nodes], training=training)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_73": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model([adj, nodes], training=training)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_60": {
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_61": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model([adj, nodes], training=training)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_70": {
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_71": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model([adj, nodes], training=training)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "train_gcn_skip.py": {
        "tensorflow": {
            "Adam_29": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "LEARNING_RATE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.001",
                            "float"
                        ]
                    ]
                }
            },
            "CategoricalCrossentropy_30": {
                "variable": {
                    "value": "loss_func",
                    "type": "variable",
                    "possible_values": []
                },
                "from_logits": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Mean_39": {
                "variable": {
                    "value": "train_loss_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Accuracy_40": {
                "variable": {
                    "value": "train_accuracy_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Precision_41": {
                "variable": {
                    "value": "train_precision_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Recall_42": {
                "variable": {
                    "value": "train_recall_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Mean_43": {
                "variable": {
                    "value": "test_loss_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Accuracy_44": {
                "variable": {
                    "value": "test_accuracy_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Precision_45": {
                "variable": {
                    "value": "test_precision_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Recall_46": {
                "variable": {
                    "value": "test_recall_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_33": {
                "variable": {
                    "value": "weigths",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "CLASS_WEIGTHS * targets",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cast_60": {
                "variable": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(t, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_61": {
                "variable": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(logits, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(t, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_71": {
                "variable": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.argmax(logits, axis=-1) == 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_26": {
                "rate": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "GradientTape_54": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "argmax_63": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model([adj, nodes], training=training)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_73": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model([adj, nodes], training=training)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_60": {
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_61": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model([adj, nodes], training=training)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_70": {
                "input": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_71": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model([adj, nodes], training=training)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "tensorflow": {
            "SparseTensor_10": {
                "indices": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.transpose(np.array([sparce_mat_coo.row, sparce_mat_coo.col]))",
                            "Call"
                        ]
                    ]
                },
                "values": {
                    "value": "sparce_mat_coo.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dense_shape": {
                    "value": "sparce_mat_coo.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}