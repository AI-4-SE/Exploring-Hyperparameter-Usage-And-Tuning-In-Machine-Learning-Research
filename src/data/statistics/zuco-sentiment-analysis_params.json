{
    "data.py": {
        "sklearn": {
            "load_files_26": {
                "variable": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "container_path": {
                    "value": "DATASET_DIR",
                    "type": "variable",
                    "possible_values": []
                },
                "categories": {
                    "value": "categories",
                    "type": "variable",
                    "possible_values": [
                        [
                            "['NEGATIVE', 'POSITIVE']",
                            "List"
                        ]
                    ]
                },
                "load_content": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "encoding": {
                    "value": "utf-8",
                    "type": "str",
                    "possible_values": []
                }
            },
            "StratifiedKFold_54": {
                "variable": {
                    "value": "cv",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "num_folds",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "random_state": {
                    "value": "111",
                    "type": "int",
                    "possible_values": []
                }
            },
            "StandardScaler_105": {
                "variable": {
                    "value": "self.normalizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        },
        "torch": {
            "Tensor_138": {
                "variable": {
                    "value": "et_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_81": {
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_files(container_path=DATASET_DIR, categories=categories, load_content=True, encoding='utf-8')",
                            "Call"
                        ],
                        [
                            "SplitDataset(self.indexed_sentences[indices_], self.targets[indices_], et_features)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "BATCH_SIZE",
                    "type": "variable",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "pad_140": {
                "input": {
                    "value": "et_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[self.et_features[i] for i in indices]",
                            "ListComp"
                        ],
                        [
                            "torch.Tensor(self.sentences_et[index])",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(0, 0, 0, missing_dims)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "constant",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "sklearn": {
            "accuracy_score_37": {
                "y_true": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": [
                        [
                            "targets.cuda()",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "f1_score_38": {
                "y_true": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": [
                        [
                            "targets.cuda()",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": []
                },
                "average": {
                    "value": "metric_ave_method",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "precision_score_39": {
                "y_true": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": [
                        [
                            "targets.cuda()",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": []
                },
                "average": {
                    "value": "metric_ave_method",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "recall_score_40": {
                "y_true": {
                    "value": "targets",
                    "type": "variable",
                    "possible_values": [
                        [
                            "targets.cuda()",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": []
                },
                "average": {
                    "value": "metric_ave_method",
                    "type": "variable",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "CrossEntropyLoss_87": {
                "variable": {
                    "value": "XE_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_104": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "INITIAL_LR",
                    "type": "variable",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.95",
                    "type": "float",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "softmax_63": {
                "input": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(indices, et_features)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "argmax_63": {
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "manual_seed_9": {
                "seed": {
                    "value": "111",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LSTM_30": {
                "variable": {
                    "value": "self.bi_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "WORD_EMBED_DIM + et_feature_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.lstm_units",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_34": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "DROPOUT_PROB",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.att_l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.lstm_units * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.max_sentence_length",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.att_l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.max_sentence_length",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.hidden_l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.lstm_units * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "HIDDEN_LAYER_UNITS",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_41": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "HIDDEN_LAYER_UNITS",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tanh_57": {
                "variable": {
                    "value": "att_l1_out_",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_l1_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.att_l1(bi_lstm_out)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_59": {
                "variable": {
                    "value": "att_weights",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_l2_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.att_l2(att_l1_out_).transpose(1, 2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "matmul_61": {
                "variable": {
                    "value": "lstm_embedding",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "att_weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.softmax(att_l2_out, dim=2)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "bi_lstm_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dropout(bi_lstm_out)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_49": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(word_embeddings, et_features)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "settings.py": {
        "torch": {
            "is_available_2": {
                "variable": {
                    "value": "USE_CUDA",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}