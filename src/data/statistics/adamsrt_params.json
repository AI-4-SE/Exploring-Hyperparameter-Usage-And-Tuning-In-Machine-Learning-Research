{
    "adamsrt/dataloaders/cifar10.py": {
        "torch": {
            "randperm_65": {
                "variable": {
                    "value": "indices",
                    "type": "Variable",
                    "possible_values": []
                },
                "n": {
                    "value": "n",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(train_dataset)",
                            "Call"
                        ]
                    ]
                }
            },
            "Subset_67": {
                "variable": {
                    "value": "valid_dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "CIFAR10(dataset_root_path, train=True, transform=train_transforms, download=True)",
                            "Call"
                        ],
                        [
                            "Subset(train_dataset, indices[:n_cut])",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "indices[n_cut:]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Subset_68": {
                "variable": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "CIFAR10(dataset_root_path, train=True, transform=train_transforms, download=True)",
                            "Call"
                        ],
                        [
                            "Subset(train_dataset, indices[:n_cut])",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "indices[:n_cut]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "DataLoader_70": {
                "variable": {
                    "value": "data_loader_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "CIFAR10(dataset_root_path, train=True, transform=train_transforms, download=True)",
                            "Call"
                        ],
                        [
                            "Subset(train_dataset, indices[:n_cut])",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "train_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_77": {
                "variable": {
                    "value": "data_loader_valid",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Subset(train_dataset, indices[n_cut:])",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "test_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_83": {
                "variable": {
                    "value": "data_loader_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "CIFAR10(dataset_root_path, train=False, transform=test_transforms, download=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "test_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "adamsrt/dataloaders/cifar100.py": {
        "torch": {
            "randperm_64": {
                "variable": {
                    "value": "indices",
                    "type": "Variable",
                    "possible_values": []
                },
                "n": {
                    "value": "n",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(train_dataset)",
                            "Call"
                        ]
                    ]
                }
            },
            "Subset_66": {
                "variable": {
                    "value": "valid_dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "CIFAR100(dataset_root_path, train=True, transform=train_transforms, download=True)",
                            "Call"
                        ],
                        [
                            "Subset(train_dataset, indices[:n_cut])",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "indices[n_cut:]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Subset_67": {
                "variable": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "CIFAR100(dataset_root_path, train=True, transform=train_transforms, download=True)",
                            "Call"
                        ],
                        [
                            "Subset(train_dataset, indices[:n_cut])",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "indices[:n_cut]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "DataLoader_69": {
                "variable": {
                    "value": "data_loader_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "CIFAR100(dataset_root_path, train=True, transform=train_transforms, download=True)",
                            "Call"
                        ],
                        [
                            "Subset(train_dataset, indices[:n_cut])",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "train_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_76": {
                "variable": {
                    "value": "data_loader_valid",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Subset(train_dataset, indices[n_cut:])",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "test_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_82": {
                "variable": {
                    "value": "data_loader_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "CIFAR100(dataset_root_path, train=False, transform=test_transforms)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "test_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "adamsrt/dataloaders/imagenet.py": {
        "torch": {
            "DataLoader_63": {
                "variable": {
                    "value": "data_loader_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "ImageNet(dataset_root_path, split='train', transform=train_transforms)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "train_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "IMAGENET_NUM_WORKERS",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_70": {
                "variable": {
                    "value": "data_loader_valid",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "ImageNet(dataset_root_path, split='val', transform=test_transforms, download=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "test_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "IMAGENET_NUM_WORKERS",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "adamsrt/dataloaders/svhn.py": {
        "torch": {
            "randperm_56": {
                "variable": {
                    "value": "indices",
                    "type": "Variable",
                    "possible_values": []
                },
                "n": {
                    "value": "n",
                    "type": "Name",
                    "possible_values": [
                        [
                            "len(train_dataset)",
                            "Call"
                        ]
                    ]
                }
            },
            "Subset_58": {
                "variable": {
                    "value": "valid_dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "SVHN(dataset_root_path, split='train', transform=train_transforms, download=True)",
                            "Call"
                        ],
                        [
                            "Subset(train_dataset, indices[:n_cut])",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "indices[n_cut:]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Subset_59": {
                "variable": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "SVHN(dataset_root_path, split='train', transform=train_transforms, download=True)",
                            "Call"
                        ],
                        [
                            "Subset(train_dataset, indices[:n_cut])",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "indices[:n_cut]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "DataLoader_61": {
                "variable": {
                    "value": "data_loader_train",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Call",
                    "possible_values": [
                        [
                            "SVHN(dataset_root_path, split='train', transform=train_transforms, download=True)",
                            "Call"
                        ],
                        [
                            "Subset(train_dataset, indices[:n_cut])",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "train_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_68": {
                "variable": {
                    "value": "data_loader_valid",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valid_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Subset(train_dataset, indices[n_cut:])",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "test_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_74": {
                "variable": {
                    "value": "data_loader_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "SVHN(dataset_root_path, split='test', transform=test_transforms, download=True)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "test_batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1024",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "adamsrt/models/resnet.py": {
        "torch": {
            "Conv2d_47": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1 if i == 0 else 2",
                            "IfExp"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_54": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1 if i == 0 else 2",
                            "IfExp"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_66": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "init_in_planes * 2 ** i",
                            "BinOp"
                        ]
                    ]
                }
            },
            "BatchNorm2d_68": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "init_in_planes * 2 ** i",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ReLU_69": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_97": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "init_in_planes * 2 ** i",
                            "BinOp"
                        ]
                    ]
                }
            },
            "BatchNorm2d_99": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "init_in_planes * 2 ** i",
                            "BinOp"
                        ]
                    ]
                }
            },
            "BatchNorm2d_101": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_103": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_175": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "init_in_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "16",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_180": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_190": {
                "variable": {
                    "value": "self.blocks_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*blocks_layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_197": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "flatten_225": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.blocks_layers(x)",
                            "Call"
                        ],
                        [
                            "self.avgpool(x)",
                            "Call"
                        ],
                        [
                            "torch.flatten(x, 1)",
                            "Call"
                        ],
                        [
                            "self.linear(x)",
                            "Call"
                        ]
                    ]
                },
                "start_dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_71": {
                "variable": {
                    "value": "self.downsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv_k1(in_planes, planes, stride)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_76": {
                "variable": {
                    "value": "self.downsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_106": {
                "variable": {
                    "value": "self.downsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv_k1(in_planes, planes * self.expansion, stride)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_111": {
                "variable": {
                    "value": "self.downsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_166": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_in_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "16",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_171": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "init_in_planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "16",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_177": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_194": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "AvgPool2d_196": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "pool_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "4",
                            "Constant"
                        ],
                        [
                            "8",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_215": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_73": {
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "init_in_planes * 2 ** i",
                            "BinOp"
                        ]
                    ]
                }
            },
            "BatchNorm2d_108": {
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "adamsrt/models/vgg.py": {
        "torch": {
            "Conv2d_25": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "x",
                            "Name"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.cfg",
                            "Attribute"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_32": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.cfg",
                            "Attribute"
                        ]
                    ]
                }
            },
            "ReLU_33": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Sequential_92": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_53": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(target_size, target_size)",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool2d_91": {
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_63": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(target_size, target_size)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_55": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_56": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_57": {
                "in_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_58": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_60": {
                "in_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "MaxPool2d_86": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "in_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                }
            },
            "BatchNorm2d_65": {
                "num_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_66": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_67": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_68": {
                "in_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                }
            },
            "BatchNorm2d_69": {
                "num_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                }
            },
            "ReLU_70": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_72": {
                "in_features": {
                    "value": "target_size",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "512",
                            "Constant"
                        ],
                        [
                            "4096",
                            "Constant"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "adamsrt/optimizers/adam_g.py": {
        "torch": {
            "zeros_like_93": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_95": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "adamsrt/optimizers/adam_srt.py": {
        "torch": {
            "zeros_like_105": {
                "variable": {
                    "value": "state[exp_avg]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_107": {
                "variable": {
                    "value": "state[exp_avg_sq]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "adamsrt/optimizers/sgd_mrt.py": {
        "torch": {
            "zeros_like_96": {
                "variable": {
                    "value": "state[momentum_buffer]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "p.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "training.py": {
        "torch": {
            "device_83": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_97": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MultiStepLR_126": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "OPTIMIZERS[optimizer_name](group_params, **BEST_HYPER_PARAMETERS[dataloader_name][model_name][optimizer_name])",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "milestones": {
                    "value": "MILESTONES",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[135, 225, 315]",
                            "List"
                        ]
                    ]
                },
                "gamma": {
                    "value": "GAMMA",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.1",
                            "Constant"
                        ]
                    ]
                }
            },
            "load_182": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "BEST_PATH",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'/tmp/best_weights.pkl'",
                            "Constant"
                        ]
                    ]
                }
            },
            "manual_seed_85": {
                "seed": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "is_available_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_176": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "BEST_PATH",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'/tmp/best_weights.pkl'",
                            "Constant"
                        ]
                    ]
                }
            },
            "no_grad_250": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}