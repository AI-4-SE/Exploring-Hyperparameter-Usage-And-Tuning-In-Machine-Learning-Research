{
    "resseg/cli/resseg.py": {
        "torch": {
            "manual_seed_66": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "resseg/features.py": {
        "torch": {
            "load_65": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "repo",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'fepegar/resseg'",
                            "str"
                        ]
                    ]
                },
                "map_location": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'ressegnet'",
                            "str"
                        ]
                    ]
                }
            },
            "set_grad_enabled_59": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "autocast_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "resseg/inference.py": {
        "torch": {
            "DataLoader_41": {
                "variable": {
                    "value": "loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_dataset(input_path, tta_iterations, interpolation, mni_transform_path=mni_transform_path)",
                            "Call"
                        ],
                        [
                            "torch.utils.data.ConcatDataset((no_aug_dataset, aug_dataset))",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "num_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "collate_fn": {
                    "value": "lambda x: x",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "stack_61": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "all_results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "ConcatDataset_143": {
                "variable": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "datasets": {
                    "value": "(no_aug_dataset, aug_dataset)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "set_grad_enabled_40": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "stack_49": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "tensors",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[subject[IMAGE_NAME][tio.DATA] for subject in subjects_list_batch]",
                            "ListComp"
                        ]
                    ]
                }
            },
            "autocast_50": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "resseg/model.py": {
        "torch": {
            "load_31": {
                "variable": {
                    "value": "state_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "weights_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "repo_dir / 'self_semi_37-b571f7ba.pth'",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "resseg/resseg.py": {
        "torch": {
            "load_20": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "repo",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'fepegar/resseg'",
                            "str"
                        ]
                    ]
                },
                "map_location": {
                    "value": "model_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'ressegnet'",
                            "str"
                        ]
                    ]
                }
            }
        }
    },
    "resseg/utils.py": {
        "torch": {
            "device_6": {
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "is_available_6": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}