{
    "__init__.py": {
        "torch": {
            "load_27": {
                "f": {
                    "value": "THIS_PATH + '/sden.pkl'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "data_utils.py": {
        "torch": {
            "cat_124": {
                "variable": {
                    "value": "currents",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "currents",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(currents)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_125": {
                "variable": {
                    "value": "slots",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "slots",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(slots)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_126": {
                "variable": {
                    "value": "intents",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "intent",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dd[2]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_141": {
                "variable": {
                    "value": "history",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "cat_111": {
                "variable": {
                    "value": "history_p_t",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "history_p_t",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(history_p_t)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_115": {
                "tensors": {
                    "value": "[current[i], torch.LongTensor([w_to_ix['<pad>']] * (max_current - current[i].size(1))).view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_120": {
                "tensors": {
                    "value": "[slot[i], torch.LongTensor([s_to_ix['<pad>']] * (max_slot - slot[i].size(1))).view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_137": {
                "tensors": {
                    "value": "[h, torch.LongTensor([x_to_ix['<pad>']] * (max_x - h.size(1))).view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_104": {
                "tensors": {
                    "value": "[history[i][j], torch.LongTensor([w_to_ix['<pad>']] * (max_len - history[i][j].size(1))).view(1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "device_11": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_105": {
                "variable": {
                    "value": "slot_loss_function",
                    "type": "variable",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_106": {
                "variable": {
                    "value": "intent_loss_function",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_107": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_108": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                },
                "milestones": {
                    "value": "[config.epochs // 4, config.epochs // 2]",
                    "type": "List",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optim.Adam(model.parameters(), lr=config.lr)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_57": {
                "obj": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'model': model.state_dict(), 'vocab': model.vocab, 'slot_vocab': model.slot_vocab, 'intent_vocab': model.intent_vocab, 'config': config}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "config.save_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_11": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "eq_31": {
                "input": {
                    "value": "intent_p.max(1)[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "intent.view(-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Embedding_12": {
                "variable": {
                    "value": "self.embed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "vocab_size",
                    "type": "variable",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "embed_size",
                    "type": "variable",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "self.pad_idx",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GRU_13": {
                "variable": {
                    "value": "self.bigru_m",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "embed_size",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GRU_14": {
                "variable": {
                    "value": "self.bigru_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "embed_size",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_15": {
                "variable": {
                    "value": "self.context_encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(hidden_size * 4, hidden_size * 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GRU_17": {
                "variable": {
                    "value": "self.session_encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GRU_19": {
                "variable": {
                    "value": "self.decoder_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "embed_size",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LSTM_20": {
                "variable": {
                    "value": "self.decoder_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "hidden_size * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_22": {
                "variable": {
                    "value": "self.intent_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "intent_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_23": {
                "variable": {
                    "value": "self.slot_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "slot_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dropout_24": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.3",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_49": {
                "variable": {
                    "value": "M",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "H",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "sort_56": {
                "variable": {
                    "value": "(lens, indices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mask.sum(1).long()",
                            "Call"
                        ],
                        [
                            "mask.sum(1).long()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "descending": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sort_59": {
                "variable": {
                    "value": "(_, _indices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_60": {
                "variable": {
                    "value": "hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[hh for hh in hidden]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_65": {
                "variable": {
                    "value": "CONCAT",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[M, C]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_77": {
                "variable": {
                    "value": "S",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[s for s in S_2]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sort_40": {
                "variable": {
                    "value": "(lens, indices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mask.sum(1).long()",
                            "Call"
                        ],
                        [
                            "mask.sum(1).long()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "descending": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sort_44": {
                "variable": {
                    "value": "(_, _indices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_45": {
                "variable": {
                    "value": "hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[hh for hh in hidden]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Linear_15": {
                "in_features": {
                    "value": "hidden_size * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sigmoid_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}