{
    "benchmark/convnet.py": {
        "sklearn": {
            "shuffle_115": {
                "variable": {
                    "value": "(train_data, train_labels)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "train_data",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "train_labels",
                    "type": null,
                    "possible_values": []
                }
            },
            "shuffle_118": {
                "variable": {
                    "value": "(eval_data, eval_labels)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "eval_data",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "eval_labels",
                    "type": null,
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "set_verbosity_9": {
                "level": {
                    "value": "tf.logging.INFO",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_21": {
                "variable": {
                    "value": "input_layer",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "features['x']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, 28, 28, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "conv2d_28": {
                "variable": {
                    "value": "conv1",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_layer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(features['x'], [-1, 28, 28, 1])",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "[5, 5]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_pooling2d_39": {
                "variable": {
                    "value": "pool1",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "conv1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.layers.conv2d(inputs=input_layer, filters=32, kernel_size=[5, 5], padding='same', activation=tf.nn.relu)",
                            "Call"
                        ]
                    ]
                },
                "pool_size": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "conv2d_46": {
                "variable": {
                    "value": "conv2",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "pool1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.layers.max_pooling2d(inputs=conv1, pool_size=[2, 2], strides=2)",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "[5, 5]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_pooling2d_57": {
                "variable": {
                    "value": "pool2",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "conv2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.layers.conv2d(inputs=pool1, filters=64, kernel_size=[5, 5], padding='same', activation=tf.nn.relu)",
                            "Call"
                        ]
                    ]
                },
                "pool_size": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_62": {
                "variable": {
                    "value": "pool2_flat",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "pool2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.layers.max_pooling2d(inputs=conv2, pool_size=[2, 2], strides=2)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, 7 * 7 * 64]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "dense_68": {
                "variable": {
                    "value": "dense",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "pool2_flat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(pool2, [-1, 7 * 7 * 64])",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dropout_71": {
                "variable": {
                    "value": "dropout",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "dense",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.layers.dense(inputs=pool2_flat, units=1024, activation=tf.nn.relu)",
                            "Call"
                        ]
                    ]
                },
                "rate": {
                    "value": "0.4",
                    "type": "Constant",
                    "possible_values": []
                },
                "training": {
                    "value": "mode == tf.estimator.ModeKeys.TRAIN",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "dense_77": {
                "variable": {
                    "value": "logits",
                    "type": "Name",
                    "possible_values": []
                },
                "inputs": {
                    "value": "dropout",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.layers.dropout(inputs=dense, rate=0.4, training=mode == tf.estimator.ModeKeys.TRAIN)",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "one_hot_90": {
                "variable": {
                    "value": "onehot_labels",
                    "type": "Name",
                    "possible_values": []
                },
                "indices": {
                    "value": "tf.cast(labels, tf.int32)",
                    "type": "Call",
                    "possible_values": []
                },
                "depth": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_91": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "onehot_labels": {
                    "value": "onehot_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.one_hot(indices=tf.cast(labels, tf.int32), depth=10)",
                            "Call"
                        ]
                    ]
                },
                "logits": {
                    "value": "logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.layers.dense(inputs=dropout, units=10)",
                            "Call"
                        ]
                    ]
                }
            },
            "Estimator_121": {
                "variable": {
                    "value": "mnist_classifier",
                    "type": "Name",
                    "possible_values": []
                },
                "model_fn": {
                    "value": "cnn_model_fn",
                    "type": "Name",
                    "possible_values": []
                },
                "model_dir": {
                    "value": "/tmp/mnist_convnet_model",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "numpy_input_fn_125": {
                "variable": {
                    "value": "train_input_fn",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "{'x': train_data}",
                    "type": "Dict",
                    "possible_values": []
                },
                "y": {
                    "value": "train_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.asarray(mnist.train.labels, dtype=np.int32)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "400",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_epochs": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "numpy_input_fn_133": {
                "variable": {
                    "value": "eval_input_fn",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "{'x': eval_data}",
                    "type": "Dict",
                    "possible_values": []
                },
                "y": {
                    "value": "eval_labels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.asarray(mnist.test.labels, dtype=np.int32)",
                            "Call"
                        ]
                    ]
                },
                "num_epochs": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "GradientDescentOptimizer_96": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "EstimatorSpec_106": {
                "mode": {
                    "value": "mode",
                    "type": "Name",
                    "possible_values": []
                },
                "loss": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.losses.softmax_cross_entropy(onehot_labels=onehot_labels, logits=logits)",
                            "Call"
                        ]
                    ]
                },
                "eval_metric_ops": {
                    "value": "eval_metric_ops",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'accuracy': tf.metrics.accuracy(labels=labels, predictions=predictions['classes'])}",
                            "Dict"
                        ]
                    ]
                }
            },
            "run_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "argmax_81": {
                "input": {
                    "value": "logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.layers.dense(inputs=dropout, units=10)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_84": {
                "logits": {
                    "value": "logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.layers.dense(inputs=dropout, units=10)",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "softmax_tensor",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "EstimatorSpec_87": {
                "mode": {
                    "value": "mode",
                    "type": "Name",
                    "possible_values": []
                },
                "predictions": {
                    "value": "predictions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "{'classes': tf.argmax(input=logits, axis=1), 'probabilities': tf.nn.softmax(logits, name='softmax_tensor')}",
                            "Dict"
                        ]
                    ]
                }
            },
            "EstimatorSpec_100": {
                "mode": {
                    "value": "mode",
                    "type": "Name",
                    "possible_values": []
                },
                "loss": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.losses.softmax_cross_entropy(onehot_labels=onehot_labels, logits=logits)",
                            "Call"
                        ]
                    ]
                },
                "train_op": {
                    "value": "train_op",
                    "type": "Name",
                    "possible_values": [
                        [
                            "optimizer.minimize(loss=loss, global_step=tf.train.get_global_step())",
                            "Call"
                        ]
                    ]
                }
            },
            "accuracy_104": {
                "labels": {
                    "value": "labels",
                    "type": "Name",
                    "possible_values": []
                },
                "predictions": {
                    "value": "predictions['classes']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "{'classes': tf.argmax(input=logits, axis=1), 'probabilities': tf.nn.softmax(logits, name='softmax_tensor')}",
                            "Dict"
                        ]
                    ]
                }
            },
            "cast_90": {
                "x": {
                    "value": "labels",
                    "type": "Name",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_global_step_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "benchmark/runner.py": {
        "sklearn": {
            "StandardScaler_42": {
                "variable": {
                    "value": "scaler",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "shuffle_95": {
                "variable": {
                    "value": "(Xs, Ys)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "self.X",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "self.Y",
                    "type": null,
                    "possible_values": []
                }
            },
            "StandardScaler_167": {
                "variable": {
                    "value": "Xt",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "shuffle_168": {
                "variable": {
                    "value": "(Xs, Ys)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "Xt",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "Yt",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "visualization/project_zalando.py": {
        "tensorflow": {
            "Variable_21": {
                "variable": {
                    "value": "embedding_var",
                    "type": "Name",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": []
                },
                "name": {
                    "value": "mnist_pixels",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "FileWriter_35": {
                "variable": {
                    "value": "summary_writer",
                    "type": "Name",
                    "possible_values": []
                },
                "logdir": {
                    "value": "LOG_DIR + 'visualization'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Session_40": {
                "variable": {
                    "value": "sess",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Saver_42": {
                "variable": {
                    "value": "saver",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_initializer_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}