node
pytest benchmark.py --benchmark-min-rounds=4 --benchmark-only -n 0 --no-cov --benchmark-json output.json
"tsfresh::::.github/workflows/deploy.yml::::jobs::::deploy::::steps::::steps_3::::run::::python setup.py sdist bdist_wheel
tsfresh::::.github/workflows/test.yml::::jobs::::test::::steps::::steps_1::::name::::Set up Python ${{ matrix.python-version }}
tsfresh::::.github/workflows/test.yml::::jobs::::test::::steps::::steps_1::::with::::python-version::::${{ matrix.python-version }}
tsfresh::::.github/workflows/test.yml::::jobs::::test::::steps::::steps_2::::with::::key::::${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('test-requirements.txt') }}-${{ matrix.python-version }}-${{ matrix.installation }}
"tsfresh::::.github/workflows/test.yml::::jobs::::test::::steps::::steps_2::::with::::restore-keys::::${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}-${{ hashFiles('test-requirements.txt') }}-${{ matrix.python-version }}-${{ matrix.installation }}
"tsfresh::::.github/workflows/test.yml::::jobs::::test::::steps::::steps_4::::run::::pytest --junitxml=junit/test-results-${{ matrix.python-version }}-${{ matrix.installation }}.xml --cov-report=xml tests
tsfresh::::.github/workflows/test.yml::::jobs::::test::::steps::::steps_5::::with::::name::::pytest-results-${{ matrix.python-version }}-${{ matrix.installation }}
tsfresh::::.github/workflows/test.yml::::jobs::::test::::steps::::steps_5::::with::::path::::junit/test-results-${{ matrix.python-version }}-${{ matrix.installation }}.xml
tsfresh::::.readthedocs.yml::::sphinx::::configuration::::docs/conf.py
tsfresh::::tests/integrations/test_full_pipeline.py::::file::::tests/integrations/test_full_pipeline.py
tsfresh::::tests/integrations/test_full_pipeline.py::::Pipeline::::variable::::pipe
"tsfresh::::tests/integrations/test_full_pipeline.py::::Pipeline::::steps::::[('relevant_augmenter', 'relevant_augmenter')]"
tsfresh::::tests/units/transformers/test_per_column_imputer.py::::file::::tests/units/transformers/test_per_column_imputer.py
tsfresh::::tests/units/transformers/test_relevant_feature_augmenter.py::::file::::tests/units/transformers/test_relevant_feature_augmenter.py
tsfresh::::tests/units/transformers/test_relevant_feature_augmenter.py::::Pipeline::::variable::::pipeline
"tsfresh::::tests/units/transformers/test_relevant_feature_augmenter.py::::Pipeline::::steps::::[('augmenter', 'augmenter'), ('classifier', 'RandomForestClassifier')]"
tsfresh::::tests/units/transformers/test_relevant_feature_augmenter.py::::RandomForestClassifier::::random_state::::1
tsfresh::::tsfresh/transformers/feature_augmenter.py::::file::::tsfresh/transformers/feature_augmenter.py
tsfresh::::tsfresh/transformers/feature_selector.py::::file::::tsfresh/transformers/feature_selector.py
tsfresh::::tsfresh/transformers/per_column_imputer.py::::file::::tsfresh/transformers/per_column_imputer.py
tsfresh::::tsfresh/transformers/relevant_feature_augmenter.py::::file::::tsfresh/transformers/relevant_feature_augmenter.py
