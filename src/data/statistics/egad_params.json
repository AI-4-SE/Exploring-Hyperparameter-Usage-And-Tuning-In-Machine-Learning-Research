{
    "egad/cppn_neat.py": {
        "torch": {
            "sqrt_29": {
                "variable": {
                    "value": "input_tensor_rxy",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_tensor_x ** 2 + input_tensor_y ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_30": {
                "variable": {
                    "value": "input_tensor_rxz",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_tensor_x ** 2 + input_tensor_z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_31": {
                "variable": {
                    "value": "input_tensor_ryz",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_tensor_y ** 2 + input_tensor_z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_32": {
                "variable": {
                    "value": "input_tensor_rxyz",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_tensor_x ** 2 + input_tensor_y ** 2 + input_tensor_z ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_like_34": {
                "variable": {
                    "value": "input_tensor_b",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_tensor_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "_scale_workspace(torch.tensor(x, dtype=torch.float))",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_25": {
                "data": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_26": {
                "data": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_27": {
                "data": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}