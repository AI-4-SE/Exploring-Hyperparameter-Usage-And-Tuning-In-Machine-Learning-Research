{
    "dataset/rs.py": {
        "torch": {
            "from_numpy_145": {
                "variable": {
                    "value": "img1",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "img1[:, :, ::-1]",
                            "Subscript"
                        ],
                        [
                            "img1.astype(np.float64)",
                            "Call"
                        ],
                        [
                            "img1 - cfg.T0_MEAN_VALUE",
                            "BinOp"
                        ],
                        [
                            "img1.transpose(2, 0, 1)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(img1).float()",
                            "Call"
                        ],
                        [
                            "Image.open(img1_path)",
                            "Call"
                        ],
                        [
                            "self.transform_med(img1)",
                            "Call"
                        ],
                        [
                            "np.array(img1, dtype=np.uint8)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_150": {
                "variable": {
                    "value": "img2",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "img2[:, :, ::-1]",
                            "Subscript"
                        ],
                        [
                            "img2.astype(np.float64)",
                            "Call"
                        ],
                        [
                            "img2 - cfg.T1_MEAN_VALUE",
                            "BinOp"
                        ],
                        [
                            "img2.transpose(2, 0, 1)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(img2).float()",
                            "Call"
                        ],
                        [
                            "Image.open(img2_path)",
                            "Call"
                        ],
                        [
                            "self.transform_med(img2)",
                            "Call"
                        ],
                        [
                            "np.array(img2, dtype=np.uint8)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_151": {
                "variable": {
                    "value": "lbl",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "lbl",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.from_numpy(lbl).long()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "layer/function.py": {
        "torch": {
            "bmm_18": {
                "variable": {
                    "value": "feature_mul",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "feature_B",
                    "type": "Name",
                    "possible_values": [
                        [
                            "feature_B.view(b, c, h * w).transpose(1, 2)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "feature_A",
                    "type": "Name",
                    "possible_values": [
                        [
                            "feature_A.transpose(2, 3).contiguous().view(b, c, h * w)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "layer/loss.py": {
        "torch": {
            "pairwise_distance_17": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_18": {
                "variable": {
                    "value": "similar_pair",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "distance - 0.3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_19": {
                "variable": {
                    "value": "dissimilar_pair",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.margin - distance - 0.3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_21": {
                "variable": {
                    "value": "constractive_thresh_loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "(1 - label) * torch.pow(similar_pair, 2) + label * torch.pow(dissimilar_pair, 2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pairwise_distance_35": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_36": {
                "variable": {
                    "value": "similar_pair",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "distance - self.threshold",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_37": {
                "variable": {
                    "value": "dissimilar_pair",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.margin - distance",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_39": {
                "variable": {
                    "value": "constractive_thresh_loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "(1 - label) * torch.pow(similar_pair, 2) + label * torch.pow(dissimilar_pair, 2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_53": {
                "variable": {
                    "value": "diff",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x1 - x2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_54": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "diff + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_54": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_55": {
                "variable": {
                    "value": "dist",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_57": {
                "variable": {
                    "value": "mdist_pos",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist - self.margin1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_58": {
                "variable": {
                    "value": "mdist_neg",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.margin2 - dist",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_64": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "loss_pos + loss_neg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_77": {
                "variable": {
                    "value": "diff",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x1 - x2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_78": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "diff + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_78": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_79": {
                "variable": {
                    "value": "dist",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_81": {
                "variable": {
                    "value": "mdist_pos",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist - self.margin1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_82": {
                "variable": {
                    "value": "mdist_neg",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.margin2 - dist",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_88": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "loss_pos + loss_neg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_101": {
                "variable": {
                    "value": "diff",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x1 - x2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_102": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "diff + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_102": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_103": {
                "variable": {
                    "value": "dist",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_105": {
                "variable": {
                    "value": "mdist_pos",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist - self.margin1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_106": {
                "variable": {
                    "value": "mdist_neg",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.margin2 - dist",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_112": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "loss_pos + loss_neg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_126": {
                "variable": {
                    "value": "diff",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x1 - x2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_127": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "diff + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_127": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_128": {
                "variable": {
                    "value": "dist",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_130": {
                "variable": {
                    "value": "mdist_pos",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist - self.margin1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_131": {
                "variable": {
                    "value": "mdist_neg",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.margin2 - dist",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_137": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "loss_pos + loss_neg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mul_150": {
                "variable": {
                    "value": "sb",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x1",
                    "type": "Name",
                    "possible_values": []
                },
                "other": {
                    "value": "x2",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "sum_150": {
                "variable": {
                    "value": "sb",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_151": {
                "variable": {
                    "value": "sbba",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x1",
                    "type": "Name",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_151": {
                "variable": {
                    "value": "sbba",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_152": {
                "variable": {
                    "value": "sbbb",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x2",
                    "type": "Name",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_152": {
                "variable": {
                    "value": "sbbb",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_153": {
                "variable": {
                    "value": "sa",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "sbba",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.pow(x1, 2).sum(dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sqrt_154": {
                "variable": {
                    "value": "sc",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "sbbb",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.pow(x2, 2).sum(dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_161": {
                "variable": {
                    "value": "mdist_pos",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dsb - self.margin1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_162": {
                "variable": {
                    "value": "mdist_neg",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.margin2 - dsb",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_168": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "loss_pos + loss_neg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_181": {
                "variable": {
                    "value": "diff",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x1 - x2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_182": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "diff + self.eps",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_182": {
                "variable": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_183": {
                "variable": {
                    "value": "dist",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist_sq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ],
                        [
                            "torch.pow(diff + self.eps, 2).sum(dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_185": {
                "variable": {
                    "value": "mdist_pos",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "dist - self.margin1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_186": {
                "variable": {
                    "value": "mdist_neg",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.margin2 - dist",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_192": {
                "variable": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "loss_pos + loss_neg",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_220": {
                "variable": {
                    "value": "hhhh",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "hhh",
                    "type": "Name",
                    "possible_values": [
                        [
                            "label * distance",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_222": {
                "variable": {
                    "value": "constractive_loss",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "(1 - label) * torch.pow(distance, 2) + label * torch.pow(torch.clamp(self.margin - distance, min=0.0), 2)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "transpose_240": {
                "variable": {
                    "value": "out_t0_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "out_t0.view(c, h * w)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_241": {
                "variable": {
                    "value": "out_t1_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "out_t1.view(c, h * w)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_242": {
                "variable": {
                    "value": "gt_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(ground_truth.data.cpu().numpy(), np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_266": {
                "input": {
                    "value": "constrainted_matrix",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.select_param()",
                            "Call"
                        ],
                        [
                            "self.select_param()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "t_267": {
                "variable": {
                    "value": "matrix_t",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "matrix_",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(torch.squeeze(constrainted_matrix, dim=2), dim=2)",
                            "Call"
                        ]
                    ]
                }
            },
            "mm_268": {
                "variable": {
                    "value": "matrixs",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "matrix_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.t(matrix_)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "matrix_",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(torch.squeeze(constrainted_matrix, dim=2), dim=2)",
                            "Call"
                        ]
                    ]
                }
            },
            "trace_269": {
                "variable": {
                    "value": "trace_",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.mm(matrixs, torch.inverse(matrixs))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "logdet_270": {
                "variable": {
                    "value": "log_det",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "matrixs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.mm(matrix_t, matrix_)",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_292": {
                "input": {
                    "value": "constrainted_matrix",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.select_param()",
                            "Call"
                        ],
                        [
                            "self.select_param()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "t_293": {
                "variable": {
                    "value": "matrxi_t",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "matrxi_",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(torch.squeeze(constrainted_matrix, dim=2), dim=2)",
                            "Call"
                        ]
                    ]
                }
            },
            "pow_295": {
                "variable": {
                    "value": "regularizer",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "matrxi_contrainted",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(torch.mm(matrxi_t, matrxi_) - self.identity_matrix).view(self.dim ** 2)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_295": {
                "variable": {
                    "value": "regularizer",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "range_302": {
                "variable": {
                    "value": "self.t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "step": {
                    "value": "self.step",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_321": {
                "variable": {
                    "value": "bh_dist",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "hist1 * hist2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_321": {
                "variable": {
                    "value": "bh_dist",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "kl_div_330": {
                "variable": {
                    "value": "kl",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "hist1",
                    "type": "Name",
                    "possible_values": []
                },
                "target": {
                    "value": "hist2",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "range_338": {
                "variable": {
                    "value": "self.t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "step": {
                    "value": "self.step",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_356": {
                "variable": {
                    "value": "out_t0_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "feat_t0.view(c, h * w)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_357": {
                "variable": {
                    "value": "out_t1_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "feat_t1.view(c, h * w)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_365": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.various_distance(out_t0_rz, out_t1_rz)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pairwise_distance_207": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pairwise_distance_209": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                },
                "p": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cosine_similarity_211": {
                "variable": {
                    "value": "similarity",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "pairwise_distance_344": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cosine_similarity_346": {
                "variable": {
                    "value": "similarity",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "randn_375": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "randn_376": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "eye_377": {
                "n": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mm_269": {
                "input": {
                    "value": "matrixs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.mm(matrix_t, matrix_)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "torch.inverse(matrixs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_363": {
                "ndarray": {
                    "value": "neg_inds_np",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "from_numpy_368": {
                "ndarray": {
                    "value": "neg_dist_ls.data.cpu().numpy()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "inverse_269": {
                "input": {
                    "value": "matrixs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.mm(matrix_t, matrix_)",
                            "Call"
                        ]
                    ]
                }
            },
            "histc_369": {
                "input": {
                    "value": "pos_dist_ls_t",
                    "type": "Name",
                    "possible_values": []
                },
                "bins": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "min": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "max": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "histc_370": {
                "input": {
                    "value": "neg_dist_ls_t",
                    "type": "Name",
                    "possible_values": []
                },
                "bins": {
                    "value": "100",
                    "type": "Constant",
                    "possible_values": []
                },
                "min": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "max": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_22": {
                "input": {
                    "value": "dissimilar_pair",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.clamp(self.margin - distance - 0.3, min=0.0)",
                            "Call"
                        ],
                        [
                            "torch.clamp(self.margin - distance, min=0.0)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_40": {
                "input": {
                    "value": "dissimilar_pair",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.clamp(self.margin - distance - 0.3, min=0.0)",
                            "Call"
                        ],
                        [
                            "torch.clamp(self.margin - distance, min=0.0)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_222": {
                "input": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.pairwise_distance(out_vec_t0, out_vec_t1, p=2)",
                            "Call"
                        ],
                        [
                            "F.pairwise_distance(out_vec_t0, out_vec_t1, p=2)",
                            "Call"
                        ],
                        [
                            "F.pairwise_distance(out_vec_t0, out_vec_t1, p=2)",
                            "Call"
                        ],
                        [
                            "F.pairwise_distance(out_vec_t0, out_vec_t1, p=1)",
                            "Call"
                        ],
                        [
                            "1 - 2 * similarity / np.pi",
                            "BinOp"
                        ],
                        [
                            "self.various_distance(out_vec_t0, out_vec_t1)",
                            "Call"
                        ],
                        [
                            "F.pairwise_distance(out_vec_t0, out_vec_t1, p=2)",
                            "Call"
                        ],
                        [
                            "1 - 2 * similarity / np.pi",
                            "BinOp"
                        ],
                        [
                            "torch.squeeze(self.various_distance(out_t0_rz, out_t1_rz), dim=1)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pow_223": {
                "input": {
                    "value": "torch.clamp(self.margin - distance, min=0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_243": {
                "input": {
                    "value": "gt_tensor.view(1, h * w)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_254": {
                "ndarray": {
                    "value": "np.identity(self.dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_280": {
                "ndarray": {
                    "value": "np.identity(self.dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_294": {
                "input": {
                    "value": "matrxi_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.t(matrxi_)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "matrxi_",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.squeeze(torch.squeeze(constrainted_matrix, dim=2), dim=2)",
                            "Call"
                        ]
                    ]
                }
            },
            "clamp_223": {
                "input": {
                    "value": "self.margin - distance",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/files.py": {
        "torch": {
            "save_17": {
                "obj": {
                    "value": "state",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "Name",
                    "possible_values": [
                        [
                            "directory + filename",
                            "BinOp"
                        ],
                        [
                            "'checkpoint.pth.tar'",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        }
    },
    "model/siameseNet/attention.py": {
        "torch": {
            "Conv2d_26": {
                "variable": {
                    "value": "self.query_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "variable": {
                    "value": "self.key_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "variable": {
                    "value": "self.value_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_29": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Softmax_31": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "bmm_44": {
                "variable": {
                    "value": "energy",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_query",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.query_conv(x).view(m_batchsize, -1, width * height).permute(0, 2, 1)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "proj_key",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.key_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1).permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_48": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.value_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "attention.permute(0, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_62": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Softmax_63": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "bmm_75": {
                "variable": {
                    "value": "energy",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_query",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.query_conv(x).view(m_batchsize, -1, width * height).permute(0, 2, 1)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "proj_key",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.key_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1).permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_80": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "attention",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.softmax(energy)",
                            "Call"
                        ],
                        [
                            "self.softmax(energy_new)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "proj_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.value_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ],
                        [
                            "x.view(m_batchsize, C, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_29": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_62": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_76": {
                "input": {
                    "value": "energy",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.bmm(proj_query, proj_key)",
                            "Call"
                        ],
                        [
                            "torch.bmm(proj_query, proj_key)",
                            "Call"
                        ]
                    ]
                },
                "keepdim": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/siameseNet/d_aa.py": {
        "torch": {
            "Sequential_32": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=3, out_channels=64, kernel_size=3, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_40": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=64, out_channels=128, kernel_size=3, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_48": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=128, out_channels=256, kernel_size=3, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_58": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=256, out_channels=512, kernel_size=3, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_68": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=512, out_channels=512, kernel_size=3, dilation=2, padding=2)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_78": {
                "variable": {
                    "value": "self.conv5a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(512, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_82": {
                "variable": {
                    "value": "self.conv5c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(512, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "self.conv51",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(inter_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_91": {
                "variable": {
                    "value": "self.conv52",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(inter_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_95": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_96": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_98": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_104": {
                "variable": {
                    "value": "self.fc6_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=3, dilation=6, padding=6)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_109": {
                "variable": {
                    "value": "self.fc7_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=1024, out_channels=1024, kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_115": {
                "variable": {
                    "value": "self.fc6_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=3, dilation=12, padding=12)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_120": {
                "variable": {
                    "value": "self.fc7_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=1024, out_channels=1024, kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_126": {
                "variable": {
                    "value": "self.fc6_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=3, dilation=18, padding=18)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_131": {
                "variable": {
                    "value": "self.fc7_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=1024, out_channels=1024, kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_137": {
                "variable": {
                    "value": "self.fc6_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=512, out_channels=1024, kernel_size=3, dilation=24, padding=24)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_142": {
                "variable": {
                    "value": "self.fc7_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=1024, out_channels=1024, kernel_size=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_147": {
                "variable": {
                    "value": "self.embedding_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Softmax2d_181": {
                "variable": {
                    "value": "self.norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_37": {
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_42": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_44": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_45": {
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_50": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_51": {
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_52": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_55": {
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_59": {
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_60": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_62": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_64": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_65": {
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_70": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_72": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_74": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_78": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "512 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_80": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_82": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "512 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_84": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_88": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "512 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "512 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_90": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_91": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "512 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "512 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_93": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout2d_95": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_95": {
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_96": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_96": {
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_98": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_105": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_106": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_107": {
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_110": {
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_111": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_112": {
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_116": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_117": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_118": {
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_121": {
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_122": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_123": {
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_127": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "18",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "18",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_128": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_129": {
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_132": {
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_133": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_134": {
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_138": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_139": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_140": {
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_143": {
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_144": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_145": {
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/siameseNet/dares.py": {
        "torch": {
            "Sequential_59": {
                "variable": {
                    "value": "self.conv5a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_63": {
                "variable": {
                    "value": "self.conv5c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_69": {
                "variable": {
                    "value": "self.conv51",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(inter_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "self.conv52",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(inter_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_76": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_78": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_81": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softmax2d_113": {
                "variable": {
                    "value": "self.norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_59": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_61": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "in_channels": {
                    "value": "in_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_65": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_72": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "in_channels // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout2d_76": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_77": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_78": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_79": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_81": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_82": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/siameseNet/res.py": {
        "torch": {
            "Sequential_43": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softmax2d_67": {
                "variable": {
                    "value": "self.norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout2d_43": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/siameseNet/res50.py": {
        "torch": {
            "Conv2d_21": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_32": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_34": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_62": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_63": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_68": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dilation",
                            "Name"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_70": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_74": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_107": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "icol",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ocol",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_108": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "ocol",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_109": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ocol",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_110": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "ocol",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "icol",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_111": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_129": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_131": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_134": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_135": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "ceil_mode": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_141": {
                "variable": {
                    "value": "self.conv5a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(2048, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_145": {
                "variable": {
                    "value": "self.conv5c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(2048, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_151": {
                "variable": {
                    "value": "self.conv51",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(inter_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_154": {
                "variable": {
                    "value": "self.conv52",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(inter_channels, inter_channels, 3, padding=1, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_158": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_159": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_161": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Dropout2d(0.1, False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_162": {
                "variable": {
                    "value": "self.embedding_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_181": {
                "variable": {
                    "value": "downsample",
                    "type": "Name",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_193": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softmax2d_236": {
                "variable": {
                    "value": "self.norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_141": {
                "in_channels": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2048 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_143": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_145": {
                "in_channels": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2048 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_147": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_151": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2048 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2048 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_154": {
                "in_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2048 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "inter_channels",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2048 // 4",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_156": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout2d_158": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_158": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_159": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_159": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout2d_161": {
                "p": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_161": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_182": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_184": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model/siameseNet/resbase.py": {
        "torch": {}
    },
    "model/siameseNet/resnet.py": {
        "torch": {
            "Conv2d_21": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "previous_dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "previous_dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_77": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_80": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_144": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_147": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_148": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_170": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_171": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_184": {
                "variable": {
                    "value": "downsample",
                    "type": "Name",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_215": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_185": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "torch": {
            "transpose_38": {
                "variable": {
                    "value": "out_t0_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "output_t0.view(c, h * w)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_39": {
                "variable": {
                    "value": "out_t1_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "output_t1.view(c, h * w)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_42": {
                "variable": {
                    "value": "similar_distance_map_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.from_numpy(similar_distance_map[np.newaxis, np.newaxis, :])",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[256, 256]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_135": {
                "variable": {
                    "value": "val_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dates.Dataset('/dataset', '/dataset', '/dataset/test.txt', 'val', transform=True, transform_med=val_transform_det)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_139": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "the path to best model",
                    "type": "Constant",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pairwise_distance_27": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pairwise_distance_29": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                },
                "p": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_42": {
                "ndarray": {
                    "value": "similar_distance_map[np.newaxis, np.newaxis, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_57": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cosine_similarity_31": {
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "transpose_52": {
                "variable": {
                    "value": "out_t0_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "output_t0.view(c, h * w)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_53": {
                "variable": {
                    "value": "out_t1_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "output_t1.view(c, h * w)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_56": {
                "variable": {
                    "value": "similar_distance_map_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.from_numpy(similar_distance_map[np.newaxis, np.newaxis, :])",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[cfg.TRANSFROM_SCALES[1], cfg.TRANSFROM_SCALES[0]]",
                    "type": "List",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_160": {
                "variable": {
                    "value": "train_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dates.Dataset(cfg.TRAIN_DATA_PATH, cfg.TRAIN_LABEL_PATH, cfg.TRAIN_TXT_PATH, 'train', transform=True, transform_med=train_transform_det)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_165": {
                "variable": {
                    "value": "val_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_data",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dates.Dataset(cfg.VAL_DATA_PATH, cfg.VAL_LABEL_PATH, cfg.VAL_TXT_PATH, 'val', transform=True, transform_med=val_transform_det)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "cfg.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_204": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "cfg.INIT_LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "cfg.DECAY",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_distance_40": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pairwise_distance_42": {
                "variable": {
                    "value": "distance",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                },
                "p": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_56": {
                "ndarray": {
                    "value": "similar_distance_map[np.newaxis, np.newaxis, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "no_grad_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_175": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "cfg.TRAINED_BEST_PERFORMANCE_CKPT",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_179": {
                "variable": {
                    "value": "deeplab_pretrain_model",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "pretrain_deeplab_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(cfg.PRETRAIN_MODEL_PATH, 'vgg16.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "load_186": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "cfg.TRAINED_BEST_PERFORMANCE_CKPT",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cosine_similarity_44": {
                "x1": {
                    "value": "out_vec_t0",
                    "type": "Name",
                    "possible_values": []
                },
                "x2": {
                    "value": "out_vec_t1",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "save_254": {
                "obj": {
                    "value": "{'state_dict': model.state_dict()}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(ab_test_dir, 'model' + str(epoch) + '.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_260": {
                "obj": {
                    "value": "{'state_dict': model.state_dict()}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(ab_test_dir, 'model' + str(epoch) + '.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_246": {
                "obj": {
                    "value": "{'state_dict': model.state_dict()}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(ab_test_dir, 'model' + str(epoch) + '.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "utils/transforms.py": {
        "torch": {
            "from_numpy_55": {
                "variable": {
                    "value": "img",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "pic.transpose((2, 0, 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_66": {
                "variable": {
                    "value": "img",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(pic, np.int32, copy=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_tensor_108": {
                "obj": {
                    "value": "pic",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pic.mul(255).byte()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_62": {
                "ndarray": {
                    "value": "nppic",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.zeros([pic.channels, pic.height, pic.width], dtype=np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_68": {
                "variable": {
                    "value": "img",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(pic, np.int16, copy=False)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "utils/utils.py": {
        "torch": {
            "load_25": {
                "variable": {
                    "value": "state_dict",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "unsqueeze_231": {
                "variable": {
                    "value": "gt_e",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "label",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_232": {
                "variable": {
                    "value": "interp",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "gt_e",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.unsqueeze(label, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(size[0], size[1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_233": {
                "variable": {
                    "value": "gt_rz",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "interp",
                    "type": "Name",
                    "possible_values": [
                        [
                            "nn.functional.interpolate(gt_e, (size[0], size[1]), mode='bilinear', align_corners=True)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}