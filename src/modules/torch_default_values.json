{
    "torch.Tensor": {
        "short name": "Tensor",
        "parameters": {}
    },
    "torch.torch.dtype": {
        "short name": "dtype",
        "parameters": {}
    },
    "torch.torch.device": {
        "short name": "device",
        "parameters": {
            "type": null,
            "index": null
        }
    },
    "torch.torch.layout": {
        "short name": "layout",
        "parameters": {}
    },
    "torch.torch.memory_format": {
        "short name": "memory_format",
        "parameters": {}
    },
    "torch.autograd.Function": {
        "short name": "Function",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.autograd.profiler.profile": {
        "short name": "profile",
        "parameters": {
            "enabled": "True",
            "use_cuda": "False",
            "record_shapes": "False",
            "with_flops": "False",
            "profile_memory": "False",
            "with_stack": "False",
            "with_modules": "False",
            "use_kineto": "False",
            "use_cpu": "True"
        }
    },
    "torch.autograd.profiler.emit_nvtx": {
        "short name": "emit_nvtx",
        "parameters": {
            "enabled": "True",
            "record_shapes": "False"
        }
    },
    "torch.autograd.detect_anomaly": {
        "short name": "detect_anomaly",
        "parameters": {}
    },
    "torch.autograd.set_detect_anomaly": {
        "short name": "set_detect_anomaly",
        "parameters": {
            "mode": null
        }
    },
    "torch.autograd.graph.saved_tensors_hooks": {
        "short name": "saved_tensors_hooks",
        "parameters": {
            "pack_hook": null,
            "unpack_hook": null
        }
    },
    "torch.autograd.graph.save_on_cpu": {
        "short name": "save_on_cpu",
        "parameters": {
            "pin_memory": "False"
        }
    },
    "torch.autocast": {
        "short name": "autocast",
        "parameters": {
            "device_type": null,
            "dtype": "None",
            "enabled": "True",
            "cache_enabled": "None"
        }
    },
    "torch.cuda.amp.autocast": {
        "short name": "autocast",
        "parameters": {
            "enabled": "True",
            "dtype": "torch.float16",
            "cache_enabled": "True"
        }
    },
    "torch.cuda.amp.GradScaler": {
        "short name": "GradScaler",
        "parameters": {
            "init_scale": "65536.0",
            "growth_factor": "2.0",
            "backoff_factor": "0.5",
            "growth_interval": "2000",
            "enabled": "True"
        }
    },
    "torch.distributed.Backend": {
        "short name": "Backend",
        "parameters": {
            "name": null
        }
    },
    "torch.distributed.Store": {
        "short name": "Store",
        "parameters": {}
    },
    "torch.distributed.TCPStore": {
        "short name": "TCPStore",
        "parameters": {}
    },
    "torch.distributed.HashStore": {
        "short name": "HashStore",
        "parameters": {}
    },
    "torch.distributed.FileStore": {
        "short name": "FileStore",
        "parameters": {}
    },
    "torch.distributed.PrefixStore": {
        "short name": "PrefixStore",
        "parameters": {}
    },
    "torch.distributed.ReduceOp": {
        "short name": "ReduceOp",
        "parameters": {}
    },
    "torch.distributed.reduce_op": {
        "short name": "reduce_op",
        "parameters": {}
    },
    "torch.distributed.algorithms.Join": {
        "short name": "Join",
        "parameters": {
            "joinables": null,
            "enable": "True",
            "throw_on_early_termination": "False",
            "**kwargs": null
        }
    },
    "torch.distributed.algorithms.Joinable": {
        "short name": "Joinable",
        "parameters": {}
    },
    "torch.distributed.algorithms.JoinHook": {
        "short name": "JoinHook",
        "parameters": {}
    },
    "torch.distributed.fsdp.FullyShardedDataParallel": {
        "short name": "FullyShardedDataParallel",
        "parameters": {
            "module": null,
            "process_group": "None",
            "cpu_offload": "None",
            "fsdp_auto_wrap_policy": "None",
            "backward_prefetch": "None"
        }
    },
    "torch.distributed.optim.DistributedOptimizer": {
        "short name": "DistributedOptimizer",
        "parameters": {
            "optimizer_class": null,
            "params_rref": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.distributed.optim.PostLocalSGDOptimizer": {
        "short name": "PostLocalSGDOptimizer",
        "parameters": {
            "optim": null,
            "averager": null
        }
    },
    "torch.distributed.optim.ZeroRedundancyOptimizer": {
        "short name": "ZeroRedundancyOptimizer",
        "parameters": {
            "params": null,
            "optimizer_class": null,
            "process_group": "None",
            "parameters_as_bucket_view": "False",
            "overlap_with_ddp": "False",
            "**defaults": null
        }
    },
    "torch.distributions.distribution.Distribution": {
        "short name": "Distribution",
        "parameters": {
            "batch_shape": "torch.Size([])",
            "event_shape": "torch.Size([])",
            "validate_args": "None"
        }
    },
    "torch.distributions.exp_family.ExponentialFamily": {
        "short name": "ExponentialFamily",
        "parameters": {
            "batch_shape": "torch.Size([])",
            "event_shape": "torch.Size([])",
            "validate_args": "None"
        }
    },
    "torch.distributions.bernoulli.Bernoulli": {
        "short name": "Bernoulli",
        "parameters": {
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.beta.Beta": {
        "short name": "Beta",
        "parameters": {
            "concentration1": null,
            "concentration0": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.binomial.Binomial": {
        "short name": "Binomial",
        "parameters": {
            "total_count": "1",
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.categorical.Categorical": {
        "short name": "Categorical",
        "parameters": {
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.cauchy.Cauchy": {
        "short name": "Cauchy",
        "parameters": {
            "loc": null,
            "scale": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.chi2.Chi2": {
        "short name": "Chi2",
        "parameters": {
            "df": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.continuous_bernoulli.ContinuousBernoulli": {
        "short name": "ContinuousBernoulli",
        "parameters": {
            "probs": "None",
            "logits": "None",
            "lims": "(0.499, 0.501)",
            "validate_args": "None"
        }
    },
    "torch.distributions.dirichlet.Dirichlet": {
        "short name": "Dirichlet",
        "parameters": {
            "concentration": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.exponential.Exponential": {
        "short name": "Exponential",
        "parameters": {
            "rate": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.fishersnedecor.FisherSnedecor": {
        "short name": "FisherSnedecor",
        "parameters": {
            "df1": null,
            "df2": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.gamma.Gamma": {
        "short name": "Gamma",
        "parameters": {
            "concentration": null,
            "rate": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.geometric.Geometric": {
        "short name": "Geometric",
        "parameters": {
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.gumbel.Gumbel": {
        "short name": "Gumbel",
        "parameters": {
            "loc": null,
            "scale": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.half_cauchy.HalfCauchy": {
        "short name": "HalfCauchy",
        "parameters": {
            "scale": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.half_normal.HalfNormal": {
        "short name": "HalfNormal",
        "parameters": {
            "scale": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.independent.Independent": {
        "short name": "Independent",
        "parameters": {
            "base_distribution": null,
            "reinterpreted_batch_ndims": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.kumaraswamy.Kumaraswamy": {
        "short name": "Kumaraswamy",
        "parameters": {
            "concentration1": null,
            "concentration0": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.lkj_cholesky.LKJCholesky": {
        "short name": "LKJCholesky",
        "parameters": {
            "dim": null,
            "concentration": "1.0",
            "validate_args": "None"
        }
    },
    "torch.distributions.laplace.Laplace": {
        "short name": "Laplace",
        "parameters": {
            "loc": null,
            "scale": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.log_normal.LogNormal": {
        "short name": "LogNormal",
        "parameters": {
            "loc": null,
            "scale": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal": {
        "short name": "LowRankMultivariateNormal",
        "parameters": {
            "loc": null,
            "cov_factor": null,
            "cov_diag": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.mixture_same_family.MixtureSameFamily": {
        "short name": "MixtureSameFamily",
        "parameters": {
            "mixture_distribution": null,
            "component_distribution": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.multinomial.Multinomial": {
        "short name": "Multinomial",
        "parameters": {
            "total_count": "1",
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.multivariate_normal.MultivariateNormal": {
        "short name": "MultivariateNormal",
        "parameters": {
            "loc": null,
            "covariance_matrix": "None",
            "precision_matrix": "None",
            "scale_tril": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.negative_binomial.NegativeBinomial": {
        "short name": "NegativeBinomial",
        "parameters": {
            "total_count": null,
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.normal.Normal": {
        "short name": "Normal",
        "parameters": {
            "loc": null,
            "scale": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.one_hot_categorical.OneHotCategorical": {
        "short name": "OneHotCategorical",
        "parameters": {
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.pareto.Pareto": {
        "short name": "Pareto",
        "parameters": {
            "scale": null,
            "alpha": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.poisson.Poisson": {
        "short name": "Poisson",
        "parameters": {
            "rate": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.relaxed_bernoulli.RelaxedBernoulli": {
        "short name": "RelaxedBernoulli",
        "parameters": {
            "temperature": null,
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli": {
        "short name": "LogitRelaxedBernoulli",
        "parameters": {
            "temperature": null,
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical": {
        "short name": "RelaxedOneHotCategorical",
        "parameters": {
            "temperature": null,
            "probs": "None",
            "logits": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.studentT.StudentT": {
        "short name": "StudentT",
        "parameters": {
            "df": null,
            "loc": "0.0",
            "scale": "1.0",
            "validate_args": "None"
        }
    },
    "torch.distributions.transformed_distribution.TransformedDistribution": {
        "short name": "TransformedDistribution",
        "parameters": {
            "base_distribution": null,
            "transforms": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.uniform.Uniform": {
        "short name": "Uniform",
        "parameters": {
            "low": null,
            "high": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.von_mises.VonMises": {
        "short name": "VonMises",
        "parameters": {
            "loc": null,
            "concentration": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.weibull.Weibull": {
        "short name": "Weibull",
        "parameters": {
            "scale": null,
            "concentration": null,
            "validate_args": "None"
        }
    },
    "torch.distributions.wishart.Wishart": {
        "short name": "Wishart",
        "parameters": {
            "df": null,
            "covariance_matrix": "None",
            "precision_matrix": "None",
            "scale_tril": "None",
            "validate_args": "None"
        }
    },
    "torch.distributions.transforms.AbsTransform": {
        "short name": "AbsTransform",
        "parameters": {
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.AffineTransform": {
        "short name": "AffineTransform",
        "parameters": {
            "loc": null,
            "scale": null,
            "event_dim": "0",
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.ComposeTransform": {
        "short name": "ComposeTransform",
        "parameters": {
            "parts": null,
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.CorrCholeskyTransform": {
        "short name": "CorrCholeskyTransform",
        "parameters": {
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.ExpTransform": {
        "short name": "ExpTransform",
        "parameters": {
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.IndependentTransform": {
        "short name": "IndependentTransform",
        "parameters": {
            "base_transform": null,
            "reinterpreted_batch_ndims": null,
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.LowerCholeskyTransform": {
        "short name": "LowerCholeskyTransform",
        "parameters": {
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.PowerTransform": {
        "short name": "PowerTransform",
        "parameters": {
            "exponent": null,
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.ReshapeTransform": {
        "short name": "ReshapeTransform",
        "parameters": {
            "in_shape": null,
            "out_shape": null,
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.SigmoidTransform": {
        "short name": "SigmoidTransform",
        "parameters": {
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.TanhTransform": {
        "short name": "TanhTransform",
        "parameters": {
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.SoftmaxTransform": {
        "short name": "SoftmaxTransform",
        "parameters": {
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.StackTransform": {
        "short name": "StackTransform",
        "parameters": {
            "tseq": null,
            "dim": "0",
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.StickBreakingTransform": {
        "short name": "StickBreakingTransform",
        "parameters": {
            "cache_size": "0"
        }
    },
    "torch.distributions.transforms.Transform": {
        "short name": "Transform",
        "parameters": {
            "cache_size": "0"
        }
    },
    "torch.distributions.constraints.Constraint": {
        "short name": "Constraint",
        "parameters": {}
    },
    "torch.distributions.constraint_registry.ConstraintRegistry": {
        "short name": "ConstraintRegistry",
        "parameters": {}
    },
    "torch.futures.Future": {
        "short name": "Future",
        "parameters": {
            "devices": "None"
        }
    },
    "torch.fx.GraphModule": {
        "short name": "GraphModule",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.fx.Graph": {
        "short name": "Graph",
        "parameters": {
            "owning_module": "None",
            "tracer_cls": "None"
        }
    },
    "torch.fx.Node": {
        "short name": "Node",
        "parameters": {
            "graph": null,
            "name": null,
            "op": null,
            "target": null,
            "args": null,
            "kwargs": null,
            "return_type": "None"
        }
    },
    "torch.fx.Tracer": {
        "short name": "Tracer",
        "parameters": {
            "autowrap_modules": "(math)",
            "autowrap_functions": "()"
        }
    },
    "torch.fx.Proxy": {
        "short name": "Proxy",
        "parameters": {
            "node": null,
            "tracer": "None"
        }
    },
    "torch.fx.Interpreter": {
        "short name": "Interpreter",
        "parameters": {
            "module": null,
            "garbage_collect_values": "True"
        }
    },
    "torch.fx.Transformer": {
        "short name": "Transformer",
        "parameters": {
            "module": null
        }
    },
    "torch.monitor.Aggregation": {
        "short name": "Aggregation",
        "parameters": {}
    },
    "torch.monitor.Stat": {
        "short name": "Stat",
        "parameters": {}
    },
    "torch.monitor.data_value_t": {
        "short name": "data_value_t",
        "parameters": {}
    },
    "torch.monitor.Event": {
        "short name": "Event",
        "parameters": {}
    },
    "torch.monitor.EventHandlerHandle": {
        "short name": "EventHandlerHandle",
        "parameters": {}
    },
    "torch.monitor.TensorboardEventHandler": {
        "short name": "TensorboardEventHandler",
        "parameters": {
            "writer": null
        }
    },
    "torch.package.PackagingError": {
        "short name": "PackagingError",
        "parameters": {
            "dependency_graph": null
        }
    },
    "torch.package.EmptyMatchError": {
        "short name": "EmptyMatchError",
        "parameters": {}
    },
    "torch.package.PackageExporter": {
        "short name": "PackageExporter",
        "parameters": {
            "f": null,
            "importer": "<torch.package.importer._SysImporter object>"
        }
    },
    "torch.package.PackageImporter": {
        "short name": "PackageImporter",
        "parameters": {
            "file_or_buffer": null,
            "module_allowed": "<function PackageImporter.<lambda>>"
        }
    },
    "torch.package.Directory": {
        "short name": "Directory",
        "parameters": {
            "name": null,
            "is_dir": null
        }
    },
    "torch.profiler._KinetoProfile": {
        "short name": "_KinetoProfile",
        "parameters": {
            "activities": "None",
            "record_shapes": "False",
            "profile_memory": "False",
            "with_stack": "False",
            "with_flops": "False",
            "with_modules": "False"
        }
    },
    "torch.profiler.profile": {
        "short name": "profile",
        "parameters": {
            "activities": "None",
            "schedule": "None",
            "on_trace_ready": "None",
            "record_shapes": "False",
            "profile_memory": "False",
            "with_stack": "False",
            "with_flops": "False",
            "with_modules": "False",
            "use_cuda": "None"
        }
    },
    "torch.profiler.ProfilerAction": {
        "short name": "ProfilerAction",
        "parameters": {
            "value": null
        }
    },
    "torch.profiler.ProfilerActivity": {
        "short name": "ProfilerActivity",
        "parameters": {}
    },
    "torch.optim.Optimizer": {
        "short name": "Optimizer",
        "parameters": {
            "params": null,
            "defaults": null
        }
    },
    "torch.distributed.GradBucket": {
        "short name": "GradBucket",
        "parameters": {}
    },
    "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState": {
        "short name": "PowerSGDState",
        "parameters": {
            "process_group": null,
            "matrix_approximation_rank": "1",
            "start_powerSGD_iter": "1000",
            "min_compression_rate": "2",
            "use_error_feedback": "True",
            "warm_start": "True",
            "orthogonalization_epsilon": "0",
            "random_seed": "0",
            "compression_stats_logging_frequency": "10000"
        }
    },
    "torch.distributed.pipeline.sync.Pipe": {
        "short name": "Pipe",
        "parameters": {
            "module": null,
            "chunks": "1",
            "checkpoint": "'except_last'",
            "deferred_batch_norm": "False"
        }
    },
    "torch.distributed.pipeline.sync.skip.skippable.stash": {
        "short name": "stash",
        "parameters": {
            "name": null,
            "tensor": null
        }
    },
    "torch.distributed.pipeline.sync.skip.skippable.pop": {
        "short name": "pop",
        "parameters": {
            "name": null
        }
    },
    "torch.distributed.rpc.WorkerInfo": {
        "short name": "WorkerInfo",
        "parameters": {}
    },
    "torch.distributed.rpc.BackendType": {
        "short name": "BackendType",
        "parameters": {
            "value": null
        }
    },
    "torch.distributed.rpc.RpcBackendOptions": {
        "short name": "RpcBackendOptions",
        "parameters": {}
    },
    "torch.distributed.rpc.TensorPipeRpcBackendOptions": {
        "short name": "TensorPipeRpcBackendOptions",
        "parameters": {
            "num_worker_threads": "16",
            "rpc_timeout": "60.0",
            "init_method": "'env://'",
            "device_maps": "None",
            "devices": "None",
            "_transports": "None",
            "_channels": "None"
        }
    },
    "torch.distributed.rpc.RRef": {
        "short name": "RRef",
        "parameters": {}
    },
    "torch.distributed.nn.api.remote_module.RemoteModule": {
        "short name": "RemoteModule",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.distributed.autograd.context": {
        "short name": "context",
        "parameters": {}
    },
    "torch.DoubleStorage": {
        "short name": "DoubleStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.FloatStorage": {
        "short name": "FloatStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.HalfStorage": {
        "short name": "HalfStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.LongStorage": {
        "short name": "LongStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.IntStorage": {
        "short name": "IntStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.ShortStorage": {
        "short name": "ShortStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.CharStorage": {
        "short name": "CharStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.ByteStorage": {
        "short name": "ByteStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.BoolStorage": {
        "short name": "BoolStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.BFloat16Storage": {
        "short name": "BFloat16Storage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.ComplexDoubleStorage": {
        "short name": "ComplexDoubleStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.ComplexFloatStorage": {
        "short name": "ComplexFloatStorage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.QUInt8Storage": {
        "short name": "QUInt8Storage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.QInt8Storage": {
        "short name": "QInt8Storage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.QInt32Storage": {
        "short name": "QInt32Storage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.QUInt4x2Storage": {
        "short name": "QUInt4x2Storage",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.utils.benchmark.Timer": {
        "short name": "Timer",
        "parameters": {
            "stmt": "'pass'",
            "setup": "'pass'",
            "global_setup": "''",
            "timer": "<built-in function perf_counter>",
            "globals": "None",
            "label": "None",
            "sub_label": "None",
            "description": "None",
            "env": "None",
            "num_threads": "1",
            "language": "<Language.PYTHON: 0>"
        }
    },
    "torch.utils.benchmark.Measurement": {
        "short name": "Measurement",
        "parameters": {
            "number_per_run": null,
            "raw_times": null,
            "task_spec": null,
            "metadata": "None"
        }
    },
    "torch.utils.benchmark.CallgrindStats": {
        "short name": "CallgrindStats",
        "parameters": {
            "task_spec": null,
            "number_per_run": null,
            "built_with_debug_symbols": null,
            "baseline_inclusive_stats": null,
            "baseline_exclusive_stats": null,
            "stmt_inclusive_stats": null,
            "stmt_exclusive_stats": null,
            "stmt_callgrind_out": null
        }
    },
    "torch.utils.benchmark.FunctionCounts": {
        "short name": "FunctionCounts",
        "parameters": {
            "_data": null,
            "inclusive": null,
            "truncate_rows": "True",
            "_linewidth": "None"
        }
    },
    "torch.utils.data.DataLoader": {
        "short name": "DataLoader",
        "parameters": {
            "dataset": null,
            "batch_size": "1",
            "shuffle": "False",
            "sampler": "None",
            "batch_sampler": "None",
            "num_workers": "0",
            "collate_fn": "None",
            "pin_memory": "False",
            "drop_last": "False",
            "timeout": "0",
            "worker_init_fn": "None",
            "multiprocessing_context": "None",
            "generator": "None",
            "prefetch_factor": "2",
            "persistent_workers": "False"
        }
    },
    "torch.utils.data.Dataset": {
        "short name": "Dataset",
        "parameters": {
            "*args": null,
            "**kwds": null
        }
    },
    "torch.utils.data.IterableDataset": {
        "short name": "IterableDataset",
        "parameters": {
            "*args": null,
            "**kwds": null
        }
    },
    "torch.utils.data.TensorDataset": {
        "short name": "TensorDataset",
        "parameters": {
            "*tensors": null
        }
    },
    "torch.utils.data.ConcatDataset": {
        "short name": "ConcatDataset",
        "parameters": {
            "datasets": null
        }
    },
    "torch.utils.data.ChainDataset": {
        "short name": "ChainDataset",
        "parameters": {
            "datasets": null
        }
    },
    "torch.utils.data.Subset": {
        "short name": "Subset",
        "parameters": {
            "dataset": null,
            "indices": null
        }
    },
    "torch.utils.data.Sampler": {
        "short name": "Sampler",
        "parameters": {
            "data_source": null
        }
    },
    "torch.utils.data.SequentialSampler": {
        "short name": "SequentialSampler",
        "parameters": {
            "data_source": null
        }
    },
    "torch.utils.data.RandomSampler": {
        "short name": "RandomSampler",
        "parameters": {
            "data_source": null,
            "replacement": "False",
            "num_samples": "None",
            "generator": "None"
        }
    },
    "torch.utils.data.SubsetRandomSampler": {
        "short name": "SubsetRandomSampler",
        "parameters": {
            "indices": null,
            "generator": "None"
        }
    },
    "torch.utils.data.WeightedRandomSampler": {
        "short name": "WeightedRandomSampler",
        "parameters": {
            "weights": null,
            "num_samples": null,
            "replacement": "True",
            "generator": "None"
        }
    },
    "torch.utils.data.BatchSampler": {
        "short name": "BatchSampler",
        "parameters": {
            "sampler": null,
            "batch_size": null,
            "drop_last": null
        }
    },
    "torch.utils.data.distributed.DistributedSampler": {
        "short name": "DistributedSampler",
        "parameters": {
            "dataset": null,
            "num_replicas": "None",
            "rank": "None",
            "shuffle": "True",
            "seed": "0",
            "drop_last": "False"
        }
    },
    "torch.utils.tensorboard.writer.SummaryWriter": {
        "short name": "SummaryWriter",
        "parameters": {
            "log_dir": "None",
            "comment": "''",
            "purge_step": "None",
            "max_queue": "10",
            "flush_secs": "120",
            "filename_suffix": "''"
        }
    },
    "torch.torch.finfo": {
        "short name": "finfo",
        "parameters": {}
    },
    "torch.torch.iinfo": {
        "short name": "iinfo",
        "parameters": {}
    },
    "torch.Generator": {
        "short name": "Generator",
        "parameters": {
            "device": "'cpu'"
        }
    },
    "torch.quasirandom.SobolEngine": {
        "short name": "SobolEngine",
        "parameters": {
            "dimension": null,
            "scramble": "False",
            "seed": "None"
        }
    },
    "torch.no_grad": {
        "short name": "no_grad",
        "parameters": {}
    },
    "torch.enable_grad": {
        "short name": "enable_grad",
        "parameters": {}
    },
    "torch.set_grad_enabled": {
        "short name": "set_grad_enabled",
        "parameters": {
            "mode": null
        }
    },
    "torch.inference_mode": {
        "short name": "inference_mode",
        "parameters": {
            "mode": "True"
        }
    },
    "torch.nn.parameter.Parameter": {
        "short name": "Parameter",
        "parameters": {
            "data": "None",
            "requires_grad": "True"
        }
    },
    "torch.nn.parameter.UninitializedParameter": {
        "short name": "UninitializedParameter",
        "parameters": {
            "requires_grad": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.parameter.UninitializedBuffer": {
        "short name": "UninitializedBuffer",
        "parameters": {
            "requires_grad": "False",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.Module": {
        "short name": "Module",
        "parameters": {}
    },
    "torch.nn.Sequential": {
        "short name": "Sequential",
        "parameters": {
            "*args": null
        }
    },
    "torch.nn.ModuleList": {
        "short name": "ModuleList",
        "parameters": {
            "modules": "None"
        }
    },
    "torch.nn.ModuleDict": {
        "short name": "ModuleDict",
        "parameters": {
            "modules": "None"
        }
    },
    "torch.nn.ParameterList": {
        "short name": "ParameterList",
        "parameters": {
            "parameters": "None"
        }
    },
    "torch.nn.ParameterDict": {
        "short name": "ParameterDict",
        "parameters": {
            "parameters": "None"
        }
    },
    "torch.nn.Conv1d": {
        "short name": "Conv1d",
        "parameters": {
            "in_channels": null,
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "dilation": "1",
            "groups": "1",
            "bias": "True",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.Conv2d": {
        "short name": "Conv2d",
        "parameters": {
            "in_channels": null,
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "dilation": "1",
            "groups": "1",
            "bias": "True",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.Conv3d": {
        "short name": "Conv3d",
        "parameters": {
            "in_channels": null,
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "dilation": "1",
            "groups": "1",
            "bias": "True",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.ConvTranspose1d": {
        "short name": "ConvTranspose1d",
        "parameters": {
            "in_channels": null,
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "output_padding": "0",
            "groups": "1",
            "bias": "True",
            "dilation": "1",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.ConvTranspose2d": {
        "short name": "ConvTranspose2d",
        "parameters": {
            "in_channels": null,
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "output_padding": "0",
            "groups": "1",
            "bias": "True",
            "dilation": "1",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.ConvTranspose3d": {
        "short name": "ConvTranspose3d",
        "parameters": {
            "in_channels": null,
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "output_padding": "0",
            "groups": "1",
            "bias": "True",
            "dilation": "1",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyConv1d": {
        "short name": "LazyConv1d",
        "parameters": {
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "dilation": "1",
            "groups": "1",
            "bias": "True",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyConv2d": {
        "short name": "LazyConv2d",
        "parameters": {
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "dilation": "1",
            "groups": "1",
            "bias": "True",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyConv3d": {
        "short name": "LazyConv3d",
        "parameters": {
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "dilation": "1",
            "groups": "1",
            "bias": "True",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyConvTranspose1d": {
        "short name": "LazyConvTranspose1d",
        "parameters": {
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "output_padding": "0",
            "groups": "1",
            "bias": "True",
            "dilation": "1",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyConvTranspose2d": {
        "short name": "LazyConvTranspose2d",
        "parameters": {
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "output_padding": "0",
            "groups": "1",
            "bias": "True",
            "dilation": "1",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyConvTranspose3d": {
        "short name": "LazyConvTranspose3d",
        "parameters": {
            "out_channels": null,
            "kernel_size": null,
            "stride": "1",
            "padding": "0",
            "output_padding": "0",
            "groups": "1",
            "bias": "True",
            "dilation": "1",
            "padding_mode": "'zeros'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.Unfold": {
        "short name": "Unfold",
        "parameters": {
            "kernel_size": null,
            "dilation": "1",
            "padding": "0",
            "stride": "1"
        }
    },
    "torch.nn.Fold": {
        "short name": "Fold",
        "parameters": {
            "output_size": null,
            "kernel_size": null,
            "dilation": "1",
            "padding": "0",
            "stride": "1"
        }
    },
    "torch.nn.MaxPool1d": {
        "short name": "MaxPool1d",
        "parameters": {
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "dilation": "1",
            "return_indices": "False",
            "ceil_mode": "False"
        }
    },
    "torch.nn.MaxPool2d": {
        "short name": "MaxPool2d",
        "parameters": {
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "dilation": "1",
            "return_indices": "False",
            "ceil_mode": "False"
        }
    },
    "torch.nn.MaxPool3d": {
        "short name": "MaxPool3d",
        "parameters": {
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "dilation": "1",
            "return_indices": "False",
            "ceil_mode": "False"
        }
    },
    "torch.nn.MaxUnpool1d": {
        "short name": "MaxUnpool1d",
        "parameters": {
            "kernel_size": null,
            "stride": "None",
            "padding": "0"
        }
    },
    "torch.nn.MaxUnpool2d": {
        "short name": "MaxUnpool2d",
        "parameters": {
            "kernel_size": null,
            "stride": "None",
            "padding": "0"
        }
    },
    "torch.nn.MaxUnpool3d": {
        "short name": "MaxUnpool3d",
        "parameters": {
            "kernel_size": null,
            "stride": "None",
            "padding": "0"
        }
    },
    "torch.nn.AvgPool1d": {
        "short name": "AvgPool1d",
        "parameters": {
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "ceil_mode": "False",
            "count_include_pad": "True"
        }
    },
    "torch.nn.AvgPool2d": {
        "short name": "AvgPool2d",
        "parameters": {
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "ceil_mode": "False",
            "count_include_pad": "True",
            "divisor_override": "None"
        }
    },
    "torch.nn.AvgPool3d": {
        "short name": "AvgPool3d",
        "parameters": {
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "ceil_mode": "False",
            "count_include_pad": "True",
            "divisor_override": "None"
        }
    },
    "torch.nn.FractionalMaxPool2d": {
        "short name": "FractionalMaxPool2d",
        "parameters": {
            "kernel_size": null,
            "output_size": "None",
            "output_ratio": "None",
            "return_indices": "False",
            "_random_samples": "None"
        }
    },
    "torch.nn.FractionalMaxPool3d": {
        "short name": "FractionalMaxPool3d",
        "parameters": {
            "kernel_size": null,
            "output_size": "None",
            "output_ratio": "None",
            "return_indices": "False",
            "_random_samples": "None"
        }
    },
    "torch.nn.LPPool1d": {
        "short name": "LPPool1d",
        "parameters": {
            "norm_type": null,
            "kernel_size": null,
            "stride": "None",
            "ceil_mode": "False"
        }
    },
    "torch.nn.LPPool2d": {
        "short name": "LPPool2d",
        "parameters": {
            "norm_type": null,
            "kernel_size": null,
            "stride": "None",
            "ceil_mode": "False"
        }
    },
    "torch.nn.AdaptiveMaxPool1d": {
        "short name": "AdaptiveMaxPool1d",
        "parameters": {
            "output_size": null,
            "return_indices": "False"
        }
    },
    "torch.nn.AdaptiveMaxPool2d": {
        "short name": "AdaptiveMaxPool2d",
        "parameters": {
            "output_size": null,
            "return_indices": "False"
        }
    },
    "torch.nn.AdaptiveMaxPool3d": {
        "short name": "AdaptiveMaxPool3d",
        "parameters": {
            "output_size": null,
            "return_indices": "False"
        }
    },
    "torch.nn.AdaptiveAvgPool1d": {
        "short name": "AdaptiveAvgPool1d",
        "parameters": {
            "output_size": null
        }
    },
    "torch.nn.AdaptiveAvgPool2d": {
        "short name": "AdaptiveAvgPool2d",
        "parameters": {
            "output_size": null
        }
    },
    "torch.nn.AdaptiveAvgPool3d": {
        "short name": "AdaptiveAvgPool3d",
        "parameters": {
            "output_size": null
        }
    },
    "torch.nn.ReflectionPad1d": {
        "short name": "ReflectionPad1d",
        "parameters": {
            "padding": null
        }
    },
    "torch.nn.ReflectionPad2d": {
        "short name": "ReflectionPad2d",
        "parameters": {
            "padding": null
        }
    },
    "torch.nn.ReflectionPad3d": {
        "short name": "ReflectionPad3d",
        "parameters": {
            "padding": null
        }
    },
    "torch.nn.ReplicationPad1d": {
        "short name": "ReplicationPad1d",
        "parameters": {
            "padding": null
        }
    },
    "torch.nn.ReplicationPad2d": {
        "short name": "ReplicationPad2d",
        "parameters": {
            "padding": null
        }
    },
    "torch.nn.ReplicationPad3d": {
        "short name": "ReplicationPad3d",
        "parameters": {
            "padding": null
        }
    },
    "torch.nn.ZeroPad2d": {
        "short name": "ZeroPad2d",
        "parameters": {
            "padding": null
        }
    },
    "torch.nn.ConstantPad1d": {
        "short name": "ConstantPad1d",
        "parameters": {
            "padding": null,
            "value": null
        }
    },
    "torch.nn.ConstantPad2d": {
        "short name": "ConstantPad2d",
        "parameters": {
            "padding": null,
            "value": null
        }
    },
    "torch.nn.ConstantPad3d": {
        "short name": "ConstantPad3d",
        "parameters": {
            "padding": null,
            "value": null
        }
    },
    "torch.nn.ELU": {
        "short name": "ELU",
        "parameters": {
            "alpha": "1.0",
            "inplace": "False"
        }
    },
    "torch.nn.Hardshrink": {
        "short name": "Hardshrink",
        "parameters": {
            "lambd": "0.5"
        }
    },
    "torch.nn.Hardsigmoid": {
        "short name": "Hardsigmoid",
        "parameters": {
            "inplace": "False"
        }
    },
    "torch.nn.Hardtanh": {
        "short name": "Hardtanh",
        "parameters": {
            "min_val": "- 1.0",
            "max_val": "1.0",
            "inplace": "False",
            "min_value": "None",
            "max_value": "None"
        }
    },
    "torch.nn.Hardswish": {
        "short name": "Hardswish",
        "parameters": {
            "inplace": "False"
        }
    },
    "torch.nn.LeakyReLU": {
        "short name": "LeakyReLU",
        "parameters": {
            "negative_slope": "0.01",
            "inplace": "False"
        }
    },
    "torch.nn.LogSigmoid": {
        "short name": "LogSigmoid",
        "parameters": {}
    },
    "torch.nn.MultiheadAttention": {
        "short name": "MultiheadAttention",
        "parameters": {
            "embed_dim": null,
            "num_heads": null,
            "dropout": "0.0",
            "bias": "True",
            "add_bias_kv": "False",
            "add_zero_attn": "False",
            "kdim": "None",
            "vdim": "None",
            "batch_first": "False",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.PReLU": {
        "short name": "PReLU",
        "parameters": {
            "num_parameters": "1",
            "init": "0.25",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.ReLU": {
        "short name": "ReLU",
        "parameters": {
            "inplace": "False"
        }
    },
    "torch.nn.ReLU6": {
        "short name": "ReLU6",
        "parameters": {
            "inplace": "False"
        }
    },
    "torch.nn.RReLU": {
        "short name": "RReLU",
        "parameters": {
            "lower": "0.125",
            "upper": "0.3333333333333333",
            "inplace": "False"
        }
    },
    "torch.nn.SELU": {
        "short name": "SELU",
        "parameters": {
            "inplace": "False"
        }
    },
    "torch.nn.CELU": {
        "short name": "CELU",
        "parameters": {
            "alpha": "1.0",
            "inplace": "False"
        }
    },
    "torch.nn.GELU": {
        "short name": "GELU",
        "parameters": {}
    },
    "torch.nn.Sigmoid": {
        "short name": "Sigmoid",
        "parameters": {}
    },
    "torch.nn.SiLU": {
        "short name": "SiLU",
        "parameters": {
            "inplace": "False"
        }
    },
    "torch.nn.Mish": {
        "short name": "Mish",
        "parameters": {
            "inplace": "False"
        }
    },
    "torch.nn.Softplus": {
        "short name": "Softplus",
        "parameters": {
            "beta": "1",
            "threshold": "20"
        }
    },
    "torch.nn.Softshrink": {
        "short name": "Softshrink",
        "parameters": {
            "lambd": "0.5"
        }
    },
    "torch.nn.Softsign": {
        "short name": "Softsign",
        "parameters": {}
    },
    "torch.nn.Tanh": {
        "short name": "Tanh",
        "parameters": {}
    },
    "torch.nn.Tanhshrink": {
        "short name": "Tanhshrink",
        "parameters": {}
    },
    "torch.nn.Threshold": {
        "short name": "Threshold",
        "parameters": {
            "threshold": null,
            "value": null,
            "inplace": "False"
        }
    },
    "torch.nn.GLU": {
        "short name": "GLU",
        "parameters": {
            "dim": "- 1"
        }
    },
    "torch.nn.Softmin": {
        "short name": "Softmin",
        "parameters": {
            "dim": "None"
        }
    },
    "torch.nn.Softmax": {
        "short name": "Softmax",
        "parameters": {
            "dim": "None"
        }
    },
    "torch.nn.Softmax2d": {
        "short name": "Softmax2d",
        "parameters": {}
    },
    "torch.nn.LogSoftmax": {
        "short name": "LogSoftmax",
        "parameters": {
            "dim": "None"
        }
    },
    "torch.nn.AdaptiveLogSoftmaxWithLoss": {
        "short name": "AdaptiveLogSoftmaxWithLoss",
        "parameters": {
            "in_features": null,
            "n_classes": null,
            "cutoffs": null,
            "div_value": "4.0",
            "head_bias": "False",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.BatchNorm1d": {
        "short name": "BatchNorm1d",
        "parameters": {
            "num_features": null,
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.BatchNorm2d": {
        "short name": "BatchNorm2d",
        "parameters": {
            "num_features": null,
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.BatchNorm3d": {
        "short name": "BatchNorm3d",
        "parameters": {
            "num_features": null,
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyBatchNorm1d": {
        "short name": "LazyBatchNorm1d",
        "parameters": {
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyBatchNorm2d": {
        "short name": "LazyBatchNorm2d",
        "parameters": {
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyBatchNorm3d": {
        "short name": "LazyBatchNorm3d",
        "parameters": {
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.GroupNorm": {
        "short name": "GroupNorm",
        "parameters": {
            "num_groups": null,
            "num_channels": null,
            "eps": "1e-05",
            "affine": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.SyncBatchNorm": {
        "short name": "SyncBatchNorm",
        "parameters": {
            "num_features": null,
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "process_group": "None",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.InstanceNorm1d": {
        "short name": "InstanceNorm1d",
        "parameters": {
            "num_features": null,
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "False",
            "track_running_stats": "False",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.InstanceNorm2d": {
        "short name": "InstanceNorm2d",
        "parameters": {
            "num_features": null,
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "False",
            "track_running_stats": "False",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.InstanceNorm3d": {
        "short name": "InstanceNorm3d",
        "parameters": {
            "num_features": null,
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "False",
            "track_running_stats": "False",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyInstanceNorm1d": {
        "short name": "LazyInstanceNorm1d",
        "parameters": {
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyInstanceNorm2d": {
        "short name": "LazyInstanceNorm2d",
        "parameters": {
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyInstanceNorm3d": {
        "short name": "LazyInstanceNorm3d",
        "parameters": {
            "eps": "1e-05",
            "momentum": "0.1",
            "affine": "True",
            "track_running_stats": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LayerNorm": {
        "short name": "LayerNorm",
        "parameters": {
            "normalized_shape": null,
            "eps": "1e-05",
            "elementwise_affine": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LocalResponseNorm": {
        "short name": "LocalResponseNorm",
        "parameters": {
            "size": null,
            "alpha": "0.0001",
            "beta": "0.75",
            "k": "1.0"
        }
    },
    "torch.nn.RNNBase": {
        "short name": "RNNBase",
        "parameters": {
            "mode": null,
            "input_size": null,
            "hidden_size": null,
            "num_layers": "1",
            "bias": "True",
            "batch_first": "False",
            "dropout": "0.0",
            "bidirectional": "False",
            "proj_size": "0",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.RNN": {
        "short name": "RNN",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.LSTM": {
        "short name": "LSTM",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.GRU": {
        "short name": "GRU",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.RNNCell": {
        "short name": "RNNCell",
        "parameters": {
            "input_size": null,
            "hidden_size": null,
            "bias": "True",
            "nonlinearity": "'tanh'",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LSTMCell": {
        "short name": "LSTMCell",
        "parameters": {
            "input_size": null,
            "hidden_size": null,
            "bias": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.GRUCell": {
        "short name": "GRUCell",
        "parameters": {
            "input_size": null,
            "hidden_size": null,
            "bias": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.Transformer": {
        "short name": "Transformer",
        "parameters": {
            "d_model": "512",
            "nhead": "8",
            "num_encoder_layers": "6",
            "num_decoder_layers": "6",
            "dim_feedforward": "2048",
            "dropout": "0.1",
            "activation": "<function relu>",
            "custom_encoder": "None",
            "custom_decoder": "None",
            "layer_norm_eps": "1e-05",
            "batch_first": "False",
            "norm_first": "False",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.TransformerEncoder": {
        "short name": "TransformerEncoder",
        "parameters": {
            "encoder_layer": null,
            "num_layers": null,
            "norm": "None"
        }
    },
    "torch.nn.TransformerDecoder": {
        "short name": "TransformerDecoder",
        "parameters": {
            "decoder_layer": null,
            "num_layers": null,
            "norm": "None"
        }
    },
    "torch.nn.TransformerEncoderLayer": {
        "short name": "TransformerEncoderLayer",
        "parameters": {
            "d_model": null,
            "nhead": null,
            "dim_feedforward": "2048",
            "dropout": "0.1",
            "activation": "<function relu>",
            "layer_norm_eps": "1e-05",
            "batch_first": "False",
            "norm_first": "False",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.TransformerDecoderLayer": {
        "short name": "TransformerDecoderLayer",
        "parameters": {
            "d_model": null,
            "nhead": null,
            "dim_feedforward": "2048",
            "dropout": "0.1",
            "activation": "<function relu>",
            "layer_norm_eps": "1e-05",
            "batch_first": "False",
            "norm_first": "False",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.Identity": {
        "short name": "Identity",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.Linear": {
        "short name": "Linear",
        "parameters": {
            "in_features": null,
            "out_features": null,
            "bias": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.Bilinear": {
        "short name": "Bilinear",
        "parameters": {
            "in1_features": null,
            "in2_features": null,
            "out_features": null,
            "bias": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.LazyLinear": {
        "short name": "LazyLinear",
        "parameters": {
            "out_features": null,
            "bias": "True",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.Dropout": {
        "short name": "Dropout",
        "parameters": {
            "p": "0.5",
            "inplace": "False"
        }
    },
    "torch.nn.Dropout2d": {
        "short name": "Dropout2d",
        "parameters": {
            "p": "0.5",
            "inplace": "False"
        }
    },
    "torch.nn.Dropout3d": {
        "short name": "Dropout3d",
        "parameters": {
            "p": "0.5",
            "inplace": "False"
        }
    },
    "torch.nn.AlphaDropout": {
        "short name": "AlphaDropout",
        "parameters": {
            "p": "0.5",
            "inplace": "False"
        }
    },
    "torch.nn.FeatureAlphaDropout": {
        "short name": "FeatureAlphaDropout",
        "parameters": {
            "p": "0.5",
            "inplace": "False"
        }
    },
    "torch.nn.Embedding": {
        "short name": "Embedding",
        "parameters": {
            "num_embeddings": null,
            "embedding_dim": null,
            "padding_idx": "None",
            "max_norm": "None",
            "norm_type": "2.0",
            "scale_grad_by_freq": "False",
            "sparse": "False",
            "_weight": "None",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.EmbeddingBag": {
        "short name": "EmbeddingBag",
        "parameters": {
            "num_embeddings": null,
            "embedding_dim": null,
            "max_norm": "None",
            "norm_type": "2.0",
            "scale_grad_by_freq": "False",
            "mode": "'mean'",
            "sparse": "False",
            "_weight": "None",
            "include_last_offset": "False",
            "padding_idx": "None",
            "device": "None",
            "dtype": "None"
        }
    },
    "torch.nn.CosineSimilarity": {
        "short name": "CosineSimilarity",
        "parameters": {
            "dim": "1",
            "eps": "1e-08"
        }
    },
    "torch.nn.PairwiseDistance": {
        "short name": "PairwiseDistance",
        "parameters": {
            "p": "2.0",
            "eps": "1e-06",
            "keepdim": "False"
        }
    },
    "torch.nn.L1Loss": {
        "short name": "L1Loss",
        "parameters": {
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.MSELoss": {
        "short name": "MSELoss",
        "parameters": {
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.CrossEntropyLoss": {
        "short name": "CrossEntropyLoss",
        "parameters": {
            "weight": "None",
            "size_average": "None",
            "ignore_index": "- 100",
            "reduce": "None",
            "reduction": "'mean'",
            "label_smoothing": "0.0"
        }
    },
    "torch.nn.CTCLoss": {
        "short name": "CTCLoss",
        "parameters": {
            "blank": "0",
            "reduction": "'mean'",
            "zero_infinity": "False"
        }
    },
    "torch.nn.NLLLoss": {
        "short name": "NLLLoss",
        "parameters": {
            "weight": "None",
            "size_average": "None",
            "ignore_index": "- 100",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.PoissonNLLLoss": {
        "short name": "PoissonNLLLoss",
        "parameters": {
            "log_input": "True",
            "full": "False",
            "size_average": "None",
            "eps": "1e-08",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.GaussianNLLLoss": {
        "short name": "GaussianNLLLoss",
        "parameters": {
            "full": "False",
            "eps": "1e-06",
            "reduction": "'mean'"
        }
    },
    "torch.nn.KLDivLoss": {
        "short name": "KLDivLoss",
        "parameters": {
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'",
            "log_target": "False"
        }
    },
    "torch.nn.BCELoss": {
        "short name": "BCELoss",
        "parameters": {
            "weight": "None",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.BCEWithLogitsLoss": {
        "short name": "BCEWithLogitsLoss",
        "parameters": {
            "weight": "None",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'",
            "pos_weight": "None"
        }
    },
    "torch.nn.MarginRankingLoss": {
        "short name": "MarginRankingLoss",
        "parameters": {
            "margin": "0.0",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.HingeEmbeddingLoss": {
        "short name": "HingeEmbeddingLoss",
        "parameters": {
            "margin": "1.0",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.MultiLabelMarginLoss": {
        "short name": "MultiLabelMarginLoss",
        "parameters": {
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.HuberLoss": {
        "short name": "HuberLoss",
        "parameters": {
            "reduction": "'mean'",
            "delta": "1.0"
        }
    },
    "torch.nn.SmoothL1Loss": {
        "short name": "SmoothL1Loss",
        "parameters": {
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'",
            "beta": "1.0"
        }
    },
    "torch.nn.SoftMarginLoss": {
        "short name": "SoftMarginLoss",
        "parameters": {
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.MultiLabelSoftMarginLoss": {
        "short name": "MultiLabelSoftMarginLoss",
        "parameters": {
            "weight": "None",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.CosineEmbeddingLoss": {
        "short name": "CosineEmbeddingLoss",
        "parameters": {
            "margin": "0.0",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.MultiMarginLoss": {
        "short name": "MultiMarginLoss",
        "parameters": {
            "p": "1",
            "margin": "1.0",
            "weight": "None",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.TripletMarginLoss": {
        "short name": "TripletMarginLoss",
        "parameters": {
            "margin": "1.0",
            "p": "2.0",
            "eps": "1e-06",
            "swap": "False",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.TripletMarginWithDistanceLoss": {
        "short name": "TripletMarginWithDistanceLoss",
        "parameters": {
            "distance_function": "None",
            "margin": "1.0",
            "swap": "False",
            "reduction": "'mean'"
        }
    },
    "torch.nn.PixelShuffle": {
        "short name": "PixelShuffle",
        "parameters": {
            "upscale_factor": null
        }
    },
    "torch.nn.PixelUnshuffle": {
        "short name": "PixelUnshuffle",
        "parameters": {
            "downscale_factor": null
        }
    },
    "torch.nn.Upsample": {
        "short name": "Upsample",
        "parameters": {
            "size": "None",
            "scale_factor": "None",
            "mode": "'nearest'",
            "align_corners": "None",
            "recompute_scale_factor": "None"
        }
    },
    "torch.nn.UpsamplingNearest2d": {
        "short name": "UpsamplingNearest2d",
        "parameters": {
            "size": "None",
            "scale_factor": "None"
        }
    },
    "torch.nn.UpsamplingBilinear2d": {
        "short name": "UpsamplingBilinear2d",
        "parameters": {
            "size": "None",
            "scale_factor": "None"
        }
    },
    "torch.nn.ChannelShuffle": {
        "short name": "ChannelShuffle",
        "parameters": {
            "groups": null
        }
    },
    "torch.nn.DataParallel": {
        "short name": "DataParallel",
        "parameters": {
            "module": null,
            "device_ids": "None",
            "output_device": "None",
            "dim": "0"
        }
    },
    "torch.nn.parallel.DistributedDataParallel": {
        "short name": "DistributedDataParallel",
        "parameters": {
            "module": null,
            "device_ids": "None",
            "output_device": "None",
            "dim": "0",
            "broadcast_buffers": "True",
            "process_group": "None",
            "bucket_cap_mb": "25",
            "find_unused_parameters": "False",
            "check_reduction": "False",
            "gradient_as_bucket_view": "False",
            "static_graph": "False"
        }
    },
    "torch.nn.utils.prune.BasePruningMethod": {
        "short name": "BasePruningMethod",
        "parameters": {}
    },
    "torch.nn.utils.prune.PruningContainer": {
        "short name": "PruningContainer",
        "parameters": {
            "*args": null
        }
    },
    "torch.nn.utils.prune.Identity": {
        "short name": "Identity",
        "parameters": {}
    },
    "torch.nn.utils.prune.RandomUnstructured": {
        "short name": "RandomUnstructured",
        "parameters": {
            "amount": null
        }
    },
    "torch.nn.utils.prune.L1Unstructured": {
        "short name": "L1Unstructured",
        "parameters": {
            "amount": null
        }
    },
    "torch.nn.utils.prune.RandomStructured": {
        "short name": "RandomStructured",
        "parameters": {
            "amount": null,
            "dim": "- 1"
        }
    },
    "torch.nn.utils.prune.LnStructured": {
        "short name": "LnStructured",
        "parameters": {
            "amount": null,
            "n": null,
            "dim": "- 1"
        }
    },
    "torch.nn.utils.prune.CustomFromMask": {
        "short name": "CustomFromMask",
        "parameters": {
            "mask": null
        }
    },
    "torch.nn.utils.parametrize.ParametrizationList": {
        "short name": "ParametrizationList",
        "parameters": {
            "modules": null,
            "original": null,
            "unsafe": "False"
        }
    },
    "torch.nn.utils.rnn.PackedSequence": {
        "short name": "PackedSequence",
        "parameters": {
            "data": null,
            "batch_sizes": "None",
            "sorted_indices": "None",
            "unsorted_indices": "None"
        }
    },
    "torch.nn.Flatten": {
        "short name": "Flatten",
        "parameters": {
            "start_dim": "1",
            "end_dim": "- 1"
        }
    },
    "torch.nn.Unflatten": {
        "short name": "Unflatten",
        "parameters": {
            "dim": null,
            "unflattened_size": null
        }
    },
    "torch.nn.modules.lazy.LazyModuleMixin": {
        "short name": "LazyModuleMixin",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.autograd.forward_ad.dual_level": {
        "short name": "dual_level",
        "parameters": {}
    },
    "torch.autograd.no_grad": {
        "short name": "no_grad",
        "parameters": {}
    },
    "torch.autograd.enable_grad": {
        "short name": "enable_grad",
        "parameters": {}
    },
    "torch.autograd.set_grad_enabled": {
        "short name": "set_grad_enabled",
        "parameters": {
            "mode": null
        }
    },
    "torch.autograd.inference_mode": {
        "short name": "inference_mode",
        "parameters": {
            "mode": "True"
        }
    },
    "torch.cuda.StreamContext": {
        "short name": "StreamContext",
        "parameters": {
            "stream": null
        }
    },
    "torch.cuda.device": {
        "short name": "device",
        "parameters": {
            "device": null
        }
    },
    "torch.cuda.device_of": {
        "short name": "device_of",
        "parameters": {
            "obj": null
        }
    },
    "torch.cuda.Stream": {
        "short name": "Stream",
        "parameters": {
            "device": "None",
            "priority": "0",
            "**kwargs": null
        }
    },
    "torch.cuda.ExternalStream": {
        "short name": "ExternalStream",
        "parameters": {
            "stream_ptr": null,
            "device": "None",
            "**kwargs": null
        }
    },
    "torch.cuda.Event": {
        "short name": "Event",
        "parameters": {
            "enable_timing": "False",
            "blocking": "False",
            "interprocess": "False"
        }
    },
    "torch.cuda.CUDAGraph": {
        "short name": "CUDAGraph",
        "parameters": {}
    },
    "torch.cuda.graph": {
        "short name": "graph",
        "parameters": {
            "cuda_graph": null,
            "pool": "None",
            "stream": "None"
        }
    },
    "torch.distributed.elastic.agent.server.ElasticAgent": {
        "short name": "ElasticAgent",
        "parameters": {}
    },
    "torch.distributed.elastic.agent.server.WorkerSpec": {
        "short name": "WorkerSpec",
        "parameters": {
            "role": null,
            "local_world_size": null,
            "rdzv_handler": null,
            "fn": "None",
            "entrypoint": "None",
            "args": "()",
            "max_restarts": "3",
            "monitor_interval": "30.0",
            "master_port": "None",
            "master_addr": "None",
            "redirects": "<Std.NONE: 0>",
            "tee": "<Std.NONE: 0>"
        }
    },
    "torch.distributed.elastic.agent.server.WorkerState": {
        "short name": "WorkerState",
        "parameters": {
            "value": null
        }
    },
    "torch.distributed.elastic.agent.server.Worker": {
        "short name": "Worker",
        "parameters": {
            "local_rank": null,
            "global_rank": "- 1",
            "role_rank": "- 1",
            "world_size": "- 1",
            "role_world_size": "- 1"
        }
    },
    "torch.distributed.elastic.agent.server.WorkerGroup": {
        "short name": "WorkerGroup",
        "parameters": {
            "spec": null
        }
    },
    "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent": {
        "short name": "LocalElasticAgent",
        "parameters": {
            "spec": null,
            "start_method": "'spawn'",
            "exit_barrier_timeout": "300",
            "log_dir": "None"
        }
    },
    "torch.distributed.elastic.agent.server.SimpleElasticAgent": {
        "short name": "SimpleElasticAgent",
        "parameters": {
            "spec": null,
            "exit_barrier_timeout": "300"
        }
    },
    "torch.distributed.elastic.agent.server.api.RunResult": {
        "short name": "RunResult",
        "parameters": {
            "state": null,
            "return_values": "<factory>",
            "failures": "<factory>"
        }
    },
    "torch.distributed.elastic.multiprocessing.api.PContext": {
        "short name": "PContext",
        "parameters": {
            "name": null,
            "entrypoint": null,
            "args": null,
            "envs": null,
            "stdouts": null,
            "stderrs": null,
            "tee_stdouts": null,
            "tee_stderrs": null,
            "error_files": null
        }
    },
    "torch.distributed.elastic.multiprocessing.api.MultiprocessContext": {
        "short name": "MultiprocessContext",
        "parameters": {
            "name": null,
            "entrypoint": null,
            "args": null,
            "envs": null,
            "stdouts": null,
            "stderrs": null,
            "tee_stdouts": null,
            "tee_stderrs": null,
            "error_files": null,
            "start_method": null
        }
    },
    "torch.distributed.elastic.multiprocessing.api.SubprocessContext": {
        "short name": "SubprocessContext",
        "parameters": {
            "name": null,
            "entrypoint": null,
            "args": null,
            "envs": null,
            "stdouts": null,
            "stderrs": null,
            "tee_stdouts": null,
            "tee_stderrs": null,
            "error_files": null
        }
    },
    "torch.distributed.elastic.multiprocessing.api.RunProcsResult": {
        "short name": "RunProcsResult",
        "parameters": {
            "return_values": "<factory>",
            "failures": "<factory>",
            "stdouts": "<factory>",
            "stderrs": "<factory>"
        }
    },
    "torch.distributed.elastic.multiprocessing.errors.ChildFailedError": {
        "short name": "ChildFailedError",
        "parameters": {
            "name": null,
            "failures": null
        }
    },
    "torch.distributed.elastic.multiprocessing.errors.ErrorHandler": {
        "short name": "ErrorHandler",
        "parameters": {}
    },
    "torch.distributed.elastic.multiprocessing.errors.ProcessFailure": {
        "short name": "ProcessFailure",
        "parameters": {
            "local_rank": null,
            "pid": null,
            "exitcode": null,
            "error_file": null
        }
    },
    "torch.distributed.elastic.rendezvous.RendezvousParameters": {
        "short name": "RendezvousParameters",
        "parameters": {
            "backend": null,
            "endpoint": null,
            "run_id": null,
            "min_nodes": null,
            "max_nodes": null,
            "**kwargs": null
        }
    },
    "torch.distributed.elastic.rendezvous.RendezvousHandlerRegistry": {
        "short name": "RendezvousHandlerRegistry",
        "parameters": {}
    },
    "torch.distributed.elastic.rendezvous.RendezvousHandler": {
        "short name": "RendezvousHandler",
        "parameters": {}
    },
    "torch.distributed.elastic.rendezvous.RendezvousError": {
        "short name": "RendezvousError",
        "parameters": {}
    },
    "torch.distributed.elastic.rendezvous.RendezvousClosedError": {
        "short name": "RendezvousClosedError",
        "parameters": {}
    },
    "torch.distributed.elastic.rendezvous.RendezvousTimeoutError": {
        "short name": "RendezvousTimeoutError",
        "parameters": {}
    },
    "torch.distributed.elastic.rendezvous.RendezvousConnectionError": {
        "short name": "RendezvousConnectionError",
        "parameters": {}
    },
    "torch.distributed.elastic.rendezvous.RendezvousStateError": {
        "short name": "RendezvousStateError",
        "parameters": {}
    },
    "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler": {
        "short name": "DynamicRendezvousHandler",
        "parameters": {}
    },
    "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend": {
        "short name": "RendezvousBackend",
        "parameters": {}
    },
    "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout": {
        "short name": "RendezvousTimeout",
        "parameters": {
            "join": "None",
            "last_call": "None",
            "close": "None",
            "heartbeat": "None"
        }
    },
    "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.C10dRendezvousBackend": {
        "short name": "C10dRendezvousBackend",
        "parameters": {
            "store": null,
            "run_id": null
        }
    },
    "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.EtcdRendezvousBackend": {
        "short name": "EtcdRendezvousBackend",
        "parameters": {
            "client": null,
            "run_id": null,
            "key_prefix": "None",
            "ttl": "None"
        }
    },
    "torch.distributed.elastic.rendezvous.etcd_rendezvous.EtcdRendezvousHandler": {
        "short name": "EtcdRendezvousHandler",
        "parameters": {
            "rdzv_impl": null
        }
    },
    "torch.distributed.elastic.rendezvous.etcd_store.EtcdStore": {
        "short name": "EtcdStore",
        "parameters": {
            "etcd_client": null,
            "etcd_store_prefix": null,
            "timeout": "None"
        }
    },
    "torch.distributed.elastic.rendezvous.etcd_server.EtcdServer": {
        "short name": "EtcdServer",
        "parameters": {
            "data_dir": "None"
        }
    },
    "torch.distributed.elastic.timer.LocalTimerServer": {
        "short name": "LocalTimerServer",
        "parameters": {
            "mp_queue": null,
            "max_interval": "60",
            "daemon": "True"
        }
    },
    "torch.distributed.elastic.timer.LocalTimerClient": {
        "short name": "LocalTimerClient",
        "parameters": {
            "mp_queue": null
        }
    },
    "torch.distributed.elastic.timer.TimerRequest": {
        "short name": "TimerRequest",
        "parameters": {
            "worker_id": null,
            "scope_id": null,
            "expiration_time": null
        }
    },
    "torch.distributed.elastic.timer.TimerServer": {
        "short name": "TimerServer",
        "parameters": {
            "request_queue": null,
            "max_interval": null,
            "daemon": "True"
        }
    },
    "torch.distributed.elastic.timer.TimerClient": {
        "short name": "TimerClient",
        "parameters": {}
    },
    "torch.distributed.elastic.metrics.api.MetricHandler": {
        "short name": "MetricHandler",
        "parameters": {}
    },
    "torch.distributed.elastic.metrics.api.ConsoleMetricHandler": {
        "short name": "ConsoleMetricHandler",
        "parameters": {}
    },
    "torch.distributed.elastic.metrics.api.NullMetricHandler": {
        "short name": "NullMetricHandler",
        "parameters": {}
    },
    "torch.distributed.elastic.events.api.Event": {
        "short name": "Event",
        "parameters": {
            "name": null,
            "source": null,
            "timestamp": "0",
            "metadata": "<factory>"
        }
    },
    "torch.distributed.elastic.events.api.EventSource": {
        "short name": "EventSource",
        "parameters": {
            "value": null
        }
    },
    "torch.jit.ScriptModule": {
        "short name": "ScriptModule",
        "parameters": {}
    },
    "torch.jit.ScriptFunction": {
        "short name": "ScriptFunction",
        "parameters": {}
    },
    "torch.jit.Attribute": {
        "short name": "Attribute",
        "parameters": {
            "value": null,
            "type": null
        }
    },
    "torch.optim.Adadelta": {
        "short name": "Adadelta",
        "parameters": {
            "params": null,
            "lr": "1.0",
            "rho": "0.9",
            "eps": "1e-06",
            "weight_decay": "0"
        }
    },
    "torch.optim.Adagrad": {
        "short name": "Adagrad",
        "parameters": {
            "params": null,
            "lr": "0.01",
            "lr_decay": "0",
            "weight_decay": "0",
            "initial_accumulator_value": "0",
            "eps": "1e-10"
        }
    },
    "torch.optim.Adam": {
        "short name": "Adam",
        "parameters": {
            "params": null,
            "lr": "0.001",
            "betas": "(0.9, 0.999)",
            "eps": "1e-08",
            "weight_decay": "0",
            "amsgrad": "False",
            "maximize": "False"
        }
    },
    "torch.optim.AdamW": {
        "short name": "AdamW",
        "parameters": {
            "params": null,
            "lr": "0.001",
            "betas": "(0.9, 0.999)",
            "eps": "1e-08",
            "weight_decay": "0.01",
            "amsgrad": "False",
            "maximize": "False"
        }
    },
    "torch.optim.SparseAdam": {
        "short name": "SparseAdam",
        "parameters": {
            "params": null,
            "lr": "0.001",
            "betas": "(0.9, 0.999)",
            "eps": "1e-08"
        }
    },
    "torch.optim.Adamax": {
        "short name": "Adamax",
        "parameters": {
            "params": null,
            "lr": "0.002",
            "betas": "(0.9, 0.999)",
            "eps": "1e-08",
            "weight_decay": "0"
        }
    },
    "torch.optim.ASGD": {
        "short name": "ASGD",
        "parameters": {
            "params": null,
            "lr": "0.01",
            "lambd": "0.0001",
            "alpha": "0.75",
            "t0": "1000000.0",
            "weight_decay": "0"
        }
    },
    "torch.optim.LBFGS": {
        "short name": "LBFGS",
        "parameters": {
            "params": null,
            "lr": "1",
            "max_iter": "20",
            "max_eval": "None",
            "tolerance_grad": "1e-07",
            "tolerance_change": "1e-09",
            "history_size": "100",
            "line_search_fn": "None"
        }
    },
    "torch.optim.NAdam": {
        "short name": "NAdam",
        "parameters": {
            "params": null,
            "lr": "0.002",
            "betas": "(0.9, 0.999)",
            "eps": "1e-08",
            "weight_decay": "0",
            "momentum_decay": "0.004"
        }
    },
    "torch.optim.RAdam": {
        "short name": "RAdam",
        "parameters": {
            "params": null,
            "lr": "0.001",
            "betas": "(0.9, 0.999)",
            "eps": "1e-08",
            "weight_decay": "0"
        }
    },
    "torch.optim.RMSprop": {
        "short name": "RMSprop",
        "parameters": {
            "params": null,
            "lr": "0.01",
            "alpha": "0.99",
            "eps": "1e-08",
            "weight_decay": "0",
            "momentum": "0",
            "centered": "False"
        }
    },
    "torch.optim.Rprop": {
        "short name": "Rprop",
        "parameters": {
            "params": null,
            "lr": "0.01",
            "etas": "(0.5, 1.2)",
            "step_sizes": "(1e-06, 50)"
        }
    },
    "torch.optim.SGD": {
        "short name": "SGD",
        "parameters": {
            "params": null,
            "lr": "<required parameter>",
            "momentum": "0",
            "dampening": "0",
            "weight_decay": "0",
            "nesterov": "False",
            "maximize": "False"
        }
    },
    "torch.optim.lr_scheduler.LambdaLR": {
        "short name": "LambdaLR",
        "parameters": {
            "optimizer": null,
            "lr_lambda": null,
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.MultiplicativeLR": {
        "short name": "MultiplicativeLR",
        "parameters": {
            "optimizer": null,
            "lr_lambda": null,
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.StepLR": {
        "short name": "StepLR",
        "parameters": {
            "optimizer": null,
            "step_size": null,
            "gamma": "0.1",
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.MultiStepLR": {
        "short name": "MultiStepLR",
        "parameters": {
            "optimizer": null,
            "milestones": null,
            "gamma": "0.1",
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.ConstantLR": {
        "short name": "ConstantLR",
        "parameters": {
            "optimizer": null,
            "factor": "0.3333333333333333",
            "total_iters": "5",
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.LinearLR": {
        "short name": "LinearLR",
        "parameters": {
            "optimizer": null,
            "start_factor": "0.3333333333333333",
            "end_factor": "1.0",
            "total_iters": "5",
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.ExponentialLR": {
        "short name": "ExponentialLR",
        "parameters": {
            "optimizer": null,
            "gamma": null,
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.CosineAnnealingLR": {
        "short name": "CosineAnnealingLR",
        "parameters": {
            "optimizer": null,
            "T_max": null,
            "eta_min": "0",
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.ChainedScheduler": {
        "short name": "ChainedScheduler",
        "parameters": {
            "schedulers": null
        }
    },
    "torch.optim.lr_scheduler.SequentialLR": {
        "short name": "SequentialLR",
        "parameters": {
            "optimizer": null,
            "schedulers": null,
            "milestones": null,
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.ReduceLROnPlateau": {
        "short name": "ReduceLROnPlateau",
        "parameters": {
            "optimizer": null,
            "mode": "'min'",
            "factor": "0.1",
            "patience": "10",
            "threshold": "0.0001",
            "threshold_mode": "'rel'",
            "cooldown": "0",
            "min_lr": "0",
            "eps": "1e-08",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.CyclicLR": {
        "short name": "CyclicLR",
        "parameters": {
            "optimizer": null,
            "base_lr": null,
            "max_lr": null,
            "step_size_up": "2000",
            "step_size_down": "None",
            "mode": "'triangular'",
            "gamma": "1.0",
            "scale_fn": "None",
            "scale_mode": "'cycle'",
            "cycle_momentum": "True",
            "base_momentum": "0.8",
            "max_momentum": "0.9",
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.OneCycleLR": {
        "short name": "OneCycleLR",
        "parameters": {
            "optimizer": null,
            "max_lr": null,
            "total_steps": "None",
            "epochs": "None",
            "steps_per_epoch": "None",
            "pct_start": "0.3",
            "anneal_strategy": "'cos'",
            "cycle_momentum": "True",
            "base_momentum": "0.85",
            "max_momentum": "0.95",
            "div_factor": "25.0",
            "final_div_factor": "10000.0",
            "three_phase": "False",
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts": {
        "short name": "CosineAnnealingWarmRestarts",
        "parameters": {
            "optimizer": null,
            "T_0": null,
            "T_mult": "1",
            "eta_min": "0",
            "last_epoch": "- 1",
            "verbose": "False"
        }
    },
    "torch.is_tensor": {
        "short name": "is_tensor",
        "parameters": {
            "obj": null
        }
    },
    "torch.is_storage": {
        "short name": "is_storage",
        "parameters": {
            "obj": null
        }
    },
    "torch.is_complex": {
        "short name": "is_complex",
        "parameters": {
            "input": null
        }
    },
    "torch.is_conj": {
        "short name": "is_conj",
        "parameters": {
            "input": null
        }
    },
    "torch.is_floating_point": {
        "short name": "is_floating_point",
        "parameters": {
            "input": null
        }
    },
    "torch.is_nonzero": {
        "short name": "is_nonzero",
        "parameters": {
            "input": null
        }
    },
    "torch.set_default_dtype": {
        "short name": "set_default_dtype",
        "parameters": {
            "d": null
        }
    },
    "torch.get_default_dtype": {
        "short name": "get_default_dtype",
        "parameters": {}
    },
    "torch.set_default_tensor_type": {
        "short name": "set_default_tensor_type",
        "parameters": {
            "t": null
        }
    },
    "torch.numel": {
        "short name": "numel",
        "parameters": {
            "input": null
        }
    },
    "torch.set_printoptions": {
        "short name": "set_printoptions",
        "parameters": {
            "precision": "None",
            "threshold": "None",
            "edgeitems": "None",
            "linewidth": "None",
            "profile": "None",
            "sci_mode": "None"
        }
    },
    "torch.set_flush_denormal": {
        "short name": "set_flush_denormal",
        "parameters": {
            "mode": null
        }
    },
    "torch.tensor": {
        "short name": "tensor",
        "parameters": {
            "data": null,
            "dtype": "None",
            "device": "None",
            "requires_grad": "False",
            "pin_memory": "False"
        }
    },
    "torch.sparse_coo_tensor": {
        "short name": "sparse_coo_tensor",
        "parameters": {
            "indices": null,
            "values": null,
            "size": "None",
            "dtype": "None",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.asarray": {
        "short name": "asarray",
        "parameters": {
            "obj": null,
            "dtype": "None",
            "device": "None",
            "copy": "None",
            "requires_grad": "False"
        }
    },
    "torch.as_tensor": {
        "short name": "as_tensor",
        "parameters": {
            "data": null,
            "dtype": "None",
            "device": "None"
        }
    },
    "torch.as_strided": {
        "short name": "as_strided",
        "parameters": {
            "input": null,
            "size": null,
            "stride": null,
            "storage_offset": "0"
        }
    },
    "torch.from_numpy": {
        "short name": "from_numpy",
        "parameters": {
            "ndarray": null
        }
    },
    "torch.frombuffer": {
        "short name": "frombuffer",
        "parameters": {
            "buffer": null,
            "dtype": null,
            "count": "- 1",
            "offset": "0",
            "requires_grad": "False"
        }
    },
    "torch.zeros": {
        "short name": "zeros",
        "parameters": {
            "*size": null,
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.zeros_like": {
        "short name": "zeros_like",
        "parameters": {
            "input": null,
            "dtype": "None",
            "layout": "None",
            "device": "None",
            "requires_grad": "False",
            "memory_format": "torch.preserve_format"
        }
    },
    "torch.ones": {
        "short name": "ones",
        "parameters": {
            "*size": null,
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.ones_like": {
        "short name": "ones_like",
        "parameters": {
            "input": null,
            "dtype": "None",
            "layout": "None",
            "device": "None",
            "requires_grad": "False",
            "memory_format": "torch.preserve_format"
        }
    },
    "torch.arange": {
        "short name": "arange",
        "parameters": {
            "start": "0",
            "end": null,
            "step": "1",
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.range": {
        "short name": "range",
        "parameters": {
            "start": "0",
            "end": null,
            "step": "1",
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.linspace": {
        "short name": "linspace",
        "parameters": {
            "start": null,
            "end": null,
            "steps": null,
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.logspace": {
        "short name": "logspace",
        "parameters": {
            "start": null,
            "end": null,
            "steps": null,
            "base": "10.0",
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.eye": {
        "short name": "eye",
        "parameters": {
            "n": null,
            "m": "None",
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.empty": {
        "short name": "empty",
        "parameters": {
            "*size": null,
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False",
            "pin_memory": "False",
            "memory_format": "torch.contiguous_format"
        }
    },
    "torch.empty_like": {
        "short name": "empty_like",
        "parameters": {
            "input": null,
            "dtype": "None",
            "layout": "None",
            "device": "None",
            "requires_grad": "False",
            "memory_format": "torch.preserve_format"
        }
    },
    "torch.empty_strided": {
        "short name": "empty_strided",
        "parameters": {
            "size": null,
            "stride": null,
            "dtype": "None",
            "layout": "None",
            "device": "None",
            "requires_grad": "False",
            "pin_memory": "False"
        }
    },
    "torch.full": {
        "short name": "full",
        "parameters": {
            "size": null,
            "fill_value": null,
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.full_like": {
        "short name": "full_like",
        "parameters": {
            "input": null,
            "fill_value": null,
            "\\*": null,
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False",
            "memory_format": "torch.preserve_format"
        }
    },
    "torch.quantize_per_tensor": {
        "short name": "quantize_per_tensor",
        "parameters": {
            "input": null,
            "scale": null,
            "zero_point": null,
            "dtype": null
        }
    },
    "torch.quantize_per_channel": {
        "short name": "quantize_per_channel",
        "parameters": {
            "input": null,
            "scales": null,
            "zero_points": null,
            "axis": null,
            "dtype": null
        }
    },
    "torch.dequantize": {
        "short name": "dequantize",
        "parameters": {
            "tensor": null
        }
    },
    "torch.complex": {
        "short name": "complex",
        "parameters": {
            "real": null,
            "imag": null,
            "out": "None"
        }
    },
    "torch.polar": {
        "short name": "polar",
        "parameters": {
            "abs": null,
            "angle": null,
            "out": "None"
        }
    },
    "torch.heaviside": {
        "short name": "heaviside",
        "parameters": {
            "input": null,
            "values": null,
            "out": "None"
        }
    },
    "torch.adjoint": {
        "short name": "adjoint",
        "parameters": {
            "Tensor": null
        }
    },
    "torch.argwhere": {
        "short name": "argwhere",
        "parameters": {
            "input": null
        }
    },
    "torch.cat": {
        "short name": "cat",
        "parameters": {
            "tensors": null,
            "dim": "0",
            "out": "None"
        }
    },
    "torch.concat": {
        "short name": "concat",
        "parameters": {
            "tensors": null,
            "dim": "0",
            "out": "None"
        }
    },
    "torch.conj": {
        "short name": "conj",
        "parameters": {
            "input": null
        }
    },
    "torch.chunk": {
        "short name": "chunk",
        "parameters": {
            "input": null,
            "chunks": null,
            "dim": "0"
        }
    },
    "torch.dsplit": {
        "short name": "dsplit",
        "parameters": {
            "input": null,
            "indices_or_sections": null
        }
    },
    "torch.column_stack": {
        "short name": "column_stack",
        "parameters": {
            "tensors": null,
            "out": "None"
        }
    },
    "torch.dstack": {
        "short name": "dstack",
        "parameters": {
            "tensors": null,
            "out": "None"
        }
    },
    "torch.gather": {
        "short name": "gather",
        "parameters": {
            "input": null,
            "dim": null,
            "index": null,
            "sparse_grad": "False",
            "out": "None"
        }
    },
    "torch.hsplit": {
        "short name": "hsplit",
        "parameters": {
            "input": null,
            "indices_or_sections": null
        }
    },
    "torch.hstack": {
        "short name": "hstack",
        "parameters": {
            "tensors": null,
            "out": "None"
        }
    },
    "torch.index_add": {
        "short name": "index_add",
        "parameters": {
            "input": null,
            "dim": null,
            "index": null,
            "source": null,
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.index_select": {
        "short name": "index_select",
        "parameters": {
            "input": null,
            "dim": null,
            "index": null,
            "out": "None"
        }
    },
    "torch.masked_select": {
        "short name": "masked_select",
        "parameters": {
            "input": null,
            "mask": null,
            "out": "None"
        }
    },
    "torch.movedim": {
        "short name": "movedim",
        "parameters": {
            "input": null,
            "source": null,
            "destination": null
        }
    },
    "torch.moveaxis": {
        "short name": "moveaxis",
        "parameters": {
            "input": null,
            "source": null,
            "destination": null
        }
    },
    "torch.narrow": {
        "short name": "narrow",
        "parameters": {
            "input": null,
            "dim": null,
            "start": null,
            "length": null
        }
    },
    "torch.nonzero": {
        "short name": "nonzero",
        "parameters": {
            "input": null,
            "out": "None",
            "as_tuple": "False"
        }
    },
    "torch.permute": {
        "short name": "permute",
        "parameters": {
            "input": null,
            "dims": null
        }
    },
    "torch.reshape": {
        "short name": "reshape",
        "parameters": {
            "input": null,
            "shape": null
        }
    },
    "torch.row_stack": {
        "short name": "row_stack",
        "parameters": {
            "tensors": null,
            "out": "None"
        }
    },
    "torch.select": {
        "short name": "select",
        "parameters": {
            "input": null,
            "dim": null,
            "index": null
        }
    },
    "torch.scatter": {
        "short name": "scatter",
        "parameters": {
            "input": null,
            "dim": null,
            "index": null,
            "src": null
        }
    },
    "torch.diagonal_scatter": {
        "short name": "diagonal_scatter",
        "parameters": {
            "input": null,
            "src": null,
            "offset": "0",
            "dim1": "0",
            "dim2": "1"
        }
    },
    "torch.select_scatter": {
        "short name": "select_scatter",
        "parameters": {
            "input": null,
            "src": null,
            "dim": null,
            "index": null
        }
    },
    "torch.slice_scatter": {
        "short name": "slice_scatter",
        "parameters": {
            "input": null,
            "src": null,
            "dim": "0",
            "start": "None",
            "end": "None",
            "step": "1"
        }
    },
    "torch.scatter_add": {
        "short name": "scatter_add",
        "parameters": {
            "input": null,
            "dim": null,
            "index": null,
            "src": null
        }
    },
    "torch.scatter_reduce": {
        "short name": "scatter_reduce",
        "parameters": {
            "input": null,
            "dim": null,
            "index": null,
            "reduce": null,
            "output_size": "None"
        }
    },
    "torch.split": {
        "short name": "split",
        "parameters": {
            "tensor": null,
            "split_size_or_sections": null,
            "dim": "0"
        }
    },
    "torch.squeeze": {
        "short name": "squeeze",
        "parameters": {
            "input": null,
            "dim": "None",
            "out": "None"
        }
    },
    "torch.stack": {
        "short name": "stack",
        "parameters": {
            "tensors": null,
            "dim": "0",
            "out": "None"
        }
    },
    "torch.swapaxes": {
        "short name": "swapaxes",
        "parameters": {
            "input": null,
            "axis0": null,
            "axis1": null
        }
    },
    "torch.swapdims": {
        "short name": "swapdims",
        "parameters": {
            "input": null,
            "dim0": null,
            "dim1": null
        }
    },
    "torch.t": {
        "short name": "t",
        "parameters": {
            "input": null
        }
    },
    "torch.take": {
        "short name": "take",
        "parameters": {
            "input": null,
            "index": null
        }
    },
    "torch.take_along_dim": {
        "short name": "take_along_dim",
        "parameters": {
            "input": null,
            "indices": null,
            "dim": null,
            "out": "None"
        }
    },
    "torch.tensor_split": {
        "short name": "tensor_split",
        "parameters": {
            "input": null,
            "indices_or_sections": null,
            "dim": "0"
        }
    },
    "torch.tile": {
        "short name": "tile",
        "parameters": {
            "input": null,
            "dims": null
        }
    },
    "torch.transpose": {
        "short name": "transpose",
        "parameters": {
            "input": null,
            "dim0": null,
            "dim1": null
        }
    },
    "torch.unbind": {
        "short name": "unbind",
        "parameters": {
            "input": null,
            "dim": "0"
        }
    },
    "torch.unsqueeze": {
        "short name": "unsqueeze",
        "parameters": {
            "input": null,
            "dim": null
        }
    },
    "torch.vsplit": {
        "short name": "vsplit",
        "parameters": {
            "input": null,
            "indices_or_sections": null
        }
    },
    "torch.vstack": {
        "short name": "vstack",
        "parameters": {
            "tensors": null,
            "out": "None"
        }
    },
    "torch.where": {
        "short name": "where",
        "parameters": {
            "condition": null,
            "x": null,
            "y": null
        }
    },
    "torch.seed": {
        "short name": "seed",
        "parameters": {}
    },
    "torch.manual_seed": {
        "short name": "manual_seed",
        "parameters": {
            "seed": null
        }
    },
    "torch.initial_seed": {
        "short name": "initial_seed",
        "parameters": {}
    },
    "torch.get_rng_state": {
        "short name": "get_rng_state",
        "parameters": {}
    },
    "torch.set_rng_state": {
        "short name": "set_rng_state",
        "parameters": {
            "new_state": null
        }
    },
    "torch.bernoulli": {
        "short name": "bernoulli",
        "parameters": {
            "input": null,
            "generator": "None",
            "out": "None"
        }
    },
    "torch.multinomial": {
        "short name": "multinomial",
        "parameters": {
            "input": null,
            "num_samples": null,
            "replacement": "False",
            "generator": "None",
            "out": "None"
        }
    },
    "torch.normal": {
        "short name": "normal",
        "parameters": {
            "mean": null,
            "std": null,
            "generator": "None",
            "out": "None"
        }
    },
    "torch.poisson": {
        "short name": "poisson",
        "parameters": {
            "input": null,
            "generator": "None"
        }
    },
    "torch.rand": {
        "short name": "rand",
        "parameters": {
            "*size": null,
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.rand_like": {
        "short name": "rand_like",
        "parameters": {
            "input": null,
            "dtype": "None",
            "layout": "None",
            "device": "None",
            "requires_grad": "False",
            "memory_format": "torch.preserve_format"
        }
    },
    "torch.randint": {
        "short name": "randint",
        "parameters": {
            "low": "0",
            "high": null,
            "size": null,
            "\\*": null,
            "generator": "None",
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.randint_like": {
        "short name": "randint_like",
        "parameters": {
            "input": null,
            "low": "0",
            "high": null,
            "\\*": null,
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False",
            "memory_format": "torch.preserve_format"
        }
    },
    "torch.randn": {
        "short name": "randn",
        "parameters": {
            "*size": null,
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.randn_like": {
        "short name": "randn_like",
        "parameters": {
            "input": null,
            "dtype": "None",
            "layout": "None",
            "device": "None",
            "requires_grad": "False",
            "memory_format": "torch.preserve_format"
        }
    },
    "torch.randperm": {
        "short name": "randperm",
        "parameters": {
            "n": null,
            "generator": "None",
            "out": "None",
            "dtype": "torch.int64",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False",
            "pin_memory": "False"
        }
    },
    "torch.save": {
        "short name": "save",
        "parameters": {
            "obj": null,
            "f": null,
            "pickle_module": "pickle",
            "pickle_protocol": "DEFAULT_PROTOCOL",
            "_use_new_zipfile_serialization": "True"
        }
    },
    "torch.load": {
        "short name": "load",
        "parameters": {
            "f": null,
            "map_location": "None",
            "pickle_module": "pickle",
            "**pickle_load_args": null
        }
    },
    "torch.get_num_threads": {
        "short name": "get_num_threads",
        "parameters": {}
    },
    "torch.set_num_threads": {
        "short name": "set_num_threads",
        "parameters": {
            "int": null
        }
    },
    "torch.get_num_interop_threads": {
        "short name": "get_num_interop_threads",
        "parameters": {}
    },
    "torch.set_num_interop_threads": {
        "short name": "set_num_interop_threads",
        "parameters": {
            "int": null
        }
    },
    "torch.is_grad_enabled": {
        "short name": "is_grad_enabled",
        "parameters": {}
    },
    "torch.is_inference_mode_enabled": {
        "short name": "is_inference_mode_enabled",
        "parameters": {}
    },
    "torch.abs": {
        "short name": "abs",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.absolute": {
        "short name": "absolute",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.acos": {
        "short name": "acos",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.arccos": {
        "short name": "arccos",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.acosh": {
        "short name": "acosh",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.arccosh": {
        "short name": "arccosh",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.add": {
        "short name": "add",
        "parameters": {
            "input": null,
            "other": null,
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.addcdiv": {
        "short name": "addcdiv",
        "parameters": {
            "input": null,
            "tensor1": null,
            "tensor2": null,
            "value": "1",
            "out": "None"
        }
    },
    "torch.addcmul": {
        "short name": "addcmul",
        "parameters": {
            "input": null,
            "tensor1": null,
            "tensor2": null,
            "value": "1",
            "out": "None"
        }
    },
    "torch.angle": {
        "short name": "angle",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.asin": {
        "short name": "asin",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.arcsin": {
        "short name": "arcsin",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.asinh": {
        "short name": "asinh",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.arcsinh": {
        "short name": "arcsinh",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.atan": {
        "short name": "atan",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.arctan": {
        "short name": "arctan",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.atanh": {
        "short name": "atanh",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.arctanh": {
        "short name": "arctanh",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.atan2": {
        "short name": "atan2",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.arctan2": {
        "short name": "arctan2",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.bitwise_not": {
        "short name": "bitwise_not",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.bitwise_and": {
        "short name": "bitwise_and",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.bitwise_or": {
        "short name": "bitwise_or",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.bitwise_xor": {
        "short name": "bitwise_xor",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.bitwise_left_shift": {
        "short name": "bitwise_left_shift",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.bitwise_right_shift": {
        "short name": "bitwise_right_shift",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.ceil": {
        "short name": "ceil",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.clamp": {
        "short name": "clamp",
        "parameters": {
            "input": null,
            "min": "None",
            "max": "None",
            "out": "None"
        }
    },
    "torch.clip": {
        "short name": "clip",
        "parameters": {
            "input": null,
            "min": "None",
            "max": "None",
            "out": "None"
        }
    },
    "torch.conj_physical": {
        "short name": "conj_physical",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.copysign": {
        "short name": "copysign",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.cos": {
        "short name": "cos",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.cosh": {
        "short name": "cosh",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.deg2rad": {
        "short name": "deg2rad",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.div": {
        "short name": "div",
        "parameters": {
            "input": null,
            "other": null,
            "rounding_mode": "None",
            "out": "None"
        }
    },
    "torch.divide": {
        "short name": "divide",
        "parameters": {
            "input": null,
            "other": null,
            "rounding_mode": "None",
            "out": "None"
        }
    },
    "torch.digamma": {
        "short name": "digamma",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.erf": {
        "short name": "erf",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.erfc": {
        "short name": "erfc",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.erfinv": {
        "short name": "erfinv",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.exp": {
        "short name": "exp",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.exp2": {
        "short name": "exp2",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.expm1": {
        "short name": "expm1",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.fake_quantize_per_channel_affine": {
        "short name": "fake_quantize_per_channel_affine",
        "parameters": {
            "input": null,
            "scale": null,
            "zero_point": null,
            "quant_min": null,
            "quant_max": null
        }
    },
    "torch.fake_quantize_per_tensor_affine": {
        "short name": "fake_quantize_per_tensor_affine",
        "parameters": {
            "input": null,
            "scale": null,
            "zero_point": null,
            "quant_min": null,
            "quant_max": null
        }
    },
    "torch.fix": {
        "short name": "fix",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.float_power": {
        "short name": "float_power",
        "parameters": {
            "input": null,
            "exponent": null,
            "out": "None"
        }
    },
    "torch.floor": {
        "short name": "floor",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.floor_divide": {
        "short name": "floor_divide",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.fmod": {
        "short name": "fmod",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.frac": {
        "short name": "frac",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.frexp": {
        "short name": "frexp",
        "parameters": {
            "input": null,
            "out": "None) -> (Tensor mantissa",
            "Tensor exponent": null
        }
    },
    "torch.gradient": {
        "short name": "gradient",
        "parameters": {
            "input": null,
            "spacing": "1",
            "dim": "None",
            "edge_order": "1"
        }
    },
    "torch.imag": {
        "short name": "imag",
        "parameters": {
            "input": null
        }
    },
    "torch.ldexp": {
        "short name": "ldexp",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.lerp": {
        "short name": "lerp",
        "parameters": {
            "input": null,
            "end": null,
            "weight": null,
            "out": "None"
        }
    },
    "torch.lgamma": {
        "short name": "lgamma",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.log": {
        "short name": "log",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.log10": {
        "short name": "log10",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.log1p": {
        "short name": "log1p",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.log2": {
        "short name": "log2",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.logaddexp": {
        "short name": "logaddexp",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.logaddexp2": {
        "short name": "logaddexp2",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.logical_and": {
        "short name": "logical_and",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.logical_not": {
        "short name": "logical_not",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.logical_or": {
        "short name": "logical_or",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.logical_xor": {
        "short name": "logical_xor",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.logit": {
        "short name": "logit",
        "parameters": {
            "input": null,
            "eps": "None",
            "out": "None"
        }
    },
    "torch.hypot": {
        "short name": "hypot",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.i0": {
        "short name": "i0",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.igamma": {
        "short name": "igamma",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.igammac": {
        "short name": "igammac",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.mul": {
        "short name": "mul",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.multiply": {
        "short name": "multiply",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.mvlgamma": {
        "short name": "mvlgamma",
        "parameters": {
            "input": null,
            "p": null,
            "out": "None"
        }
    },
    "torch.nan_to_num": {
        "short name": "nan_to_num",
        "parameters": {
            "input": null,
            "nan": "0.0",
            "posinf": "None",
            "neginf": "None",
            "out": "None"
        }
    },
    "torch.neg": {
        "short name": "neg",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.negative": {
        "short name": "negative",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.nextafter": {
        "short name": "nextafter",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.polygamma": {
        "short name": "polygamma",
        "parameters": {
            "n": null,
            "input": null,
            "out": "None"
        }
    },
    "torch.positive": {
        "short name": "positive",
        "parameters": {
            "input": null
        }
    },
    "torch.pow": {
        "short name": "pow",
        "parameters": {
            "input": null,
            "exponent": null,
            "out": "None"
        }
    },
    "torch.quantized_batch_norm": {
        "short name": "quantized_batch_norm",
        "parameters": {
            "input": null,
            "weight": "None",
            "bias": "None",
            "mean": null,
            "var": null,
            "eps": null,
            "output_scale": null,
            "output_zero_point": null
        }
    },
    "torch.quantized_max_pool1d": {
        "short name": "quantized_max_pool1d",
        "parameters": {
            "input": null,
            "kernel_size": null,
            "stride": "[]",
            "padding": "0",
            "dilation": "1",
            "ceil_mode": "False"
        }
    },
    "torch.quantized_max_pool2d": {
        "short name": "quantized_max_pool2d",
        "parameters": {
            "input": null,
            "kernel_size": null,
            "stride": "[]",
            "padding": "0",
            "dilation": "1",
            "ceil_mode": "False"
        }
    },
    "torch.rad2deg": {
        "short name": "rad2deg",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.real": {
        "short name": "real",
        "parameters": {
            "input": null
        }
    },
    "torch.reciprocal": {
        "short name": "reciprocal",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.remainder": {
        "short name": "remainder",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.round": {
        "short name": "round",
        "parameters": {
            "input": null,
            "decimals": "0",
            "out": "None"
        }
    },
    "torch.rsqrt": {
        "short name": "rsqrt",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.sigmoid": {
        "short name": "sigmoid",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.sign": {
        "short name": "sign",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.sgn": {
        "short name": "sgn",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.signbit": {
        "short name": "signbit",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.sin": {
        "short name": "sin",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.sinc": {
        "short name": "sinc",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.sinh": {
        "short name": "sinh",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.sqrt": {
        "short name": "sqrt",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.square": {
        "short name": "square",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.sub": {
        "short name": "sub",
        "parameters": {
            "input": null,
            "other": null,
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.subtract": {
        "short name": "subtract",
        "parameters": {
            "input": null,
            "other": null,
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.tan": {
        "short name": "tan",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.tanh": {
        "short name": "tanh",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.true_divide": {
        "short name": "true_divide",
        "parameters": {
            "dividend": null,
            "divisor": null,
            "out": null
        }
    },
    "torch.trunc": {
        "short name": "trunc",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.xlogy": {
        "short name": "xlogy",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.argmax": {
        "short name": "argmax",
        "parameters": {
            "input": null
        }
    },
    "torch.argmin": {
        "short name": "argmin",
        "parameters": {
            "input": null,
            "dim": "None",
            "keepdim": "False"
        }
    },
    "torch.amax": {
        "short name": "amax",
        "parameters": {
            "input": null,
            "dim": null,
            "keepdim": "False",
            "out": "None"
        }
    },
    "torch.amin": {
        "short name": "amin",
        "parameters": {
            "input": null,
            "dim": null,
            "keepdim": "False",
            "out": "None"
        }
    },
    "torch.aminmax": {
        "short name": "aminmax",
        "parameters": {
            "input": null,
            "dim": "None",
            "keepdim": "False",
            "out": "None) -> (Tensor min",
            "Tensor max": null
        }
    },
    "torch.all": {
        "short name": "all",
        "parameters": {
            "input": null
        }
    },
    "torch.any": {
        "short name": "any",
        "parameters": {
            "input": null
        }
    },
    "torch.max": {
        "short name": "max",
        "parameters": {
            "input": null
        }
    },
    "torch.min": {
        "short name": "min",
        "parameters": {
            "input": null
        }
    },
    "torch.dist": {
        "short name": "dist",
        "parameters": {
            "input": null,
            "other": null,
            "p": "2"
        }
    },
    "torch.logsumexp": {
        "short name": "logsumexp",
        "parameters": {
            "input": null,
            "dim": null,
            "keepdim": "False",
            "out": "None"
        }
    },
    "torch.mean": {
        "short name": "mean",
        "parameters": {
            "input": null,
            "dtype": "None"
        }
    },
    "torch.nanmean": {
        "short name": "nanmean",
        "parameters": {
            "input": null,
            "dim": "None",
            "keepdim": "False",
            "dtype": "None",
            "out": "None"
        }
    },
    "torch.median": {
        "short name": "median",
        "parameters": {
            "input": null
        }
    },
    "torch.nanmedian": {
        "short name": "nanmedian",
        "parameters": {
            "input": null
        }
    },
    "torch.mode": {
        "short name": "mode",
        "parameters": {
            "input": null,
            "dim": "- 1",
            "keepdim": "False",
            "out": "None"
        }
    },
    "torch.norm": {
        "short name": "norm",
        "parameters": {
            "input": null,
            "p": "'fro'",
            "dim": "None",
            "keepdim": "False",
            "out": "None",
            "dtype": "None"
        }
    },
    "torch.nansum": {
        "short name": "nansum",
        "parameters": {
            "input": null,
            "dtype": "None"
        }
    },
    "torch.prod": {
        "short name": "prod",
        "parameters": {
            "input": null,
            "dtype": "None"
        }
    },
    "torch.quantile": {
        "short name": "quantile",
        "parameters": {
            "input": null,
            "q": null,
            "dim": "None",
            "keepdim": "False",
            "interpolation": "'linear'",
            "out": "None"
        }
    },
    "torch.nanquantile": {
        "short name": "nanquantile",
        "parameters": {
            "input": null,
            "q": null,
            "dim": "None",
            "keepdim": "False",
            "interpolation": "'linear'",
            "out": "None"
        }
    },
    "torch.std": {
        "short name": "std",
        "parameters": {
            "input": null,
            "dim": null,
            "unbiased": null,
            "keepdim": "False",
            "out": "None"
        }
    },
    "torch.std_mean": {
        "short name": "std_mean",
        "parameters": {
            "input": null,
            "dim": null,
            "unbiased": null,
            "keepdim": "False",
            "out": "None"
        }
    },
    "torch.sum": {
        "short name": "sum",
        "parameters": {
            "input": null,
            "dtype": "None"
        }
    },
    "torch.unique": {
        "short name": "unique",
        "parameters": {
            "input": null,
            "sorted": "True",
            "return_inverse": "False",
            "return_counts": "False",
            "dim": "None"
        }
    },
    "torch.unique_consecutive": {
        "short name": "unique_consecutive",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.var": {
        "short name": "var",
        "parameters": {
            "input": null,
            "dim": null,
            "unbiased": null,
            "keepdim": "False",
            "out": "None"
        }
    },
    "torch.var_mean": {
        "short name": "var_mean",
        "parameters": {
            "input": null,
            "dim": null,
            "unbiased": null,
            "keepdim": "False",
            "out": "None"
        }
    },
    "torch.count_nonzero": {
        "short name": "count_nonzero",
        "parameters": {
            "input": null,
            "dim": "None"
        }
    },
    "torch.allclose": {
        "short name": "allclose",
        "parameters": {
            "input": null,
            "other": null,
            "rtol": "1e-05",
            "atol": "1e-08",
            "equal_nan": "False"
        }
    },
    "torch.argsort": {
        "short name": "argsort",
        "parameters": {
            "input": null,
            "dim": "- 1",
            "descending": "False"
        }
    },
    "torch.eq": {
        "short name": "eq",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.equal": {
        "short name": "equal",
        "parameters": {
            "input": null,
            "other": null
        }
    },
    "torch.ge": {
        "short name": "ge",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.greater_equal": {
        "short name": "greater_equal",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.gt": {
        "short name": "gt",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.greater": {
        "short name": "greater",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.isclose": {
        "short name": "isclose",
        "parameters": {
            "input": null,
            "other": null,
            "rtol": "1e-05",
            "atol": "1e-08",
            "equal_nan": "False"
        }
    },
    "torch.isfinite": {
        "short name": "isfinite",
        "parameters": {
            "input": null
        }
    },
    "torch.isin": {
        "short name": "isin",
        "parameters": {
            "elements": null,
            "test_elements": null,
            "assume_unique": "False",
            "invert": "False"
        }
    },
    "torch.isinf": {
        "short name": "isinf",
        "parameters": {
            "input": null
        }
    },
    "torch.isposinf": {
        "short name": "isposinf",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.isneginf": {
        "short name": "isneginf",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.isnan": {
        "short name": "isnan",
        "parameters": {
            "input": null
        }
    },
    "torch.isreal": {
        "short name": "isreal",
        "parameters": {
            "input": null
        }
    },
    "torch.kthvalue": {
        "short name": "kthvalue",
        "parameters": {
            "input": null,
            "k": null,
            "dim": "None",
            "keepdim": "False",
            "out": "None"
        }
    },
    "torch.le": {
        "short name": "le",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.less_equal": {
        "short name": "less_equal",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.lt": {
        "short name": "lt",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.less": {
        "short name": "less",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.maximum": {
        "short name": "maximum",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.minimum": {
        "short name": "minimum",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.fmax": {
        "short name": "fmax",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.fmin": {
        "short name": "fmin",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.ne": {
        "short name": "ne",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.not_equal": {
        "short name": "not_equal",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.sort": {
        "short name": "sort",
        "parameters": {
            "input": null,
            "dim": "- 1",
            "descending": "False",
            "stable": "False",
            "out": "None"
        }
    },
    "torch.topk": {
        "short name": "topk",
        "parameters": {
            "input": null,
            "k": null,
            "dim": "None",
            "largest": "True",
            "sorted": "True",
            "out": "None"
        }
    },
    "torch.msort": {
        "short name": "msort",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.stft": {
        "short name": "stft",
        "parameters": {
            "input": null,
            "n_fft": null,
            "hop_length": "None",
            "win_length": "None",
            "window": "None",
            "center": "True",
            "pad_mode": "'reflect'",
            "normalized": "False",
            "onesided": "None",
            "return_complex": "None"
        }
    },
    "torch.istft": {
        "short name": "istft",
        "parameters": {
            "input": null,
            "n_fft": null,
            "hop_length": "None",
            "win_length": "None",
            "window": "None",
            "center": "True",
            "normalized": "False",
            "onesided": "None",
            "length": "None",
            "return_complex": "False"
        }
    },
    "torch.bartlett_window": {
        "short name": "bartlett_window",
        "parameters": {
            "window_length": null,
            "periodic": "True",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.blackman_window": {
        "short name": "blackman_window",
        "parameters": {
            "window_length": null,
            "periodic": "True",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.hamming_window": {
        "short name": "hamming_window",
        "parameters": {
            "window_length": null,
            "periodic": "True",
            "alpha": "0.54",
            "beta": "0.46",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.hann_window": {
        "short name": "hann_window",
        "parameters": {
            "window_length": null,
            "periodic": "True",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.kaiser_window": {
        "short name": "kaiser_window",
        "parameters": {
            "window_length": null,
            "periodic": "True",
            "beta": "12.0",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.atleast_1d": {
        "short name": "atleast_1d",
        "parameters": {
            "*tensors": null
        }
    },
    "torch.atleast_2d": {
        "short name": "atleast_2d",
        "parameters": {
            "*tensors": null
        }
    },
    "torch.atleast_3d": {
        "short name": "atleast_3d",
        "parameters": {
            "*tensors": null
        }
    },
    "torch.bincount": {
        "short name": "bincount",
        "parameters": {
            "input": null,
            "weights": "None",
            "minlength": "0"
        }
    },
    "torch.block_diag": {
        "short name": "block_diag",
        "parameters": {
            "*tensors": null
        }
    },
    "torch.broadcast_tensors": {
        "short name": "broadcast_tensors",
        "parameters": {
            "*tensors": null
        }
    },
    "torch.broadcast_to": {
        "short name": "broadcast_to",
        "parameters": {
            "input": null,
            "shape": null
        }
    },
    "torch.broadcast_shapes": {
        "short name": "broadcast_shapes",
        "parameters": {
            "*shapes": null
        }
    },
    "torch.bucketize": {
        "short name": "bucketize",
        "parameters": {
            "input": null,
            "boundaries": null,
            "out_int32": "False",
            "right": "False",
            "out": "None"
        }
    },
    "torch.cartesian_prod": {
        "short name": "cartesian_prod",
        "parameters": {
            "*tensors": null
        }
    },
    "torch.cdist": {
        "short name": "cdist",
        "parameters": {
            "x1": null,
            "x2": null,
            "p": "2.0",
            "compute_mode": "'use_mm_for_euclid_dist_if_necessary'"
        }
    },
    "torch.clone": {
        "short name": "clone",
        "parameters": {
            "input": null,
            "memory_format": "torch.preserve_format"
        }
    },
    "torch.combinations": {
        "short name": "combinations",
        "parameters": {
            "input": null,
            "r": "2",
            "with_replacement": "False"
        }
    },
    "torch.corrcoef": {
        "short name": "corrcoef",
        "parameters": {
            "input": null
        }
    },
    "torch.cov": {
        "short name": "cov",
        "parameters": {
            "input": null,
            "correction": "1",
            "fweights": "None",
            "aweights": "None"
        }
    },
    "torch.cross": {
        "short name": "cross",
        "parameters": {
            "input": null,
            "other": null,
            "dim": "None",
            "out": "None"
        }
    },
    "torch.cummax": {
        "short name": "cummax",
        "parameters": {
            "input": null,
            "dim": null,
            "out": "None"
        }
    },
    "torch.cummin": {
        "short name": "cummin",
        "parameters": {
            "input": null,
            "dim": null,
            "out": "None"
        }
    },
    "torch.cumprod": {
        "short name": "cumprod",
        "parameters": {
            "input": null,
            "dim": null,
            "dtype": "None",
            "out": "None"
        }
    },
    "torch.cumsum": {
        "short name": "cumsum",
        "parameters": {
            "input": null,
            "dim": null,
            "dtype": "None",
            "out": "None"
        }
    },
    "torch.diag": {
        "short name": "diag",
        "parameters": {
            "input": null,
            "diagonal": "0",
            "out": "None"
        }
    },
    "torch.diag_embed": {
        "short name": "diag_embed",
        "parameters": {
            "input": null,
            "offset": "0",
            "dim1": "- 2",
            "dim2": "- 1"
        }
    },
    "torch.diagflat": {
        "short name": "diagflat",
        "parameters": {
            "input": null,
            "offset": "0"
        }
    },
    "torch.diagonal": {
        "short name": "diagonal",
        "parameters": {
            "input": null,
            "offset": "0",
            "dim1": "0",
            "dim2": "1"
        }
    },
    "torch.diff": {
        "short name": "diff",
        "parameters": {
            "input": null,
            "n": "1",
            "dim": "- 1",
            "prepend": "None",
            "append": "None"
        }
    },
    "torch.einsum": {
        "short name": "einsum",
        "parameters": {
            "equation": null,
            "*operands": null
        }
    },
    "torch.flatten": {
        "short name": "flatten",
        "parameters": {
            "input": null,
            "start_dim": "0",
            "end_dim": "- 1"
        }
    },
    "torch.flip": {
        "short name": "flip",
        "parameters": {
            "input": null,
            "dims": null
        }
    },
    "torch.fliplr": {
        "short name": "fliplr",
        "parameters": {
            "input": null
        }
    },
    "torch.flipud": {
        "short name": "flipud",
        "parameters": {
            "input": null
        }
    },
    "torch.kron": {
        "short name": "kron",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.rot90": {
        "short name": "rot90",
        "parameters": {
            "input": null,
            "k": null,
            "dims": null
        }
    },
    "torch.gcd": {
        "short name": "gcd",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.histc": {
        "short name": "histc",
        "parameters": {
            "input": null,
            "bins": "100",
            "min": "0",
            "max": "0",
            "out": "None"
        }
    },
    "torch.histogram": {
        "short name": "histogram",
        "parameters": {
            "input": null,
            "bins": null,
            "range": "None",
            "weight": "None",
            "density": "False",
            "out": "None"
        }
    },
    "torch.histogramdd": {
        "short name": "histogramdd",
        "parameters": {
            "input": null,
            "bins": null,
            "range": "None",
            "weight": "None",
            "density": "False",
            "out": "None) -> (Tensor",
            "Tensor[]": null
        }
    },
    "torch.meshgrid": {
        "short name": "meshgrid",
        "parameters": {
            "*tensors": null,
            "indexing": "None"
        }
    },
    "torch.lcm": {
        "short name": "lcm",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.logcumsumexp": {
        "short name": "logcumsumexp",
        "parameters": {
            "input": null,
            "dim": null,
            "out": "None"
        }
    },
    "torch.ravel": {
        "short name": "ravel",
        "parameters": {
            "input": null
        }
    },
    "torch.renorm": {
        "short name": "renorm",
        "parameters": {
            "input": null,
            "p": null,
            "dim": null,
            "maxnorm": null,
            "out": "None"
        }
    },
    "torch.repeat_interleave": {
        "short name": "repeat_interleave",
        "parameters": {
            "input": null,
            "repeats": null,
            "dim": "None",
            "output_size": "None"
        }
    },
    "torch.roll": {
        "short name": "roll",
        "parameters": {
            "input": null,
            "shifts": null,
            "dims": "None"
        }
    },
    "torch.searchsorted": {
        "short name": "searchsorted",
        "parameters": {
            "sorted_sequence": null,
            "values": null,
            "out_int32": "False",
            "right": "False",
            "side": "'left'",
            "out": "None",
            "sorter": "None"
        }
    },
    "torch.tensordot": {
        "short name": "tensordot",
        "parameters": {
            "a": null,
            "b": null,
            "dims": "2",
            "out": "None"
        }
    },
    "torch.trace": {
        "short name": "trace",
        "parameters": {
            "input": null
        }
    },
    "torch.tril": {
        "short name": "tril",
        "parameters": {
            "input": null,
            "diagonal": "0",
            "out": "None"
        }
    },
    "torch.tril_indices": {
        "short name": "tril_indices",
        "parameters": {
            "row": null,
            "col": null,
            "offset": "0",
            "dtype": "torch.long",
            "device": "'cpu'",
            "layout": "torch.strided"
        }
    },
    "torch.triu": {
        "short name": "triu",
        "parameters": {
            "input": null,
            "diagonal": "0",
            "out": "None"
        }
    },
    "torch.triu_indices": {
        "short name": "triu_indices",
        "parameters": {
            "row": null,
            "col": null,
            "offset": "0",
            "dtype": "torch.long",
            "device": "'cpu'",
            "layout": "torch.strided"
        }
    },
    "torch.vander": {
        "short name": "vander",
        "parameters": {
            "x": null,
            "N": "None",
            "increasing": "False"
        }
    },
    "torch.view_as_real": {
        "short name": "view_as_real",
        "parameters": {
            "input": null
        }
    },
    "torch.view_as_complex": {
        "short name": "view_as_complex",
        "parameters": {
            "input": null
        }
    },
    "torch.resolve_conj": {
        "short name": "resolve_conj",
        "parameters": {
            "input": null
        }
    },
    "torch.resolve_neg": {
        "short name": "resolve_neg",
        "parameters": {
            "input": null
        }
    },
    "torch.addbmm": {
        "short name": "addbmm",
        "parameters": {
            "input": null,
            "batch1": null,
            "batch2": null,
            "beta": "1",
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.addmm": {
        "short name": "addmm",
        "parameters": {
            "input": null,
            "mat1": null,
            "mat2": null,
            "beta": "1",
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.addmv": {
        "short name": "addmv",
        "parameters": {
            "input": null,
            "mat": null,
            "vec": null,
            "beta": "1",
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.addr": {
        "short name": "addr",
        "parameters": {
            "input": null,
            "vec1": null,
            "vec2": null,
            "beta": "1",
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.baddbmm": {
        "short name": "baddbmm",
        "parameters": {
            "input": null,
            "batch1": null,
            "batch2": null,
            "beta": "1",
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.bmm": {
        "short name": "bmm",
        "parameters": {
            "input": null,
            "mat2": null,
            "out": "None"
        }
    },
    "torch.chain_matmul": {
        "short name": "chain_matmul",
        "parameters": {
            "*matrices": null,
            "out": "None"
        }
    },
    "torch.cholesky": {
        "short name": "cholesky",
        "parameters": {
            "input": null,
            "upper": "False",
            "out": "None"
        }
    },
    "torch.cholesky_inverse": {
        "short name": "cholesky_inverse",
        "parameters": {
            "input": null,
            "upper": "False",
            "out": "None"
        }
    },
    "torch.cholesky_solve": {
        "short name": "cholesky_solve",
        "parameters": {
            "input": null,
            "input2": null,
            "upper": "False",
            "out": "None"
        }
    },
    "torch.dot": {
        "short name": "dot",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.eig": {
        "short name": "eig",
        "parameters": {
            "input": null,
            "eigenvectors": "False",
            "out": "None"
        }
    },
    "torch.geqrf": {
        "short name": "geqrf",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.ger": {
        "short name": "ger",
        "parameters": {
            "input": null,
            "vec2": null,
            "out": "None"
        }
    },
    "torch.inner": {
        "short name": "inner",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.inverse": {
        "short name": "inverse",
        "parameters": {
            "input": null,
            "out": "None"
        }
    },
    "torch.det": {
        "short name": "det",
        "parameters": {
            "input": null
        }
    },
    "torch.logdet": {
        "short name": "logdet",
        "parameters": {
            "input": null
        }
    },
    "torch.slogdet": {
        "short name": "slogdet",
        "parameters": {
            "input": null
        }
    },
    "torch.lstsq": {
        "short name": "lstsq",
        "parameters": {
            "input": null,
            "A": null,
            "out": "None"
        }
    },
    "torch.lu": {
        "short name": "lu",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.lu_solve": {
        "short name": "lu_solve",
        "parameters": {
            "b": null,
            "LU_data": null,
            "LU_pivots": null,
            "out": "None"
        }
    },
    "torch.lu_unpack": {
        "short name": "lu_unpack",
        "parameters": {
            "LU_data": null,
            "LU_pivots": null,
            "unpack_data": "True",
            "unpack_pivots": "True",
            "out": "None"
        }
    },
    "torch.matmul": {
        "short name": "matmul",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.matrix_power": {
        "short name": "matrix_power",
        "parameters": {
            "input": null,
            "n": null,
            "out": "None"
        }
    },
    "torch.matrix_rank": {
        "short name": "matrix_rank",
        "parameters": {
            "input": null,
            "tol": "None",
            "symmetric": "False",
            "out": "None"
        }
    },
    "torch.matrix_exp": {
        "short name": "matrix_exp",
        "parameters": {
            "A": null
        }
    },
    "torch.mm": {
        "short name": "mm",
        "parameters": {
            "input": null,
            "mat2": null,
            "out": "None"
        }
    },
    "torch.mv": {
        "short name": "mv",
        "parameters": {
            "input": null,
            "vec": null,
            "out": "None"
        }
    },
    "torch.orgqr": {
        "short name": "orgqr",
        "parameters": {
            "input": null,
            "tau": null
        }
    },
    "torch.ormqr": {
        "short name": "ormqr",
        "parameters": {
            "input": null,
            "tau": null,
            "other": null,
            "left": "True",
            "transpose": "False",
            "out": "None"
        }
    },
    "torch.outer": {
        "short name": "outer",
        "parameters": {
            "input": null,
            "vec2": null,
            "out": "None"
        }
    },
    "torch.pinverse": {
        "short name": "pinverse",
        "parameters": {
            "input": null,
            "rcond": "1e-15"
        }
    },
    "torch.qr": {
        "short name": "qr",
        "parameters": {
            "input": null,
            "some": "True",
            "out": "None"
        }
    },
    "torch.solve": {
        "short name": "solve",
        "parameters": {
            "input": null,
            "A": null,
            "out": "None"
        }
    },
    "torch.svd": {
        "short name": "svd",
        "parameters": {
            "input": null,
            "some": "True",
            "compute_uv": "True",
            "out": "None"
        }
    },
    "torch.svd_lowrank": {
        "short name": "svd_lowrank",
        "parameters": {
            "A": null,
            "q": "6",
            "niter": "2",
            "M": "None"
        }
    },
    "torch.pca_lowrank": {
        "short name": "pca_lowrank",
        "parameters": {
            "A": null,
            "q": "None",
            "center": "True",
            "niter": "2"
        }
    },
    "torch.symeig": {
        "short name": "symeig",
        "parameters": {
            "input": null,
            "eigenvectors": "False",
            "upper": "True",
            "out": "None"
        }
    },
    "torch.lobpcg": {
        "short name": "lobpcg",
        "parameters": {
            "A": null,
            "k": "None",
            "B": "None",
            "X": "None",
            "n": "None",
            "iK": "None",
            "niter": "None",
            "tol": "None",
            "largest": "None",
            "method": "None",
            "tracker": "None",
            "ortho_iparams": "None",
            "ortho_fparams": "None",
            "ortho_bparams": "None"
        }
    },
    "torch.trapz": {
        "short name": "trapz",
        "parameters": {
            "y": null,
            "x": null,
            "dim": "- 1"
        }
    },
    "torch.trapezoid": {
        "short name": "trapezoid",
        "parameters": {
            "y": null,
            "x": "None",
            "dx": "None",
            "dim": "- 1"
        }
    },
    "torch.cumulative_trapezoid": {
        "short name": "cumulative_trapezoid",
        "parameters": {
            "y": null,
            "x": "None",
            "dx": "None",
            "dim": "- 1"
        }
    },
    "torch.triangular_solve": {
        "short name": "triangular_solve",
        "parameters": {
            "b": null,
            "A": null,
            "upper": "True",
            "transpose": "False",
            "unitriangular": "False",
            "out": "None"
        }
    },
    "torch.vdot": {
        "short name": "vdot",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.compiled_with_cxx11_abi": {
        "short name": "compiled_with_cxx11_abi",
        "parameters": {}
    },
    "torch.result_type": {
        "short name": "result_type",
        "parameters": {
            "tensor1": null,
            "tensor2": null
        }
    },
    "torch.can_cast": {
        "short name": "can_cast",
        "parameters": {
            "from": null,
            "to": null
        }
    },
    "torch.promote_types": {
        "short name": "promote_types",
        "parameters": {
            "type1": null,
            "type2": null
        }
    },
    "torch.use_deterministic_algorithms": {
        "short name": "use_deterministic_algorithms",
        "parameters": {
            "mode": null,
            "warn_only": "False"
        }
    },
    "torch.are_deterministic_algorithms_enabled": {
        "short name": "are_deterministic_algorithms_enabled",
        "parameters": {}
    },
    "torch.is_deterministic_algorithms_warn_only_enabled": {
        "short name": "is_deterministic_algorithms_warn_only_enabled",
        "parameters": {}
    },
    "torch.set_deterministic_debug_mode": {
        "short name": "set_deterministic_debug_mode",
        "parameters": {
            "debug_mode": null
        }
    },
    "torch.get_deterministic_debug_mode": {
        "short name": "get_deterministic_debug_mode",
        "parameters": {}
    },
    "torch.set_warn_always": {
        "short name": "set_warn_always",
        "parameters": {
            "b": null
        }
    },
    "torch.is_warn_always_enabled": {
        "short name": "is_warn_always_enabled",
        "parameters": {}
    },
    "torch._assert": {
        "short name": "_assert",
        "parameters": {
            "condition": null,
            "message": null
        }
    },
    "torch.nn.modules.module.register_module_forward_pre_hook": {
        "short name": "register_module_forward_pre_hook",
        "parameters": {
            "hook": null
        }
    },
    "torch.nn.modules.module.register_module_forward_hook": {
        "short name": "register_module_forward_hook",
        "parameters": {
            "hook": null
        }
    },
    "torch.nn.modules.module.register_module_backward_hook": {
        "short name": "register_module_backward_hook",
        "parameters": {
            "hook": null
        }
    },
    "torch.nn.modules.module.register_module_full_backward_hook": {
        "short name": "register_module_full_backward_hook",
        "parameters": {
            "hook": null
        }
    },
    "torch.nn.utils.clip_grad_norm_": {
        "short name": "clip_grad_norm_",
        "parameters": {
            "parameters": null,
            "max_norm": null,
            "norm_type": "2.0",
            "error_if_nonfinite": "False"
        }
    },
    "torch.nn.utils.clip_grad_value_": {
        "short name": "clip_grad_value_",
        "parameters": {
            "parameters": null,
            "clip_value": null
        }
    },
    "torch.nn.utils.parameters_to_vector": {
        "short name": "parameters_to_vector",
        "parameters": {
            "parameters": null
        }
    },
    "torch.nn.utils.vector_to_parameters": {
        "short name": "vector_to_parameters",
        "parameters": {
            "vec": null,
            "parameters": null
        }
    },
    "torch.nn.utils.prune.random_unstructured": {
        "short name": "random_unstructured",
        "parameters": {
            "module": null,
            "name": null,
            "amount": null
        }
    },
    "torch.nn.utils.prune.l1_unstructured": {
        "short name": "l1_unstructured",
        "parameters": {
            "module": null,
            "name": null,
            "amount": null,
            "importance_scores": "None"
        }
    },
    "torch.nn.utils.prune.random_structured": {
        "short name": "random_structured",
        "parameters": {
            "module": null,
            "name": null,
            "amount": null,
            "dim": null
        }
    },
    "torch.nn.utils.prune.ln_structured": {
        "short name": "ln_structured",
        "parameters": {
            "module": null,
            "name": null,
            "amount": null,
            "n": null,
            "dim": null,
            "importance_scores": "None"
        }
    },
    "torch.nn.utils.prune.global_unstructured": {
        "short name": "global_unstructured",
        "parameters": {
            "parameters": null,
            "pruning_method": null,
            "importance_scores": "None",
            "**kwargs": null
        }
    },
    "torch.nn.utils.prune.custom_from_mask": {
        "short name": "custom_from_mask",
        "parameters": {
            "module": null,
            "name": null,
            "mask": null
        }
    },
    "torch.nn.utils.prune.remove": {
        "short name": "remove",
        "parameters": {
            "module": null,
            "name": null
        }
    },
    "torch.nn.utils.prune.is_pruned": {
        "short name": "is_pruned",
        "parameters": {
            "module": null
        }
    },
    "torch.nn.utils.weight_norm": {
        "short name": "weight_norm",
        "parameters": {
            "module": null,
            "name": "'weight'",
            "dim": "0"
        }
    },
    "torch.nn.utils.remove_weight_norm": {
        "short name": "remove_weight_norm",
        "parameters": {
            "module": null,
            "name": "'weight'"
        }
    },
    "torch.nn.utils.spectral_norm": {
        "short name": "spectral_norm",
        "parameters": {
            "module": null,
            "name": "'weight'",
            "n_power_iterations": "1",
            "eps": "1e-12",
            "dim": "None"
        }
    },
    "torch.nn.utils.remove_spectral_norm": {
        "short name": "remove_spectral_norm",
        "parameters": {
            "module": null,
            "name": "'weight'"
        }
    },
    "torch.nn.utils.skip_init": {
        "short name": "skip_init",
        "parameters": {
            "module_cls": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.utils.parametrizations.orthogonal": {
        "short name": "orthogonal",
        "parameters": {
            "module": null,
            "name": "'weight'",
            "orthogonal_map": "None",
            "use_trivialization": "True"
        }
    },
    "torch.nn.utils.parametrizations.spectral_norm": {
        "short name": "spectral_norm",
        "parameters": {
            "module": null,
            "name": "'weight'",
            "n_power_iterations": "1",
            "eps": "1e-12",
            "dim": "None"
        }
    },
    "torch.nn.utils.parametrize.register_parametrization": {
        "short name": "register_parametrization",
        "parameters": {
            "module": null,
            "tensor_name": null,
            "parametrization": null,
            "unsafe": "False"
        }
    },
    "torch.nn.utils.parametrize.remove_parametrizations": {
        "short name": "remove_parametrizations",
        "parameters": {
            "module": null,
            "tensor_name": null,
            "leave_parametrized": "True"
        }
    },
    "torch.nn.utils.parametrize.cached": {
        "short name": "cached",
        "parameters": {}
    },
    "torch.nn.utils.parametrize.is_parametrized": {
        "short name": "is_parametrized",
        "parameters": {
            "module": null,
            "tensor_name": "None"
        }
    },
    "torch.nn.utils.rnn.pack_padded_sequence": {
        "short name": "pack_padded_sequence",
        "parameters": {
            "input": null,
            "lengths": null,
            "batch_first": "False",
            "enforce_sorted": "True"
        }
    },
    "torch.nn.utils.rnn.pad_packed_sequence": {
        "short name": "pad_packed_sequence",
        "parameters": {
            "sequence": null,
            "batch_first": "False",
            "padding_value": "0.0",
            "total_length": "None"
        }
    },
    "torch.nn.utils.rnn.pad_sequence": {
        "short name": "pad_sequence",
        "parameters": {
            "sequences": null,
            "batch_first": "False",
            "padding_value": "0.0"
        }
    },
    "torch.nn.utils.rnn.pack_sequence": {
        "short name": "pack_sequence",
        "parameters": {
            "sequences": null,
            "enforce_sorted": "True"
        }
    },
    "torch.nn.functional.conv1d": {
        "short name": "conv1d",
        "parameters": {
            "input": null,
            "weight": null,
            "bias": "None",
            "stride": "1",
            "padding": "0",
            "dilation": "1",
            "groups": "1"
        }
    },
    "torch.nn.functional.conv2d": {
        "short name": "conv2d",
        "parameters": {
            "input": null,
            "weight": null,
            "bias": "None",
            "stride": "1",
            "padding": "0",
            "dilation": "1",
            "groups": "1"
        }
    },
    "torch.nn.functional.conv3d": {
        "short name": "conv3d",
        "parameters": {
            "input": null,
            "weight": null,
            "bias": "None",
            "stride": "1",
            "padding": "0",
            "dilation": "1",
            "groups": "1"
        }
    },
    "torch.nn.functional.conv_transpose1d": {
        "short name": "conv_transpose1d",
        "parameters": {
            "input": null,
            "weight": null,
            "bias": "None",
            "stride": "1",
            "padding": "0",
            "output_padding": "0",
            "groups": "1",
            "dilation": "1"
        }
    },
    "torch.nn.functional.conv_transpose2d": {
        "short name": "conv_transpose2d",
        "parameters": {
            "input": null,
            "weight": null,
            "bias": "None",
            "stride": "1",
            "padding": "0",
            "output_padding": "0",
            "groups": "1",
            "dilation": "1"
        }
    },
    "torch.nn.functional.conv_transpose3d": {
        "short name": "conv_transpose3d",
        "parameters": {
            "input": null,
            "weight": null,
            "bias": "None",
            "stride": "1",
            "padding": "0",
            "output_padding": "0",
            "groups": "1",
            "dilation": "1"
        }
    },
    "torch.nn.functional.unfold": {
        "short name": "unfold",
        "parameters": {
            "input": null,
            "kernel_size": null,
            "dilation": "1",
            "padding": "0",
            "stride": "1"
        }
    },
    "torch.nn.functional.fold": {
        "short name": "fold",
        "parameters": {
            "input": null,
            "output_size": null,
            "kernel_size": null,
            "dilation": "1",
            "padding": "0",
            "stride": "1"
        }
    },
    "torch.nn.functional.avg_pool1d": {
        "short name": "avg_pool1d",
        "parameters": {
            "input": null,
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "ceil_mode": "False",
            "count_include_pad": "True"
        }
    },
    "torch.nn.functional.avg_pool2d": {
        "short name": "avg_pool2d",
        "parameters": {
            "input": null,
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "ceil_mode": "False",
            "count_include_pad": "True",
            "divisor_override": "None"
        }
    },
    "torch.nn.functional.avg_pool3d": {
        "short name": "avg_pool3d",
        "parameters": {
            "input": null,
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "ceil_mode": "False",
            "count_include_pad": "True",
            "divisor_override": "None"
        }
    },
    "torch.nn.functional.max_pool1d": {
        "short name": "max_pool1d",
        "parameters": {
            "input": null,
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "dilation": "1",
            "ceil_mode": "False",
            "return_indices": "False"
        }
    },
    "torch.nn.functional.max_pool2d": {
        "short name": "max_pool2d",
        "parameters": {
            "input": null,
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "dilation": "1",
            "ceil_mode": "False",
            "return_indices": "False"
        }
    },
    "torch.nn.functional.max_pool3d": {
        "short name": "max_pool3d",
        "parameters": {
            "input": null,
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "dilation": "1",
            "ceil_mode": "False",
            "return_indices": "False"
        }
    },
    "torch.nn.functional.max_unpool1d": {
        "short name": "max_unpool1d",
        "parameters": {
            "input": null,
            "indices": null,
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "output_size": "None"
        }
    },
    "torch.nn.functional.max_unpool2d": {
        "short name": "max_unpool2d",
        "parameters": {
            "input": null,
            "indices": null,
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "output_size": "None"
        }
    },
    "torch.nn.functional.max_unpool3d": {
        "short name": "max_unpool3d",
        "parameters": {
            "input": null,
            "indices": null,
            "kernel_size": null,
            "stride": "None",
            "padding": "0",
            "output_size": "None"
        }
    },
    "torch.nn.functional.lp_pool1d": {
        "short name": "lp_pool1d",
        "parameters": {
            "input": null,
            "norm_type": null,
            "kernel_size": null,
            "stride": "None",
            "ceil_mode": "False"
        }
    },
    "torch.nn.functional.lp_pool2d": {
        "short name": "lp_pool2d",
        "parameters": {
            "input": null,
            "norm_type": null,
            "kernel_size": null,
            "stride": "None",
            "ceil_mode": "False"
        }
    },
    "torch.nn.functional.adaptive_max_pool1d": {
        "short name": "adaptive_max_pool1d",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.functional.adaptive_max_pool2d": {
        "short name": "adaptive_max_pool2d",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.functional.adaptive_max_pool3d": {
        "short name": "adaptive_max_pool3d",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.functional.adaptive_avg_pool1d": {
        "short name": "adaptive_avg_pool1d",
        "parameters": {
            "input": null,
            "output_size": null
        }
    },
    "torch.nn.functional.adaptive_avg_pool2d": {
        "short name": "adaptive_avg_pool2d",
        "parameters": {
            "input": null,
            "output_size": null
        }
    },
    "torch.nn.functional.adaptive_avg_pool3d": {
        "short name": "adaptive_avg_pool3d",
        "parameters": {
            "input": null,
            "output_size": null
        }
    },
    "torch.nn.functional.fractional_max_pool2d": {
        "short name": "fractional_max_pool2d",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.functional.fractional_max_pool3d": {
        "short name": "fractional_max_pool3d",
        "parameters": {
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.nn.functional.threshold": {
        "short name": "threshold",
        "parameters": {
            "input": null,
            "threshold": null,
            "value": null,
            "inplace": "False"
        }
    },
    "torch.nn.functional.threshold_": {
        "short name": "threshold_",
        "parameters": {
            "input": null,
            "threshold": null,
            "value": null
        }
    },
    "torch.nn.functional.relu": {
        "short name": "relu",
        "parameters": {
            "input": null,
            "inplace": "False"
        }
    },
    "torch.nn.functional.relu_": {
        "short name": "relu_",
        "parameters": {
            "input": null
        }
    },
    "torch.nn.functional.hardtanh": {
        "short name": "hardtanh",
        "parameters": {
            "input": null,
            "min_val": "- 1.0",
            "max_val": "1.0",
            "inplace": "False"
        }
    },
    "torch.nn.functional.hardtanh_": {
        "short name": "hardtanh_",
        "parameters": {
            "input": null,
            "min_val": "- 1.0",
            "max_val": "1.0"
        }
    },
    "torch.nn.functional.hardswish": {
        "short name": "hardswish",
        "parameters": {
            "input": null,
            "inplace": "False"
        }
    },
    "torch.nn.functional.relu6": {
        "short name": "relu6",
        "parameters": {
            "input": null,
            "inplace": "False"
        }
    },
    "torch.nn.functional.elu": {
        "short name": "elu",
        "parameters": {
            "input": null,
            "alpha": "1.0",
            "inplace": "False"
        }
    },
    "torch.nn.functional.elu_": {
        "short name": "elu_",
        "parameters": {
            "input": null,
            "alpha": "1.0"
        }
    },
    "torch.nn.functional.selu": {
        "short name": "selu",
        "parameters": {
            "input": null,
            "inplace": "False"
        }
    },
    "torch.nn.functional.celu": {
        "short name": "celu",
        "parameters": {
            "input": null,
            "alpha": "1.0",
            "inplace": "False"
        }
    },
    "torch.nn.functional.leaky_relu": {
        "short name": "leaky_relu",
        "parameters": {
            "input": null,
            "negative_slope": "0.01",
            "inplace": "False"
        }
    },
    "torch.nn.functional.leaky_relu_": {
        "short name": "leaky_relu_",
        "parameters": {
            "input": null,
            "negative_slope": "0.01"
        }
    },
    "torch.nn.functional.prelu": {
        "short name": "prelu",
        "parameters": {
            "input": null,
            "weight": null
        }
    },
    "torch.nn.functional.rrelu": {
        "short name": "rrelu",
        "parameters": {
            "input": null,
            "lower": "1.0 / 8",
            "upper": "1.0 / 3",
            "training": "False",
            "inplace": "False"
        }
    },
    "torch.nn.functional.rrelu_": {
        "short name": "rrelu_",
        "parameters": {
            "input": null,
            "lower": "1.0 / 8",
            "upper": "1.0 / 3",
            "training": "False"
        }
    },
    "torch.nn.functional.glu": {
        "short name": "glu",
        "parameters": {
            "input": null,
            "dim": "- 1"
        }
    },
    "torch.nn.functional.gelu": {
        "short name": "gelu",
        "parameters": {
            "input": null
        }
    },
    "torch.nn.functional.logsigmoid": {
        "short name": "logsigmoid",
        "parameters": {
            "input": null
        }
    },
    "torch.nn.functional.hardshrink": {
        "short name": "hardshrink",
        "parameters": {
            "input": null,
            "lambd": "0.5"
        }
    },
    "torch.nn.functional.tanhshrink": {
        "short name": "tanhshrink",
        "parameters": {
            "input": null
        }
    },
    "torch.nn.functional.softsign": {
        "short name": "softsign",
        "parameters": {
            "input": null
        }
    },
    "torch.nn.functional.softplus": {
        "short name": "softplus",
        "parameters": {
            "input": null,
            "beta": "1",
            "threshold": "20"
        }
    },
    "torch.nn.functional.softmin": {
        "short name": "softmin",
        "parameters": {
            "input": null,
            "dim": "None",
            "_stacklevel": "3",
            "dtype": "None"
        }
    },
    "torch.nn.functional.softmax": {
        "short name": "softmax",
        "parameters": {
            "input": null,
            "dim": "None",
            "_stacklevel": "3",
            "dtype": "None"
        }
    },
    "torch.nn.functional.softshrink": {
        "short name": "softshrink",
        "parameters": {
            "input": null,
            "lambd": "0.5"
        }
    },
    "torch.nn.functional.gumbel_softmax": {
        "short name": "gumbel_softmax",
        "parameters": {
            "logits": null,
            "tau": "1",
            "hard": "False",
            "eps": "1e-10",
            "dim": "- 1"
        }
    },
    "torch.nn.functional.log_softmax": {
        "short name": "log_softmax",
        "parameters": {
            "input": null,
            "dim": "None",
            "_stacklevel": "3",
            "dtype": "None"
        }
    },
    "torch.nn.functional.tanh": {
        "short name": "tanh",
        "parameters": {
            "input": null
        }
    },
    "torch.nn.functional.sigmoid": {
        "short name": "sigmoid",
        "parameters": {
            "input": null
        }
    },
    "torch.nn.functional.hardsigmoid": {
        "short name": "hardsigmoid",
        "parameters": {
            "input": null,
            "inplace": "False"
        }
    },
    "torch.nn.functional.silu": {
        "short name": "silu",
        "parameters": {
            "input": null,
            "inplace": "False"
        }
    },
    "torch.nn.functional.mish": {
        "short name": "mish",
        "parameters": {
            "input": null,
            "inplace": "False"
        }
    },
    "torch.nn.functional.batch_norm": {
        "short name": "batch_norm",
        "parameters": {
            "input": null,
            "running_mean": null,
            "running_var": null,
            "weight": "None",
            "bias": "None",
            "training": "False",
            "momentum": "0.1",
            "eps": "1e-05"
        }
    },
    "torch.nn.functional.group_norm": {
        "short name": "group_norm",
        "parameters": {
            "input": null,
            "num_groups": null,
            "weight": "None",
            "bias": "None",
            "eps": "1e-05"
        }
    },
    "torch.nn.functional.instance_norm": {
        "short name": "instance_norm",
        "parameters": {
            "input": null,
            "running_mean": "None",
            "running_var": "None",
            "weight": "None",
            "bias": "None",
            "use_input_stats": "True",
            "momentum": "0.1",
            "eps": "1e-05"
        }
    },
    "torch.nn.functional.layer_norm": {
        "short name": "layer_norm",
        "parameters": {
            "input": null,
            "normalized_shape": null,
            "weight": "None",
            "bias": "None",
            "eps": "1e-05"
        }
    },
    "torch.nn.functional.local_response_norm": {
        "short name": "local_response_norm",
        "parameters": {
            "input": null,
            "size": null,
            "alpha": "0.0001",
            "beta": "0.75",
            "k": "1.0"
        }
    },
    "torch.nn.functional.normalize": {
        "short name": "normalize",
        "parameters": {
            "input": null,
            "p": "2.0",
            "dim": "1",
            "eps": "1e-12",
            "out": "None"
        }
    },
    "torch.nn.functional.linear": {
        "short name": "linear",
        "parameters": {
            "input": null,
            "weight": null,
            "bias": "None"
        }
    },
    "torch.nn.functional.bilinear": {
        "short name": "bilinear",
        "parameters": {
            "input1": null,
            "input2": null,
            "weight": null,
            "bias": "None"
        }
    },
    "torch.nn.functional.dropout": {
        "short name": "dropout",
        "parameters": {
            "input": null,
            "p": "0.5",
            "training": "True",
            "inplace": "False"
        }
    },
    "torch.nn.functional.alpha_dropout": {
        "short name": "alpha_dropout",
        "parameters": {
            "input": null,
            "p": "0.5",
            "training": "False",
            "inplace": "False"
        }
    },
    "torch.nn.functional.feature_alpha_dropout": {
        "short name": "feature_alpha_dropout",
        "parameters": {
            "input": null,
            "p": "0.5",
            "training": "False",
            "inplace": "False"
        }
    },
    "torch.nn.functional.dropout2d": {
        "short name": "dropout2d",
        "parameters": {
            "input": null,
            "p": "0.5",
            "training": "True",
            "inplace": "False"
        }
    },
    "torch.nn.functional.dropout3d": {
        "short name": "dropout3d",
        "parameters": {
            "input": null,
            "p": "0.5",
            "training": "True",
            "inplace": "False"
        }
    },
    "torch.nn.functional.embedding": {
        "short name": "embedding",
        "parameters": {
            "input": null,
            "weight": null,
            "padding_idx": "None",
            "max_norm": "None",
            "norm_type": "2.0",
            "scale_grad_by_freq": "False",
            "sparse": "False"
        }
    },
    "torch.nn.functional.embedding_bag": {
        "short name": "embedding_bag",
        "parameters": {
            "input": null,
            "weight": null,
            "offsets": "None",
            "max_norm": "None",
            "norm_type": "2",
            "scale_grad_by_freq": "False",
            "mode": "'mean'",
            "sparse": "False",
            "per_sample_weights": "None",
            "include_last_offset": "False",
            "padding_idx": "None"
        }
    },
    "torch.nn.functional.one_hot": {
        "short name": "one_hot",
        "parameters": {
            "tensor": null,
            "num_classes": "- 1"
        }
    },
    "torch.nn.functional.pairwise_distance": {
        "short name": "pairwise_distance",
        "parameters": {
            "x1": null,
            "x2": null,
            "p": "2.0",
            "eps": "1e-06",
            "keepdim": "False"
        }
    },
    "torch.nn.functional.cosine_similarity": {
        "short name": "cosine_similarity",
        "parameters": {
            "x1": null,
            "x2": null,
            "dim": "1",
            "eps": "1e-08"
        }
    },
    "torch.nn.functional.pdist": {
        "short name": "pdist",
        "parameters": {
            "input": null,
            "p": "2"
        }
    },
    "torch.nn.functional.binary_cross_entropy": {
        "short name": "binary_cross_entropy",
        "parameters": {
            "input": null,
            "target": null,
            "weight": "None",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.binary_cross_entropy_with_logits": {
        "short name": "binary_cross_entropy_with_logits",
        "parameters": {
            "input": null,
            "target": null,
            "weight": "None",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'",
            "pos_weight": "None"
        }
    },
    "torch.nn.functional.poisson_nll_loss": {
        "short name": "poisson_nll_loss",
        "parameters": {
            "input": null,
            "target": null,
            "log_input": "True",
            "full": "False",
            "size_average": "None",
            "eps": "1e-08",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.cosine_embedding_loss": {
        "short name": "cosine_embedding_loss",
        "parameters": {
            "input1": null,
            "input2": null,
            "target": null,
            "margin": "0",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.cross_entropy": {
        "short name": "cross_entropy",
        "parameters": {
            "input": null,
            "target": null,
            "weight": "None",
            "size_average": "None",
            "ignore_index": "- 100",
            "reduce": "None",
            "reduction": "'mean'",
            "label_smoothing": "0.0"
        }
    },
    "torch.nn.functional.ctc_loss": {
        "short name": "ctc_loss",
        "parameters": {
            "log_probs": null,
            "targets": null,
            "input_lengths": null,
            "target_lengths": null,
            "blank": "0",
            "reduction": "'mean'",
            "zero_infinity": "False"
        }
    },
    "torch.nn.functional.gaussian_nll_loss": {
        "short name": "gaussian_nll_loss",
        "parameters": {
            "input": null,
            "target": null,
            "var": null,
            "full": "False",
            "eps": "1e-06",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.hinge_embedding_loss": {
        "short name": "hinge_embedding_loss",
        "parameters": {
            "input": null,
            "target": null,
            "margin": "1.0",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.kl_div": {
        "short name": "kl_div",
        "parameters": {
            "input": null,
            "target": null,
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'",
            "log_target": "False"
        }
    },
    "torch.nn.functional.l1_loss": {
        "short name": "l1_loss",
        "parameters": {
            "input": null,
            "target": null,
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.mse_loss": {
        "short name": "mse_loss",
        "parameters": {
            "input": null,
            "target": null,
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.margin_ranking_loss": {
        "short name": "margin_ranking_loss",
        "parameters": {
            "input1": null,
            "input2": null,
            "target": null,
            "margin": "0",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.multilabel_margin_loss": {
        "short name": "multilabel_margin_loss",
        "parameters": {
            "input": null,
            "target": null,
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.multilabel_soft_margin_loss": {
        "short name": "multilabel_soft_margin_loss",
        "parameters": {
            "input": null,
            "target": null,
            "weight": "None",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.multi_margin_loss": {
        "short name": "multi_margin_loss",
        "parameters": {
            "input": null,
            "target": null,
            "p": "1",
            "margin": "1",
            "weight": "None",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.nll_loss": {
        "short name": "nll_loss",
        "parameters": {
            "input": null,
            "target": null,
            "weight": "None",
            "size_average": "None",
            "ignore_index": "- 100",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.huber_loss": {
        "short name": "huber_loss",
        "parameters": {
            "input": null,
            "target": null,
            "reduction": "'mean'",
            "delta": "1.0"
        }
    },
    "torch.nn.functional.smooth_l1_loss": {
        "short name": "smooth_l1_loss",
        "parameters": {
            "input": null,
            "target": null,
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'",
            "beta": "1.0"
        }
    },
    "torch.nn.functional.soft_margin_loss": {
        "short name": "soft_margin_loss",
        "parameters": {
            "input": null,
            "target": null,
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.triplet_margin_loss": {
        "short name": "triplet_margin_loss",
        "parameters": {
            "anchor": null,
            "positive": null,
            "negative": null,
            "margin": "1.0",
            "p": "2",
            "eps": "1e-06",
            "swap": "False",
            "size_average": "None",
            "reduce": "None",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.triplet_margin_with_distance_loss": {
        "short name": "triplet_margin_with_distance_loss",
        "parameters": {
            "anchor": null,
            "positive": null,
            "negative": null,
            "distance_function": "None",
            "margin": "1.0",
            "swap": "False",
            "reduction": "'mean'"
        }
    },
    "torch.nn.functional.pixel_shuffle": {
        "short name": "pixel_shuffle",
        "parameters": {
            "input": null,
            "upscale_factor": null
        }
    },
    "torch.nn.functional.pixel_unshuffle": {
        "short name": "pixel_unshuffle",
        "parameters": {
            "input": null,
            "downscale_factor": null
        }
    },
    "torch.nn.functional.pad": {
        "short name": "pad",
        "parameters": {
            "input": null,
            "pad": null,
            "mode": "'constant'",
            "value": "0.0"
        }
    },
    "torch.nn.functional.interpolate": {
        "short name": "interpolate",
        "parameters": {
            "input": null,
            "size": "None",
            "scale_factor": "None",
            "mode": "'nearest'",
            "align_corners": "None",
            "recompute_scale_factor": "None",
            "antialias": "False"
        }
    },
    "torch.nn.functional.upsample": {
        "short name": "upsample",
        "parameters": {
            "input": null,
            "size": "None",
            "scale_factor": "None",
            "mode": "'nearest'",
            "align_corners": "None"
        }
    },
    "torch.nn.functional.upsample_nearest": {
        "short name": "upsample_nearest",
        "parameters": {
            "input": null,
            "size": "None",
            "scale_factor": "None"
        }
    },
    "torch.nn.functional.upsample_bilinear": {
        "short name": "upsample_bilinear",
        "parameters": {
            "input": null,
            "size": "None",
            "scale_factor": "None"
        }
    },
    "torch.nn.functional.grid_sample": {
        "short name": "grid_sample",
        "parameters": {
            "input": null,
            "grid": null,
            "mode": "'bilinear'",
            "padding_mode": "'zeros'",
            "align_corners": "None"
        }
    },
    "torch.nn.functional.affine_grid": {
        "short name": "affine_grid",
        "parameters": {
            "theta": null,
            "size": null,
            "align_corners": "None"
        }
    },
    "torch.autograd.backward": {
        "short name": "backward",
        "parameters": {
            "tensors": null,
            "grad_tensors": "None",
            "retain_graph": "None",
            "create_graph": "False",
            "grad_variables": "None",
            "inputs": "None"
        }
    },
    "torch.autograd.grad": {
        "short name": "grad",
        "parameters": {
            "outputs": null,
            "inputs": null,
            "grad_outputs": "None",
            "retain_graph": "None",
            "create_graph": "False",
            "only_inputs": "True",
            "allow_unused": "False",
            "is_grads_batched": "False"
        }
    },
    "torch.autograd.forward_ad.make_dual": {
        "short name": "make_dual",
        "parameters": {
            "tensor": null,
            "tangent": null,
            "level": "None"
        }
    },
    "torch.autograd.forward_ad.unpack_dual": {
        "short name": "unpack_dual",
        "parameters": {
            "tensor": null,
            "level": "None"
        }
    },
    "torch.autograd.functional.jacobian": {
        "short name": "jacobian",
        "parameters": {
            "func": null,
            "inputs": null,
            "create_graph": "False",
            "strict": "False",
            "vectorize": "False",
            "strategy": "'reverse-mode'"
        }
    },
    "torch.autograd.functional.hessian": {
        "short name": "hessian",
        "parameters": {
            "func": null,
            "inputs": null,
            "create_graph": "False",
            "strict": "False",
            "vectorize": "False",
            "outer_jacobian_strategy": "'reverse-mode'"
        }
    },
    "torch.autograd.functional.vjp": {
        "short name": "vjp",
        "parameters": {
            "func": null,
            "inputs": null,
            "v": "None",
            "create_graph": "False",
            "strict": "False"
        }
    },
    "torch.autograd.functional.jvp": {
        "short name": "jvp",
        "parameters": {
            "func": null,
            "inputs": null,
            "v": "None",
            "create_graph": "False",
            "strict": "False"
        }
    },
    "torch.autograd.functional.vhp": {
        "short name": "vhp",
        "parameters": {
            "func": null,
            "inputs": null,
            "v": "None",
            "create_graph": "False",
            "strict": "False"
        }
    },
    "torch.autograd.functional.hvp": {
        "short name": "hvp",
        "parameters": {
            "func": null,
            "inputs": null,
            "v": "None",
            "create_graph": "False",
            "strict": "False"
        }
    },
    "torch.autograd.gradcheck": {
        "short name": "gradcheck",
        "parameters": {
            "func": null,
            "inputs": null,
            "eps": "1e-06",
            "atol": "1e-05",
            "rtol": "0.001",
            "raise_exception": "True",
            "check_sparse_nnz": "False",
            "nondet_tol": "0.0",
            "check_undefined_grad": "True",
            "check_grad_dtypes": "False",
            "check_batched_grad": "False",
            "check_batched_forward_grad": "False",
            "check_forward_ad": "False",
            "check_backward_ad": "True",
            "fast_mode": "False"
        }
    },
    "torch.autograd.gradgradcheck": {
        "short name": "gradgradcheck",
        "parameters": {
            "func": null,
            "inputs": null,
            "grad_outputs": "None",
            "eps": "1e-06",
            "atol": "1e-05",
            "rtol": "0.001",
            "gen_non_contig_grad_outputs": "False",
            "raise_exception": "True",
            "nondet_tol": "0.0",
            "check_undefined_grad": "True",
            "check_grad_dtypes": "False",
            "check_batched_grad": "False",
            "check_fwd_over_rev": "False",
            "check_rev_over_rev": "True",
            "fast_mode": "False"
        }
    },
    "torch.autograd.profiler.load_nvprof": {
        "short name": "load_nvprof",
        "parameters": {
            "path": null
        }
    },
    "torch.cuda.can_device_access_peer": {
        "short name": "can_device_access_peer",
        "parameters": {
            "device": null,
            "peer_device": null
        }
    },
    "torch.cuda.current_blas_handle": {
        "short name": "current_blas_handle",
        "parameters": {}
    },
    "torch.cuda.current_device": {
        "short name": "current_device",
        "parameters": {}
    },
    "torch.cuda.current_stream": {
        "short name": "current_stream",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.default_stream": {
        "short name": "default_stream",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.device_count": {
        "short name": "device_count",
        "parameters": {}
    },
    "torch.cuda.get_arch_list": {
        "short name": "get_arch_list",
        "parameters": {}
    },
    "torch.cuda.get_device_capability": {
        "short name": "get_device_capability",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.get_device_name": {
        "short name": "get_device_name",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.get_device_properties": {
        "short name": "get_device_properties",
        "parameters": {
            "device": null
        }
    },
    "torch.cuda.get_gencode_flags": {
        "short name": "get_gencode_flags",
        "parameters": {}
    },
    "torch.cuda.get_sync_debug_mode": {
        "short name": "get_sync_debug_mode",
        "parameters": {}
    },
    "torch.cuda.init": {
        "short name": "init",
        "parameters": {}
    },
    "torch.cuda.ipc_collect": {
        "short name": "ipc_collect",
        "parameters": {}
    },
    "torch.cuda.is_available": {
        "short name": "is_available",
        "parameters": {}
    },
    "torch.cuda.is_initialized": {
        "short name": "is_initialized",
        "parameters": {}
    },
    "torch.cuda.memory_usage": {
        "short name": "memory_usage",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.set_device": {
        "short name": "set_device",
        "parameters": {
            "device": null
        }
    },
    "torch.cuda.set_stream": {
        "short name": "set_stream",
        "parameters": {
            "stream": null
        }
    },
    "torch.cuda.set_sync_debug_mode": {
        "short name": "set_sync_debug_mode",
        "parameters": {
            "debug_mode": null
        }
    },
    "torch.cuda.synchronize": {
        "short name": "synchronize",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.utilization": {
        "short name": "utilization",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.get_rng_state": {
        "short name": "get_rng_state",
        "parameters": {
            "device": "'cuda'"
        }
    },
    "torch.cuda.get_rng_state_all": {
        "short name": "get_rng_state_all",
        "parameters": {}
    },
    "torch.cuda.set_rng_state": {
        "short name": "set_rng_state",
        "parameters": {
            "new_state": null,
            "device": "'cuda'"
        }
    },
    "torch.cuda.set_rng_state_all": {
        "short name": "set_rng_state_all",
        "parameters": {
            "new_states": null
        }
    },
    "torch.cuda.manual_seed": {
        "short name": "manual_seed",
        "parameters": {
            "seed": null
        }
    },
    "torch.cuda.manual_seed_all": {
        "short name": "manual_seed_all",
        "parameters": {
            "seed": null
        }
    },
    "torch.cuda.seed": {
        "short name": "seed",
        "parameters": {}
    },
    "torch.cuda.seed_all": {
        "short name": "seed_all",
        "parameters": {}
    },
    "torch.cuda.initial_seed": {
        "short name": "initial_seed",
        "parameters": {}
    },
    "torch.cuda.comm.broadcast": {
        "short name": "broadcast",
        "parameters": {
            "tensor": null,
            "devices": "None",
            "out": "None"
        }
    },
    "torch.cuda.comm.broadcast_coalesced": {
        "short name": "broadcast_coalesced",
        "parameters": {
            "tensors": null,
            "devices": null,
            "buffer_size": "10485760"
        }
    },
    "torch.cuda.comm.reduce_add": {
        "short name": "reduce_add",
        "parameters": {
            "inputs": null,
            "destination": "None"
        }
    },
    "torch.cuda.comm.scatter": {
        "short name": "scatter",
        "parameters": {
            "tensor": null,
            "devices": "None",
            "chunk_sizes": "None",
            "dim": "0",
            "streams": "None",
            "out": "None"
        }
    },
    "torch.cuda.comm.gather": {
        "short name": "gather",
        "parameters": {
            "tensors": null,
            "dim": "0",
            "destination": "None",
            "out": "None"
        }
    },
    "torch.cuda.graph_pool_handle": {
        "short name": "graph_pool_handle",
        "parameters": {}
    },
    "torch.cuda.make_graphed_callables": {
        "short name": "make_graphed_callables",
        "parameters": {
            "callables": null,
            "sample_args": null
        }
    },
    "torch.cuda.empty_cache": {
        "short name": "empty_cache",
        "parameters": {}
    },
    "torch.cuda.list_gpu_processes": {
        "short name": "list_gpu_processes",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.mem_get_info": {
        "short name": "mem_get_info",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.memory_stats": {
        "short name": "memory_stats",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.memory_summary": {
        "short name": "memory_summary",
        "parameters": {
            "device": "None",
            "abbreviated": "False"
        }
    },
    "torch.cuda.memory_snapshot": {
        "short name": "memory_snapshot",
        "parameters": {}
    },
    "torch.cuda.memory_allocated": {
        "short name": "memory_allocated",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.max_memory_allocated": {
        "short name": "max_memory_allocated",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.reset_max_memory_allocated": {
        "short name": "reset_max_memory_allocated",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.memory_reserved": {
        "short name": "memory_reserved",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.max_memory_reserved": {
        "short name": "max_memory_reserved",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.set_per_process_memory_fraction": {
        "short name": "set_per_process_memory_fraction",
        "parameters": {
            "fraction": null,
            "device": "None"
        }
    },
    "torch.cuda.memory_cached": {
        "short name": "memory_cached",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.max_memory_cached": {
        "short name": "max_memory_cached",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.reset_max_memory_cached": {
        "short name": "reset_max_memory_cached",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.reset_peak_memory_stats": {
        "short name": "reset_peak_memory_stats",
        "parameters": {
            "device": "None"
        }
    },
    "torch.cuda.caching_allocator_alloc": {
        "short name": "caching_allocator_alloc",
        "parameters": {
            "size": null,
            "device": "None",
            "stream": "None"
        }
    },
    "torch.cuda.caching_allocator_delete": {
        "short name": "caching_allocator_delete",
        "parameters": {
            "mem_ptr": null
        }
    },
    "torch.cuda.nvtx.mark": {
        "short name": "mark",
        "parameters": {
            "msg": null
        }
    },
    "torch.cuda.nvtx.range_push": {
        "short name": "range_push",
        "parameters": {
            "msg": null
        }
    },
    "torch.cuda.nvtx.range_pop": {
        "short name": "range_pop",
        "parameters": {}
    },
    "torch.distributed.elastic.multiprocessing.start_processes": {
        "short name": "start_processes",
        "parameters": {
            "name": null,
            "entrypoint": null,
            "args": null,
            "envs": null,
            "log_dir": null,
            "start_method": "'spawn'",
            "redirects": "<Std.NONE: 0>",
            "tee": "<Std.NONE: 0>"
        }
    },
    "torch.distributed.elastic.multiprocessing.errors.record": {
        "short name": "record",
        "parameters": {
            "fn": null,
            "error_handler": "None"
        }
    },
    "torch.distributed.elastic.rendezvous.dynamic_rendezvous.create_handler": {
        "short name": "create_handler",
        "parameters": {
            "store": null,
            "backend": null,
            "params": null
        }
    },
    "torch.distributed.elastic.rendezvous.c10d_rendezvous_backend.create_backend": {
        "short name": "create_backend",
        "parameters": {
            "params": null
        }
    },
    "torch.distributed.elastic.rendezvous.etcd_rendezvous_backend.create_backend": {
        "short name": "create_backend",
        "parameters": {
            "params": null
        }
    },
    "torch.distributed.elastic.timer.configure": {
        "short name": "configure",
        "parameters": {
            "timer_client": null
        }
    },
    "torch.distributed.elastic.timer.expires": {
        "short name": "expires",
        "parameters": {
            "after": null,
            "scope": "None",
            "client": "None"
        }
    },
    "torch.distributed.elastic.metrics.configure": {
        "short name": "configure",
        "parameters": {
            "handler": null,
            "group": "None"
        }
    },
    "torch.distributed.elastic.metrics.prof": {
        "short name": "prof",
        "parameters": {
            "fn": "None",
            "group": "'torchelastic'"
        }
    },
    "torch.distributed.elastic.metrics.put_metric": {
        "short name": "put_metric",
        "parameters": {
            "metric_name": null,
            "metric_value": null,
            "metric_group": "'torchelastic'"
        }
    },
    "torch.distributed.elastic.events.record": {
        "short name": "record",
        "parameters": {
            "event": null,
            "destination": "'null'"
        }
    },
    "torch.distributed.elastic.events.get_logging_handler": {
        "short name": "get_logging_handler",
        "parameters": {
            "destination": "'null'"
        }
    },
    "torch.fft.fft": {
        "short name": "fft",
        "parameters": {
            "input": null,
            "n": "None",
            "dim": "- 1",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.ifft": {
        "short name": "ifft",
        "parameters": {
            "input": null,
            "n": "None",
            "dim": "- 1",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.fft2": {
        "short name": "fft2",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "(- 2, - 1)",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.ifft2": {
        "short name": "ifft2",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "(- 2, - 1)",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.fftn": {
        "short name": "fftn",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "None",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.ifftn": {
        "short name": "ifftn",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "None",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.rfft": {
        "short name": "rfft",
        "parameters": {
            "input": null,
            "n": "None",
            "dim": "- 1",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.irfft": {
        "short name": "irfft",
        "parameters": {
            "input": null,
            "n": "None",
            "dim": "- 1",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.rfft2": {
        "short name": "rfft2",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "(- 2, - 1)",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.irfft2": {
        "short name": "irfft2",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "(- 2, - 1)",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.rfftn": {
        "short name": "rfftn",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "None",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.irfftn": {
        "short name": "irfftn",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "None",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.hfft": {
        "short name": "hfft",
        "parameters": {
            "input": null,
            "n": "None",
            "dim": "- 1",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.ihfft": {
        "short name": "ihfft",
        "parameters": {
            "input": null,
            "n": "None",
            "dim": "- 1",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.hfft2": {
        "short name": "hfft2",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "(- 2, - 1)",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.ihfft2": {
        "short name": "ihfft2",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "(- 2, - 1)",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.hfftn": {
        "short name": "hfftn",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "None",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.ihfftn": {
        "short name": "ihfftn",
        "parameters": {
            "input": null,
            "s": "None",
            "dim": "None",
            "norm": "None",
            "out": "None"
        }
    },
    "torch.fft.fftfreq": {
        "short name": "fftfreq",
        "parameters": {
            "n": null,
            "d": "1.0",
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.fft.rfftfreq": {
        "short name": "rfftfreq",
        "parameters": {
            "n": null,
            "d": "1.0",
            "out": "None",
            "dtype": "None",
            "layout": "torch.strided",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.fft.fftshift": {
        "short name": "fftshift",
        "parameters": {
            "input": null,
            "dim": "None"
        }
    },
    "torch.fft.ifftshift": {
        "short name": "ifftshift",
        "parameters": {
            "input": null,
            "dim": "None"
        }
    },
    "torch.jit.script": {
        "short name": "script",
        "parameters": {
            "obj": null,
            "optimize": "None",
            "_frames_up": "0",
            "_rcb": "None",
            "example_inputs": "None"
        }
    },
    "torch.jit.trace": {
        "short name": "trace",
        "parameters": {
            "func": null,
            "example_inputs": null,
            "optimize": "None",
            "check_trace": "True",
            "check_inputs": "None",
            "check_tolerance": "1e-05",
            "strict": "True",
            "_force_outplace": "False",
            "_module_class": "None",
            "_compilation_unit": "<torch.jit.CompilationUnit object>"
        }
    },
    "torch.jit.script_if_tracing": {
        "short name": "script_if_tracing",
        "parameters": {
            "fn": null
        }
    },
    "torch.jit.trace_module": {
        "short name": "trace_module",
        "parameters": {
            "mod": null,
            "inputs": null,
            "optimize": "None",
            "check_trace": "True",
            "check_inputs": "None",
            "check_tolerance": "1e-05",
            "strict": "True",
            "_force_outplace": "False",
            "_module_class": "None",
            "_compilation_unit": "<torch.jit.CompilationUnit object>"
        }
    },
    "torch.jit.fork": {
        "short name": "fork",
        "parameters": {
            "func": null,
            "*args": null,
            "**kwargs": null
        }
    },
    "torch.jit.wait": {
        "short name": "wait",
        "parameters": {
            "future": null
        }
    },
    "torch.jit.freeze": {
        "short name": "freeze",
        "parameters": {
            "mod": null,
            "preserved_attrs": "None",
            "optimize_numerics": "True"
        }
    },
    "torch.jit.optimize_for_inference": {
        "short name": "optimize_for_inference",
        "parameters": {
            "mod": null,
            "other_methods": "None"
        }
    },
    "torch.jit.set_fusion_strategy": {
        "short name": "set_fusion_strategy",
        "parameters": {
            "strategy": null
        }
    },
    "torch.jit.save": {
        "short name": "save",
        "parameters": {
            "m": null,
            "f": null,
            "_extra_files": "None"
        }
    },
    "torch.jit.load": {
        "short name": "load",
        "parameters": {
            "f": null,
            "map_location": "None",
            "_extra_files": "None"
        }
    },
    "torch.jit.ignore": {
        "short name": "ignore",
        "parameters": {
            "drop": "False",
            "**kwargs": null
        }
    },
    "torch.jit.unused": {
        "short name": "unused",
        "parameters": {
            "fn": null
        }
    },
    "torch.jit.isinstance": {
        "short name": "isinstance",
        "parameters": {
            "obj": null,
            "target_type": null
        }
    },
    "torch.jit.annotate": {
        "short name": "annotate",
        "parameters": {
            "the_type": null,
            "the_value": null
        }
    },
    "torch.linalg.norm": {
        "short name": "norm",
        "parameters": {
            "A": null,
            "ord": "None",
            "dim": "None",
            "keepdim": "False",
            "out": "None",
            "dtype": "None"
        }
    },
    "torch.linalg.vector_norm": {
        "short name": "vector_norm",
        "parameters": {
            "A": null,
            "ord": "2",
            "dim": "None",
            "keepdim": "False",
            "dtype": "None",
            "out": "None"
        }
    },
    "torch.linalg.matrix_norm": {
        "short name": "matrix_norm",
        "parameters": {
            "A": null,
            "ord": "'fro'",
            "dim": "(- 2, - 1)",
            "keepdim": "False",
            "dtype": "None",
            "out": "None"
        }
    },
    "torch.linalg.diagonal": {
        "short name": "diagonal",
        "parameters": {
            "A": null,
            "offset": "0",
            "dim1": "- 2",
            "dim2": "- 1"
        }
    },
    "torch.linalg.det": {
        "short name": "det",
        "parameters": {
            "A": null,
            "out": "None"
        }
    },
    "torch.linalg.slogdet": {
        "short name": "slogdet",
        "parameters": {
            "A": null,
            "out": "None"
        }
    },
    "torch.linalg.cond": {
        "short name": "cond",
        "parameters": {
            "A": null,
            "p": "None",
            "out": "None"
        }
    },
    "torch.linalg.matrix_rank": {
        "short name": "matrix_rank",
        "parameters": {
            "A": null,
            "atol": "None",
            "rtol": "None",
            "hermitian": "False",
            "out": "None"
        }
    },
    "torch.linalg.cholesky": {
        "short name": "cholesky",
        "parameters": {
            "A": null,
            "upper": "False",
            "out": "None"
        }
    },
    "torch.linalg.qr": {
        "short name": "qr",
        "parameters": {
            "A": null,
            "mode": "'reduced'",
            "out": "None"
        }
    },
    "torch.linalg.lu_factor": {
        "short name": "lu_factor",
        "parameters": {
            "A": null,
            "bool pivot": "True",
            "out": "None) -> (Tensor",
            "Tensor": null
        }
    },
    "torch.linalg.eig": {
        "short name": "eig",
        "parameters": {
            "A": null,
            "out": "None"
        }
    },
    "torch.linalg.eigvals": {
        "short name": "eigvals",
        "parameters": {
            "A": null,
            "out": "None"
        }
    },
    "torch.linalg.eigh": {
        "short name": "eigh",
        "parameters": {
            "A": null,
            "UPLO": "'L'",
            "out": "None"
        }
    },
    "torch.linalg.eigvalsh": {
        "short name": "eigvalsh",
        "parameters": {
            "A": null,
            "UPLO": "'L'",
            "out": "None"
        }
    },
    "torch.linalg.svd": {
        "short name": "svd",
        "parameters": {
            "A": null,
            "full_matrices": "True",
            "out": "None"
        }
    },
    "torch.linalg.svdvals": {
        "short name": "svdvals",
        "parameters": {
            "A": null,
            "out": "None"
        }
    },
    "torch.linalg.solve": {
        "short name": "solve",
        "parameters": {
            "A": null,
            "B": null,
            "out": "None"
        }
    },
    "torch.linalg.solve_triangular": {
        "short name": "solve_triangular",
        "parameters": {
            "A": null,
            "B": null,
            "upper": null,
            "left": "True",
            "unitriangular": "False",
            "out": "None"
        }
    },
    "torch.linalg.lstsq": {
        "short name": "lstsq",
        "parameters": {
            "A": null,
            "B": null,
            "rcond": "None",
            "driver": "None"
        }
    },
    "torch.linalg.inv": {
        "short name": "inv",
        "parameters": {
            "A": null,
            "out": "None"
        }
    },
    "torch.linalg.pinv": {
        "short name": "pinv",
        "parameters": {
            "A": null,
            "atol": "None",
            "rtol": "None",
            "hermitian": "False",
            "out": "None"
        }
    },
    "torch.linalg.matrix_exp": {
        "short name": "matrix_exp",
        "parameters": {
            "A": null
        }
    },
    "torch.linalg.matrix_power": {
        "short name": "matrix_power",
        "parameters": {
            "A": null,
            "n": null,
            "out": "None"
        }
    },
    "torch.linalg.cross": {
        "short name": "cross",
        "parameters": {
            "input": null,
            "other": null,
            "dim": "- 1",
            "out": "None"
        }
    },
    "torch.linalg.matmul": {
        "short name": "matmul",
        "parameters": {
            "input": null,
            "other": null,
            "out": "None"
        }
    },
    "torch.linalg.multi_dot": {
        "short name": "multi_dot",
        "parameters": {
            "tensors": null,
            "out": "None"
        }
    },
    "torch.linalg.householder_product": {
        "short name": "householder_product",
        "parameters": {
            "A": null,
            "tau": null,
            "out": "None"
        }
    },
    "torch.linalg.tensorinv": {
        "short name": "tensorinv",
        "parameters": {
            "A": null,
            "ind": "2",
            "out": "None"
        }
    },
    "torch.linalg.tensorsolve": {
        "short name": "tensorsolve",
        "parameters": {
            "A": null,
            "B": null,
            "dims": "None",
            "out": "None"
        }
    },
    "torch.linalg.cholesky_ex": {
        "short name": "cholesky_ex",
        "parameters": {
            "A": null,
            "upper": "False",
            "check_errors": "False",
            "out": "None"
        }
    },
    "torch.linalg.inv_ex": {
        "short name": "inv_ex",
        "parameters": {
            "A": null,
            "check_errors": "False",
            "out": "None"
        }
    },
    "torch.linalg.lu_factor_ex": {
        "short name": "lu_factor_ex",
        "parameters": {
            "A": null,
            "pivot": "True",
            "check_errors": "False",
            "out": "None"
        }
    },
    "torch.sparse.mm": {
        "short name": "mm",
        "parameters": {
            "mat1": null,
            "mat2": null
        }
    },
    "torch.smm": {
        "short name": "smm",
        "parameters": {
            "input": null,
            "mat": null
        }
    },
    "torch.hspmm": {
        "short name": "hspmm",
        "parameters": {
            "mat1": null,
            "mat2": null,
            "out": "None"
        }
    },
    "torch.sparse.addmm": {
        "short name": "addmm",
        "parameters": {
            "mat": null,
            "mat1": null,
            "mat2": null,
            "beta": "1.0",
            "alpha": "1.0"
        }
    },
    "torch.sspaddmm": {
        "short name": "sspaddmm",
        "parameters": {
            "input": null,
            "mat1": null,
            "mat2": null,
            "beta": "1",
            "alpha": "1",
            "out": "None"
        }
    },
    "torch.sparse_csr_tensor": {
        "short name": "sparse_csr_tensor",
        "parameters": {
            "crow_indices": null,
            "col_indices": null,
            "values": null,
            "size": "None",
            "dtype": "None",
            "device": "None",
            "requires_grad": "False"
        }
    },
    "torch.sparse.sum": {
        "short name": "sum",
        "parameters": {
            "input": null,
            "dim": "None",
            "dtype": "None"
        }
    },
    "torch.sparse.sampled_addmm": {
        "short name": "sampled_addmm",
        "parameters": {
            "input": null,
            "mat1": null,
            "mat2": null,
            "beta": "1.0",
            "alpha": "1.0",
            "out": "None"
        }
    },
    "torch.sparse.softmax": {
        "short name": "softmax",
        "parameters": {
            "input": null,
            "dim": null,
            "dtype": "None"
        }
    },
    "torch.sparse.log_softmax": {
        "short name": "log_softmax",
        "parameters": {
            "input": null,
            "dim": null,
            "dtype": "None"
        }
    }
}