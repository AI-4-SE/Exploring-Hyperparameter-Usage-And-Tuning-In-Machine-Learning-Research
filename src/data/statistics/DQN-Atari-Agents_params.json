{
    "Agents/IntrinsicCuriosityModule.py": {
        "torch": {
            "Linear_37": {
                "variable": {
                    "value": "self.layer2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "action_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Softmax_38": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_41": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.state_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_41": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_55": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(enc_state, enc_state1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_56": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.layer1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_69": {
                "variable": {
                    "value": "self.forwardM",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(output_size + self.action_size, hidden_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_89": {
                "variable": {
                    "value": "ohe_action",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "action.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "self.action_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_90": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.arange(action.shape[0]).to(self.device), action.squeeze().long())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_95": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(state, ohe_action)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MSELoss_111": {
                "variable": {
                    "value": "self.forward_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_112": {
                "variable": {
                    "value": "self.inverse_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_113": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "list(self.forward_model.parameters()) + list(self.inverse_model.parameters())",
                    "type": "BinOp",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_22": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(state_size, 128)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "variable": {
                    "value": "self.layer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_26": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=self.state_size[0], out_channels=32, kernel_size=3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self.layer1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 * self.calc_input_layer()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "clip_grad_norm__143": {
                "parameters": {
                    "value": "self.inverse_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clip_grad_norm__144": {
                "parameters": {
                    "value": "self.forward_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_69": {
                "in_features": {
                    "value": "output_size + self.action_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_70": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_71": {
                "in_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "Method Argument"
                        ],
                        [
                            "256",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_22": {
                "in_features": {
                    "value": "state_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "self.state_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "arange_90": {
                "start": {
                    "value": "action.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "Agents/Networks/DQN.py": {
        "torch": {
            "Parameter_16": {
                "variable": {
                    "value": "self.sigma_weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.full((out_features, in_features), sigma_init)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "manual_seed_48": {
                "variable": {
                    "value": "self.seed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_81": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.input_shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_81": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_99": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "manual_seed_118": {
                "variable": {
                    "value": "self.seed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_158": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.input_shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_158": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_199": {
                "variable": {
                    "value": "self.seed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Softmax_246": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_249": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.input_shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_249": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_284": {
                "variable": {
                    "value": "self.seed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Softmax_319": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_324": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.input_shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_324": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_21": {
                "variable": {
                    "value": "self.sigma_bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.full((out_features,), sigma_init)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "linear_43": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "self.weight + self.sigma_weight * self.epsilon_weight",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bias",
                            "Attribute"
                        ],
                        [
                            "bias + self.sigma_bias * self.epsilon_bias",
                            "BinOp"
                        ],
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_53": {
                "variable": {
                    "value": "self.cnn_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_54": {
                "variable": {
                    "value": "self.cnn_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_55": {
                "variable": {
                    "value": "self.cnn_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_92": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_1(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_93": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_94": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_97": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.head_1(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_123": {
                "variable": {
                    "value": "self.cnn_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_124": {
                "variable": {
                    "value": "self.cnn_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_125": {
                "variable": {
                    "value": "self.cnn_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_168": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_1(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_169": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_170": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_172": {
                "variable": {
                    "value": "x_A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1_A(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_173": {
                "variable": {
                    "value": "x_V",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1_V(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_175": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.head_1(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_176": {
                "variable": {
                    "value": "x_A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1_A(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_177": {
                "variable": {
                    "value": "x_V",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1_V(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_210": {
                "variable": {
                    "value": "self.cnn_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_211": {
                "variable": {
                    "value": "self.cnn_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_212": {
                "variable": {
                    "value": "self.cnn_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_258": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_1(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_259": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_260": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_262": {
                "variable": {
                    "value": "x_A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1_A(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_263": {
                "variable": {
                    "value": "x_V",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1_V(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_265": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.head_1(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_266": {
                "variable": {
                    "value": "x_A",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1_A(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_267": {
                "variable": {
                    "value": "x_V",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1_V(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_294": {
                "variable": {
                    "value": "self.cnn_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_295": {
                "variable": {
                    "value": "self.cnn_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_296": {
                "variable": {
                    "value": "self.cnn_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_333": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_1(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_334": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_335": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.cnn_3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_337": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_340": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.head_1(input)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_341": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.ff_1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "full_16": {
                "size": {
                    "value": "(out_features, in_features)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "sigma_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.017",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_18": {
                "*size": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_62": {
                "variable": {
                    "value": "self.ff_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.calc_input_layer()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_63": {
                "variable": {
                    "value": "self.ff_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_134": {
                "variable": {
                    "value": "self.ff_1_A",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.calc_input_layer()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_135": {
                "variable": {
                    "value": "self.ff_1_V",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.calc_input_layer()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_136": {
                "variable": {
                    "value": "self.advantage",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_137": {
                "variable": {
                    "value": "self.value",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_222": {
                "variable": {
                    "value": "self.ff_1_A",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.calc_input_layer()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_223": {
                "variable": {
                    "value": "self.ff_1_V",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.calc_input_layer()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_224": {
                "variable": {
                    "value": "self.advantage",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_size * N_ATOMS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_225": {
                "variable": {
                    "value": "self.value",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "N_ATOMS",
                    "type": "variable",
                    "possible_values": [
                        [
                            "51",
                            "Method Argument"
                        ],
                        [
                            "51",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_245": {
                "start": {
                    "value": "VMIN",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-10",
                            "Method Argument"
                        ],
                        [
                            "-10",
                            "Method Argument"
                        ]
                    ]
                },
                "end": {
                    "value": "VMAX + self.DZ",
                    "type": "BinOp",
                    "possible_values": []
                },
                "step": {
                    "value": "self.DZ",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_303": {
                "variable": {
                    "value": "self.ff_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.calc_input_layer()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_304": {
                "variable": {
                    "value": "self.ff_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_size * N_ATOMS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "arange_318": {
                "start": {
                    "value": "VMIN",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-10",
                            "Method Argument"
                        ],
                        [
                            "-10",
                            "Method Argument"
                        ]
                    ]
                },
                "end": {
                    "value": "VMAX + self.DZ",
                    "type": "BinOp",
                    "possible_values": []
                },
                "step": {
                    "value": "self.DZ",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_21": {
                "size": {
                    "value": "(out_features,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "sigma_init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.017",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_22": {
                "*size": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_67": {
                "variable": {
                    "value": "self.head_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_71": {
                "variable": {
                    "value": "self.head_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_72": {
                "variable": {
                    "value": "self.ff_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_73": {
                "variable": {
                    "value": "self.ff_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_141": {
                "variable": {
                    "value": "self.head_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_148": {
                "variable": {
                    "value": "self.head_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_149": {
                "variable": {
                    "value": "self.ff_1_A",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_150": {
                "variable": {
                    "value": "self.ff_1_V",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_151": {
                "variable": {
                    "value": "self.advantage",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_152": {
                "variable": {
                    "value": "self.value",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_229": {
                "variable": {
                    "value": "self.head_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_236": {
                "variable": {
                    "value": "self.head_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_237": {
                "variable": {
                    "value": "self.ff_1_A",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_238": {
                "variable": {
                    "value": "self.ff_1_V",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_239": {
                "variable": {
                    "value": "self.advantage",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_size * N_ATOMS",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_240": {
                "variable": {
                    "value": "self.value",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "N_ATOMS",
                    "type": "variable",
                    "possible_values": [
                        [
                            "51",
                            "Method Argument"
                        ],
                        [
                            "51",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_308": {
                "variable": {
                    "value": "self.head_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_312": {
                "variable": {
                    "value": "self.head_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_313": {
                "variable": {
                    "value": "self.ff_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_314": {
                "variable": {
                    "value": "self.ff_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "layer_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_size * N_ATOMS",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "Agents/ReplayMemories/ReplayMemory.py": {
        "torch": {
            "from_numpy_55": {
                "variable": {
                    "value": "states",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.stack([e.state for e in experiences if e is not None])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_56": {
                "variable": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.vstack([e.action for e in experiences if e is not None])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_57": {
                "variable": {
                    "value": "rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.vstack([e.reward for e in experiences if e is not None])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_58": {
                "variable": {
                    "value": "next_states",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.stack([e.next_state for e in experiences if e is not None])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_59": {
                "variable": {
                    "value": "dones",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.vstack([e.done for e in experiences if e is not None]).astype(np.uint8)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "Agents/ReplayMemories/ReplayMemory_old.py": {
        "torch": {
            "from_numpy_50": {
                "variable": {
                    "value": "states",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.stack([e.state for e in experiences if e is not None])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_51": {
                "variable": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.vstack([e.action for e in experiences if e is not None])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_52": {
                "variable": {
                    "value": "rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.vstack([e.reward for e in experiences if e is not None])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_53": {
                "variable": {
                    "value": "next_states",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.stack([e.next_state for e in experiences if e is not None])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_54": {
                "variable": {
                    "value": "dones",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.vstack([e.done for e in experiences if e is not None]).astype(np.uint8)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "Agents/dqn_agent.py": {
        "torch": {
            "manual_seed_55": {
                "variable": {
                    "value": "self.t_seed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Adam_91": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.qnetwork_local.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "mse_loss_190": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Q_expected",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.qnetwork_local(states).gather(1, actions)",
                            "Call"
                        ],
                        [
                            "self.qnetwork_local(states).gather(1, actions)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "Q_targets",
                    "type": "variable",
                    "possible_values": [
                        [
                            "rewards + self.GAMMA ** self.n_step * Q_targets_next * (1 - dones)",
                            "BinOp"
                        ],
                        [
                            "rewards + self.GAMMA ** self.n_step * Q_targets_next * (1 - dones)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "unsqueeze_224": {
                "variable": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_225": {
                "variable": {
                    "value": "rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_226": {
                "variable": {
                    "value": "dones",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_227": {
                "variable": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_288": {
                "variable": {
                    "value": "self.t_seed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Adam_332": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.qnetwork_local.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "LR",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "linspace_348": {
                "variable": {
                    "value": "support",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "self.VMIN",
                    "type": "Attribute",
                    "possible_values": []
                },
                "end": {
                    "value": "self.VMAX",
                    "type": "Attribute",
                    "possible_values": []
                },
                "steps": {
                    "value": "self.N_ATOMS",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linspace_361": {
                "variable": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "(batch_size - 1) * self.N_ATOMS",
                    "type": "BinOp",
                    "possible_values": []
                },
                "steps": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "next_state.size(0)",
                            "Call"
                        ],
                        [
                            "len(states)",
                            "Call"
                        ],
                        [
                            "self.BATCH_SIZE",
                            "Attribute"
                        ]
                    ]
                }
            },
            "unsqueeze_361": {
                "variable": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_364": {
                "variable": {
                    "value": "proj_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "next_distr.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_464": {
                "variable": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_465": {
                "variable": {
                    "value": "rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_466": {
                "variable": {
                    "value": "dones",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_467": {
                "variable": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clip_grad_norm__193": {
                "parameters": {
                    "value": "self.qnetwork_local.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clip_grad_norm__240": {
                "parameters": {
                    "value": "self.qnetwork_local.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clip_grad_norm__446": {
                "parameters": {
                    "value": "self.qnetwork_local.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "clip_grad_norm__492": {
                "parameters": {
                    "value": "self.qnetwork_local.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_141": {
                "variable": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.array(state)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "np.array(state)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_143": {
                "variable": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.array(state)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "np.array(state)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_401": {
                "variable": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.array(state)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "np.array(state)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_403": {
                "variable": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.array(state)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "np.array(state)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(state).float().to(self.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_145": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_405": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "play_atari.py": {
        "torch": {
            "device_53": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "load_95": {
                "f": {
                    "value": "args.model_weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "run_atari_dqn.py": {
        "torch": {
            "SummaryWriter_148": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "'runs/' + str(args.info)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "device_158": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "set_detect_anomaly_161": {
                "mode": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "manual_seed_164": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.seed",
                            "Attribute"
                        ]
                    ]
                }
            },
            "save_225": {
                "obj": {
                    "value": "agent.qnetwork_local.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "args.info + '.pth'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_158": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}