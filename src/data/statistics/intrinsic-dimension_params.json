{
    "intrinsic_dim/model_builders_rl.py": {
        "tensorflow": {
            "softmax_41": {
                "variable": {
                    "value": "prob",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "model.v.logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "prob",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sparse_softmax_cross_entropy_with_logits_42": {
                "variable": {
                    "value": "cross_ent",
                    "type": "variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "model.v.logits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "labels": {
                    "value": "input_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "cross_ent",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_mean_43": {
                "variable": {
                    "value": "loss_cross_ent",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "cross_ent",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.sparse_softmax_cross_entropy_with_logits(logits=model.v.logits, labels=input_labels, name='cross_ent')",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "loss_cross_ent",
                    "type": "str",
                    "possible_values": []
                }
            },
            "argmax_45": {
                "variable": {
                    "value": "class_prediction",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prob",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.nn.softmax(model.v.logits, name='prob')",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "equal_48": {
                "variable": {
                    "value": "prediction_correct",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "class_prediction",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.argmax(prob, 1)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "input_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "prediction_correct",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_mean_49": {
                "variable": {
                    "value": "accuracy",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.to_float(prediction_correct)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "accuracy",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_40": {
                "name": {
                    "value": "losses",
                    "type": "str",
                    "possible_values": []
                }
            },
            "add_n_57": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "(model.v.loss_cross_ent, model.v.loss_reg)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_74": {
                "name": {
                    "value": "inputs",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_77": {
                "name": {
                    "value": "net",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_97": {
                "name": {
                    "value": "inputs",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_100": {
                "name": {
                    "value": "net",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_126": {
                "name": {
                    "value": "inputs",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_129": {
                "name": {
                    "value": "net",
                    "type": "str",
                    "possible_values": []
                }
            },
            "to_float_49": {
                "x": {
                    "value": "prediction_correct",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.equal(class_prediction, input_labels, name='prediction_correct')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "intrinsic_dim/rand_args.py": {
        "tensorflow": {}
    },
    "intrinsic_dim/rl/neural_q_learner.py": {
        "tensorflow": {
            "get_collection_82": {
                "variable": {
                    "value": "var_lists",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.GLOBAL_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "merge_all_177": {
                "variable": {
                    "value": "self.summarize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_op_178": {
                "variable": {
                    "value": "self.no_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_96": {
                "variable": {
                    "value": "self.states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, self.state_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "states",
                    "type": "str",
                    "possible_values": []
                }
            },
            "identity_101": {
                "variable": {
                    "value": "self.action_scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.q_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "action_scores",
                    "type": "str",
                    "possible_values": []
                }
            },
            "argmax_103": {
                "variable": {
                    "value": "self.predicted_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.action_scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "predicted_actions",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_107": {
                "variable": {
                    "value": "self.next_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, self.state_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "next_states",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_108": {
                "variable": {
                    "value": "self.next_state_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "next_state_masks",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_132": {
                "variable": {
                    "value": "self.rewards",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "rewards",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_138": {
                "variable": {
                    "value": "self.action_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "(None, self.num_actions)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "action_mask",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_sum_139": {
                "variable": {
                    "value": "self.masked_action_scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.action_scores * self.action_mask",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_mean_141": {
                "variable": {
                    "value": "self.td_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.square(self.temp_diff)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_collection_143": {
                "variable": {
                    "value": "q_network_variables",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "q_network",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_163": {
                "variable": {
                    "value": "q_network_variables",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "q_network",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_164": {
                "variable": {
                    "value": "target_network_variables",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "target_network",
                    "type": "str",
                    "possible_values": []
                }
            },
            "group_169": {
                "variable": {
                    "value": "self.target_network_update",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "*self.target_network_update",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "scalar_172": {
                "name": {
                    "value": "td_loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.td_loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_173": {
                "name": {
                    "value": "reg_loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.reg_loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_174": {
                "name": {
                    "value": "total_loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "scalar_175": {
                "name": {
                    "value": "exploration",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.exploration",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variables_initializer_83": {
                "var_list": {
                    "value": "var_lists",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES)",
                            "Call"
                        ]
                    ]
                }
            },
            "assert_variables_initialized_86": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "name_scope_94": {
                "name": {
                    "value": "predict_actions",
                    "type": "str",
                    "possible_values": []
                }
            },
            "histogram_102": {
                "name": {
                    "value": "action_scores",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.action_scores",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_106": {
                "name": {
                    "value": "estimate_future_rewards",
                    "type": "str",
                    "possible_values": []
                }
            },
            "argmax_114": {
                "variable": {
                    "value": "self.action_selection",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.stop_gradient(self.q_next_outputs)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "action_selection",
                    "type": "str",
                    "possible_values": []
                }
            },
            "one_hot_116": {
                "variable": {
                    "value": "self.action_selection_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "indices": {
                    "value": "self.action_selection",
                    "type": "Attribute",
                    "possible_values": []
                },
                "depth": {
                    "value": "self.num_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "on_value": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "off_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_120": {
                "variable": {
                    "value": "self.action_evaluation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "self.target_outputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stop_gradient_128": {
                "variable": {
                    "value": "self.next_action_scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.target_outputs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_136": {
                "name": {
                    "value": "compute_temporal_differences",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_160": {
                "name": {
                    "value": "update_target_network",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_98": {
                "name_or_scope": {
                    "value": "q_network",
                    "type": "str",
                    "possible_values": []
                }
            },
            "histogram_115": {
                "name": {
                    "value": "action_selection",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.action_selection",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "histogram_121": {
                "name": {
                    "value": "action_evaluation",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.action_evaluation",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "histogram_130": {
                "name": {
                    "value": "next_action_scores",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "self.next_action_scores",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "square_141": {
                "x": {
                    "value": "self.temp_diff",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reduce_sum_144": {
                "input_tensor": {
                    "value": "tf.square(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "histogram_154": {
                "name": {
                    "value": "var.name",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "var",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "variable_scope_112": {
                "name_or_scope": {
                    "value": "q_network",
                    "type": "str",
                    "possible_values": []
                },
                "reuse": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "stop_gradient_114": {
                "input": {
                    "value": "self.q_next_outputs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_118": {
                "name_or_scope": {
                    "value": "target_network",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_125": {
                "name_or_scope": {
                    "value": "target_network",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_max_129": {
                "input_tensor": {
                    "value": "self.next_action_scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "histogram_156": {
                "name": {
                    "value": "var.name + '/gradients'",
                    "type": "BinOp",
                    "possible_values": []
                },
                "data": {
                    "value": "grad",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cast_119": {
                "x": {
                    "value": "self.action_selection_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clip_by_norm_151": {
                "t": {
                    "value": "grad",
                    "type": "variable",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "self.max_gradient",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "square_144": {
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "ops/fast_walsh_hadamard_test.py": {
        "tensorflow": {
            "main_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "constant_31": {
                "variable": {
                    "value": "V",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "V",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.random.RandomState(123).randn(2 ** i).astype(np.float32)",
                            "Call"
                        ],
                        [
                            "tf.constant(V, tf.float32)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_33": {
                "device_name": {
                    "value": "/cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_35": {
                "device_name": {
                    "value": "/gpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "ops/fwh.py": {
        "tensorflow": {}
    },
    "ops/py_zero_out.py": {
        "tensorflow": {
            "load_op_library_26": {
                "variable": {
                    "value": "zero_out_module",
                    "type": "variable",
                    "possible_values": []
                },
                "library_filename": {
                    "value": "./zero_out.so",
                    "type": "str",
                    "possible_values": []
                }
            },
            "shape_43": {
                "variable": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "to_zero",
                    "type": "variable",
                    "possible_values": [
                        [
                            "op.inputs[0]",
                            "Subscript"
                        ],
                        [
                            "op.inputs[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_like_44": {
                "variable": {
                    "value": "index",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array_ops.shape(to_zero)",
                            "Call"
                        ],
                        [
                            "array_ops.shape(to_zero)",
                            "Call"
                        ]
                    ]
                }
            },
            "sparse_to_dense_46": {
                "variable": {
                    "value": "to_zero_grad",
                    "type": "variable",
                    "possible_values": []
                },
                "sparse_indices": {
                    "value": "[index]",
                    "type": "List",
                    "possible_values": []
                },
                "output_shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array_ops.shape(to_zero)",
                            "Call"
                        ],
                        [
                            "array_ops.shape(to_zero)",
                            "Call"
                        ]
                    ]
                },
                "sparse_values": {
                    "value": "first_grad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array_ops.reshape(grad, [-1])[0]",
                            "Subscript"
                        ],
                        [
                            "array_ops.reshape(grad, [-1])[0]",
                            "Subscript"
                        ]
                    ]
                },
                "default_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RegisterGradient_30": {
                "op_type": {
                    "value": "ZeroOut",
                    "type": "str",
                    "possible_values": []
                }
            },
            "shape_62": {
                "variable": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "to_zero",
                    "type": "variable",
                    "possible_values": [
                        [
                            "op.inputs[0]",
                            "Subscript"
                        ],
                        [
                            "op.inputs[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_like_63": {
                "variable": {
                    "value": "index",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array_ops.shape(to_zero)",
                            "Call"
                        ],
                        [
                            "array_ops.shape(to_zero)",
                            "Call"
                        ]
                    ]
                }
            },
            "sparse_to_dense_65": {
                "variable": {
                    "value": "to_zero_grad",
                    "type": "variable",
                    "possible_values": []
                },
                "sparse_indices": {
                    "value": "[index]",
                    "type": "List",
                    "possible_values": []
                },
                "output_shape": {
                    "value": "shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array_ops.shape(to_zero)",
                            "Call"
                        ],
                        [
                            "array_ops.shape(to_zero)",
                            "Call"
                        ]
                    ]
                },
                "sparse_values": {
                    "value": "first_grad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array_ops.reshape(grad, [-1])[0]",
                            "Subscript"
                        ],
                        [
                            "array_ops.reshape(grad, [-1])[0]",
                            "Subscript"
                        ]
                    ]
                },
                "default_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RegisterGradient_49": {
                "op_type": {
                    "value": "ZeroOutFloat",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reshape_45": {
                "tensor": {
                    "value": "grad",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_64": {
                "tensor": {
                    "value": "grad",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "ops/zero_out_op_test.py": {
        "tensorflow": {
            "load_op_library_25": {
                "variable": {
                    "value": "zero_out_module",
                    "type": "variable",
                    "possible_values": []
                },
                "library_filename": {
                    "value": "./zero_out.so",
                    "type": "str",
                    "possible_values": []
                }
            },
            "main_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}