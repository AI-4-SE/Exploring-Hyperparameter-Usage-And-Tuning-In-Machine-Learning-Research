{
    "AngryTops/EventGeneration/data_augmentation.py": {
        "sklearn": {}
    },
    "AngryTops/ModelTraining/FormatInputOutput.py": {
        "sklearn": {
            "shuffle_30": {
                "variable": {
                    "value": "df",
                    "type": "Variable",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "df",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "AngryTops/Plotting/fit.py": {
        "sklearn": {}
    },
    "AngryTops/Plotting/fit_tquark.py": {
        "sklearn": {}
    },
    "archive/HyperParameterSearch.py": {
        "sklearn": {}
    },
    "AngryTops/HyperParameterSearch/HyperOptSearch.py": {
        "tensorflow": {
            "EarlyStopping_44": {
                "variable": {
                    "value": "early_stopping",
                    "type": "Variable",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "patience": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "AngryTops/HyperParameterSearch/test_models.py": {
        "tensorflow": {
            "Model_25": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size2']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(kernel_reg1))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=False, kernel_regularizer=l2(kernel_reg2))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act1'], kernel_regularizer=l2(kernel_reg3))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act2'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size1']), activation=config['act1'], kernel_regularizer=l2(kernel_reg1))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(kernel_reg2))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(kernel_reg3))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act2'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_29": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(int(config['size5']), activation=config['act2'])(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act3'])(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act4'])(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act3'], kernel_regularizer=l2(kernel_reg4))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act4'])(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_41": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(int(config['size6']), activation=config['act3'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act2'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act3'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation=config['act5'])(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act5'], kernel_regularizer=l2(kernel_reg4))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size8']), activation=config['act6'], kernel_regularizer=l2(kernel_reg5))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act5'], kernel_regularizer=l2(kernel_reg5))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_43": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['learn_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Model_57": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size2']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(kernel_reg1))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=False, kernel_regularizer=l2(kernel_reg2))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act1'], kernel_regularizer=l2(kernel_reg3))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act2'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size1']), activation=config['act1'], kernel_regularizer=l2(kernel_reg1))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(kernel_reg2))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(kernel_reg3))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act2'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_60": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_74": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(int(config['size6']), activation=config['act3'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act2'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act3'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation=config['act5'])(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act5'], kernel_regularizer=l2(kernel_reg4))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size8']), activation=config['act6'], kernel_regularizer=l2(kernel_reg5))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act5'], kernel_regularizer=l2(kernel_reg5))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_76": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['learn_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Model_96": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size2']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(kernel_reg1))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=False, kernel_regularizer=l2(kernel_reg2))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act1'], kernel_regularizer=l2(kernel_reg3))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act2'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size1']), activation=config['act1'], kernel_regularizer=l2(kernel_reg1))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(kernel_reg2))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(kernel_reg3))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act2'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_101": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(int(config['size5']), activation=config['act2'])(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act3'])(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act4'])(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act3'], kernel_regularizer=l2(kernel_reg4))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act4'])(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_114": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(int(config['size6']), activation=config['act3'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act2'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act3'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation=config['act5'])(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act5'], kernel_regularizer=l2(kernel_reg4))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size8']), activation=config['act6'], kernel_regularizer=l2(kernel_reg5))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act5'], kernel_regularizer=l2(kernel_reg5))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_116": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['learn_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Model_138": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size2']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(kernel_reg1))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=False, kernel_regularizer=l2(kernel_reg2))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act1'], kernel_regularizer=l2(kernel_reg3))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act2'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size1']), activation=config['act1'], kernel_regularizer=l2(kernel_reg1))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(kernel_reg2))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(kernel_reg3))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act2'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_144": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(int(config['size5']), activation=config['act2'])(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act3'])(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act4'])(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act3'], kernel_regularizer=l2(kernel_reg4))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act4'])(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_155": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(int(config['size6']), activation=config['act3'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act2'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act3'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation=config['act5'])(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act5'], kernel_regularizer=l2(kernel_reg4))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size8']), activation=config['act6'], kernel_regularizer=l2(kernel_reg5))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act5'], kernel_regularizer=l2(kernel_reg5))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_157": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['learn_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_164": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_178": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_185": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_195": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_203": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_219": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['learn_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_225": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_245": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['learn_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "AngryTops/ModelTraining/BrowseEpoches.py": {
        "tensorflow": {}
    },
    "AngryTops/ModelTraining/cnn.py": {
        "tensorflow": {
            "Sequential_15": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_31": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_37": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_53": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_79": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_104": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['learn_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_111": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_133": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_139": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_165": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0008965229699400112",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "AngryTops/ModelTraining/custom_loss.py": {
        "tensorflow": {
            "constant_49": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "sqrt_50": {
                "variable": {
                    "value": "true_pT",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.math.add(tf.math.square(y_true[:, 0]), tf.math.square(y_true[:, 1]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sqrt_51": {
                "variable": {
                    "value": "pred_pT",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.math.add(tf.math.square(y_pred[:, 0]), tf.math.square(y_pred[:, 1]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_52": {
                "variable": {
                    "value": "pxpz_true",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.stack([y_true[:, 0], y_pred[:, -1]], 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_53": {
                "variable": {
                    "value": "pxpz_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "tf.stack([y_true[:, 0], y_pred[:, -1]], 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "constant_77": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "sqrt_78": {
                "variable": {
                    "value": "true_pT",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.math.add(tf.math.square(y_true[:, 0]), tf.math.square(y_true[:, 1]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sqrt_79": {
                "variable": {
                    "value": "pred_pT",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.math.add(tf.math.square(y_pred[:, 0]), tf.math.square(y_pred[:, 1]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_204": {
                "variable": {
                    "value": "dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "output_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "constant_210": {
                "variable": {
                    "value": "sigmas",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "sigmas",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.ones(36) * 1.0",
                            "BinOp"
                        ],
                        [
                            "tf.constant(sigmas)",
                            "Call"
                        ]
                    ]
                }
            },
            "cast_212": {
                "variable": {
                    "value": "dist",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.stack(output_list)",
                            "Call"
                        ],
                        [
                            "transpose_subtraction(x, y)",
                            "Call"
                        ],
                        [
                            "tf.dtypes.cast(dist, dtype=tf.float64)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_214": {
                "variable": {
                    "value": "s",
                    "type": "Variable",
                    "possible_values": []
                },
                "a": {
                    "value": "beta",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1.0 / (2.0 * tf.expand_dims(sigmas, 1))",
                            "BinOp"
                        ]
                    ]
                },
                "b": {
                    "value": "tf.reshape(dist, (1, -1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_221": {
                "variable": {
                    "value": "cost",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "gaussian_kernel(y_true, y_true)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "where_224": {
                "variable": {
                    "value": "cost",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "cost > 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "cost",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(gaussian_kernel(y_true, y_true))",
                            "Call"
                        ],
                        [
                            "cost - 2 * tf.reduce_mean(gaussian_kernel(y_true, y_pred))",
                            "BinOp"
                        ],
                        [
                            "tf.where(cost > 0, cost, 0, name='value')",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "value",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cast_229": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "mmd_loss(y_true, y_pred)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cast_230": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "weighted_MSE([1, 1, 1, 1, 1, 1])(y_true, y_pred)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_24": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "reduce_sum_55": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(true_pT, pred_pT)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_57": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(tf.math.angle(y_true[:, :2]), tf.math.angle(y_pred[:, :2]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_59": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(tf.math.angle(pxpz_true), tf.math.angle(pxpz_pred))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_80": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(true_pT, pred_pT)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_99": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(y_true[0], y_pred[0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_117": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(y_true[1], y_pred[1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_135": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(y_true[2], y_pred[2])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_153": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(y_true[3], y_pred[3])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_172": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(y_true[4], y_pred[4])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_190": {
                "input_tensor": {
                    "value": "tf.math.squared_difference(y_true[4], y_pred[4])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_215": {
                "tensor": {
                    "value": "tf.reduce_sum(tf.exp(-s), 0)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "tf.shape(dist)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_222": {
                "input_tensor": {
                    "value": "gaussian_kernel(y_pred, y_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_50": {
                "x": {
                    "value": "tf.math.square(y_true[:, 0])",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.math.square(y_true[:, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_51": {
                "x": {
                    "value": "tf.math.square(y_pred[:, 0])",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.math.square(y_pred[:, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_52": {
                "values": {
                    "value": "[y_true[:, 0], y_pred[:, -1]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_53": {
                "values": {
                    "value": "[y_true[:, 0], y_pred[:, -1]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squared_difference_55": {
                "x": {
                    "value": "true_pT",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.math.sqrt(tf.math.add(tf.math.square(y_true[:, 0]), tf.math.square(y_true[:, 1])))",
                            "Call"
                        ],
                        [
                            "tf.math.sqrt(tf.math.add(tf.math.square(y_true[:, 0]), tf.math.square(y_true[:, 1])))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "pred_pT",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.math.sqrt(tf.math.add(tf.math.square(y_pred[:, 0]), tf.math.square(y_pred[:, 1])))",
                            "Call"
                        ],
                        [
                            "tf.math.sqrt(tf.math.add(tf.math.square(y_pred[:, 0]), tf.math.square(y_pred[:, 1])))",
                            "Call"
                        ]
                    ]
                }
            },
            "squared_difference_57": {
                "x": {
                    "value": "tf.math.angle(y_true[:, :2])",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.math.angle(y_pred[:, :2])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squared_difference_59": {
                "x": {
                    "value": "tf.math.angle(pxpz_true)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.math.angle(pxpz_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_78": {
                "x": {
                    "value": "tf.math.square(y_true[:, 0])",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.math.square(y_true[:, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_79": {
                "x": {
                    "value": "tf.math.square(y_pred[:, 0])",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.math.square(y_pred[:, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squared_difference_80": {
                "x": {
                    "value": "true_pT",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.math.sqrt(tf.math.add(tf.math.square(y_true[:, 0]), tf.math.square(y_true[:, 1])))",
                            "Call"
                        ],
                        [
                            "tf.math.sqrt(tf.math.add(tf.math.square(y_true[:, 0]), tf.math.square(y_true[:, 1])))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "pred_pT",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.math.sqrt(tf.math.add(tf.math.square(y_pred[:, 0]), tf.math.square(y_pred[:, 1])))",
                            "Call"
                        ],
                        [
                            "tf.math.sqrt(tf.math.add(tf.math.square(y_pred[:, 0]), tf.math.square(y_pred[:, 1])))",
                            "Call"
                        ]
                    ]
                }
            },
            "squared_difference_99": {
                "x": {
                    "value": "y_true[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "y_pred[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "squared_difference_117": {
                "x": {
                    "value": "y_true[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "y_pred[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "squared_difference_135": {
                "x": {
                    "value": "y_true[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "y_pred[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "squared_difference_153": {
                "x": {
                    "value": "y_true[3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "y_pred[3]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "squared_difference_172": {
                "x": {
                    "value": "y_true[4]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "y_pred[4]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "squared_difference_190": {
                "x": {
                    "value": "y_true[4]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "y_pred[4]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "reduce_sum_198": {
                "input_tensor": {
                    "value": "tf.square(z)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_208": {
                "input_tensor": {
                    "value": "tf.square(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_214": {
                "tensor": {
                    "value": "dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.stack(output_list)",
                            "Call"
                        ],
                        [
                            "transpose_subtraction(x, y)",
                            "Call"
                        ],
                        [
                            "tf.dtypes.cast(dist, dtype=tf.float64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(1, -1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_215": {
                "input_tensor": {
                    "value": "tf.exp(-s)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "shape_215": {
                "input": {
                    "value": "dist",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.stack(output_list)",
                            "Call"
                        ],
                        [
                            "transpose_subtraction(x, y)",
                            "Call"
                        ],
                        [
                            "tf.dtypes.cast(dist, dtype=tf.float64)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_223": {
                "input_tensor": {
                    "value": "gaussian_kernel(y_true, y_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "square_50": {
                "x": {
                    "value": "y_true[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "square_51": {
                "x": {
                    "value": "y_pred[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "angle_57": {
                "input": {
                    "value": "y_pred[:, :2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "angle_59": {
                "input": {
                    "value": "pxpz_pred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(tf.stack([y_true[:, 0], y_pred[:, -1]], 1), shape=(-1, 2))",
                            "Call"
                        ]
                    ]
                }
            },
            "square_78": {
                "x": {
                    "value": "y_true[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "square_79": {
                "x": {
                    "value": "y_pred[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "square_198": {
                "x": {
                    "value": "z",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "transpose_203": {
                "a": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "y[i]",
                            "Subscript"
                        ]
                    ]
                },
                "perm": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "square_208": {
                "x": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.random.randint(1, 10, 18 * 32).reshape(32, 6, 3) * 1.0",
                            "BinOp"
                        ],
                        [
                            "tf.dtypes.cast(mmd_loss(y_true, y_pred), dtype=tf.float64)",
                            "Call"
                        ]
                    ]
                }
            },
            "expand_dims_213": {
                "input": {
                    "value": "sigmas",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.ones(36) * 1.0",
                            "BinOp"
                        ],
                        [
                            "tf.constant(sigmas)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "exp_215": {
                "x": {
                    "value": "-s",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "expand_dims_203": {
                "input": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x[i]",
                            "Subscript"
                        ]
                    ]
                },
                "axis": {
                    "value": "len(a.shape)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "AngryTops/ModelTraining/models.py": {
        "tensorflow": {
            "Sequential_37": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_56": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_63": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_83": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_94": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_108": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0008965229699400112",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "AngryTops/ModelTraining/single_output_models.py": {
        "tensorflow": {
            "Model_31": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(20, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_34": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_46": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(25, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(final)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_48": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_71": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(20, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_74": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_87": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(25, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(final)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_89": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_106": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(20, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_112": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10)(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10)(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_124": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(25, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(final)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_125": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_143": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(20, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_150": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10)(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10)(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_165": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(25, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(final)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_166": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_184": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(20, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu')(input_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_191": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10)(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10)(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_206": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(25, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(final)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(1, activation='linear')(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_207": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "AngryTops/ModelTraining/train_simple_model.py": {
        "tensorflow": {
            "latest_checkpoint_48": {
                "variable": {
                    "value": "checkpoint_path",
                    "type": "Variable",
                    "possible_values": []
                },
                "checkpoint_dir": {
                    "value": "checkpoint_dir",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'{}/checkpoints'.format(train_dir)",
                            "Call"
                        ],
                        [
                            "'{}/checkpoints'.format(train_dir)",
                            "Call"
                        ]
                    ]
                }
            },
            "ModelCheckpoint_107": {
                "variable": {
                    "value": "cp_callback",
                    "type": "Variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "filepath",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "checkpoint_dir + '/weights-improvement-{epoch:02d}.ckpt'",
                            "BinOp"
                        ]
                    ]
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "save_weights_only": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "EarlyStopping_108": {
                "variable": {
                    "value": "early_stopping",
                    "type": "Variable",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "patience": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gpu_device_name_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "plot_model_123": {
                "model": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "models[model_name](metrics, losses, **kwargs)",
                            "Call"
                        ],
                        [
                            "tf.keras.models.load_model('%s/simple_model.h5' % train_dir, custom_objects=custom_metrics)",
                            "Call"
                        ]
                    ]
                },
                "to_file": {
                    "value": "'%s/model.png' % train_dir",
                    "type": "BinOp",
                    "possible_values": []
                },
                "show_shapes": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "expand_nested": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_model_94": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "'%s/simple_model.h5' % train_dir",
                    "type": "BinOp",
                    "possible_values": []
                },
                "custom_objects": {
                    "value": "custom_metrics",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "AngryTops/ModelTraining/train_simple_model2.py": {
        "tensorflow": {
            "latest_checkpoint_48": {
                "variable": {
                    "value": "checkpoint_path",
                    "type": "Variable",
                    "possible_values": []
                },
                "checkpoint_dir": {
                    "value": "checkpoint_dir",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'{}/checkpoints'.format(train_dir)",
                            "Call"
                        ],
                        [
                            "'{}/checkpoints'.format(train_dir)",
                            "Call"
                        ]
                    ]
                }
            },
            "ModelCheckpoint_107": {
                "variable": {
                    "value": "cp_callback",
                    "type": "Variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "filepath",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "checkpoint_dir + '/weights-improvement-{epoch:02d}.ckpt'",
                            "BinOp"
                        ]
                    ]
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "save_weights_only": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "verbose": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "EarlyStopping_108": {
                "variable": {
                    "value": "early_stopping",
                    "type": "Variable",
                    "possible_values": []
                },
                "monitor": {
                    "value": "val_loss",
                    "type": "str",
                    "possible_values": []
                },
                "patience": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gpu_device_name_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "plot_model_123": {
                "model": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "models[model_name](metrics, losses, **kwargs)",
                            "Call"
                        ],
                        [
                            "tf.keras.models.load_model('%s/simple_model.h5' % train_dir, custom_objects=custom_metrics)",
                            "Call"
                        ]
                    ]
                },
                "to_file": {
                    "value": "'%s/model.png' % train_dir",
                    "type": "BinOp",
                    "possible_values": []
                },
                "show_shapes": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "expand_nested": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_model_94": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "'%s/simple_model.h5' % train_dir",
                    "type": "BinOp",
                    "possible_values": []
                },
                "custom_objects": {
                    "value": "custom_metrics",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "archive/comparing_model_predictions.py": {
        "tensorflow": {}
    },
    "archive/custom_loss.py": {
        "tensorflow": {}
    },
    "archive/delphes2tree.py": {
        "tensorflow": {}
    },
    "archive/old_models.py": {
        "tensorflow": {
            "Sequential_16": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_24": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_34": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_44": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_55": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_65": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_75": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_85": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_98": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_109": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_122": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_130": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_143": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_152": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_165": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_173": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_186": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_195": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_208": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_216": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_230": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(6,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(6,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(10, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(8, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(8, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(1, 8))(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(1, 6))(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_237": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(30,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(30,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 6))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(10, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(8, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(8, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 6))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(10, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(10, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_247": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "LSTM(6, return_sequences=True)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(4, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "LSTM(6, return_sequences=True)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(4, activation='linear')(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_249": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_264": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(6,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(6,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(10, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(8, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(8, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(1, 8))(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='relu')(x_lep)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(1, 6))(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_271": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(30,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(30,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 6))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(10, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(8, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(8, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 6))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(10, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(10, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_281": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "LSTM(6, return_sequences=True)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(4, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "LSTM(6, return_sequences=True)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(4, activation='linear')(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_283": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_297": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RMSprop_309": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_322": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_337": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_351": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RMSprop_363": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_371": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_379": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_397": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_405": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_423": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_432": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_453": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_465": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_487": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_501": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "archive/old_models2.py": {
        "tensorflow": {
            "Model_31": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu', kernel_regularizer=l2(0.0001))(input_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 10))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001), recurrent_dropout=0.1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(162, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(116, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(179, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(97, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_34": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_48": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='tanh', kernel_regularizer=l2(0.001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(combined)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=True, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(157, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(166, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_50": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_78": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu', kernel_regularizer=l2(0.0001))(input_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 10))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001), recurrent_dropout=0.1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(162, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(116, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(179, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(97, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_82": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='elu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu', kernel_regularizer=l2(0.0001))(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(135, activation='elu')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_94": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='tanh', kernel_regularizer=l2(0.001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(combined)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=True, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(157, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(166, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_96": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_111": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu', kernel_regularizer=l2(0.0001))(input_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 10))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001), recurrent_dropout=0.1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(162, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(116, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(179, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(97, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_115": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='elu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu', kernel_regularizer=l2(0.0001))(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(135, activation='elu')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_128": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='tanh', kernel_regularizer=l2(0.001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(combined)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=True, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(157, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(166, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_130": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_147": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu', kernel_regularizer=l2(0.0001))(input_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 10))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001), recurrent_dropout=0.1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(162, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(116, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(179, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(97, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_152": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='elu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu', kernel_regularizer=l2(0.0001))(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(135, activation='elu')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_164": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='tanh', kernel_regularizer=l2(0.001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(combined)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=True, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(157, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(166, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_166": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_184": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu', kernel_regularizer=l2(0.0001))(input_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 10))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001), recurrent_dropout=0.1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(162, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(116, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(179, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(97, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_190": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='elu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu', kernel_regularizer=l2(0.0001))(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(135, activation='elu')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_201": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='tanh', kernel_regularizer=l2(0.001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(combined)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=True, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(157, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(166, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_203": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_218": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu', kernel_regularizer=l2(0.0001))(input_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 10))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001), recurrent_dropout=0.1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(162, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(116, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(179, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(97, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_224": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='elu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu', kernel_regularizer=l2(0.0001))(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(135, activation='elu')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_237": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='tanh', kernel_regularizer=l2(0.001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(combined)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=True, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(157, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(166, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_239": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_257": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu', kernel_regularizer=l2(0.0001))(input_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 10))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001), recurrent_dropout=0.1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(162, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(116, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(179, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(97, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_263": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='elu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu', kernel_regularizer=l2(0.0001))(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(135, activation='elu')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_277": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='tanh', kernel_regularizer=l2(0.001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(combined)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=True, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(157, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(166, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_279": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_298": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu', kernel_regularizer=l2(0.0001))(input_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 10))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001), recurrent_dropout=0.1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(162, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(116, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(179, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(97, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_303": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='elu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu', kernel_regularizer=l2(0.0001))(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(135, activation='elu')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_318": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='tanh', kernel_regularizer=l2(0.001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(combined)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=True, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(157, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(166, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_320": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_344": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu', kernel_regularizer=l2(0.0001))(input_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 10))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=False)(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20)(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization(axis=1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(0.0001), recurrent_dropout=0.1)(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=False, kernel_regularizer=l2(0.0001))(x_jets)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(162, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(116, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(179, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(97, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_348": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='elu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu', kernel_regularizer=l2(0.0001))(x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='linear')(x_lep)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='relu', kernel_regularizer=l2(0.0001))(input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(135, activation='elu')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_360": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='tanh', kernel_regularizer=l2(0.001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh', kernel_regularizer=l2(0.0001))(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 5))(combined)",
                            "Call"
                        ],
                        [
                            "LSTM(30, return_sequences=True, kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(15, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(5, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(3)(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(combined)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu', kernel_regularizer=l2(0.0001))(final)",
                            "Call"
                        ],
                        [
                            "BatchNormalization()(final)",
                            "Call"
                        ],
                        [
                            "Dense(18)(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(157, activation='relu')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(166, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_362": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0008606121605003719",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "archive/old_models3.py": {
        "tensorflow": {
            "Model_29": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size2']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(50, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(25, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_32": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_46": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act3'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act2'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act3'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation=config['act5'])(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_48": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_76": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size2']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(50, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(25, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_80": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act2'])(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_92": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act3'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act2'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act3'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation=config['act5'])(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_94": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Model_120": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size2']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(50, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(25, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_124": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act2'])(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_136": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act3'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act2'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act3'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation=config['act5'])(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_138": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['learn_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Model_158": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size2']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(50, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(25, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_161": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_175": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act3'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act2'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act3'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation=config['act5'])(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_177": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['learn_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Model_204": {
                "variable": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ],
                        [
                            "Input(shape=(20,), name='input_jets')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_jets",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(30, activation='relu')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='tanh')(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size2']), return_sequences=True, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size3']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(int(config['size1']), return_sequences=False, kernel_regularizer=l2(config['reg_weight']), recurrent_regularizer=l2(config['rec_weight']))(x_jets)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size2']), activation=config['act1'])(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(5, 4))(input_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(50, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(50, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(25, return_sequences=True, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(25, activation='relu'))(x_jets)",
                            "Call"
                        ],
                        [
                            "LSTM(12, return_sequences=False, kernel_regularizer=l2(reg_weight), recurrent_regularizer=l2(rec_weight))(x_jets)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_jets, outputs=x_jets)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_208": {
                "variable": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ],
                        [
                            "Input(shape=(5,), name='input_lep')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_lep",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act2'])(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=input_lep)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation='tanh')(input_lep)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_lep, outputs=x_lep)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_220": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_lep.input, x_jets.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(40, activation=dense_act1)(combined)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='elu')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size6']), activation=config['act3'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size7']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size3']), activation=config['act2'])(combined)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size4']), activation=config['act3'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(int(config['size5']), activation=config['act4'])(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation=config['act5'])(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ],
                        [
                            "Dense(3, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='tanh')(combined)",
                            "Call"
                        ],
                        [
                            "Dense(25, activation='tanh')(final)",
                            "Call"
                        ],
                        [
                            "Dense(18, activation='linear')(final)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 3))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_222": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learn_rate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ],
                        [
                            "kwargs['learn_rate']",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "archive/old_models4.py": {
        "tensorflow": {
            "Sequential_19": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_33": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_45": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_54": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_81": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0008965229699400112",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_94": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_104": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_117": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_136": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_147": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_159": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Model_181": {
                "variable": {
                    "value": "x_events",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_events",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(12,), name='input_events')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_events",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Dense(108, activation='tanh')(input_events)",
                            "Call"
                        ],
                        [
                            "Dense(36, activation='tanh')(x_events)",
                            "Call"
                        ],
                        [
                            "Dense(6, activation='tanh')(x_events)",
                            "Call"
                        ],
                        [
                            "Reshape(target_shape=(6, 1))(x_events)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_events, outputs=x_events)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_185": {
                "variable": {
                    "value": "x_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "input_features",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Input(shape=(30,), name='input_features')",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "x_features",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Reshape(target_shape=(6, 5))(input_features)",
                            "Call"
                        ],
                        [
                            "keras.Model(inputs=input_features, outputs=x_features)",
                            "Call"
                        ]
                    ]
                }
            },
            "Model_195": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x_events.input, x_features.input]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "final",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "TimeDistributed(Dense(243, activation='tanh'))(combined)",
                            "Call"
                        ],
                        [
                            "Bidirectional(LSTM(81, return_sequences=True))(final)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(81, activation='tanh'))(final)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(27, activation='tanh'))(final)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(9, activation='tanh'))(final)",
                            "Call"
                        ],
                        [
                            "TimeDistributed(Dense(3, activation='tanh'))(final)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_198": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "archive/old_models5.py": {
        "tensorflow": {
            "Sequential_23": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_42": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "archive/premade_estimator.py": {
        "tensorflow": {}
    }
}