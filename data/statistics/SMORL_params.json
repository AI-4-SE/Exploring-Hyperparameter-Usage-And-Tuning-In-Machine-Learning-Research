{
    "rlkit/rlkit/torch/vae/evaluation.py": {
        "sklearn": {
            "mutual_info_score_10": {
                "variable": {
                    "value": "h[j]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "labels_true": {
                    "value": "ys[j, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "ys[j, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mutual_info_score_21": {
                "variable": {
                    "value": "m[i, j]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "labels_true": {
                    "value": "ys[j, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "mus[i, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/core/logging.py": {
        "torch": {
            "save_287": {
                "obj": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "params",
                            "Method Argument"
                        ]
                    ]
                },
                "f": {
                    "value": "file_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "'extra_data.pkl'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "save_291": {
                "obj": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "params",
                            "Method Argument"
                        ]
                    ]
                },
                "f": {
                    "value": "file_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "'extra_data.pkl'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "save_295": {
                "obj": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "params",
                            "Method Argument"
                        ]
                    ]
                },
                "f": {
                    "value": "file_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "'extra_data.pkl'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "save_301": {
                "obj": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "params",
                            "Method Argument"
                        ]
                    ]
                },
                "f": {
                    "value": "file_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "'extra_data.pkl'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "save_299": {
                "obj": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "params",
                            "Method Argument"
                        ]
                    ]
                },
                "f": {
                    "value": "file_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, file_name)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'itr_%d.pkl' % itr)",
                            "Call"
                        ],
                        [
                            "osp.join(self._snapshot_dir, 'params.pkl')",
                            "Call"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "file_name",
                            "Method Argument"
                        ],
                        [
                            "'extra_data.pkl'",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/data_management/shared_obs_dict_replay_buffer.py": {
        "torch": {}
    },
    "rlkit/rlkit/envs/gt_wrapper.py": {
        "torch": {}
    },
    "rlkit/rlkit/envs/mujoco_image_env.py": {
        "torch": {}
    },
    "rlkit/rlkit/envs/render_wrapper.py": {
        "torch": {}
    },
    "rlkit/rlkit/envs/scalor_wrapper.py": {
        "torch": {
            "from_numpy_298": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "obs['observation'].reshape(1, self.input_channels, self.imsize, self.imsize)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(x).to(self.device, torch.float32)",
                            "Call"
                        ],
                        [
                            "np.random.uniform(0.5, -0.25, (batch_size,))",
                            "Call"
                        ],
                        [
                            "obs[self.scalor_input_observation_key].reshape(-1, self.input_channels, self.imsize, self.imsize)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(x).to(self.device, torch.float32)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_153": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "obs['observation'].reshape(1, self.input_channels, self.imsize, self.imsize)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(x).to(self.device, torch.float32)",
                            "Call"
                        ],
                        [
                            "np.random.uniform(0.5, -0.25, (batch_size,))",
                            "Call"
                        ],
                        [
                            "obs[self.scalor_input_observation_key].reshape(-1, self.input_channels, self.imsize, self.imsize)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(x).to(self.device, torch.float32)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_158": {
                "variable": {
                    "value": "goals_image",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "goals_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "goals[self.scalor_input_desired_goal_key].reshape(1, self.input_channels, self.imsize, self.imsize)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(goals_image).to(self.device, torch.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_328": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_331": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.size(0)",
                            "Call"
                        ],
                        [
                            "latent_obs.shape[0]",
                            "Subscript"
                        ],
                        [
                            "latent_obs.shape[0]",
                            "Subscript"
                        ],
                        [
                            "len(obj_indices)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_195": {
                "ndarray": {
                    "value": "z_where",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.asarray([z_where[int(k), :] for (z_where, k) in zip(z_wheres, ks)])",
                            "Call"
                        ],
                        [
                            "latent_representation['z_where'].detach().cpu().numpy()",
                            "Call"
                        ],
                        [
                            "goal['z_where_goals']",
                            "Subscript"
                        ],
                        [
                            "z_where",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_314": {
                "ndarray": {
                    "value": "latent_obs['z_where']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_333": {
                "ndarray": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(bs, 2).to(self.device)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(action)[None].to(self.device)",
                            "Call"
                        ],
                        [
                            "action",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "action",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/envs/vae_wrapper.py": {
        "torch": {
            "device_322": {
                "variable": {
                    "value": "ptu.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda: + str(gpu_id) if use_gpu else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/launchers/gt_sac_experiment.py": {
        "torch": {}
    },
    "rlkit/rlkit/launchers/launcher_util.py": {
        "torch": {}
    },
    "rlkit/rlkit/launchers/skewfit_experiments.py": {
        "torch": {
            "Sigmoid_119": {
                "variable": {
                    "value": "decoder_activation",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/policies/argmax.py": {
        "torch": {}
    },
    "rlkit/rlkit/torch/conv_networks.py": {
        "torch": {
            "ModuleList_49": {
                "variable": {
                    "value": "self.conv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_50": {
                "variable": {
                    "value": "self.conv_norm_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_51": {
                "variable": {
                    "value": "self.fc_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_52": {
                "variable": {
                    "value": "self.fc_norm_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_69": {
                "variable": {
                    "value": "test_mat",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.input_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.input_width",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.input_height",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_90": {
                "variable": {
                    "value": "self.last_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "fc_input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(np.prod(test_mat.shape))",
                            "Call"
                        ],
                        [
                            "fc_input_size + added_fc_input_size",
                            "BinOp"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "fc_input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ModuleList_179": {
                "variable": {
                    "value": "self.deconv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_180": {
                "variable": {
                    "value": "self.deconv_norm_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_181": {
                "variable": {
                    "value": "self.fc_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_182": {
                "variable": {
                    "value": "self.fc_norm_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_195": {
                "variable": {
                    "value": "self.last_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "fc_input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(np.prod(test_mat.shape))",
                            "Call"
                        ],
                        [
                            "fc_input_size + added_fc_input_size",
                            "BinOp"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "fc_input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "deconv_input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.deconv_input_channels * self.deconv_input_height * self.deconv_input_width",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_214": {
                "variable": {
                    "value": "test_mat",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.deconv_input_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.deconv_input_width",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.deconv_input_height",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_221": {
                "variable": {
                    "value": "self.first_deconv_output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "deconv_input_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_channels",
                            "variable"
                        ],
                        [
                            "deconv_input_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "deconv_output_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "deconv_output_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "deconv_output_kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "deconv_output_kernel_size",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "deconv_output_strides",
                    "type": "variable",
                    "possible_values": [
                        [
                            "deconv_output_strides",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "deconv_output_padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "output_padding": {
                    "value": "deconv_output_output_padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ConvTranspose2d_232": {
                "variable": {
                    "value": "self.second_deconv_output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "deconv_input_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_channels",
                            "variable"
                        ],
                        [
                            "deconv_input_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "deconv_output_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "deconv_output_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "deconv_output_kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "deconv_output_kernel_size",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "deconv_output_strides",
                    "type": "variable",
                    "possible_values": [
                        [
                            "deconv_output_strides",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "deconv_output_padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "output_padding": {
                    "value": "deconv_output_output_padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "variable": {
                    "value": "conv",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_channels",
                            "variable"
                        ],
                        [
                            "input_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings)",
                            "Call"
                        ],
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings, output_paddings)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings)",
                            "Call"
                        ],
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings, output_paddings)",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings)",
                            "Call"
                        ],
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings, output_paddings)",
                            "Call"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings)",
                            "Call"
                        ],
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings, output_paddings)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_80": {
                "variable": {
                    "value": "fc_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "fc_input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(np.prod(test_mat.shape))",
                            "Call"
                        ],
                        [
                            "fc_input_size + added_fc_input_size",
                            "BinOp"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "fc_input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size in enumerate(hidden_sizes)",
                            "Call"
                        ],
                        [
                            "hidden_size in enumerate(hidden_sizes)",
                            "Call"
                        ]
                    ]
                }
            },
            "BatchNorm1d_82": {
                "variable": {
                    "value": "norm_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size in enumerate(hidden_sizes)",
                            "Call"
                        ],
                        [
                            "hidden_size in enumerate(hidden_sizes)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_115": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(h, extra_fc_input)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_157": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_185": {
                "variable": {
                    "value": "fc_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "fc_input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(np.prod(test_mat.shape))",
                            "Call"
                        ],
                        [
                            "fc_input_size + added_fc_input_size",
                            "BinOp"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "hidden_size",
                            "variable"
                        ],
                        [
                            "fc_input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size in enumerate(hidden_sizes)",
                            "Call"
                        ],
                        [
                            "hidden_size in enumerate(hidden_sizes)",
                            "Call"
                        ]
                    ]
                }
            },
            "BatchNorm1d_187": {
                "variable": {
                    "value": "norm_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "num_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hidden_size in enumerate(hidden_sizes)",
                            "Call"
                        ],
                        [
                            "hidden_size in enumerate(hidden_sizes)",
                            "Call"
                        ]
                    ]
                }
            },
            "ConvTranspose2d_201": {
                "variable": {
                    "value": "deconv",
                    "type": "variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "deconv_input_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_channels",
                            "variable"
                        ],
                        [
                            "deconv_input_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings)",
                            "Call"
                        ],
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings, output_paddings)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings)",
                            "Call"
                        ],
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings, output_paddings)",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings)",
                            "Call"
                        ],
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings, output_paddings)",
                            "Call"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings)",
                            "Call"
                        ],
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings, output_paddings)",
                            "Call"
                        ]
                    ]
                },
                "output_padding": {
                    "value": "outp_padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(n_channels, kernel_sizes, strides, paddings, output_paddings)",
                            "Call"
                        ]
                    ]
                }
            },
            "BatchNorm2d_73": {
                "num_features": {
                    "value": "test_mat.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "BatchNorm2d_219": {
                "num_features": {
                    "value": "test_mat.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/core.py": {
        "torch": {}
    },
    "rlkit/rlkit/torch/data.py": {
        "torch": {
            "from_numpy_56": {
                "variable": {
                    "value": "self._weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "weights",
                            "Method Argument"
                        ],
                        [
                            "weights",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randperm_32": {
                "n": {
                    "value": "len(self.data_source)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "multinomial_65": {
                "input": {
                    "value": "self._weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_samples": {
                    "value": "len(self._weights)",
                    "type": "Call",
                    "possible_values": []
                },
                "replacement": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "randperm_41": {
                "n": {
                    "value": "len(self.data_source)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/data_management/normalizer.py": {
        "torch": {
            "clamp_23": {
                "input": {
                    "value": "(v - mean) / std",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "-clip_range",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "clip_range",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.default_clip_range",
                            "Attribute"
                        ],
                        [
                            "self.default_clip_range",
                            "Attribute"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "clamp_46": {
                "input": {
                    "value": "(v - mean) / std",
                    "type": "BinOp",
                    "possible_values": []
                },
                "min": {
                    "value": "-clip_range",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "clip_range",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.default_clip_range",
                            "Attribute"
                        ],
                        [
                            "self.default_clip_range",
                            "Attribute"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/torch/distributions.py": {
        "torch": {
            "Normal_22": {
                "variable": {
                    "value": "self.normal",
                    "type": "Attribute",
                    "possible_values": []
                },
                "loc": {
                    "value": "normal_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "normal_mean",
                            "Method Argument"
                        ]
                    ]
                },
                "scale": {
                    "value": "normal_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "normal_std",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tanh_30": {
                "input": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.normal.sample_n(n)",
                            "Call"
                        ],
                        [
                            "self.normal.sample().detach()",
                            "Call"
                        ],
                        [
                            "self.normal_mean + self.normal_std * Normal(ptu.zeros(self.normal_mean.size()), ptu.ones(self.normal_std.size())).sample()",
                            "BinOp"
                        ]
                    ]
                }
            },
            "log_43": {
                "input": {
                    "value": "1 - value * value + self.epsilon",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_58": {
                "input": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.normal.sample_n(n)",
                            "Call"
                        ],
                        [
                            "self.normal.sample().detach()",
                            "Call"
                        ],
                        [
                            "self.normal_mean + self.normal_std * Normal(ptu.zeros(self.normal_mean.size()), ptu.ones(self.normal_std.size())).sample()",
                            "BinOp"
                        ]
                    ]
                }
            },
            "tanh_77": {
                "input": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.normal.sample_n(n)",
                            "Call"
                        ],
                        [
                            "self.normal.sample().detach()",
                            "Call"
                        ],
                        [
                            "self.normal_mean + self.normal_std * Normal(ptu.zeros(self.normal_mean.size()), ptu.ones(self.normal_std.size())).sample()",
                            "BinOp"
                        ]
                    ]
                }
            },
            "tanh_28": {
                "input": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.normal.sample_n(n)",
                            "Call"
                        ],
                        [
                            "self.normal.sample().detach()",
                            "Call"
                        ],
                        [
                            "self.normal_mean + self.normal_std * Normal(ptu.zeros(self.normal_mean.size()), ptu.ones(self.normal_std.size())).sample()",
                            "BinOp"
                        ]
                    ]
                }
            },
            "log_40": {
                "input": {
                    "value": "(1 + value) / (1 - value)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_56": {
                "input": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.normal.sample_n(n)",
                            "Call"
                        ],
                        [
                            "self.normal.sample().detach()",
                            "Call"
                        ],
                        [
                            "self.normal_mean + self.normal_std * Normal(ptu.zeros(self.normal_mean.size()), ptu.ones(self.normal_std.size())).sample()",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Normal_67": {
                "loc": {
                    "value": "ptu.zeros(self.normal_mean.size())",
                    "type": "Call",
                    "possible_values": []
                },
                "scale": {
                    "value": "ptu.ones(self.normal_std.size())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_75": {
                "input": {
                    "value": "z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.normal.sample_n(n)",
                            "Call"
                        ],
                        [
                            "self.normal.sample().detach()",
                            "Call"
                        ],
                        [
                            "self.normal_mean + self.normal_std * Normal(ptu.zeros(self.normal_mean.size()), ptu.ones(self.normal_std.size())).sample()",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/torch/her/her.py": {
        "torch": {
            "cat_15": {
                "variable": {
                    "value": "data[observations]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(obs, goals)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_16": {
                "variable": {
                    "value": "data[next_observations]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(next_obs, goals)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/modules.py": {
        "torch": {
            "Linear_31": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_size",
                            "Method Argument"
                        ],
                        [
                            "z_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "self._embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_116": {
                "variable": {
                    "value": "key_padding_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "state_embedding.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "max_objects",
                    "type": "variable",
                    "possible_values": [
                        [
                            "state_embedding.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(g, g_add.expand(g.size(0), 1, -1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_181": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(g, torch.zeros((g.size(0), 1, 1), dtype=g.dtype, device=g.device))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "SmoothL1Loss_192": {
                "variable": {
                    "value": "self.huber_loss_delta1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MultiheadAttention_47": {
                "variable": {
                    "value": "self.attention",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embed_dim": {
                    "value": "attention_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_heads * self._embed_dim",
                            "BinOp"
                        ],
                        [
                            "self._embed_dim",
                            "Attribute"
                        ]
                    ]
                },
                "num_heads": {
                    "value": "num_heads",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "dropout": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "add_bias_kv": {
                    "value": "add_bias_kv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                },
                "add_zero_attn": {
                    "value": "add_zero_attn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                },
                "kdim": {
                    "value": "self._embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "vdim": {
                    "value": "self._embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_62": {
                "variable": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_uncond_queries",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "uncond_attention_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._embed_dim * num_uncond_heads",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Parameter_63": {
                "variable": {
                    "value": "self.uncond_queries",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.empty(num_uncond_queries, 1, uncond_attention_dim)",
                            "Call"
                        ]
                    ]
                }
            },
            "MultiheadAttention_66": {
                "variable": {
                    "value": "self.uncond_attention",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embed_dim": {
                    "value": "uncond_attention_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._embed_dim * num_uncond_heads",
                            "BinOp"
                        ]
                    ]
                },
                "num_heads": {
                    "value": "num_uncond_heads",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "dropout": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "add_bias_kv": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "add_zero_attn": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "kdim": {
                    "value": "self._embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "vdim": {
                    "value": "self._embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_211": {
                "variable": {
                    "value": "self.scale_param",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_215": {
                "variable": {
                    "value": "self.center_param",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "variable": {
                    "value": "self.query_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self._embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "attention_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "num_heads * self._embed_dim",
                            "BinOp"
                        ],
                        [
                            "self._embed_dim",
                            "Attribute"
                        ]
                    ]
                }
            },
            "cat_148": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(output, uncond_attn_output)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_169": {
                "data": {
                    "value": "[0, 1] + [0] * with_n_frames",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "g.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "g.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_181": {
                "*size": {
                    "value": "(g.size(0), 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "g.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "g.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_211": {
                "*size": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_215": {
                "*size": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/torch/networks.py": {
        "torch": {
            "Linear_65": {
                "variable": {
                    "value": "self.last_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "variable"
                        ],
                        [
                            "next_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ],
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_102": {
                "variable": {
                    "value": "flat_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_151": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_size",
                            "Method Argument"
                        ],
                        [
                            "z_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "embed_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embed_dim",
                            "Method Argument"
                        ],
                        [
                            "embed_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_152": {
                "variable": {
                    "value": "self.pre_aggregation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(embed_dim, aggregation_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_53": {
                "variable": {
                    "value": "fc",
                    "type": "variable",
                    "possible_values": []
                },
                "in_features": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "variable"
                        ],
                        [
                            "next_size",
                            "variable"
                        ]
                    ]
                },
                "out_features": {
                    "value": "next_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "next_size in enumerate(hidden_sizes)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_152": {
                "in_features": {
                    "value": "embed_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embed_dim",
                            "Method Argument"
                        ],
                        [
                            "embed_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "aggregation_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "aggregation_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_155": {
                "in_features": {
                    "value": "aggregation_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "aggregation_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "aggregation_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "aggregation_dim",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/torch/pytorch_util.py": {
        "torch": {
            "device_114": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda: + str(gpu_id) if _use_gpu and torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "set_device_122": {
                "device": {
                    "value": "gpu_id",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ],
                        [
                            "gpu_id",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "from_numpy_133": {
                "ndarray": {
                    "value": "*args",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "zeros_143": {
                "*size": {
                    "value": "*sizes",
                    "type": "Starred",
                    "possible_values": []
                },
                "device": {
                    "value": "torch_device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ones_149": {
                "*size": {
                    "value": "*sizes",
                    "type": "Starred",
                    "possible_values": []
                },
                "device": {
                    "value": "torch_device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ones_like_155": {
                "input": {
                    "value": "*args",
                    "type": "Starred",
                    "possible_values": []
                },
                "device": {
                    "value": "torch_device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randn_161": {
                "*size": {
                    "value": "*args",
                    "type": "Starred",
                    "possible_values": []
                },
                "device": {
                    "value": "torch_device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_like_167": {
                "input": {
                    "value": "*args",
                    "type": "Starred",
                    "possible_values": []
                },
                "device": {
                    "value": "torch_device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_173": {
                "data": {
                    "value": "*args",
                    "type": "Starred",
                    "possible_values": []
                },
                "device": {
                    "value": "torch_device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "device",
                            "variable"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "normal_177": {
                "mean": {
                    "value": "*args",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "sigmoid_96": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "no_grad_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_114": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/sac/policies.py": {
        "torch": {
            "Linear_262": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "z_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_size",
                            "Method Argument"
                        ],
                        [
                            "z_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "embed_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embed_dim",
                            "Method Argument"
                        ],
                        [
                            "embed_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_263": {
                "variable": {
                    "value": "self.pre_aggregation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(embed_dim, aggregation_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_62": {
                "variable": {
                    "value": "self.last_fc_log_std",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "last_hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "action_dim",
                            "Method Argument"
                        ],
                        [
                            "action_dim",
                            "Method Argument"
                        ],
                        [
                            "action_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "clamp_107": {
                "variable": {
                    "value": "log_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.last_fc_log_std(h) + self.initial_log_std_offset",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(log_std, LOG_SIG_MIN, LOG_SIG_MAX)",
                            "Call"
                        ],
                        [
                            "self.log_std",
                            "Attribute"
                        ]
                    ]
                },
                "min": {
                    "value": "LOG_SIG_MIN",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-20",
                            "UnaryOp"
                        ]
                    ]
                },
                "max": {
                    "value": "LOG_SIG_MAX",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ]
                    ]
                }
            },
            "exp_108": {
                "variable": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.last_fc_log_std(h) + self.initial_log_std_offset",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(log_std, LOG_SIG_MIN, LOG_SIG_MAX)",
                            "Call"
                        ],
                        [
                            "self.log_std",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tanh_118": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.last_fc(h)",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_78": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_227": {
                "tensors": {
                    "value": "(h, goal_embedding.squeeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_263": {
                "in_features": {
                    "value": "embed_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "embed_dim",
                            "Method Argument"
                        ],
                        [
                            "embed_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "aggregation_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "aggregation_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_265": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_266": {
                "in_features": {
                    "value": "aggregation_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "aggregation_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "aggregation_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "aggregation_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_293": {
                "tensors": {
                    "value": "(h, goal_embedding.squeeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/sac/sac.py": {
        "torch": {
            "MSELoss_83": {
                "variable": {
                    "value": "self.qf_criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "min_149": {
                "variable": {
                    "value": "q_new_actions",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.qf1(obs_q, new_obs_actions)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_72": {
                "variable": {
                    "value": "self.log_alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "log_alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ptu.ones(1).fill_(math.log(alpha))",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_163": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_177": {
                "variable": {
                    "value": "target_q_values",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.min(target_q_values, max_val)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "min_169": {
                "input": {
                    "value": "self.target_qf1(next_obs_q, new_next_actions)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_203": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "min_177": {
                "input": {
                    "value": "target_q_values",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.min(self.target_qf1(next_obs_q, new_next_actions), self.target_qf2(next_obs_q, new_next_actions)) - ent_reg",
                            "BinOp"
                        ],
                        [
                            "torch.max(torch.min(target_q_values, max_val), min_val)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/torch/scalor/discovery.py": {
        "torch": {
            "Sequential_122": {
                "variable": {
                    "value": "self.img_mask_cat_enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(img_encode_dim + propagate_encode_dim, img_encode_dim, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_223": {
                "variable": {
                    "value": "z_pres",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_pres_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "q_z_pres.rsample()",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_225": {
                "variable": {
                    "value": "q_z_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "z_depth_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_depth_mean.view(1, -1, 1, 1).expand(bs, -1, self.args.num_cell_h, self.args.num_cell_w)",
                            "Call"
                        ],
                        [
                            "self.z_depth_net(cat_enc).chunk(2, 1)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "z_depth_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_depth_std.view(1, -1, 1, 1).expand(bs, -1, self.args.num_cell_h, self.args.num_cell_w)",
                            "Call"
                        ],
                        [
                            "self.z_depth_net(cat_enc).chunk(2, 1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_depth_std)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_229": {
                "variable": {
                    "value": "q_z_where",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "z_where_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_where_mean.view(1, -1, 1, 1).expand(bs, -1, self.args.num_cell_h, self.args.num_cell_w)",
                            "Call"
                        ],
                        [
                            "self.z_where_net(cat_enc).chunk(2, 1)",
                            "Call"
                        ],
                        [
                            "self.update_z_where(z_where_mean)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "z_where_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_where_std.view(1, -1, 1, 1).expand(bs, -1, self.args.num_cell_h, self.args.num_cell_w)",
                            "Call"
                        ],
                        [
                            "self.z_where_net(cat_enc).chunk(2, 1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_where_std)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_316": {
                "variable": {
                    "value": "q_z_where",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "z_where_mean_origin",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.update_z_where(z_where_mean)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "z_where_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_where_std.view(1, -1, 1, 1).expand(bs, -1, self.args.num_cell_h, self.args.num_cell_w)",
                            "Call"
                        ],
                        [
                            "self.z_where_net(cat_enc).chunk(2, 1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_where_std)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_317": {
                "variable": {
                    "value": "q_z_depth",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "z_depth_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_depth_mean.view(1, -1, 1, 1).expand(bs, -1, self.args.num_cell_h, self.args.num_cell_w)",
                            "Call"
                        ],
                        [
                            "self.z_depth_net(cat_enc).chunk(2, 1)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "z_depth_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_depth_std.view(1, -1, 1, 1).expand(bs, -1, self.args.num_cell_h, self.args.num_cell_w)",
                            "Call"
                        ],
                        [
                            "self.z_depth_net(cat_enc).chunk(2, 1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_depth_std)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_337": {
                "variable": {
                    "value": "q_z_what",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "z_what_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_what_mean.view(1, 1).expand(bs * self.args.num_cell_h * self.args.num_cell_w, z_what_dim)",
                            "Call"
                        ],
                        [
                            "self.z_what_net(x_att)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "z_what_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_what_std.view(1, 1).expand(bs * self.args.num_cell_h * self.args.num_cell_w, z_what_dim)",
                            "Call"
                        ],
                        [
                            "self.z_what_net(x_att)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_what_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_131": {
                "variable": {
                    "value": "self.z_where_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "(z_where_shift_dim + z_where_scale_dim) * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_133": {
                "variable": {
                    "value": "self.z_pres_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "z_pres_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_135": {
                "variable": {
                    "value": "self.z_depth_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "z_depth_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "meshgrid_159": {
                "variable": {
                    "value": "(offset_y, offset_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "[torch.arange(8.0), torch.arange(8.0)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_206": {
                "variable": {
                    "value": "x_alpha_enc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(img_enc, mask_enc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softplus_215": {
                "variable": {
                    "value": "z_depth_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_depth_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_depth_std.view(1, -1, 1, 1).expand(bs, -1, self.args.num_cell_h, self.args.num_cell_w)",
                            "Call"
                        ],
                        [
                            "self.z_depth_net(cat_enc).chunk(2, 1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_depth_std)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "softplus_218": {
                "variable": {
                    "value": "z_where_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_where_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_where_std.view(1, -1, 1, 1).expand(bs, -1, self.args.num_cell_h, self.args.num_cell_w)",
                            "Call"
                        ],
                        [
                            "self.z_where_net(cat_enc).chunk(2, 1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_where_std)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_273": {
                "loc": {
                    "value": "self.prior_bg_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.prior_bg_std",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Normal_277": {
                "loc": {
                    "value": "self.prior_what_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.prior_what_std",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Normal_281": {
                "loc": {
                    "value": "self.prior_depth_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.prior_depth_std",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Normal_285": {
                "loc": {
                    "value": "self.prior_where_mean",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.prior_where_std",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_315": {
                "variable": {
                    "value": "z_pres",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_pres",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(z_pres_y)",
                            "Call"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ],
                        [
                            "torch.zeros_like(z_pres)",
                            "Call"
                        ],
                        [
                            "z_pres * pres_mask",
                            "BinOp"
                        ],
                        [
                            "z_pres.view(bs, -1)",
                            "Call"
                        ],
                        [
                            "z_pres * z_pres_mask",
                            "BinOp"
                        ],
                        [
                            "z_pres.view(bs, 1, num_cell_h, num_cell_w)",
                            "Call"
                        ]
                    ]
                }
            },
            "softplus_335": {
                "variable": {
                    "value": "z_what_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_what_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_what_std.view(1, 1).expand(bs * self.args.num_cell_h * self.args.num_cell_w, z_what_dim)",
                            "Call"
                        ],
                        [
                            "self.z_what_net(x_att)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_what_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_22": {
                "variable": {
                    "value": "self.mask_enc_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_123": {
                "in_channels": {
                    "value": "img_encode_dim + propagate_encode_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_124": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_125": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_126": {
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_127": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_128": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_138": {
                "variable": {
                    "value": "self.z_where_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(img_encode_dim, 64, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_145": {
                "variable": {
                    "value": "self.z_pres_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(img_encode_dim, 64, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_152": {
                "variable": {
                    "value": "self.z_depth_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(img_encode_dim, 32, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "meshgrid_161": {
                "variable": {
                    "value": "(offset_y, offset_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "[torch.arange(4.0), torch.arange(4.0)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_163": {
                "tensors": {
                    "value": "(offset_x, offset_y)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_258": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_259": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_260": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_261": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_262": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_263": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_265": {
                "data": {
                    "value": "[0.0, 0.0, 0.0, 0.0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_267": {
                "data": {
                    "value": "[1.0, 1.0, 1.0, 1.0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_268": {
                "data": {
                    "value": "self.z_pres_anneal_start_value",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_269": {
                "data": {
                    "value": "self.args.num_cell_h * self.args.num_cell_w",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_385": {
                "input": {
                    "value": "-z_depth",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_484": {
                "input": {
                    "value": "z_where.view(bs, num_cell_h * num_cell_w, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_43": {
                "variable": {
                    "value": "self.mask_enc_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_68": {
                "variable": {
                    "value": "self.mask_enc_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_211": {
                "input": {
                    "value": "self.z_pres_net(cat_enc) + self.z_pres_bias",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_329": {
                "tensors": {
                    "value": "num_cell_h * num_cell_w * (x,)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "arange_448": {
                "start": {
                    "value": "num_cell_h * num_cell_w",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_25": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_28": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_31": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_32": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_34": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_37": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_38": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "propagate_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_40": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "propagate_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_92": {
                "variable": {
                    "value": "self.mask_enc_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_139": {
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_140": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_141": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_142": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "(z_where_shift_dim + z_where_scale_dim) * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_146": {
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_147": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_148": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_149": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "z_pres_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_153": {
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_154": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_155": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_156": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "z_depth_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "arange_159": {
                "start": {
                    "value": "8.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "arange_366": {
                "start": {
                    "value": "bs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "img_enc.size(0)",
                            "Call"
                        ],
                        [
                            "x.size(0)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_434": {
                "input": {
                    "value": "p_z_pres + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_435": {
                "input": {
                    "value": "1 - p_z_pres + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_437": {
                "input": {
                    "value": "torch.sigmoid(z_pres_logits) + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_438": {
                "input": {
                    "value": "1 - torch.sigmoid(z_pres_logits) + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_44": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_45": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_46": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_49": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_51": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_52": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_54": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_55": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_56": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_57": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_58": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_59": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_61": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_62": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "propagate_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_63": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_64": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "propagate_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_70": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_71": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_72": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_74": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_75": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_76": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_77": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_78": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_80": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_81": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_83": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_84": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_86": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_87": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "propagate_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_89": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "propagate_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "arange_161": {
                "start": {
                    "value": "4.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_93": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_94": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_95": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_96": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_98": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_99": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_101": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_102": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_104": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_105": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_106": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_107": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_108": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_109": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_110": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_111": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_113": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_114": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_115": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_116": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "propagate_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_118": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_119": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "propagate_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sigmoid_437": {
                "input": {
                    "value": "z_pres_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_pres_logits",
                            "variable"
                        ],
                        [
                            "pres_logit_factor * torch.tanh(self.z_pres_net(cat_enc) + self.z_pres_bias)",
                            "BinOp"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_438": {
                "input": {
                    "value": "z_pres_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gen_pres_logits",
                            "variable"
                        ],
                        [
                            "pres_logit_factor * torch.tanh(self.z_pres_net(cat_enc) + self.z_pres_bias)",
                            "BinOp"
                        ],
                        [
                            "self.ProposalNet(img_enc, alpha_map_prop, self.args.tau, t, gen_pres_probs=x.new_ones(1) * self.args.gen_disc_pres_probs, gen_depth_mean=self.prior_depth_mean, gen_depth_std=self.prior_depth_std, gen_where_mean=self.prior_where_mean, gen_where_std=self.prior_where_std)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/torch/scalor/log_utils.py": {
        "torch": {
            "stack_267": {
                "variable": {
                    "value": "recon_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "recon_disc_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_272": {
                "variable": {
                    "value": "recon_prop",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "recon_prop_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_276": {
                "variable": {
                    "value": "bbox_disc_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "bbox_disc_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_281": {
                "variable": {
                    "value": "bbox_prop_all",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "bbox_prop_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_286": {
                "variable": {
                    "value": "bg",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "bg_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_290": {
                "variable": {
                    "value": "alpha_map",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "alpha_map_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_294": {
                "variable": {
                    "value": "x_mask_color",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "x_mask_color_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_72": {
                "input": {
                    "value": "log_disc_list[j]['z_pres_logits']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "permute_72": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_138": {
                "input": {
                    "value": "log_prop_list[j]['z_pres_logits']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/scalor/model.py": {
        "torch": {
            "stack_118": {
                "variable": {
                    "value": "counting",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "self.counting_list",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_233": {
                "variable": {
                    "value": "importance_map",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(importance_map_prop, importance_map_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_238": {
                "variable": {
                    "value": "alpha_map",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(alpha_map_prop, alpha_map_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_238": {
                "variable": {
                    "value": "alpha_map",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_242": {
                "variable": {
                    "value": "y_each_obj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(y_each_obj_prop, y_each_obj_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_261": {
                "variable": {
                    "value": "x_alpha_cat",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, 1 - alpha_map)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softplus_264": {
                "variable": {
                    "value": "z_bg_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_bg_std + self.bg_what_std_bias",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Normal_278": {
                "variable": {
                    "value": "p_x_z",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "y.flatten(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.args.sigma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_291": {
                "variable": {
                    "value": "kl_z_bg",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_352": {
                "variable": {
                    "value": "num_obj_each",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_mask_prop_disc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(z_pres_disc > self.z_pres_disc_threshold).float()",
                            "Call"
                        ],
                        [
                            "torch.cat(((z_pres_prop > 0).float(), (z_pres_disc > self.z_pres_disc_threshold).float()), dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_402": {
                "variable": {
                    "value": "lengths",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_mask_pre",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.new_zeros(bs, max_num_obj, z_pres_dim)",
                            "Call"
                        ],
                        [
                            "z_mask_pre.detach()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "GRUCell_36": {
                "variable": {
                    "value": "self.bg_prior_rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "bg_what_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "bg_prior_rnn_hid_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "variable": {
                    "value": "self.bg_prior_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "bg_prior_rnn_hid_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "bg_what_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "DataParallel_46": {
                "variable": {
                    "value": "self.image_enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.image_enc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_47": {
                "variable": {
                    "value": "self.propagate_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.propagate_cell",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_48": {
                "variable": {
                    "value": "self.bg_enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.bg_enc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_49": {
                "variable": {
                    "value": "self.bg_dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.bg_dec",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_50": {
                "variable": {
                    "value": "self.proposal_rejection_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.proposal_rejection_cell",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Normal_65": {
                "loc": {
                    "value": "self.prior_bg_mean_t1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.prior_bg_std_t1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_73": {
                "variable": {
                    "value": "self.prior_rnn_init_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "prior_rnn_out_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_74": {
                "variable": {
                    "value": "self.prior_rnn_init_hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "prior_rnn_hid_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_80": {
                "variable": {
                    "value": "self.bg_prior_rnn_init_hid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "bg_prior_rnn_hid_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "softplus_257": {
                "variable": {
                    "value": "p_bg_what_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "p_bg_what_std + self.bg_what_std_bias",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Normal_258": {
                "variable": {
                    "value": "p_bg_what",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "p_bg_what_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "p_bg_what_mean_bias + bg_what_pre",
                            "BinOp"
                        ]
                    ]
                },
                "scale": {
                    "value": "p_bg_what_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bg_prior_net(bg_rnn_hid_pre).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "F.softplus(p_bg_what_std + self.bg_what_std_bias)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_268": {
                "variable": {
                    "value": "q_bg",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "z_bg_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bg_enc(x_alpha_cat)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "z_bg_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bg_enc(x_alpha_cat)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_bg_std + self.bg_what_std_bias)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_320": {
                "variable": {
                    "value": "z_what_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z_what_prop, z_what_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_321": {
                "variable": {
                    "value": "z_where_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z_where_prop, z_where_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_322": {
                "variable": {
                    "value": "z_where_bias_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z_where_bias_prop, z_where_bias_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_323": {
                "variable": {
                    "value": "z_depth_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z_depth_prop, z_depth_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_324": {
                "variable": {
                    "value": "z_pres_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z_pres_prop, z_pres_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_325": {
                "variable": {
                    "value": "z_mask_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "((z_pres_prop > 0).float(), (z_pres_disc > self.z_pres_disc_threshold).float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_329": {
                "variable": {
                    "value": "temporal_rnn_out_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(temporal_rnn_out, new_temporal_rnn_out_init)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_330": {
                "variable": {
                    "value": "temporal_rnn_hid_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(temporal_rnn_hid, new_temporal_rnn_hid_init)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_331": {
                "variable": {
                    "value": "prior_rnn_out_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(prior_rnn_out, new_prior_rnn_out_init)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_332": {
                "variable": {
                    "value": "prior_rnn_hid_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(prior_rnn_hid, new_prior_rnn_hid_init)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_333": {
                "variable": {
                    "value": "cumsum_one_minus_z_pres_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[cumsum_one_minus_z_pres_prop, x.new_zeros(bs, z_what_disc.size(1), z_pres_dim)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_336": {
                "variable": {
                    "value": "ids_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ids_prop, ids_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_52": {
                "data": {
                    "value": "0.7",
                    "type": "float",
                    "possible_values": []
                }
            },
            "zeros_53": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_54": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_68": {
                "*size": {
                    "value": "(1, temporal_rnn_out_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_69": {
                "*size": {
                    "value": "(1, temporal_rnn_hid_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_318": {
                "variable": {
                    "value": "representation[key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z_prop, z_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_353": {
                "input": {
                    "value": "num_obj_each",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(z_mask_prop_disc, dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_421": {
                "variable": {
                    "value": "ids_prop_disc",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x.new_zeros(ids_prop_disc[:, 0:1].size()), ids_prop_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_199": {
                "input": {
                    "value": "lengths",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.new_zeros(bs)",
                            "Call"
                        ],
                        [
                            "self._state['lengths']",
                            "Subscript"
                        ],
                        [
                            "torch.sum(z_mask_pre, dim=(1, 2)).view(bs)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_427": {
                "tensors": {
                    "value": "(alpha_map_prop, alpha_map_disc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/scalor/modules.py": {
        "torch": {
            "Sequential_100": {
                "variable": {
                    "value": "self.bg_dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(16, 16, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_109": {
                "variable": {
                    "value": "bg",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.bg_dec(o)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_283": {
                "variable": {
                    "value": "self.enc_lat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(img_encode_dim, img_encode_dim, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_292": {
                "variable": {
                    "value": "self.enc_cat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(img_encode_dim * 2, img_encode_dim, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_350": {
                "variable": {
                    "value": "self.enc_what",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_what_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_453": {
                "variable": {
                    "value": "o",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.dec_o(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_454": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.dec_alpha(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_520": {
                "variable": {
                    "value": "self.conv_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.input_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * self.hidden_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_526": {
                "variable": {
                    "value": "self.conv_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * self.hidden_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_531": {
                "variable": {
                    "value": "self.fc_a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4 * self.hidden_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_533": {
                "variable": {
                    "value": "self.Wci",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1, self.hidden_dim, map_h, map_w)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_535": {
                "variable": {
                    "value": "self.Wcf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1, self.hidden_dim, map_h, map_w)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_537": {
                "variable": {
                    "value": "self.Wco",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1, self.hidden_dim, map_h, map_w)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sigmoid_550": {
                "variable": {
                    "value": "i",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "xi + hi + ai + c_cur * self.Wci",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_551": {
                "variable": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "xf + hf + af + c_cur * self.Wcf",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_553": {
                "variable": {
                    "value": "o",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "xo + ho + ao + c_cur * self.Wco",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ModuleList_601": {
                "variable": {
                    "value": "self.cell_list",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "cell_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "Sequential_32": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(bg_what_dim, 256, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_121": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(4, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_314": {
                "variable": {
                    "value": "self.enc_cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_367": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(z_what_dim, 128, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_433": {
                "variable": {
                    "value": "self.dec_o",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_434": {
                "variable": {
                    "value": "self.dec_alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_436": {
                "variable": {
                    "value": "self.dec_o",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(16, 8, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_443": {
                "variable": {
                    "value": "self.dec_alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(16, 8, 3, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_648": {
                "variable": {
                    "value": "layer_output_h",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "output_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(bg_what_dim, 256, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_101": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_103": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_104": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_140": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(4, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_171": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_223": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_284": {
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_285": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_286": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_287": {
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_288": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_289": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_293": {
                "in_channels": {
                    "value": "img_encode_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_294": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_295": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_303": {
                "tensors": {
                    "value": "(img_enc, lateral_enc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_332": {
                "variable": {
                    "value": "self.enc_cnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_397": {
                "variable": {
                    "value": "self.dec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(z_what_dim, 128, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_533": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "map_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "map_h",
                            "Method Argument"
                        ]
                    ]
                },
                "layout": {
                    "value": "map_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "map_w",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_535": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "map_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "map_h",
                            "Method Argument"
                        ]
                    ]
                },
                "layout": {
                    "value": "map_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "map_w",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_537": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "map_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "map_h",
                            "Method Argument"
                        ]
                    ]
                },
                "layout": {
                    "value": "map_w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "Method Argument"
                        ],
                        [
                            "map_w",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_540": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_541": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_554": {
                "input": {
                    "value": "c_next",
                    "type": "variable",
                    "possible_values": [
                        [
                            "f * c_cur + i * torch.tanh(xc + hc + ac)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "bg_what_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_35": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256 * 4 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_38": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_40": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_43": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_45": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128 * 4 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_46": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_48": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_50": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_51": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_54": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_56": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_57": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_59": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16 * 4 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_62": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_63": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_64": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_67": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_122": {
                "in_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_123": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_124": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_125": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_126": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_127": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_128": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_129": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_130": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_131": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_132": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_133": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_134": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_135": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_136": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_137": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bg_what_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_195": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_250": {
                "variable": {
                    "value": "self.enc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 16, 4, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_315": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_316": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_317": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_318": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_319": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_320": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_321": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_322": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_323": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_324": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_325": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_326": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_327": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "z_what_enc_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_328": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_329": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "z_what_enc_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_368": {
                "in_channels": {
                    "value": "z_what_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_369": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_370": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_372": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64 * 4 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_373": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_374": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_375": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_377": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_378": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_379": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_380": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_382": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_383": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_384": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_385": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_387": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_388": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_389": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_390": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_392": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_393": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_394": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_437": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_438": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_439": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_440": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_444": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_445": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_446": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_447": {
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_552": {
                "input": {
                    "value": "xc + hc + ac",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "bg_what_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_73": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_75": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128 * 4 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_76": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_78": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_79": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_80": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_81": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_83": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64 * 4 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_84": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_86": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_87": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_89": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_91": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16 * 4 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_92": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_93": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_94": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_95": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_97": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_141": {
                "in_channels": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_142": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_143": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_144": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_145": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_146": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_147": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_148": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_149": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_150": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_151": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_152": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_153": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "bg_what_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_172": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_173": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_174": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_175": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_176": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_177": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_178": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_179": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_180": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_181": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_182": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_183": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_184": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_185": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_186": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_187": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_188": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_189": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_190": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_191": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_192": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_224": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_225": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_226": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_227": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_228": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_229": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_230": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_231": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_232": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_233": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_234": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_235": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_236": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_237": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_238": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_239": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_240": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_241": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_242": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_243": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_244": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_245": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_246": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_247": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_333": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_334": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_335": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_336": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_337": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_338": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_339": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_340": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_341": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_342": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_343": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_344": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_345": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_346": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_347": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_398": {
                "in_channels": {
                    "value": "z_what_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_399": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_400": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_402": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64 * 4 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_403": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_404": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_405": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_406": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_407": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_408": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_410": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64 * 4 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_411": {
                "upscale_factor": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_412": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_413": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_414": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_415": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_416": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_418": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_419": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_420": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_421": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_422": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_423": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_424": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_426": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "PixelShuffle_427": {
                "upscale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_428": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_429": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_196": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_197": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_198": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_199": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_200": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_201": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_202": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_203": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_204": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_205": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_206": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_207": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_208": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_209": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_210": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_211": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_212": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_213": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_214": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_215": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_216": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_217": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_218": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_219": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_251": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_252": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_253": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_254": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_255": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_256": {
                "num_groups": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_257": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_258": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_259": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_260": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_261": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_262": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_263": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_264": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_265": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_266": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_267": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_268": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_269": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_270": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_271": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_272": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_273": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_274": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_275": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_276": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_277": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_278": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_279": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_280": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/scalor/propagation.py": {
        "torch": {
            "GRUCell_18": {
                "variable": {
                    "value": "self.cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "temporal_rnn_inp_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "hid_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hid_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_33": {
                "variable": {
                    "value": "self.temporal_img_conv_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(img_encode_dim, temporal_img_enc_hid_dim, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.temporal_img_enc_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "temporal_img_enc_hid_dim * self.args.num_cell_h // 2 * self.args.num_cell_w // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "temporal_img_enc_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.z_where_transit_bias_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(z_where_transit_bias_net_input_dim, z_where_transit_bias_net_hid_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_78": {
                "variable": {
                    "value": "self.z_depth_transit_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(z_depth_transit_net_input_dim, z_depth_transit_net_hid_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_84": {
                "variable": {
                    "value": "self.z_what_from_temporal_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(temporal_rnn_out_dim, z_what_from_temporal_hid_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_92": {
                "variable": {
                    "value": "self.z_what_gate_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(z_what_gate_net_inp_dim, 64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_102": {
                "variable": {
                    "value": "self.z_pres_transit",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(z_pres_transit_input_dim, z_pres_hid_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_111": {
                "variable": {
                    "value": "self.temporal_rnn_inp_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "temporal_rnn_inp_net_inp_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_where_scale_dim + z_where_shift_dim + z_pres_dim + z_what_dim + z_where_bias_dim + temporal_img_enc_dim",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "temporal_rnn_inp_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_128": {
                "variable": {
                    "value": "z_where",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(scale / ratio_sqrt, scale * ratio_sqrt, z_where_shift)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_130": {
                "variable": {
                    "value": "z_where",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z_where[:, :2], z_where[:, 2:].clamp(-1.05, 1.05))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_181": {
                "variable": {
                    "value": "temporal_rnn_inp_net_inp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[z_where_pre, z_pres_pre, z_what_pre, z_where_bias_pre, temporal_img_enc]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_192": {
                "variable": {
                    "value": "z_where_transit_bias_net_inp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[temporal_rnn_out, z_what_pre, z_where_pre, z_where_bias_pre, temporal_img_enc]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softplus_197": {
                "variable": {
                    "value": "z_where_bias_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_where_bias_std + self.z_where_std_bias",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softplus_217": {
                "variable": {
                    "value": "z_what_from_enc_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_what_from_enc_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.z_what_net(x_att)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_what_from_enc_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "softplus_223": {
                "variable": {
                    "value": "z_what_from_temporal_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_what_from_temporal_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.z_what_from_temporal_net(temporal_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_what_from_temporal_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_225": {
                "variable": {
                    "value": "z_what_gate_net_inp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(temporal_rnn_out, temporal_img_enc)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softplus_231": {
                "variable": {
                    "value": "z_what_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_gate * z_what_from_enc_std + forget_gate * z_what_from_temporal_std",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_241": {
                "variable": {
                    "value": "z_depth_transit_net_inp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[temporal_rnn_out, z_what, temporal_img_enc]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softplus_246": {
                "variable": {
                    "value": "z_depth_std",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_depth_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.z_depth_transit_net(z_depth_transit_net_inp).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_depth_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_256": {
                "variable": {
                    "value": "z_pres_transit_inp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[temporal_rnn_out, z_where, z_where_bias, z_what]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_269": {
                "variable": {
                    "value": "z_pres",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_pres_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "q_z_pres.rsample()",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_298": {
                "variable": {
                    "value": "prior_what_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "prior_what_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_what_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_what_mean.view(bns, -1)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "prior_what_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_what_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_what_std.view(bns, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_299": {
                "variable": {
                    "value": "prior_where_bias_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "prior_where_bias_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_where_bias_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_where_bias_mean.view(bns, -1)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "prior_where_bias_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_where_bias_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_where_bias_std.view(bns, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_300": {
                "variable": {
                    "value": "prior_depth_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "prior_depth_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_depth_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_depth_mean.view(bns, -1)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "prior_depth_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_depth_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_depth_std.view(bns, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_414": {
                "variable": {
                    "value": "self.prior_rnn_inp_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "prior_rnn_inp_net_inp_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_what_dim + z_where_scale_dim + z_where_shift_dim + z_where_bias_dim + z_depth_dim + z_pres_dim",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "prior_rnn_inp_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LSTMCell_416": {
                "variable": {
                    "value": "self.prior_rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "prior_rnn_inp_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "prior_rnn_hid_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_418": {
                "variable": {
                    "value": "self.prior_what_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "prior_rnn_out_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_what_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_419": {
                "variable": {
                    "value": "self.prior_where_bias_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "prior_rnn_out_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "(z_where_scale_dim + z_where_shift_dim) * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_422": {
                "variable": {
                    "value": "self.prior_depth_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "prior_rnn_out_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_depth_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_423": {
                "variable": {
                    "value": "self.prior_pres_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "prior_rnn_out_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_pres_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_441": {
                "variable": {
                    "value": "prior_rnn_inp_net_inp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(z_what_pre_flat, z_where_pre_flat, z_where_bias_pre_flat, z_depth_pre_flat, z_pres_pre_flat)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_452": {
                "variable": {
                    "value": "prior_pres_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.prior_pres_net(prior_rnn_out) + self.prior_z_pres_logits_bias",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Normal_199": {
                "variable": {
                    "value": "z_where_bias_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "prior_where_bias_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_where_bias_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_where_bias_mean.view(bns, -1)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "prior_where_bias_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_where_bias_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_where_bias_std.view(bns, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_201": {
                "variable": {
                    "value": "z_where_bias_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "z_where_bias_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.z_where_transit_bias_net(z_where_transit_bias_net_inp).chunk(2, -1)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "z_where_bias_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.z_where_transit_bias_net(z_where_transit_bias_net_inp).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_where_bias_std + self.z_where_std_bias)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_235": {
                "variable": {
                    "value": "z_what_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "prior_what_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_what_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_what_mean.view(bns, -1)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "prior_what_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_what_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_what_std.view(bns, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_237": {
                "variable": {
                    "value": "z_what_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "z_what_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_gate * z_what_from_enc_mean + forget_gate * z_what_from_temporal_mean",
                            "BinOp"
                        ]
                    ]
                },
                "scale": {
                    "value": "z_what_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.softplus(input_gate * z_what_from_enc_std + forget_gate * z_what_from_temporal_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_249": {
                "variable": {
                    "value": "z_depth_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "prior_depth_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_depth_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_depth_mean.view(bns, -1)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "prior_depth_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_depth_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_depth_std.view(bns, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Normal_251": {
                "variable": {
                    "value": "z_depth_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "z_depth_mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.z_depth_transit_net(z_depth_transit_net_inp).chunk(2, -1)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "z_depth_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.z_depth_transit_net(z_depth_transit_net_inp).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "F.softplus(z_depth_std)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_like_271": {
                "variable": {
                    "value": "z_pres",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_pres",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sigmoid(z_pres_y)",
                            "Call"
                        ],
                        [
                            "torch.ones_like(z_pres)",
                            "Call"
                        ],
                        [
                            "z_pres * (cumsum_one_minus_z_pres < self.z_pres_stop_threshold).float()",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_34": {
                "in_channels": {
                    "value": "img_encode_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "temporal_img_enc_hid_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GroupNorm_36": {
                "num_groups": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "temporal_img_enc_hid_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_65": {
                "data": {
                    "value": "0.6",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_71": {
                "in_features": {
                    "value": "z_where_transit_bias_net_input_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "temporal_rnn_out_dim + z_what_dim + z_where_scale_dim + z_where_shift_dim + z_where_bias_dim + temporal_img_enc_dim",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "z_where_transit_bias_net_hid_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ELU_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_73": {
                "in_features": {
                    "value": "z_where_transit_bias_net_hid_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "(z_where_scale_dim + z_where_shift_dim) * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_79": {
                "in_features": {
                    "value": "z_depth_transit_net_input_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "temporal_rnn_out_dim + z_what_dim + temporal_img_enc_dim",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "z_depth_transit_net_hid_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ELU_80": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_81": {
                "in_features": {
                    "value": "z_depth_transit_net_hid_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_depth_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_85": {
                "in_features": {
                    "value": "temporal_rnn_out_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_what_from_temporal_hid_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ELU_86": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_87": {
                "in_features": {
                    "value": "z_what_from_temporal_hid_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_what_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_93": {
                "in_features": {
                    "value": "z_what_gate_net_inp_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "temporal_rnn_out_dim + temporal_img_enc_dim",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ELU_94": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_95": {
                "in_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_103": {
                "in_features": {
                    "value": "z_pres_transit_input_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "temporal_rnn_out_dim + z_where_scale_dim + z_where_shift_dim + z_where_bias_dim + z_what_dim",
                            "BinOp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "z_pres_hid_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ELU_104": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_105": {
                "in_features": {
                    "value": "z_pres_hid_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "z_pres_dim",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tanh_260": {
                "input": {
                    "value": "self.z_pres_transit(z_pres_transit_inp) + self.z_pres_logits_bias",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_285": {
                "input": {
                    "value": "-z_depth",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softplus_465": {
                "input": {
                    "value": "prior_what_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_what_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_what_std.view(bns, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softplus_466": {
                "input": {
                    "value": "prior_where_bias_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_where_bias_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_where_bias_std.view(bns, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softplus_467": {
                "input": {
                    "value": "prior_depth_std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.prior_cell(prior_rnn_out_pre, prior_rnn_hid_pre, z_what_pre, z_where_pre, z_where_bias_pre, z_depth_pre, z_pres_pre)",
                            "Call"
                        ],
                        [
                            "self.prior_depth_net(prior_rnn_out).chunk(2, -1)",
                            "Call"
                        ],
                        [
                            "prior_depth_std.view(bns, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_324": {
                "input": {
                    "value": "prior_pres_prob + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_325": {
                "input": {
                    "value": "1 - prior_pres_prob + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_327": {
                "input": {
                    "value": "torch.sigmoid(z_pres_logits) + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_328": {
                "input": {
                    "value": "1 - torch.sigmoid(z_pres_logits) + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_327": {
                "input": {
                    "value": "z_pres_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pres_logit_factor * torch.tanh(self.z_pres_transit(z_pres_transit_inp) + self.z_pres_logits_bias)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sum_303": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_306": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_309": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_328": {
                "input": {
                    "value": "z_pres_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pres_logit_factor * torch.tanh(self.z_pres_transit(z_pres_transit_inp) + self.z_pres_logits_bias)",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/torch/scalor/scalor.py": {
        "torch": {
            "rand_89": {
                "variable": {
                    "value": "self.cfg.color_t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "700",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_96": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if not self.cfg.nocuda and torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "RMSprop_101": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.cfg.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_148": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x.reshape(batch_size, self.image_channels, self.image_size, self.image_size)[:n], dec_x.reshape(batch_size, self.image_channels, self.image_size, self.image_size)[:n]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rot90_164": {
                "variable": {
                    "value": "sample",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "sample",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.rot90(sample, 1, dims=(3, 4))",
                            "Call"
                        ],
                        [
                            "sample",
                            "Method Argument"
                        ]
                    ]
                },
                "k": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "(3, 4)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "clip_grad_norm__192": {
                "parameters": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "self.cfg.cp",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_237": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self.cfg.summary_dir, str(itr) + '.png')",
                            "Call"
                        ],
                        [
                            "os.path.join(self.cfg.ckpt_dir, ckpt_model_filename)",
                            "Call"
                        ],
                        [
                            "path",
                            "Method Argument"
                        ],
                        [
                            "path",
                            "Method Argument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_251": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'global_step': self.cfg.global_step, 'state_dict': self.model.state_dict(), 'self.optimizer': self.optimizer.state_dict()}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(self.cfg.summary_dir, str(itr) + '.png')",
                            "Call"
                        ],
                        [
                            "os.path.join(self.cfg.ckpt_dir, ckpt_model_filename)",
                            "Call"
                        ],
                        [
                            "path",
                            "Method Argument"
                        ],
                        [
                            "path",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "no_grad_214": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/scalor/utils.py": {
        "torch": {
            "zeros_8": {
                "variable": {
                    "value": "rbox",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "21",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "21",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_15": {
                "variable": {
                    "value": "gbox",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "21",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "21",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_30": {
                "variable": {
                    "value": "z_pres",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_objects",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_where.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_139": {
                "variable": {
                    "value": "theta",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "affine_grid_148": {
                "variable": {
                    "value": "grid",
                    "type": "variable",
                    "possible_values": []
                },
                "theta": {
                    "value": "theta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(2, 3).repeat(image.shape[0], 1, 1).to(image.device)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "torch.Size(out_dims)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_154": {
                "variable": {
                    "value": "z_pres_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "z_pres_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "z_pres_logits",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "save_84": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'global_step': global_step, 'epoch': epoch_float, 'batch_size': batch_size, 'state_dict': model.state_dict(), 'optimizer': optimizer.state_dict(), 'num_train': num_train}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(ckpt_dir, ckpt_model_filename)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_92": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model_file",
                            "Method Argument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_117": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "start_value + slope * (step - start_step)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "grid_sample_150": {
                "input": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image",
                            "Method Argument"
                        ]
                    ]
                },
                "grid": {
                    "value": "grid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.affine_grid(theta, torch.Size(out_dims))",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_53": {
                "tensors": {
                    "value": "(z_scale, z_shift)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_119": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "end_value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "end_value",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_121": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "start_value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "start_value",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "log_156": {
                "input": {
                    "value": "prior_pres_prob + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_157": {
                "input": {
                    "value": "1 - prior_pres_prob + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_57": {
                "tensors": {
                    "value": "num_obj * (x,)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/skewfit/online_vae_algorithm.py": {
        "torch": {
            "Pipe_131": {
                "variable": {
                    "value": "(self._vae_conn_pipe, process_pipe)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/torch_rl_algorithm.py": {
        "torch": {}
    },
    "rlkit/rlkit/torch/vae/conv_vae.py": {
        "torch": {
            "Linear_229": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.encoder.output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "representation_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "representation_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_230": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.encoder.output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "representation_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "representation_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "abs_264": {
                "input": {
                    "value": "self.fc2(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mse_loss_292": {
                "input": {
                    "value": "obs_distribution_params[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs.narrow(start=0, length=self.imlength, dim=1).contiguous().view(-1, self.imlength)",
                            "Call"
                        ],
                        [
                            "inputs.narrow(start=0, length=self.imlength, dim=1).contiguous().view(-1, self.imlength)",
                            "Call"
                        ],
                        [
                            "inputs",
                            "Method Argument"
                        ]
                    ]
                },
                "reduction": {
                    "value": "self.mse_reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clamp_273": {
                "input": {
                    "value": "decoded",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.decoder(latents).view(-1, self.imsize * self.imsize * self.input_channels)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_283": {
                "input": {
                    "value": "obs_distribution_params[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "target": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs.narrow(start=0, length=self.imlength, dim=1).contiguous().view(-1, self.imlength)",
                            "Call"
                        ],
                        [
                            "inputs.narrow(start=0, length=self.imlength, dim=1).contiguous().view(-1, self.imlength)",
                            "Call"
                        ],
                        [
                            "inputs",
                            "Method Argument"
                        ]
                    ]
                },
                "reduction": {
                    "value": "elementwise_mean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ones_like_274": {
                "input": {
                    "value": "decoded",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.decoder(latents).view(-1, self.imsize * self.imsize * self.input_channels)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "rlkit/rlkit/torch/vae/vae_base.py": {
        "torch": {
            "Normal_127": {
                "variable": {
                    "value": "decoder_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "dec_mu",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dec_mu",
                            "Method Argument"
                        ]
                    ]
                },
                "scale": {
                    "value": "dec_var.pow(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_119": {
                "input": {
                    "value": "reconstruction_of_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "reconstruction_of_x",
                            "Method Argument"
                        ]
                    ]
                },
                "target": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "reduction": {
                    "value": "elementwise_mean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_112": {
                "input": {
                    "value": "1 + logvar - mu.pow(2) - logvar.exp()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/rlkit/torch/vae/vae_trainer.py": {
        "torch": {
            "Normal_46": {
                "variable": {
                    "value": "true_prior",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "ptu.zeros((batch_size, representation_size))",
                    "type": "Call",
                    "possible_values": []
                },
                "scale": {
                    "value": "ptu.ones((batch_size, representation_size))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Normal_60": {
                "variable": {
                    "value": "vae_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mus",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.model.encode(torch_input)",
                            "Call"
                        ],
                        [
                            "ptu.get_numpy(mus)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "stds",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logvars.exp().pow(0.5)",
                            "Call"
                        ]
                    ]
                }
            },
            "Adam_162": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list(self.model.parameters())",
                            "Call"
                        ]
                    ]
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Adam_283": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_516": {
                "variable": {
                    "value": "all_imgs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "imgs + recons",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_576": {
                "variable": {
                    "value": "all_imgs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "imgs + recons",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_65": {
                "variable": {
                    "value": "log_d_x_given_z",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "imgs * decoded + (1 - imgs) * (1 - decoded) + 1e-08",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_65": {
                "variable": {
                    "value": "log_d_x_given_z",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_204": {
                "variable": {
                    "value": "self.train_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset_pt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sampler": {
                    "value": "InfiniteRandomSampler(self.train_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "512",
                            "int"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "train_data_workers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_212": {
                "variable": {
                    "value": "self.test_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.test_dataset_pt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sampler": {
                    "value": "InfiniteRandomSampler(self.test_dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "512",
                            "int"
                        ],
                        [
                            "128",
                            "Method Argument"
                        ]
                    ]
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "mse_loss_549": {
                "variable": {
                    "value": "mse",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch_img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ptu.from_numpy(img)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "reconstructions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.model(next_obs)",
                            "Call"
                        ],
                        [
                            "self.model(next_obs)",
                            "Call"
                        ],
                        [
                            "self.model(data)",
                            "Call"
                        ],
                        [
                            "self.model(torch_img)",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "elementwise_mean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Normal_70": {
                "variable": {
                    "value": "decoder_dist",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "dec_mu",
                    "type": "variable",
                    "possible_values": []
                },
                "scale": {
                    "value": "dec_var.pow(0.5)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_247": {
                "variable": {
                    "value": "self.train_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "self.train_dataset_pt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sampler": {
                    "value": "InfiniteWeightedRandomSampler(self.train_dataset, self._train_weights)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "self.train_data_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_369": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[next_obs[:n].narrow(start=0, length=self.imlength, dim=1).contiguous().view(-1, self.input_channels, self.imsize, self.imsize).transpose(2, 3).flip(2), reconstructions.view(self.batch_size, self.input_channels, self.imsize, self.imsize)[:n].transpose(2, 3).flip(2)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_424": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[next_obs[:n].narrow(start=0, length=self.imlength, dim=1).contiguous().view(-1, self.input_channels, self.imsize, self.imsize).transpose(2, 3).flip(2), reconstructions.view(self.batch_size, self.input_channels, self.imsize, self.imsize)[:n].transpose(2, 3).flip(2)]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/scripts/run_goal_conditioned_policy.py": {
        "torch": {
            "load_17": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.file",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "ptu.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "rlkit/settings/baselines/rig/rig_push_1_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/rig/rig_push_2_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/rig/rig_rearrange_1_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/rig/rig_rearrange_2_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/sac/gt_sac_push_1_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/sac/gt_sac_push_2_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/sac/gt_sac_rearrange_1_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/sac/gt_sac_rearrange_2_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/sac/gt_sac_rearrange_3_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/sac/gt_sac_rearrange_4_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/skewfit/skewfit_push_1_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/skewfit/skewfit_push_2_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/skewfit/skewfit_rearrange_1_object.py": {
        "torch": {}
    },
    "rlkit/settings/baselines/skewfit/skewfit_rearrange_2_object.py": {
        "torch": {}
    },
    "rlkit/settings/smorl/gt_rearrange_2_object.py": {
        "torch": {}
    },
    "rlkit/settings/smorl/gt_rearrange_3_object.py": {
        "torch": {}
    }
}