{
    "data/dataset.py": {
        "torch": {
            "from_numpy_93": {
                "variable": {
                    "value": "lang_feats",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(self.lang_feats[annotation])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_91": {
                "ndarray": {
                    "value": "self.get_img_feats(key1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_92": {
                "ndarray": {
                    "value": "self.get_img_feats(key2)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "models/aggregator.py": {
        "torch": {
            "randint_30": {
                "variable": {
                    "value": "batch_idxs",
                    "type": "Variable",
                    "possible_values": []
                },
                "low": {
                    "value": "x.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "high": {
                    "value": "(x.shape[0],)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_40": {
                "variable": {
                    "value": "batch_idxs_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "low": {
                    "value": "x.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "high": {
                    "value": "(x.shape[0],)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_42": {
                "variable": {
                    "value": "batch_idxs_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "low": {
                    "value": "x.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "high": {
                    "value": "(x.shape[0],)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_44": {
                "variable": {
                    "value": "(x, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x1, x2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "max_44": {
                "variable": {
                    "value": "(x, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "arange_31": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "x.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_41": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "x.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_43": {
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "x.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "models/rotator.py": {
        "torch": {
            "Sequential_28": {
                "variable": {
                    "value": "self.img_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Identity()",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_33": {
                "variable": {
                    "value": "self.lang_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Identity()",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_38": {
                "variable": {
                    "value": "self.cls_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.img_feat_dim + self.lang_feat_dim, 512)",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_51": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_path",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "self.cfg['train']['rotator']['pretrained_cls']",
                            "Subscript"
                        ],
                        [
                            "self.cfg['train']['pretrained_model']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "Sequential_59": {
                "variable": {
                    "value": "self.state_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.img_feat_dim, 512)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_76": {
                "variable": {
                    "value": "self.action_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.img_feat_dim + self.lang_feat_dim, 512)",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_136": {
                "variable": {
                    "value": "raw_probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img1_chosen_prob, img2_chosen_prob]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_137": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "raw_probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.cat([img1_chosen_prob, img2_chosen_prob], dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_225": {
                "variable": {
                    "value": "all_probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "all_probs",
                    "type": "Call",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(all_probs, dim=1)",
                            "Call"
                        ],
                        [
                            "F.softmax(all_probs, dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_226": {
                "variable": {
                    "value": "all_probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "all_probs",
                    "type": "Call",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(all_probs, dim=1)",
                            "Call"
                        ],
                        [
                            "F.softmax(all_probs, dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_250": {
                "variable": {
                    "value": "img1_init_feats",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img1_n_feats[i, init_views1[i], :] for i in range(bs)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_251": {
                "variable": {
                    "value": "img2_init_feats",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img2_n_feats[i, init_views2[i], :] for i in range(bs)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "one_hot_253": {
                "variable": {
                    "value": "gt_init_views1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "init_views1.to(torch.int64)",
                    "type": "Call",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "self.num_views",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "one_hot_254": {
                "variable": {
                    "value": "gt_init_views2",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "init_views2.to(torch.int64)",
                    "type": "Call",
                    "possible_values": []
                },
                "num_classes": {
                    "value": "self.num_views",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_288": {
                "variable": {
                    "value": "modulo_views",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "views",
                    "type": "Call",
                    "possible_values": [
                        [
                            "list(range(self.num_views))",
                            "Call"
                        ],
                        [
                            "list(range(self.num_views))",
                            "Call"
                        ]
                    ]
                }
            },
            "randint_301": {
                "variable": {
                    "value": "rand_next_views",
                    "type": "Variable",
                    "possible_values": []
                },
                "low": {
                    "value": "self.num_views",
                    "type": "Attribute",
                    "possible_values": []
                },
                "high": {
                    "value": "(2, bs)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_302": {
                "variable": {
                    "value": "img1_chosen_feats",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img1_n_feats[i, [init_views1[i], rand_next_views[0, i]], :].max(dim=-2)[0] for i in range(bs)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "stack_304": {
                "variable": {
                    "value": "img2_chosen_feats",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img2_n_feats[i, [init_views2[i], rand_next_views[1, i]], :].max(dim=-2)[0] for i in range(bs)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "one_hot_144": {
                "variable": {
                    "value": "cls_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "ans",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_162": {
                "variable": {
                    "value": "est_err",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.modulo_views(init_views1 - est_init_views1).abs().float(), self.modulo_views(init_views2 - est_init_views2).abs().float()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_222": {
                "variable": {
                    "value": "view_probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img1_prob, img2_prob]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_266": {
                "variable": {
                    "value": "est_init_views1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "est_init_views_logits1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.state_fc(img1_init_feats)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_266": {
                "variable": {
                    "value": "est_init_views1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_267": {
                "variable": {
                    "value": "est_init_views2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "est_init_views_logits2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.state_fc(img2_init_feats)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "argmax_267": {
                "variable": {
                    "value": "est_init_views2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Identity_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Identity_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_39": {
                "in_features": {
                    "value": "self.img_feat_dim + self.lang_feat_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_40": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_41": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_42": {
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_44": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_45": {
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_60": {
                "in_features": {
                    "value": "self.img_feat_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_61": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_62": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_63": {
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_64": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_65": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_67": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_68": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_69": {
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_70": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_71": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_72": {
                "in_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_77": {
                "in_features": {
                    "value": "self.img_feat_dim + self.lang_feat_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_78": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_79": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_80": {
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_81": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_82": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_83": {
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_84": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_85": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "in_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_87": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_88": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_89": {
                "in_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_132": {
                "tensors": {
                    "value": "[img1_chosen_feats, lang_feats]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_133": {
                "tensors": {
                    "value": "[img2_chosen_feats, lang_feats]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "ones_139": {
                "*size": {
                    "value": "bs",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "img1_n_feats.shape[0]",
                            "Subscript"
                        ],
                        [
                            "lang_feats.shape[0]",
                            "Subscript"
                        ],
                        [
                            "img1_n_feats.shape[0]",
                            "Subscript"
                        ],
                        [
                            "views.shape[0]",
                            "Subscript"
                        ],
                        [
                            "batch[1].shape[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_164": {
                "tensors": {
                    "value": "[self.modulo_views(rotated_views1 - est_final_views1).abs().float(), self.modulo_views(rotated_views2 - est_final_views2).abs().float()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "randint_243": {
                "variable": {
                    "value": "init_views1",
                    "type": "Variable",
                    "possible_values": []
                },
                "low": {
                    "value": "self.num_views",
                    "type": "Attribute",
                    "possible_values": []
                },
                "high": {
                    "value": "(bs,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_244": {
                "variable": {
                    "value": "init_views2",
                    "type": "Variable",
                    "possible_values": []
                },
                "low": {
                    "value": "self.num_views",
                    "type": "Attribute",
                    "possible_values": []
                },
                "high": {
                    "value": "(bs,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "count_nonzero_153": {
                "input": {
                    "value": "est_init_views1 == init_views1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "count_nonzero_154": {
                "input": {
                    "value": "est_init_views2 == init_views2",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "count_nonzero_157": {
                "input": {
                    "value": "est_final_views1 == rotated_views1",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "count_nonzero_158": {
                "input": {
                    "value": "est_final_views2 == rotated_views2",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "cat_215": {
                "tensors": {
                    "value": "[img1_feats, lang_feats]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_219": {
                "tensors": {
                    "value": "[img2_feats, lang_feats]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "load_95": {
                "f": {
                    "value": "model_path",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "self.cfg['train']['rotator']['pretrained_cls']",
                            "Subscript"
                        ],
                        [
                            "self.cfg['train']['pretrained_model']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "ones_389": {
                "*size": {
                    "value": "(bs,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_390": {
                "*size": {
                    "value": "(bs,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "models/single_cls.py": {
        "torch": {
            "Sequential_65": {
                "variable": {
                    "value": "self.img_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Identity()",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.lang_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Identity()",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_75": {
                "variable": {
                    "value": "self.cls_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.img_feat_dim + self.lang_feat_dim, 512)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_86": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.cfg['train']['lr']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "log_softmax_95": {
                "variable": {
                    "value": "log_prb",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_139": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img1_prob, img2_prob]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "ones_143": {
                "variable": {
                    "value": "num_steps",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "lang_enc.shape[0]",
                            "Subscript"
                        ],
                        [
                            "view_res[view]['pred_ans'].shape[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "mean_97": {
                "input": {
                    "value": "loss",
                    "type": "Name",
                    "possible_values": [
                        [
                            "-(one_hot * log_prb).sum(dim=1)",
                            "UnaryOp"
                        ],
                        [
                            "self.smoothed_cross_entropy(probs, labels)",
                            "Call"
                        ],
                        [
                            "losses['loss']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "one_hot_152": {
                "variable": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "ans",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_199": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "out['probs']",
                            "Subscript"
                        ],
                        [
                            "torch.cat([img1_prob, img2_prob], dim=-1)",
                            "Call"
                        ],
                        [
                            "out['probs']",
                            "Subscript"
                        ],
                        [
                            "F.softmax(probs, dim=-1)",
                            "Call"
                        ],
                        [
                            "out['probs']",
                            "Subscript"
                        ],
                        [
                            "F.softmax(probs, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_392": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "probs",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "out['probs']",
                            "Subscript"
                        ],
                        [
                            "torch.cat([img1_prob, img2_prob], dim=-1)",
                            "Call"
                        ],
                        [
                            "out['probs']",
                            "Subscript"
                        ],
                        [
                            "F.softmax(probs, dim=-1)",
                            "Call"
                        ],
                        [
                            "out['probs']",
                            "Subscript"
                        ],
                        [
                            "F.softmax(probs, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Identity_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Identity_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_76": {
                "in_features": {
                    "value": "self.img_feat_dim + self.lang_feat_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_78": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_79": {
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_80": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_81": {
                "p": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_82": {
                "in_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_132": {
                "tensors": {
                    "value": "[img1_enc, lang_enc]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_136": {
                "tensors": {
                    "value": "[img2_enc, lang_enc]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "models/zero_shot_cls.py": {
        "torch": {
            "Parameter_12": {
                "variable": {
                    "value": "self.logit_scale",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones([]) * np.log(1 / 0.07)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_50": {
                "variable": {
                    "value": "probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "probs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(probs, dim=0)",
                            "Call"
                        ],
                        [
                            "out['probs']",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_54": {
                "variable": {
                    "value": "num_steps",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "img1_feats.shape[0]",
                            "Subscript"
                        ],
                        [
                            "lang_feats.shape[0]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "stack_40": {
                "variable": {
                    "value": "im",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img1_feats[b], img2_feats[b]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_41": {
                "variable": {
                    "value": "lang",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[lang_feats[b], lang_feats[b]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "one_hot_60": {
                "variable": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "ans",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ones_12": {
                "*size": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "scripts/extract_clip_features.py": {
        "torch": {
            "is_available_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "manual_seed_20": {
                "seed": {
                    "value": "seed",
                    "type": "Name",
                    "possible_values": [
                        [
                            "cfg['train']['random_seed']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "load_55": {
                "variable": {
                    "value": "last_ckpt",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "last_checkpoint",
                    "type": "Name",
                    "possible_values": [
                        [
                            "last_checkpoint_path if os.path.exists(last_checkpoint_path) and cfg['train']['load_from_last_ckpt'] else None",
                            "IfExp"
                        ]
                    ]
                }
            },
            "DataLoader_62": {
                "dataset": {
                    "value": "train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "CLIPGraspingDataset(cfg, mode='train')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "cfg['train']['batch_size']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "DataLoader_63": {
                "dataset": {
                    "value": "valid",
                    "type": "Name",
                    "possible_values": [
                        [
                            "CLIPGraspingDataset(cfg, mode='valid')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "cfg['train']['batch_size']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "DataLoader_67": {
                "dataset": {
                    "value": "test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "CLIPGraspingDataset(cfg, mode='test')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "cfg['train']['batch_size']",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}