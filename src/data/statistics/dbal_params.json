{
    "dbal/kdtrees.py": {
        "sklearn": {}
    },
    "dbal/query_methods.py": {
        "sklearn": {
            "NearestNeighbors_407": {
                "variable": {
                    "value": "nearest",
                    "type": "variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MiniBatchKMeans_402": {
                "variable": {
                    "value": "kmeans",
                    "type": "variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "n_queries",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "len(Xt)",
                            "Call"
                        ],
                        [
                            "len(self.queries)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "KMeans_404": {
                "variable": {
                    "value": "kmeans",
                    "type": "variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "n_queries",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "len(Xt)",
                            "Call"
                        ],
                        [
                            "len(self.queries)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ],
                        [
                            "n_queries",
                            "Method Argument"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {}
    },
    "dbal/run_experiments.py": {
        "sklearn": {
            "accuracy_score_370": {
                "variable": {
                    "value": "score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": [
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "convert_y(model.predict(Xt[test_index]).ravel())",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]).ravel())",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]))",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]))",
                            "Call"
                        ]
                    ]
                }
            },
            "accuracy_score_494": {
                "variable": {
                    "value": "score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": [
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "convert_y(model.predict(Xt[test_index]).ravel())",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]).ravel())",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]))",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]))",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_absolute_error_131": {
                "variable": {
                    "value": "score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": [
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "convert_y(model.predict(Xt[test_index]).ravel())",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]).ravel())",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]))",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]))",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_absolute_error_261": {
                "variable": {
                    "value": "score",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": [
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ],
                        [
                            "convert_y(yt[test_index])",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "convert_y(model.predict(Xt[test_index]).ravel())",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]).ravel())",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]))",
                            "Call"
                        ],
                        [
                            "convert_y(model.predict(Xt[test_index]))",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "tensorflow": {
            "Input_37": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(166",
                            "Method Argument"
                        ],
                        [
                            "(166",
                            "Method Argument"
                        ],
                        [
                            "(2048",
                            "Method Argument"
                        ],
                        [
                            "(768",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Model_48": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ],
                        [
                            "Input(input_shape)",
                            "Call"
                        ],
                        [
                            "Input(input_shape)",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "modeled",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Flatten()(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(np.prod(output_shape), activation=None, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Flatten()(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(np.prod(output_shape), activation=None, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(31, activation=activation, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation=activation, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ]
                    ]
                }
            },
            "Input_157": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(166",
                            "Method Argument"
                        ],
                        [
                            "(166",
                            "Method Argument"
                        ],
                        [
                            "(2048",
                            "Method Argument"
                        ],
                        [
                            "(768",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Model_168": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ],
                        [
                            "Input(input_shape)",
                            "Call"
                        ],
                        [
                            "Input(input_shape)",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "modeled",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Flatten()(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(np.prod(output_shape), activation=None, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Flatten()(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(np.prod(output_shape), activation=None, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(31, activation=activation, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation=activation, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ]
                    ]
                }
            },
            "Input_277": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(166",
                            "Method Argument"
                        ],
                        [
                            "(166",
                            "Method Argument"
                        ],
                        [
                            "(2048",
                            "Method Argument"
                        ],
                        [
                            "(768",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Model_287": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ],
                        [
                            "Input(input_shape)",
                            "Call"
                        ],
                        [
                            "Input(input_shape)",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "modeled",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Flatten()(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(np.prod(output_shape), activation=None, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Flatten()(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(np.prod(output_shape), activation=None, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(31, activation=activation, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation=activation, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ]
                    ]
                }
            },
            "Input_386": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(166",
                            "Method Argument"
                        ],
                        [
                            "(166",
                            "Method Argument"
                        ],
                        [
                            "(2048",
                            "Method Argument"
                        ],
                        [
                            "(768",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Model_396": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ],
                        [
                            "Input(shape=input_shape)",
                            "Call"
                        ],
                        [
                            "Input(input_shape)",
                            "Call"
                        ],
                        [
                            "Input(input_shape)",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "modeled",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Flatten()(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(np.prod(output_shape), activation=None, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Flatten()(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(np.prod(output_shape), activation=None, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(31, activation=activation, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(inputs)",
                            "Call"
                        ],
                        [
                            "Dense(100, activation='relu', kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ],
                        [
                            "Dense(10, activation=activation, kernel_constraint=MinMaxNorm(0, C), bias_constraint=MinMaxNorm(0, C))(modeled)",
                            "Call"
                        ]
                    ]
                }
            },
            "set_seed_70": {
                "seed": {
                    "value": "random_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ]
                    ]
                }
            },
            "set_seed_192": {
                "seed": {
                    "value": "random_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ]
                    ]
                }
            },
            "set_seed_309": {
                "seed": {
                    "value": "random_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ]
                    ]
                }
            },
            "set_seed_419": {
                "seed": {
                    "value": "random_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ],
                        [
                            "random_state in range(8)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_model_421": {
                "variable": {
                    "value": "encoder",
                    "type": "variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "'../datasets/models_digits/%sencoder.h5' % features",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_model_422": {
                "variable": {
                    "value": "task",
                    "type": "variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "'../datasets/models_digits/%stask.h5' % features",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_model_423": {
                "variable": {
                    "value": "discriminator",
                    "type": "variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "'../datasets/models_digits/%sdiscriminator.h5' % features",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Flatten_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_39": {
                "units": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_42": {
                "units": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_45": {
                "units": {
                    "value": "np.prod(output_shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "activation": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Flatten_158": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_159": {
                "units": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_162": {
                "units": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_165": {
                "units": {
                    "value": "np.prod(output_shape)",
                    "type": "Call",
                    "possible_values": []
                },
                "activation": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_278": {
                "units": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_281": {
                "units": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_284": {
                "units": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'softmax'",
                            "Method Argument"
                        ],
                        [
                            "'softmax'",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_387": {
                "units": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_390": {
                "units": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_393": {
                "units": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "activation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'softmax'",
                            "Method Argument"
                        ],
                        [
                            "'softmax'",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_constraint": {
                    "value": "MinMaxNorm(0, C)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_49": {
                "learning_rate": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_169": {
                "learning_rate": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_288": {
                "learning_rate": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_397": {
                "learning_rate": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MinMaxNorm_40": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_41": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_43": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_44": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_46": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_47": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_160": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_161": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_163": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_164": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_166": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_167": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_279": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_280": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_282": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_283": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_285": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_286": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_388": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_389": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_391": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_392": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_394": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxNorm_395": {
                "min_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max_value": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "dbal/utils.py": {
        "sklearn": {
            "OneHotEncoder_114": {
                "variable": {
                    "value": "ohe",
                    "type": "variable",
                    "possible_values": []
                },
                "sparse": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "OneHotEncoder_129": {
                "variable": {
                    "value": "ohe",
                    "type": "variable",
                    "possible_values": []
                },
                "sparse": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "StandardScaler_146": {
                "variable": {
                    "value": "std_sc",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}