{
    "adversarial_testing/test_module.py": {
        "sklearn": {
            "KernelPCA_126": {
                "variable": {
                    "value": "self.kpca_s",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel": {
                    "value": "rbf",
                    "type": "str",
                    "possible_values": []
                },
                "fit_inverse_transform": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "copy_X": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "n_components": {
                    "value": "self.low_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "KernelPCA_139": {
                "variable": {
                    "value": "self.kpca_ns",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel": {
                    "value": "rbf",
                    "type": "str",
                    "possible_values": []
                },
                "fit_inverse_transform": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "copy_X": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "n_components": {
                    "value": "self.low_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_mountaincar.py": {
        "sklearn": {
            "RBFSampler_47": {
                "gamma": {
                    "value": "5.0",
                    "type": "float",
                    "possible_values": []
                },
                "n_components": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RBFSampler_48": {
                "gamma": {
                    "value": "2.0",
                    "type": "float",
                    "possible_values": []
                },
                "n_components": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RBFSampler_49": {
                "gamma": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "n_components": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RBFSampler_50": {
                "gamma": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "n_components": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "ConfigProto_167": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "inter_op_parallelism_threads": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "intra_op_parallelism_threads": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Session_168": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto(inter_op_parallelism_threads=1, intra_op_parallelism_threads=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "placeholder_73": {
                "variable": {
                    "value": "self.state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[400]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "state",
                    "type": "str",
                    "possible_values": []
                }
            },
            "squeeze_81": {
                "variable": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_89": {
                "variable": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Normal_92": {
                "variable": {
                    "value": "self.norm_dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "loc": {
                    "value": "self.mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scale": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clip_by_value_94": {
                "variable": {
                    "value": "self.action",
                    "type": "Attribute",
                    "possible_values": []
                },
                "t": {
                    "value": "self.action",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "self.env.action_space.low[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "self.env.action_space.high[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "placeholder_98": {
                "variable": {
                    "value": "self.action_train",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "action_train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_99": {
                "variable": {
                    "value": "self.advantage_train",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "advantage_train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "AdamOptimizer_104": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_134": {
                "variable": {
                    "value": "self.state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[400]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "state",
                    "type": "str",
                    "possible_values": []
                }
            },
            "squeeze_142": {
                "variable": {
                    "value": "self.value",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.value",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_145": {
                "variable": {
                    "value": "self.target",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "target",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_mean_146": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.squared_difference(self.value, self.target)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AdamOptimizer_147": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reset_default_graph_164": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "global_variables_initializer_169": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variable_scope_68": {
                "name_or_scope": {
                    "value": "scope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'policy_estimator'",
                            "Method Argument"
                        ],
                        [
                            "'value_estimator'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "softplus_90": {
                "features": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_129": {
                "name_or_scope": {
                    "value": "scope",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'policy_estimator'",
                            "Method Argument"
                        ],
                        [
                            "'value_estimator'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "squared_difference_146": {
                "x": {
                    "value": "self.value",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.target",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_76": {
                "input": {
                    "value": "self.state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_84": {
                "input": {
                    "value": "self.state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "expand_dims_137": {
                "input": {
                    "value": "self.state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_101": {
                "x": {
                    "value": "self.norm_dist.prob(self.action_train) + 1e-05",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_hopper.py": {
        "tensorflow": {
            "placeholder_30": {
                "variable": {
                    "value": "atarg",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_31": {
                "variable": {
                    "value": "ret",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_33": {
                "variable": {
                    "value": "lrmult",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "lrmult",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "exp_45": {
                "variable": {
                    "value": "ratio",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "pi.pd.logp(ac) - oldpi.pd.logp(ac)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_49": {
                "variable": {
                    "value": "vfloss1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "pi.vpred - ret",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_51": {
                "variable": {
                    "value": "vfloss2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "vpredclipped - ret",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_by_value_50": {
                "t": {
                    "value": "pi.vpred - oldpi.vpred",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-clip_param",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "clip_param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "clip_param * lrmult",
                            "BinOp"
                        ]
                    ]
                }
            },
            "minimum_48": {
                "x": {
                    "value": "surr1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ratio * atarg",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "surr2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "U.clip(ratio, 1.0 - clip_param, 1.0 + clip_param) * atarg",
                            "BinOp"
                        ]
                    ]
                }
            },
            "maximum_52": {
                "x": {
                    "value": "vfloss1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(pi.vpred - ret)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "vfloss2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(vpredclipped - ret)",
                            "Call"
                        ]
                    ]
                }
            },
            "assign_61": {
                "ref": {
                    "value": "oldv",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "newv",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_mountaincar_ppogsd.py": {
        "tensorflow": {
            "placeholder_31": {
                "variable": {
                    "value": "atarg",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_32": {
                "variable": {
                    "value": "ret",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_34": {
                "variable": {
                    "value": "lrmult",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "lrmult",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "exp_46": {
                "variable": {
                    "value": "ratio",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "pi.pd.logp(ac) - oldpi.pd.logp(ac)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_50": {
                "variable": {
                    "value": "vfloss1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "pi.vpred - ret",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_52": {
                "variable": {
                    "value": "vfloss2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "vpredclipped - ret",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_by_value_51": {
                "t": {
                    "value": "pi.vpred - oldpi.vpred",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-clip_param",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "clip_param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "clip_param * lrmult",
                            "BinOp"
                        ]
                    ]
                }
            },
            "minimum_49": {
                "x": {
                    "value": "surr1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ratio * atarg",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "surr2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "U.clip(ratio, 1.0 - clip_param, 1.0 + clip_param) * atarg",
                            "BinOp"
                        ]
                    ]
                }
            },
            "maximum_53": {
                "x": {
                    "value": "vfloss1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(pi.vpred - ret)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "vfloss2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(vpredclipped - ret)",
                            "Call"
                        ]
                    ]
                }
            },
            "assign_62": {
                "ref": {
                    "value": "oldv",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "newv",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_pendulum.py": {
        "tensorflow": {
            "placeholder_33": {
                "variable": {
                    "value": "atarg",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_34": {
                "variable": {
                    "value": "ret",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_36": {
                "variable": {
                    "value": "lrmult",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "lrmult",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "exp_48": {
                "variable": {
                    "value": "ratio",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "pi.pd.logp(ac) - oldpi.pd.logp(ac)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_52": {
                "variable": {
                    "value": "vfloss1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "pi.vpred - ret",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_54": {
                "variable": {
                    "value": "vfloss2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "vpredclipped - ret",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_by_value_53": {
                "t": {
                    "value": "pi.vpred - oldpi.vpred",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-clip_param",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "clip_param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "clip_param * lrmult",
                            "BinOp"
                        ]
                    ]
                }
            },
            "minimum_51": {
                "x": {
                    "value": "surr1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ratio * atarg",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "surr2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "U.clip(ratio, 1.0 - clip_param, 1.0 + clip_param) * atarg",
                            "BinOp"
                        ]
                    ]
                }
            },
            "maximum_55": {
                "x": {
                    "value": "vfloss1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(pi.vpred - ret)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "vfloss2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(vpredclipped - ret)",
                            "Call"
                        ]
                    ]
                }
            },
            "assign_64": {
                "ref": {
                    "value": "oldv",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "newv",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_reacher.py": {
        "tensorflow": {
            "placeholder_30": {
                "variable": {
                    "value": "atarg",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_31": {
                "variable": {
                    "value": "ret",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_33": {
                "variable": {
                    "value": "lrmult",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "lrmult",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "exp_45": {
                "variable": {
                    "value": "ratio",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "pi.pd.logp(ac) - oldpi.pd.logp(ac)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_49": {
                "variable": {
                    "value": "vfloss1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "pi.vpred - ret",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "square_51": {
                "variable": {
                    "value": "vfloss2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "vpredclipped - ret",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "clip_by_value_50": {
                "t": {
                    "value": "pi.vpred - oldpi.vpred",
                    "type": "BinOp",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-clip_param",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "clip_param",
                    "type": "variable",
                    "possible_values": [
                        [
                            "clip_param * lrmult",
                            "BinOp"
                        ]
                    ]
                }
            },
            "minimum_48": {
                "x": {
                    "value": "surr1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ratio * atarg",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "surr2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "U.clip(ratio, 1.0 - clip_param, 1.0 + clip_param) * atarg",
                            "BinOp"
                        ]
                    ]
                }
            },
            "maximum_52": {
                "x": {
                    "value": "vfloss1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(pi.vpred - ret)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "vfloss2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.square(vpredclipped - ret)",
                            "Call"
                        ]
                    ]
                }
            },
            "assign_61": {
                "ref": {
                    "value": "oldv",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "newv",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}