{
    "Plot_error_rate/main.py": {
        "sklearn": {}
    },
    "Plot_map/main.py": {
        "sklearn": {}
    },
    "RDA_code/main.py": {
        "sklearn": {
            "StandardScaler_81": {
                "variable": {
                    "value": "scaler",
                    "type": "Variable",
                    "possible_values": []
                },
                "with_mean": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "with_std": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "KFold_329": {
                "variable": {
                    "value": "kf",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LinearRegression_297": {
                "variable": {
                    "value": "reg",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LinearRegression_311": {
                "variable": {
                    "value": "reg",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LinearRegression_345": {
                "variable": {
                    "value": "reg",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "KNeighborsClassifier_448": {
                "variable": {
                    "value": "neigh",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_neighbors": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LabelEncoder_731": {
                "variable": {
                    "value": "le",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LabelEncoder_754": {
                "variable": {
                    "value": "le",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_104": {
                "variable": {
                    "value": "(X_train, X_test, Y_train, Y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "StandardScaler_216": {
                "variable": {
                    "value": "scaler",
                    "type": "Variable",
                    "possible_values": []
                },
                "with_mean": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "with_std": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "mean_squared_error_299": {
                "y_true": {
                    "value": "Y_test_stacked[:, :, dataset_index].ravel()",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "reg.predict(X=data_outOfSample_transformed.T)",
                            "Call"
                        ],
                        [
                            "reg.predict(X=X_test_stacked[:, :, dataset_index].T)",
                            "Call"
                        ],
                        [
                            "reg.predict(X=data_outOfSample_transformed.T)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_squared_error_313": {
                "y_true": {
                    "value": "Y_test_stacked[:, :, dataset_index].ravel()",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "reg.predict(X=data_outOfSample_transformed.T)",
                            "Call"
                        ],
                        [
                            "reg.predict(X=X_test_stacked[:, :, dataset_index].T)",
                            "Call"
                        ],
                        [
                            "reg.predict(X=data_outOfSample_transformed.T)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_squared_error_347": {
                "y_true": {
                    "value": "Y_test.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "reg.predict(X=data_outOfSample_transformed.T)",
                            "Call"
                        ],
                        [
                            "reg.predict(X=X_test_stacked[:, :, dataset_index].T)",
                            "Call"
                        ],
                        [
                            "reg.predict(X=data_outOfSample_transformed.T)",
                            "Call"
                        ]
                    ]
                }
            },
            "train_test_split_151": {
                "variable": {
                    "value": "(X_train, X_test, Y_train, Y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "StandardScaler_274": {
                "variable": {
                    "value": "scaler",
                    "type": "Variable",
                    "possible_values": []
                },
                "with_mean": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "with_std": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "train_test_split_252": {
                "variable": {
                    "value": "(X_train, X_test, Y_train, Y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "StandardScaler_280": {
                "variable": {
                    "value": "scaler",
                    "type": "Variable",
                    "possible_values": []
                },
                "with_mean": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "with_std": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "RDA_code/my_FDA.py": {
        "sklearn": {}
    },
    "RDA_code/my_RDA.py": {
        "sklearn": {
            "pairwise_kernels_32": {
                "variable": {
                    "value": "self.K_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "X": {
                    "value": "Y.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "Y.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel_on_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "RDA_code/my_generalized_eigen_problem.py": {
        "sklearn": {}
    },
    "RDA_code/my_kernel_FDA.py": {
        "sklearn": {
            "pairwise_kernels_44": {
                "variable": {
                    "value": "Kernel_allSamples_allSamples",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_88": {
                "variable": {
                    "value": "Kernel_train_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "self.X_train.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_94": {
                "variable": {
                    "value": "Kernel_train_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "self.X_train.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_54": {
                "variable": {
                    "value": "Kernel_allSamples_classSamples",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X_class.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_65": {
                "variable": {
                    "value": "Kernel_allSamples_classSamples",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X_class.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "RDA_code/my_kernel_PCA.py": {
        "sklearn": {
            "pairwise_kernels_46": {
                "variable": {
                    "value": "kernel_X_X",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "self.X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "self.X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_73": {
                "variable": {
                    "value": "kernel_outOfSample",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "self.X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "x.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_82": {
                "variable": {
                    "value": "kernel_outOfSample",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "self.X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_91": {
                "variable": {
                    "value": "kernel_X_X_training",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "self.X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "self.X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_106": {
                "variable": {
                    "value": "kernel_X_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "self.X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "RDA_code/my_kernel_RDA.py": {
        "sklearn": {
            "pairwise_kernels_47": {
                "variable": {
                    "value": "self.K_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "X": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel_on_X",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_123": {
                "variable": {
                    "value": "kernel_X_X",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "self.X_training.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel_on_X",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_65": {
                "variable": {
                    "value": "K_all_and_class",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "X_class.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel_on_X",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "pairwise_kernels_37": {
                "variable": {
                    "value": "self.K_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "X": {
                    "value": "Y.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "Y": {
                    "value": "Y.T",
                    "type": "Attribute",
                    "possible_values": []
                },
                "metric": {
                    "value": "self.kernel_on_labels",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}