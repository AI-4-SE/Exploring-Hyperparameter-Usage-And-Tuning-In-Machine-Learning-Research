{
    "main.py": {
        "torch": {
            "CrossEntropyLoss_82": {
                "variable": {
                    "value": "criterion",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_86": {
                "variable": {
                    "value": "opt",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_84": {
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.98)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "eps": {
                    "value": "1e-09",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_110": {
                "input": {
                    "value": "p_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "R_t + N_t",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "models/UTransformer.py": {
        "torch": {
            "Embedding_24": {
                "variable": {
                    "value": "self.emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "num_vocab",
                    "type": "Name",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "embedding_size",
                    "type": "Name",
                    "possible_values": []
                },
                "padding_idx": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_29": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_vocab",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Softmax_35": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_37": {
                "variable": {
                    "value": "self.mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "I.constant_(torch.empty(11, self.embedding_dim), 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_45": {
                "variable": {
                    "value": "embed_story",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "embed * self.mask[:story.size(2), :].unsqueeze(0)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_49": {
                "variable": {
                    "value": "embed_query",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "query_embed.unsqueeze(1) * self.mask[:query.size(1), :]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_52": {
                "variable": {
                    "value": "embed",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[embed_story, embed_query]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_117": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_200": {
                "variable": {
                    "value": "self.input_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "input_dropout",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sigmoid_228": {
                "variable": {
                    "value": "self.sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_229": {
                "variable": {
                    "value": "self.p",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_236": {
                "variable": {
                    "value": "halting_probability",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "inputs.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "inputs.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_238": {
                "variable": {
                    "value": "remainders",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "inputs.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "inputs.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_240": {
                "variable": {
                    "value": "n_updates",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "inputs.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "inputs.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_like_242": {
                "variable": {
                    "value": "previous_state",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_111": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Name",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_195": {
                "variable": {
                    "value": "self.embedding_proj",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "embedding_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Name",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "empty_37": {
                "*size": {
                    "value": "11",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "self.embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_57": {
                "input": {
                    "value": "logit",
                    "type": "Name",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "models/common_layer.py": {
        "torch": {
            "from_numpy_347": {
                "variable": {
                    "value": "torch_mask",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np_mask",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.triu(np.full([max_length, max_length], -np.inf), 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "Dropout_42": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "layer_dropout",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_102": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "layer_dropout",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_178": {
                "variable": {
                    "value": "self.query_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_depth",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "total_key_depth",
                    "type": "Name",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_179": {
                "variable": {
                    "value": "self.key_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_depth",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "total_key_depth",
                    "type": "Name",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_180": {
                "variable": {
                    "value": "self.value_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_depth",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "total_value_depth",
                    "type": "Name",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_181": {
                "variable": {
                    "value": "self.output_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "total_value_depth",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_depth",
                    "type": "Name",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_183": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "matmul_227": {
                "variable": {
                    "value": "logits",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "queries",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.query_linear(queries)",
                            "Call"
                        ],
                        [
                            "self._split_heads(queries)",
                            "Call"
                        ],
                        [
                            "queries * self.query_scale",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "keys.permute(0, 1, 3, 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_238": {
                "variable": {
                    "value": "weights",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.matmul(queries, keys.permute(0, 1, 3, 2))",
                            "Call"
                        ],
                        [
                            "logits.masked_fill(src_mask, -np.inf)",
                            "Call"
                        ],
                        [
                            "logits + self.bias_mask[:, :, :logits.shape[-2], :logits.shape[-1]].type_as(logits.data)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_244": {
                "variable": {
                    "value": "contexts",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "nn.functional.softmax(logits, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.dropout(weights)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "values",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.value_linear(values)",
                            "Call"
                        ],
                        [
                            "self._split_heads(values)",
                            "Call"
                        ]
                    ]
                }
            },
            "ConstantPad1d_271": {
                "variable": {
                    "value": "self.pad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "(kernel_size - 1, 0) if pad_type == 'left' else (kernel_size // 2, (kernel_size - 1) // 2)",
                            "IfExp"
                        ],
                        [
                            "'left'",
                            "MethodArgument"
                        ]
                    ]
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv1d_272": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_size",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModuleList_312": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "layers",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "ReLU_313": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_314": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Parameter_332": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_333": {
                "variable": {
                    "value": "self.beta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_368": {
                "ndarray": {
                    "value": "signal",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.concatenate([np.sin(scaled_time), np.cos(scaled_time)], axis=1)",
                            "Call"
                        ],
                        [
                            "np.pad(signal, [[0, 0], [0, channels % 2]], 'constant', constant_values=[0.0, 0.0])",
                            "Call"
                        ],
                        [
                            "signal.reshape([1, length, channels])",
                            "Call"
                        ]
                    ]
                }
            },
            "KLDivLoss_388": {
                "variable": {
                    "value": "self.criterion",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "nonzero_401": {
                "variable": {
                    "value": "mask",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "target.data == self.padding_idx",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "ones_332": {
                "*size": {
                    "value": "features",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "zeros_333": {
                "*size": {
                    "value": "features",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_306": {
                "in_features": {
                    "value": "*s",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    }
}