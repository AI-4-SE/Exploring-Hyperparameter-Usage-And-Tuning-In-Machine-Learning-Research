{
    "owkin-submission-evaluate.py": {
        "sklearn": {
            "accuracy_score_36": {
                "y_true": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": [
                        [
                            "df[0].tolist()",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "df[trial].tolist()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "owkin-submission-predict.py": {
        "torch": {
            "load_31": {
                "f": {
                    "value": "args.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/distant.py": {
        "torch": {
            "BCELoss_52": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "size_average": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SGD_53": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args['learning_rate']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "parser.parse_args()",
                            "Call"
                        ],
                        [
                            "args",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "manual_seed_47": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args['training_seed']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "save_76": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "server_model.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_92": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "samples[mask]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_93": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "labels[mask]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "src/models/logistic_regression_model.py": {
        "torch": {
            "Linear_21": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_22": {
                "variable": {
                    "value": "self.output_activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/utils/communication.py": {
        "torch": {
            "cat_77": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[weights.flatten() for weights in model.parameters()]",
                    "type": "ListComp",
                    "possible_values": []
                }
            }
        }
    },
    "src/utils/pytorch_evaluation.py": {
        "torch": {
            "Tensor_36": {
                "variable": {
                    "value": "tensor_x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_37": {
                "variable": {
                    "value": "tensor_y",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "no_grad_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}