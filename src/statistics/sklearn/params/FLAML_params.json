{
    "flaml/automl.py": {
        "SearchState_66": {},
        "AutoMLState_278": {},
        "AutoML_459": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        },
        "GroupKFold_1392": {
            "variable": {
                "value": "self._state.kf",
                "possible_values": []
            },
            "n_splits": {
                "value": "n_splits",
                "possible_values": []
            }
        },
        "RepeatedStratifiedKFold_1404": {
            "variable": {
                "value": "self._state.kf",
                "possible_values": []
            },
            "n_splits": {
                "value": "n_splits",
                "possible_values": []
            },
            "n_repeats": {
                "value": "1",
                "possible_values": []
            },
            "random_state": {
                "value": "RANDOM_SEED",
                "possible_values": []
            }
        },
        "GroupShuffleSplit_1269": {
            "variable": {
                "value": "gss",
                "possible_values": []
            },
            "n_splits": {
                "value": "1",
                "possible_values": []
            },
            "test_size": {
                "value": "split_ratio",
                "possible_values": []
            },
            "random_state": {
                "value": "RANDOM_SEED",
                "possible_values": []
            }
        },
        "TimeSeriesSplit_1420": {
            "variable": {
                "value": "self._state.kf",
                "possible_values": []
            },
            "n_splits": {
                "value": "n_splits",
                "possible_values": []
            },
            "test_size": {
                "value": "period",
                "possible_values": []
            }
        },
        "TimeSeriesSplit_1422": {
            "variable": {
                "value": "self._state.kf",
                "possible_values": []
            },
            "n_splits": {
                "value": "n_splits",
                "possible_values": []
            }
        },
        "RepeatedKFold_1425": {
            "variable": {
                "value": "self._state.kf",
                "possible_values": []
            },
            "n_splits": {
                "value": "n_splits",
                "possible_values": []
            },
            "n_repeats": {
                "value": "1",
                "possible_values": []
            },
            "random_state": {
                "value": "RANDOM_SEED",
                "possible_values": []
            }
        }
    },
    "flaml/data.py": {
        "DataTransformer_246": {},
        "LabelEncoder_375": {
            "variable": {
                "value": "self.label_transformer",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "ColumnTransformer_352": {
            "variable": {
                "value": "self.transformer",
                "possible_values": []
            },
            "transformers": {
                "value": "[('continuous', SimpleImputer(missing_values=np.nan, strategy='median'), X_num.columns)]",
                "possible_values": []
            }
        },
        "SimpleImputer_356": {
            "missing_values": {
                "value": "np.nan",
                "possible_values": []
            },
            "strategy": {
                "value": "median",
                "possible_values": []
            }
        }
    },
    "flaml/default/estimator.py": {
        "EstimatorClass_30": {}
    },
    "flaml/default/greedy.py": {
        "RobustScaler_33": {
            "variable": {
                "value": "scaler",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "flaml/default/portfolio.py": {
        "RobustScaler_24": {
            "variable": {
                "value": "scaler",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "flaml/default/suggest.py": {
        "NearestNeighbors_86": {
            "variable": {
                "value": "nn",
                "possible_values": []
            },
            "n_neighbors": {
                "value": "1",
                "possible_values": []
            }
        },
        "AutoMLTransformer_246": {}
    },
    "flaml/ml.py": {},
    "flaml/model.py": {
        "BaseEstimator_77": {},
        "TransformersEstimator_347": {},
        "TransformersEstimatorModelSelection_877": {},
        "SKLearnEstimator_907": {},
        "LGBMEstimator_929": {},
        "XGBoostEstimator_1146": {},
        "XGBoostSklearnEstimator_1298": {},
        "XGBoostLimitDepthEstimator_1350": {},
        "RandomForestEstimator_1372": {},
        "ExtraTreesEstimator_1436": {},
        "LRL1Classifier_1451": {},
        "LRL2Classifier_1480": {},
        "CatBoostEstimator_1506": {},
        "KNeighborsEstimator_1657": {},
        "Prophet_1707": {},
        "ARIMA_1793": {},
        "SARIMAX_1880": {},
        "TS_SKLearn_1968": {},
        "LGBM_TS_2090": {},
        "XGBoost_TS_2096": {},
        "RF_TS_2107": {},
        "ExtraTrees_TS_2113": {},
        "XGBoostLimitDepth_TS_2119": {},
        "suppress_stdout_stderr_2125": {},
        "EarlyStoppingCallbackForAuto_609": {},
        "ResourceLimit_1282": {},
        "ResourceLimit_1641": {},
        "DummyClassifier_192": {
            "variable": {
                "value": "model",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        },
        "DummyRegressor_194": {
            "variable": {
                "value": "model",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "flaml/onlineml/trial.py": {
        "OnlineResult_49": {},
        "BaseOnlineTrial_167": {},
        "VowpalWabbitTrial_243": {}
    },
    "test/automl/test_classification.py": {
        "MyLargeLGBM_13": {},
        "TestClassification_30": {}
    },
    "test/automl/test_constraints.py": {},
    "test/automl/test_custom_hp.py": {},
    "test/automl/test_forecast.py": {},
    "test/automl/test_multiclass.py": {
        "MyRegularizedGreedyForest_12": {},
        "MyLargeXGB_64": {},
        "MyLargeLGBM_81": {},
        "TestMultiClass_128": {}
    },
    "test/automl/test_notebook_example.py": {},
    "test/automl/test_python_log.py": {
        "TestLogging_11": {}
    },
    "test/automl/test_regression.py": {
        "MyXGB1_21": {},
        "MyXGB2_28": {},
        "TestRegression_35": {},
        "MultiOutputRegressor_223": {
            "variable": {
                "value": "model",
                "possible_values": []
            },
            "estimator": {
                "value": "AutoML(task='regression', time_budget=1)",
                "possible_values": []
            }
        },
        "RegressorChain_230": {
            "variable": {
                "value": "model",
                "possible_values": []
            },
            "base_estimator": {
                "value": "AutoML(task='regression', time_budget=1)",
                "possible_values": []
            }
        }
    },
    "test/automl/test_score.py": {
        "TestScore_6": {}
    },
    "test/automl/test_split.py": {
        "TestKFold_136": {
            "base_class_0": {
                "value": "sklearn.model_selection.KFold",
                "possible_values": []
            }
        }
    },
    "test/automl/test_training_log.py": {
        "TestTrainingLog_11": {}
    },
    "test/automl/test_warmstart.py": {
        "TestWarmStart_9": {},
        "MyPartiallyFreezedLargeLGBM_48": {}
    },
    "test/automl/test_xgboost2d.py": {
        "XGBoost2D_13": {}
    },
    "test/automl/test_xgboost2d_sample_size.py": {
        "XGBoost2D_13": {}
    },
    "test/default/test_defaults.py": {},
    "test/default_lgbm.py": {},
    "test/default_xgb.py": {},
    "test/object_store.py": {},
    "test/rank.py": {},
    "test/ray/distribute_automl.py": {},
    "test/ray/distribute_tune.py": {},
    "test/reg.py": {},
    "test/test_autovw.py": {
        "VowpalWabbitNamesspaceTuningProblem_207": {},
        "VowpalWabbitNamesspaceLRTuningProblem_264": {},
        "TestAutoVW_367": {}
    },
    "test/test_conda_distribution.py": {},
    "test/test_gpu.py": {},
    "test/test_model.py": {},
    "test/tune/test_tune.py": {},
    "test/tune_example.py": {}
}