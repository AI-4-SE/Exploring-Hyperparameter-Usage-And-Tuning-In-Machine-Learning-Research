{
    "cmd_gen_mp4/cmd_to_tfr_bycat.py": {
        "tensorflow": {
            "Feature_13": {
                "float_list": {
                    "value": "tf.train.FloatList(value=[value])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_16": {
                "bytes_list": {
                    "value": "tf.train.BytesList(value=[value])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_19": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=[value])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "TFRecordWriter_173": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "path_now",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ]
                    ]
                }
            },
            "TFRecordWriter_207": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "path_now",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ]
                    ]
                }
            },
            "FloatList_13": {
                "value": {
                    "value": "[value]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "BytesList_16": {
                "value": {
                    "value": "[value]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Int64List_19": {
                "value": {
                    "value": "[value]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Example_80": {
                "variable": {
                    "value": "example",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.train.Features(feature={key_now: _bytes_feature(img_raw)})",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "TFRecordWriter_164": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "path_now",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ]
                    ]
                }
            },
            "TFRecordWriter_198": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "path_now",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ]
                    ]
                }
            },
            "Example_93": {
                "variable": {
                    "value": "example",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.train.Features(feature={'category': _int64_feature(label_now)})",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Example_99": {
                "variable": {
                    "value": "example",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.train.Features(feature={'objid': _int64_feature(curr_write_value)})",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Features_80": {
                "feature": {
                    "value": "{key_now: _bytes_feature(img_raw)}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "Features_93": {
                "feature": {
                    "value": "{'category': _int64_feature(label_now)}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "Features_99": {
                "feature": {
                    "value": "{'objid': _int64_feature(curr_write_value)}",
                    "type": "Dict",
                    "possible_values": []
                }
            }
        }
    },
    "cmd_gen_mp4/cmd_to_tfrecords.py": {
        "tensorflow": {
            "TFRecordWriter_60": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "path_now",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ]
                    ]
                }
            },
            "TFRecordWriter_97": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "path_now",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ]
                    ]
                }
            },
            "Feature_13": {
                "float_list": {
                    "value": "tf.train.FloatList(value=[value])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_16": {
                "bytes_list": {
                    "value": "tf.train.BytesList(value=[value])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Feature_19": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=[value])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tf_record_iterator_130": {
                "variable": {
                    "value": "record_iterator",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "path_now",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ]
                    ]
                }
            },
            "TFRecordWriter_151": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "path_now",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ],
                        [
                            "os.path.join(dir_now, name_now)",
                            "Call"
                        ]
                    ]
                }
            },
            "FloatList_13": {
                "value": {
                    "value": "[value]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "BytesList_16": {
                "value": {
                    "value": "[value]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Int64List_19": {
                "value": {
                    "value": "[value]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Example_81": {
                "variable": {
                    "value": "example",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.train.Features(feature={key_now: _float_feature(all_scales[group_indx])})",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Example_104": {
                "variable": {
                    "value": "example",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.train.Features(feature={key_now: _int64_feature(label_now)})",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Example_135": {
                "variable": {
                    "value": "example",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Example_176": {
                "variable": {
                    "value": "example",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.train.Features(feature={key_now: _bytes_feature(img_raw)})",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Features_81": {
                "feature": {
                    "value": "{key_now: _float_feature(all_scales[group_indx])}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "Features_104": {
                "feature": {
                    "value": "{key_now: _int64_feature(label_now)}",
                    "type": "Dict",
                    "possible_values": []
                }
            },
            "Features_176": {
                "feature": {
                    "value": "{key_now: _bytes_feature(img_raw)}",
                    "type": "Dict",
                    "possible_values": []
                }
            }
        }
    },
    "cmd_gen_mp4/make_meta.py": {
        "tensorflow": {}
    },
    "cmd_gen_mp4/rewrite_tfrecords.py": {
        "tensorflow": {
            "TFRecordWriter_11": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "new_file_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(to_dir, new_file_name)",
                            "Call"
                        ]
                    ]
                }
            },
            "tf_record_iterator_48": {
                "variable": {
                    "value": "record_iterator",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "file_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(from_dir, file_name)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "cmd_gen_mp4/write_bool.py": {
        "tensorflow": {
            "tf_record_iterator_24": {
                "variable": {
                    "value": "record_iterator",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "tfrec_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(refer_dir, file_name)",
                            "Call"
                        ]
                    ]
                }
            },
            "TFRecordWriter_27": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "write_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(write_dir, file_name)",
                            "Call"
                        ]
                    ]
                }
            },
            "Feature_5": {
                "int64_list": {
                    "value": "tf.train.Int64List(value=[value])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Example_30": {
                "variable": {
                    "value": "example",
                    "type": "variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.train.Features(feature={'trainflag': _int64_feature(write_value)})",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Int64List_5": {
                "value": {
                    "value": "[value]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Features_30": {
                "feature": {
                    "value": "{'trainflag': _int64_feature(write_value)}",
                    "type": "Dict",
                    "possible_values": []
                }
            }
        }
    },
    "train_barrel_net/cate_network_builder.py": {
        "tensorflow": {}
    },
    "train_barrel_net/model.py": {
        "tensorflow": {}
    },
    "train_barrel_net/train_catenet.py": {
        "tensorflow": {
            "split_101": {
                "variable": {
                    "value": "new_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "inputs[target]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "num_or_size_splits": {
                    "value": "len(outputs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "split_150": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.split(labels, axis=0, num_or_size_splits=n_gpus)",
                            "Call"
                        ],
                        [
                            "[labels]",
                            "List"
                        ],
                        [
                            "tf.split(labels, axis=0, num_or_size_splits=n_gpus)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "num_or_size_splits": {
                    "value": "n_gpus",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(logits)",
                            "Call"
                        ],
                        [
                            "len(logits)",
                            "Call"
                        ]
                    ]
                }
            },
            "strided_slice_289": {
                "variable": {
                    "value": "slice0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_290": {
                "variable": {
                    "value": "slice1",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[1, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_291": {
                "variable": {
                    "value": "slice2",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[2, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_296": {
                "variable": {
                    "value": "data[new_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[slice0, slice1, slice2]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_308": {
                "variable": {
                    "value": "slice0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_309": {
                "variable": {
                    "value": "slice1",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[1, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_310": {
                "variable": {
                    "value": "slice2",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[2, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_311": {
                "variable": {
                    "value": "data[new_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[slice0, slice1, slice2]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_313": {
                "variable": {
                    "value": "slice0_",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[4, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_314": {
                "variable": {
                    "value": "slice1_",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[1, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[4, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_315": {
                "variable": {
                    "value": "slice2_",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[2, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[4, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_316": {
                "variable": {
                    "value": "slice3_",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[3, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[4, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "31",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_317": {
                "variable": {
                    "value": "data[new_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[slice0_, slice1_, slice2_, slice3_]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_321": {
                "variable": {
                    "value": "slice0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_322": {
                "variable": {
                    "value": "slice1",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_323": {
                "variable": {
                    "value": "slice2",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[2, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_325": {
                "variable": {
                    "value": "data[new_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[slice0, slice1, slice2]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_335": {
                "variable": {
                    "value": "slice0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_336": {
                "variable": {
                    "value": "slice1",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_337": {
                "variable": {
                    "value": "slice2",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[2, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_338": {
                "variable": {
                    "value": "data[new_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[slice0, slice1, slice2]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_340": {
                "variable": {
                    "value": "slice0_",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[4, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_341": {
                "variable": {
                    "value": "slice1_",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[4, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_342": {
                "variable": {
                    "value": "slice2_",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[2, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[4, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_343": {
                "variable": {
                    "value": "slice3_",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[3, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[4, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_344": {
                "variable": {
                    "value": "data[new_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[slice0_, slice1_, slice2_, slice3_]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "slice_349": {
                "variable": {
                    "value": "slice0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "size": {
                    "value": "[-1, -1, 5, -1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "slice_350": {
                "variable": {
                    "value": "slice1",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0, 5, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "size": {
                    "value": "[-1, -1, 6, -1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "slice_351": {
                "variable": {
                    "value": "slice2",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0, 11, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "size": {
                    "value": "[-1, -1, 14, -1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "slice_352": {
                "variable": {
                    "value": "slice3",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0, 0, 25, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "size": {
                    "value": "[-1, -1, 6, -1, -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_354": {
                "variable": {
                    "value": "pad_ten0",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[shape_now[0], shape_now[1], 1, shape_now[3], shape_now[4]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_355": {
                "variable": {
                    "value": "pad_ten1",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[shape_now[0], shape_now[1], 1, shape_now[3], shape_now[4]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_356": {
                "variable": {
                    "value": "pad_ten2",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[shape_now[0], shape_now[1], 1, shape_now[3], shape_now[4]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_357": {
                "variable": {
                    "value": "pad_ten3",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[shape_now[0], shape_now[1], 1, shape_now[3], shape_now[4]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_359": {
                "variable": {
                    "value": "data[new_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[slice0, pad_ten0, pad_ten1, slice1, pad_ten2, slice2, pad_ten3, slice3]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_366": {
                "variable": {
                    "value": "slice0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[3]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "strided_slice_379": {
                "variable": {
                    "value": "slice0",
                    "type": "variable",
                    "possible_values": []
                },
                "input_": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "begin": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "end": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[12]",
                    "type": "List",
                    "possible_values": []
                },
                "end_mask": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "constant_386": {
                "variable": {
                    "value": "mean_tf",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "stat_dict['mean']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "data[curr_key].dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_387": {
                "variable": {
                    "value": "var_tf",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "stat_dict['std']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "data[curr_key].dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_389": {
                "variable": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.divide(tf.subtract(data[curr_key], mean_tf), var_tf)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.constant(self.norm_std, dtype=data[curr_key].dtype)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "in_top_k_87": {
                "targets": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "predictions": {
                    "value": "inputs[target]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "k": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "in_top_k_88": {
                "targets": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "predictions": {
                    "value": "inputs[target]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "k": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_98": {
                "values": {
                    "value": "top5_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_109": {
                "values": {
                    "value": "top5_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_112": {
                "values": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "variable_scope_115": {
                "name_or_scope": {
                    "value": "tf.get_variable_scope()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_122": {
                "input_tensor": {
                    "value": "losses",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[losses]",
                            "List"
                        ]
                    ]
                }
            },
            "variable_scope_129": {
                "name_or_scope": {
                    "value": "tf.get_variable_scope()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "split_133": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.split(labels, axis=0, num_or_size_splits=n_gpus)",
                            "Call"
                        ],
                        [
                            "[labels]",
                            "List"
                        ],
                        [
                            "tf.split(labels, axis=0, num_or_size_splits=n_gpus)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "num_or_size_splits": {
                    "value": "n_gpus",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(logits)",
                            "Call"
                        ],
                        [
                            "len(logits)",
                            "Call"
                        ]
                    ]
                }
            },
            "variable_scope_148": {
                "name_or_scope": {
                    "value": "tf.get_variable_scope()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "variable_scope_163": {
                "name_or_scope": {
                    "value": "tf.get_variable_scope()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_165": {
                "variable": {
                    "value": "losses[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "concat_210": {
                "variable": {
                    "value": "grad",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "grads",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_mean_211": {
                "variable": {
                    "value": "grad",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "grad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat(grads, axis=0)",
                            "Call"
                        ],
                        [
                            "tf.reduce_mean(grad, axis=0)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_301": {
                "variable": {
                    "value": "pad_zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[shape_list[0] * self.num_fake] + shape_list[1:]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "concat_302": {
                "variable": {
                    "value": "data[new_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[data[new_key], pad_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_329": {
                "variable": {
                    "value": "pad_zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[shape_list[0] * self.num_fake] + shape_list[1:]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "concat_330": {
                "variable": {
                    "value": "data[new_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[data[new_key], pad_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_370": {
                "variable": {
                    "value": "pad_zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "[shape_list[0] * self.num_fake] + shape_list[1:]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "slice0.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_371": {
                "variable": {
                    "value": "slice0",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[slice0, pad_zeros]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "decode_raw_442": {
                "variable": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": []
                },
                "input_bytes": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [110, 31, 3, 3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [4])",
                            "Call"
                        ]
                    ]
                },
                "out_type": {
                    "value": "np.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_443": {
                "variable": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [110, 31, 3, 3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [4])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[110, 31, 3, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "map_fn_445": {
                "fn": {
                    "value": "lambda im: _postprocess_images(im)",
                    "type": "Lambda",
                    "possible_values": []
                },
                "elems": {
                    "value": "ims",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "decode_raw_449": {
                "variable": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": []
                },
                "input_bytes": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [110, 31, 3, 3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [4])",
                            "Call"
                        ]
                    ]
                },
                "out_type": {
                    "value": "np.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_450": {
                "variable": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [110, 31, 3, 3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [4])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "map_fn_452": {
                "fn": {
                    "value": "lambda im: _postprocess_arrs(im)",
                    "type": "Lambda",
                    "possible_values": []
                },
                "elems": {
                    "value": "ims",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "decode_raw_456": {
                "variable": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": []
                },
                "input_bytes": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [110, 31, 3, 3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [4])",
                            "Call"
                        ]
                    ]
                },
                "out_type": {
                    "value": "np.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_457": {
                "variable": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "im",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [110, 31, 3, 3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [3])",
                            "Call"
                        ],
                        [
                            "tf.decode_raw(im, np.float32)",
                            "Call"
                        ],
                        [
                            "tf.reshape(im, [4])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[4]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "map_fn_459": {
                "fn": {
                    "value": "lambda im: _postprocess_arrs(im)",
                    "type": "Lambda",
                    "possible_values": []
                },
                "elems": {
                    "value": "ims",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_scope_115": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_variable_scope_129": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_variable_scope_148": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_variable_scope_163": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "variable_scope_185": {
                "name_or_scope": {
                    "value": "tf.get_variable_scope()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "divide_389": {
                "x": {
                    "value": "tf.subtract(data[curr_key], mean_tf)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "var_tf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.constant(stat_dict['std'], dtype=data[curr_key].dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "constant_389": {
                "value": {
                    "value": "self.norm_std",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "data[curr_key].dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_default_graph_577": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_120": {
                "input_tensor": {
                    "value": "tf.nn.sparse_softmax_cross_entropy_with_logits(labels=labels, logits=logit, **kwargs)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_138": {
                "device_name": {
                    "value": "'/gpu:%d' % (i + gpu_offset)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "squeeze_140": {
                "variable": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.squeeze(label)",
                            "Call"
                        ],
                        [
                            "tf.squeeze(label)",
                            "Call"
                        ]
                    ]
                }
            },
            "device_153": {
                "device_name": {
                    "value": "'/gpu:%d' % i",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "squeeze_155": {
                "variable": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.squeeze(label)",
                            "Call"
                        ],
                        [
                            "tf.squeeze(label)",
                            "Call"
                        ]
                    ]
                }
            },
            "get_variable_scope_185": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "subtract_389": {
                "x": {
                    "value": "data[curr_key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "mean_tf",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.constant(stat_dict['mean'], dtype=data[curr_key].dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "get_default_graph_563": {
                "variable": {
                    "value": "tensor_now",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sparse_softmax_cross_entropy_with_logits_120": {
                "labels": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.split(labels, axis=0, num_or_size_splits=n_gpus)",
                            "Call"
                        ],
                        [
                            "[labels]",
                            "List"
                        ],
                        [
                            "tf.split(labels, axis=0, num_or_size_splits=n_gpus)",
                            "Call"
                        ]
                    ]
                },
                "logits": {
                    "value": "logit",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "name_scope_139": {
                "name": {
                    "value": "'gpu_' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_variable_scope_144": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "name_scope_154": {
                "name": {
                    "value": "'gpu_' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_variable_scope_159": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "clip_by_value_180": {
                "t": {
                    "value": "grad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat(grads, axis=0)",
                            "Call"
                        ],
                        [
                            "tf.reduce_mean(grad, axis=0)",
                            "Call"
                        ]
                    ]
                },
                "clip_value_min": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "device_191": {
                "device_name": {
                    "value": "'/gpu:%d' % (i + self.gpu_offset)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "expand_dims_209": {
                "input": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "get_default_graph_549": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_142": {
                "input_tensor": {
                    "value": "tf.nn.sparse_softmax_cross_entropy_with_logits(labels=label, logits=logit)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_157": {
                "input_tensor": {
                    "value": "cmu_softmax_cross_entropy_loss(labels=label, logits=logit)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "name_scope_192": {
                "name": {
                    "value": "'gpu_' + str(i)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sparse_softmax_cross_entropy_with_logits_142": {
                "labels": {
                    "value": "label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.squeeze(label)",
                            "Call"
                        ],
                        [
                            "tf.squeeze(label)",
                            "Call"
                        ]
                    ]
                },
                "logits": {
                    "value": "logit",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}