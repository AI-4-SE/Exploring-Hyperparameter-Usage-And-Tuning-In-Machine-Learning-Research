{
    "mapping_localization/main.py": {
        "tensorflow": {
            "placeholder_60": {
                "variable": {
                    "value": "learning_rate_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Session_72": {
                "variable": {
                    "value": "sess",
                    "type": "Variable",
                    "possible_values": []
                },
                "config": {
                    "value": "tf.ConfigProto(log_device_placement=False, allow_soft_placement=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "global_variables_initializer_74": {
                "variable": {
                    "value": "init",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_78": {
                "variable": {
                    "value": "loss_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "merge_all_80": {
                "variable": {
                    "value": "summary_op",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FileWriter_81": {
                "variable": {
                    "value": "summary_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "LOG_FILE",
                    "type": "Variable",
                    "possible_values": []
                },
                "graph": {
                    "value": "sess.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_86": {
                "variable": {
                    "value": "saver",
                    "type": "Variable",
                    "possible_values": []
                },
                "var_list": {
                    "value": "network.get_vars()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_checkpoint_state_87": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "checkpoint_dir": {
                    "value": "CHECKPOINT_DIR",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "scalar_79": {
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "loss_input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "trainable_variables_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConfigProto_72": {
                "log_device_placement": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "allow_soft_placement": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "mapping_localization/model.py": {
        "tensorflow": {
            "Variable_32": {
                "variable": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(weight_shape, minval=-d, maxval=d)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_33": {
                "variable": {
                    "value": "bias",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(bias_shape, minval=-d, maxval=d)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_43": {
                "variable": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(weight_shape, minval=-d, maxval=d)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_44": {
                "variable": {
                    "value": "bias",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(bias_shape, minval=-d, maxval=d)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pad_180": {
                "variable": {
                    "value": "first_elem_padded",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "first_elem",
                    "type": "Variable",
                    "possible_values": []
                },
                "paddings": {
                    "value": "tf.constant([[0, 0], [0, 0], [0, 0], [0, second_dim - first_dim]])",
                    "type": "Call",
                    "possible_values": []
                },
                "mode": {
                    "value": "CONSTANT",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_21": {
                "variable": {
                    "value": "self.locpred_gt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, 48 * 48]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_23": {
                "variable": {
                    "value": "self.locpred_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.nn.sigmoid_cross_entropy_with_logits(labels=self.locpred_gt, logits=self.multigrid_output2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_48": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "filters": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, stride, stride, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "trainable_variables_62": {
                "variable": {
                    "value": "variables_before",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_63": {
                "variable": {
                    "value": "self.ma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, map_size, map_size, 4]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_64": {
                "variable": {
                    "value": "self.ma2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, map_size, map_size, 4]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_65": {
                "variable": {
                    "value": "self.step_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_171": {
                "variable": {
                    "value": "self.multigrid_output2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "output_grids14_2[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, 48 * 48]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "sigmoid_172": {
                "variable": {
                    "value": "self.locpred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.multigrid_output2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_215": {
                "variable": {
                    "value": "output_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "self._conv2d(concat_grid, W_conv1_m, 1) + b_conv1_m",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_253": {
                "variable": {
                    "value": "output_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "self._conv2d(concat_grid, W_conv1_m, 1) + b_conv1_m",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_322": {
                "variable": {
                    "value": "concat_grid_reshaped",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "prev_up",
                            "Name"
                        ],
                        [
                            "prev_grids[i]",
                            "Subscript"
                        ],
                        [
                            "tf.concat([concat_grid, prev_grids[i]], 3)",
                            "Call"
                        ],
                        [
                            "prev_down",
                            "Name"
                        ],
                        [
                            "tf.concat([concat_grid, prev_down], 3)",
                            "Call"
                        ],
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "prev_up",
                            "Name"
                        ],
                        [
                            "prev_grids[j]",
                            "Subscript"
                        ],
                        [
                            "tf.concat([concat_grid, prev_grids[j]], 3)",
                            "Call"
                        ],
                        [
                            "prev_down",
                            "Name"
                        ],
                        [
                            "tf.concat([concat_grid, prev_down], 3)",
                            "Call"
                        ],
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "prev_up",
                            "Name"
                        ],
                        [
                            "prev_grids[j]",
                            "Subscript"
                        ],
                        [
                            "tf.concat([concat_grid, prev_grids[j]], 3)",
                            "Call"
                        ],
                        [
                            "prev_down",
                            "Name"
                        ],
                        [
                            "tf.concat([concat_grid, prev_down], 3)",
                            "Call"
                        ],
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "prev_up",
                            "Name"
                        ],
                        [
                            "prev_grids[i]",
                            "Subscript"
                        ],
                        [
                            "tf.concat([concat_grid, prev_grids[i]], 3)",
                            "Call"
                        ],
                        [
                            "prev_down",
                            "Name"
                        ],
                        [
                            "tf.concat([concat_grid, prev_down], 3)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], concat_grid.shape[3]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_324": {
                "variable": {
                    "value": "initial_lstm_state0",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_325": {
                "variable": {
                    "value": "initial_lstm_state1",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "LSTMStateTuple_326": {
                "variable": {
                    "value": "initial_lstm_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "c": {
                    "value": "initial_lstm_state0",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, [BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan])",
                            "Call"
                        ]
                    ]
                },
                "h": {
                    "value": "initial_lstm_state1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, [BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan])",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_337": {
                "variable": {
                    "value": "lstm_outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "lstm_outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(lstm_outputs, [-1, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan])",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "trainable_variables_356": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_19": {
                "device_name": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_61": {
                "device_name": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_61": {
                "name_or_scope": {
                    "value": "scope_name",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'net_' + str(self._thread_index)",
                            "BinOp"
                        ],
                        [
                            "'lstm_' + str(lay_ind) + '_' + str(i)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "concat_120": {
                "variable": {
                    "value": "output_grids1_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids1_2[scale_ind], self.output_grids1[scale_ind]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_124": {
                "variable": {
                    "value": "output_grids2_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids2_2[scale_ind], self.output_grids2[scale_ind]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_130": {
                "variable": {
                    "value": "output_grids3_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids3_2[scale_ind], self.output_grids3[scale_ind]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_134": {
                "variable": {
                    "value": "output_grids4_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids4_2[scale_ind], self.output_grids4[scale_ind]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_141": {
                "variable": {
                    "value": "output_grids5_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids5_2[scale_ind], self.output_grids5[scale_ind]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_145": {
                "variable": {
                    "value": "output_grids6_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids6_2[scale_ind], self.output_grids6[scale_ind]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_149": {
                "variable": {
                    "value": "output_grids7_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids7_2[scale_ind], self.output_grids7[scale_ind]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "constant_180": {
                "value": {
                    "value": "[[0, 0], [0, 0], [0, 0], [0, second_dim - first_dim]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "max_pooling2d_207": {
                "variable": {
                    "value": "prev_down",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "prev_grids[i + 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "pool_size": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pooling2d_245": {
                "variable": {
                    "value": "prev_down",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "prev_grids[j + 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "pool_size": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pooling2d_283": {
                "variable": {
                    "value": "prev_down",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "prev_grids[j + 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "pool_size": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pooling2d_317": {
                "variable": {
                    "value": "prev_down",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "prev_grids[i + 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "pool_size": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "dynamic_rnn_331": {
                "variable": {
                    "value": "(lstm_outputs, lstm_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cell": {
                    "value": "lstm",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.contrib.rnn.Conv2DLSTMCell(input_shape=[concat_grid.shape[1], concat_grid.shape[2], concat_grid.shape[3]], kernel_shape=[3, 3], output_channels=output_feature_chan)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "concat_grid_reshaped",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(concat_grid, [-1, BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], concat_grid.shape[3]])",
                            "Call"
                        ]
                    ]
                },
                "initial_state": {
                    "value": "initial_lstm_state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.contrib.rnn.LSTMStateTuple(initial_lstm_state0, initial_lstm_state1)",
                            "Call"
                        ]
                    ]
                },
                "sequence_length": {
                    "value": "tf.fill([BATCH_SIZE], self.step_size[0])",
                    "type": "Call",
                    "possible_values": []
                },
                "time_major": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sigmoid_cross_entropy_with_logits_23": {
                "labels": {
                    "value": "self.locpred_gt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.multigrid_output2",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_204": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_grids[i]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_212": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_down]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_242": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_grids[j]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_250": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_down]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_280": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_grids[j]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_288": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_down]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_315": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_grids[i]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_321": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_down]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "variable_scope_330": {
                "name_or_scope": {
                    "value": "scope_name",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'net_' + str(self._thread_index)",
                            "BinOp"
                        ],
                        [
                            "'lstm_' + str(lay_ind) + '_' + str(i)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "LSTMStateTuple_350": {
                "c": {
                    "value": "np.zeros([BATCH_SIZE, cur_dim[0], cur_dim[1], cur_dim[2]])",
                    "type": "Call",
                    "possible_values": []
                },
                "h": {
                    "value": "np.zeros([BATCH_SIZE, cur_dim[0], cur_dim[1], cur_dim[2]])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "fill_334": {
                "dims": {
                    "value": "[BATCH_SIZE]",
                    "type": "List",
                    "possible_values": []
                },
                "value": {
                    "value": "self.step_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "trainable_variables_175": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "mapping_localization/rmsprop_applier.py": {
        "tensorflow": {
            "convert_to_tensor_42": {
                "variable": {
                    "value": "self._learning_rate_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "learning_rate",
                    "type": "str",
                    "possible_values": []
                }
            },
            "convert_to_tensor_44": {
                "variable": {
                    "value": "self._decay_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "decay",
                    "type": "str",
                    "possible_values": []
                }
            },
            "convert_to_tensor_45": {
                "variable": {
                    "value": "self._momentum_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "momentum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "convert_to_tensor_47": {
                "variable": {
                    "value": "self._epsilon_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._epsilon",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "epsilon",
                    "type": "str",
                    "possible_values": []
                }
            },
            "constant_37": {
                "variable": {
                    "value": "val",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "v.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "v.get_shape()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_95": {
                "device_name": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "control_dependencies_96": {
                "control_inputs": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "name_scope_99": {
                "name": {
                    "value": "name",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'RMSPropApplier'",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "group_105": {
                "*inputs": {
                    "value": "*update_ops",
                    "type": "Starred",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'RMSPropApplier'",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "name_scope_102": {
                "name": {
                    "value": "'update_' + var.op.name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "device_102": {
                "device_name": {
                    "value": "var.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "mapping_localization/training_thread.py": {
        "tensorflow": {
            "clip_by_global_norm_60": {
                "variable": {
                    "value": "(clipped_gradients, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "t_list": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "GRAD_NORM_CLIP",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "gradients_55": {
                "variable": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ys": {
                    "value": "network.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "var_refs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[v._ref() for v in network.get_vars()]",
                            "ListComp"
                        ]
                    ]
                },
                "gate_gradients": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "aggregation_method": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "colocate_gradients_with_ops": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "device_53": {
                "device_name": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "mnist_recall/main.py": {
        "tensorflow": {
            "placeholder_41": {
                "variable": {
                    "value": "learning_rate_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Session_52": {
                "variable": {
                    "value": "sess",
                    "type": "Variable",
                    "possible_values": []
                },
                "config": {
                    "value": "tf.ConfigProto(log_device_placement=False, allow_soft_placement=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "global_variables_initializer_55": {
                "variable": {
                    "value": "init",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_59": {
                "variable": {
                    "value": "loss_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "merge_all_61": {
                "variable": {
                    "value": "summary_op",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FileWriter_62": {
                "variable": {
                    "value": "summary_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "LOG_FILE",
                    "type": "Variable",
                    "possible_values": []
                },
                "graph": {
                    "value": "sess.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Saver_68": {
                "variable": {
                    "value": "saver",
                    "type": "Variable",
                    "possible_values": []
                },
                "var_list": {
                    "value": "network.get_vars()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_checkpoint_state_69": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "checkpoint_dir": {
                    "value": "CHECKPOINT_DIR",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "scalar_60": {
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "loss_input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "ConfigProto_52": {
                "log_device_placement": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "allow_soft_placement": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "mnist_recall/model.py": {
        "tensorflow": {
            "Variable_30": {
                "variable": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(weight_shape, minval=-d, maxval=d)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_31": {
                "variable": {
                    "value": "bias",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(bias_shape, minval=-d, maxval=d)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_41": {
                "variable": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(weight_shape, minval=-d, maxval=d)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Variable_42": {
                "variable": {
                    "value": "bias",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(bias_shape, minval=-d, maxval=d)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "pad_161": {
                "variable": {
                    "value": "first_elem_padded",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "first_elem",
                    "type": "Variable",
                    "possible_values": []
                },
                "paddings": {
                    "value": "tf.constant([[0, 0], [0, 0], [0, 0], [0, second_dim - first_dim]])",
                    "type": "Call",
                    "possible_values": []
                },
                "mode": {
                    "value": "CONSTANT",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_19": {
                "variable": {
                    "value": "self.gt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "int32",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_sum_20": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.nn.sparse_softmax_cross_entropy_with_logits(labels=self.gt, logits=self.output)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_46": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "filters": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, stride, stride, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "SAME",
                    "type": "str",
                    "possible_values": []
                }
            },
            "trainable_variables_59": {
                "variable": {
                    "value": "variables_before",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_61": {
                "variable": {
                    "value": "self.input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, input_size, input_size, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_62": {
                "variable": {
                    "value": "self.input2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, input_size, input_size, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_63": {
                "variable": {
                    "value": "self.step_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_150": {
                "variable": {
                    "value": "output_grids14_2_flat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "output_grids14_2[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, flattened_len]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_152": {
                "variable": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "output_grids14_2_last",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.matmul(output_grids14_2_flat, self.W_fc_last) + self.b_fc_last",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, 10]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "softmax_153": {
                "variable": {
                    "value": "self.prediction",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_196": {
                "variable": {
                    "value": "output_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "self._conv2d(concat_grid, W_conv1_m, 1) + b_conv1_m",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_234": {
                "variable": {
                    "value": "concat_grid_reshaped",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "prev_up",
                            "Name"
                        ],
                        [
                            "prev_grids[i]",
                            "Subscript"
                        ],
                        [
                            "tf.concat([concat_grid, prev_grids[i]], 3)",
                            "Call"
                        ],
                        [
                            "prev_down",
                            "Name"
                        ],
                        [
                            "tf.concat([concat_grid, prev_down], 3)",
                            "Call"
                        ],
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "prev_up",
                            "Name"
                        ],
                        [
                            "prev_grids[iprev]",
                            "Subscript"
                        ],
                        [
                            "tf.concat([concat_grid, prev_grids[iprev]], 3)",
                            "Call"
                        ],
                        [
                            "prev_down",
                            "Name"
                        ],
                        [
                            "tf.concat([concat_grid, prev_down], 3)",
                            "Call"
                        ],
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "prev_up",
                            "Name"
                        ],
                        [
                            "prev_grids[iprev]",
                            "Subscript"
                        ],
                        [
                            "tf.concat([concat_grid, prev_grids[iprev]], 3)",
                            "Call"
                        ],
                        [
                            "prev_down",
                            "Name"
                        ],
                        [
                            "tf.concat([concat_grid, prev_down], 3)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], concat_grid.shape[3]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_236": {
                "variable": {
                    "value": "initial_lstm_state0",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_237": {
                "variable": {
                    "value": "initial_lstm_state1",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "LSTMStateTuple_238": {
                "variable": {
                    "value": "initial_lstm_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "c": {
                    "value": "initial_lstm_state0",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, [BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan])",
                            "Call"
                        ]
                    ]
                },
                "h": {
                    "value": "initial_lstm_state1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, [BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan])",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_292": {
                "variable": {
                    "value": "output_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "self._conv2d(concat_grid, W_conv1_m, 1) + b_conv1_m",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "trainable_variables_313": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_18": {
                "device_name": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_58": {
                "device_name": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_58": {
                "name_or_scope": {
                    "value": "scope_name",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'net_' + str(self._thread_index)",
                            "BinOp"
                        ],
                        [
                            "'conv_' + str(lay_ind) + '_' + str(i)",
                            "BinOp"
                        ],
                        [
                            "'lstm_' + str(lay_ind) + '_' + str(i)",
                            "BinOp"
                        ],
                        [
                            "'conv_' + str(lay_ind) + '_' + str(i)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "concat_112": {
                "variable": {
                    "value": "output_grids1_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids1_2[scale_ind], self.output_grids1[scale_ind][-BATCH_SIZE:, :, :, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_116": {
                "variable": {
                    "value": "output_grids2_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids2_2[scale_ind], self.output_grids2[scale_ind][-BATCH_SIZE:, :, :, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_124": {
                "variable": {
                    "value": "output_grids3_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids3_2[scale_ind], self.output_grids3[scale_ind][-BATCH_SIZE:, :, :, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_128": {
                "variable": {
                    "value": "output_grids4_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids4_2[scale_ind], self.output_grids4[scale_ind][-BATCH_SIZE:, :, :, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_136": {
                "variable": {
                    "value": "output_grids5_2[scale_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "values": {
                    "value": "[output_grids5_2[scale_ind], self.output_grids5[scale_ind][-BATCH_SIZE:, :, :, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "constant_161": {
                "value": {
                    "value": "[[0, 0], [0, 0], [0, 0], [0, second_dim - first_dim]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "max_pooling2d_188": {
                "variable": {
                    "value": "prev_down",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "prev_grids[i + 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "pool_size": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pooling2d_229": {
                "variable": {
                    "value": "prev_down",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "prev_grids[iprev + 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "pool_size": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "dynamic_rnn_243": {
                "variable": {
                    "value": "(lstm_outputs, lstm_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cell": {
                    "value": "lstm",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.contrib.rnn.Conv2DLSTMCell(input_shape=[concat_grid.shape[1], concat_grid.shape[2], concat_grid.shape[3]], kernel_shape=[3, 3], output_channels=output_feature_chan)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "concat_grid_reshaped",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(concat_grid, [-1, BATCH_SIZE, concat_grid.shape[1], concat_grid.shape[2], concat_grid.shape[3]])",
                            "Call"
                        ]
                    ]
                },
                "initial_state": {
                    "value": "initial_lstm_state",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.contrib.rnn.LSTMStateTuple(initial_lstm_state0, initial_lstm_state1)",
                            "Call"
                        ]
                    ]
                },
                "sequence_length": {
                    "value": "tf.fill([BATCH_SIZE], self.step_size[0])",
                    "type": "Call",
                    "possible_values": []
                },
                "time_major": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "scope": {
                    "value": "scope",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "reshape_249": {
                "variable": {
                    "value": "lstm_outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "lstm_outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(lstm_outputs, [-1, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan])",
                            "Call"
                        ],
                        [
                            "tf.contrib.layers.batch_norm(lstm_outputs, center=True, scale=True, scope=scope_name)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, concat_grid.shape[1], concat_grid.shape[2], output_feature_chan]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "max_pooling2d_284": {
                "variable": {
                    "value": "prev_down",
                    "type": "Variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "prev_grids[iprev + 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "pool_size": {
                    "value": "[2, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sparse_softmax_cross_entropy_with_logits_20": {
                "labels": {
                    "value": "self.gt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_151": {
                "a": {
                    "value": "output_grids14_2_flat",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.reshape(output_grids14_2[0], [-1, flattened_len])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "self.W_fc_last",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_185": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_grids[i]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_193": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_down]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_227": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_grids[iprev]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_233": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_down]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "variable_scope_242": {
                "name_or_scope": {
                    "value": "scope_name",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'net_' + str(self._thread_index)",
                            "BinOp"
                        ],
                        [
                            "'conv_' + str(lay_ind) + '_' + str(i)",
                            "BinOp"
                        ],
                        [
                            "'lstm_' + str(lay_ind) + '_' + str(i)",
                            "BinOp"
                        ],
                        [
                            "'conv_' + str(lay_ind) + '_' + str(i)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "concat_281": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_grids[iprev]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_289": {
                "variable": {
                    "value": "concat_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[concat_grid, prev_down]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LSTMStateTuple_307": {
                "c": {
                    "value": "np.zeros([BATCH_SIZE, cur_dim[0], cur_dim[1], cur_dim[2]])",
                    "type": "Call",
                    "possible_values": []
                },
                "h": {
                    "value": "np.zeros([BATCH_SIZE, cur_dim[0], cur_dim[1], cur_dim[2]])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "fill_246": {
                "dims": {
                    "value": "[BATCH_SIZE]",
                    "type": "List",
                    "possible_values": []
                },
                "value": {
                    "value": "self.step_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "trainable_variables_156": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "mnist_recall/rmsprop_applier.py": {
        "tensorflow": {
            "convert_to_tensor_40": {
                "variable": {
                    "value": "self._learning_rate_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "learning_rate",
                    "type": "str",
                    "possible_values": []
                }
            },
            "convert_to_tensor_42": {
                "variable": {
                    "value": "self._decay_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._decay",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "decay",
                    "type": "str",
                    "possible_values": []
                }
            },
            "convert_to_tensor_43": {
                "variable": {
                    "value": "self._momentum_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "momentum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "convert_to_tensor_45": {
                "variable": {
                    "value": "self._epsilon_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "self._epsilon",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "epsilon",
                    "type": "str",
                    "possible_values": []
                }
            },
            "constant_35": {
                "variable": {
                    "value": "val",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "v.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "v.get_shape()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_88": {
                "device_name": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "control_dependencies_89": {
                "control_inputs": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "name_scope_92": {
                "name": {
                    "value": "name",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'RMSPropApplier'",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "group_97": {
                "*inputs": {
                    "value": "*update_ops",
                    "type": "Starred",
                    "possible_values": []
                },
                "name": {
                    "value": "name",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'RMSPropApplier'",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "name_scope_95": {
                "name": {
                    "value": "'update_' + var.op.name",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "device_95": {
                "device_name": {
                    "value": "var.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "mnist_recall/training_thread.py": {
        "tensorflow": {
            "gradients_48": {
                "variable": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ys": {
                    "value": "network.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "var_refs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[v._ref() for v in network.get_vars()]",
                            "ListComp"
                        ]
                    ]
                },
                "gate_gradients": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "aggregation_method": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "colocate_gradients_with_ops": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "clip_by_global_norm_54": {
                "variable": {
                    "value": "(clipped_gradients, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "t_list": {
                    "value": "self.gradients",
                    "type": "Attribute",
                    "possible_values": []
                },
                "clip_norm": {
                    "value": "GRAD_NORM_CLIP",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "device_46": {
                "device_name": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}