{
    "rl/memory/experience_replay.py": {
        "torch": {
            "device_18": {
                "type": {
                    "value": "cpu",
                    "possible_values": []
                }
            },
            "device_26": {
                "type": {
                    "value": "cpu",
                    "possible_values": []
                }
            },
            "from_numpy_20": {
                "ndarray": {
                    "value": "S",
                    "possible_values": [
                        [
                            "Variable(th.from_numpy(S).float()).to(device)",
                            "Call"
                        ],
                        [
                            "Variable(th.from_numpy(np.asarray(s)).float()).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_21": {
                "ndarray": {
                    "value": "A",
                    "possible_values": [
                        [
                            "Variable(th.from_numpy(A).float()).to(device)",
                            "Call"
                        ],
                        [
                            "Variable(th.from_numpy(np.asarray(a)).float()).view(1).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_22": {
                "ndarray": {
                    "value": "R",
                    "possible_values": [
                        [
                            "Variable(th.from_numpy(R).float()).to(device)",
                            "Call"
                        ],
                        [
                            "Variable(th.from_numpy(np.asarray(r)).float()).view(1).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_23": {
                "ndarray": {
                    "value": "S_",
                    "possible_values": [
                        [
                            "Variable(th.from_numpy(S_).float()).to(device)",
                            "Call"
                        ],
                        [
                            "Variable(th.from_numpy(np.asarray(s_)).float()).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_24": {
                "ndarray": {
                    "value": "T",
                    "possible_values": [
                        [
                            "Variable(th.from_numpy(T).float()).to(device)",
                            "Call"
                        ],
                        [
                            "Variable(th.from_numpy(np.asarray(t)).float()).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_28": {
                "ndarray": {
                    "value": "np.asarray(s)",
                    "possible_values": []
                }
            },
            "from_numpy_31": {
                "ndarray": {
                    "value": "np.asarray(s_)",
                    "possible_values": []
                }
            },
            "from_numpy_32": {
                "ndarray": {
                    "value": "np.asarray(t)",
                    "possible_values": []
                }
            },
            "from_numpy_29": {
                "ndarray": {
                    "value": "np.asarray(a)",
                    "possible_values": []
                }
            },
            "from_numpy_30": {
                "ndarray": {
                    "value": "np.asarray(r)",
                    "possible_values": []
                }
            }
        }
    },
    "rl/util.py": {
        "torch": {
            "cat_17": {
                "variable": {
                    "value": "values",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(values, vprime)",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "zeros_26": {
                "variable": {
                    "value": "mask",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, action_space)",
                    "possible_values": []
                }
            }
        }
    }
}