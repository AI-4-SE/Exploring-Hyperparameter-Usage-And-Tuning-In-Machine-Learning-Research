{
    "exercise_2/exercise_code/evaluate_regression_model.py": {
        "sklearn": {
            "MinMaxScaler_11": {
                "variable": {
                    "value": "prepro_y_test",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mean_squared_error_40": {
                "y_true": {
                    "value": "y_test_preprocessed",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "preprocess_y(y_raw)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "fc_net.loss(X_test)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "exercise_3/exercise_code/classifiers/classification_cnn.py": {
        "torch": {
            "save_93": {
                "obj": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "exercise_3/exercise_code/classifiers/keypoint_nn.py": {
        "torch": {
            "Conv2d_28": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(4, 4)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_31": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_34": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_37": {
                "variable": {
                    "value": "self.dropout1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.1",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_38": {
                "variable": {
                    "value": "self.dropout2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_39": {
                "variable": {
                    "value": "self.dropout3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.3",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_40": {
                "variable": {
                    "value": "self.dropout4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.4",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_41": {
                "variable": {
                    "value": "self.dropout5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_42": {
                "variable": {
                    "value": "self.dropout6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.6",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_45": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "6400",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_46": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1000",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_47": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "30",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_79": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_82": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_100": {
                "obj": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "elu_63": {
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_66": {
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_69": {
                "input": {
                    "value": "self.conv3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_72": {
                "input": {
                    "value": "self.conv4(x)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "exercise_3/exercise_code/data_utils.py": {
        "torch": {
            "from_numpy_103": {
                "variable": {
                    "value": "target_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "target_labels.copy()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_133": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "Image.open(os.path.join(self.root_dir_name, 'images', img_id + '.bmp')).convert('RGB')",
                            "Call"
                        ],
                        [
                            "center_crop(img)",
                            "Call"
                        ],
                        [
                            "to_tensor(img)",
                            "Call"
                        ],
                        [
                            "self.X[index]",
                            "Subscript"
                        ],
                        [
                            "torch.from_numpy(img)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "exercise_3/exercise_code/dataloader.py": {
        "torch": {}
    },
    "exercise_3/exercise_code/rnn/rnn_nn.py": {
        "torch": {
            "Linear_26": {
                "variable": {
                    "value": "self.lin_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_27": {
                "variable": {
                    "value": "self.lin_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "stack_85": {
                "variable": {
                    "value": "h_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "h_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(h_seq)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(h_seq)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_105": {
                "variable": {
                    "value": "self.lin_f_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_106": {
                "variable": {
                    "value": "self.lin_f_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_108": {
                "variable": {
                    "value": "self.lin_i_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_109": {
                "variable": {
                    "value": "self.lin_i_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_111": {
                "variable": {
                    "value": "self.lin_o_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_112": {
                "variable": {
                    "value": "self.lin_o_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_114": {
                "variable": {
                    "value": "self.lin_c_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ],
                        [
                            "28",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_115": {
                "variable": {
                    "value": "self.lin_c_h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sigmoid_168": {
                "variable": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f_x[0] + f_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_169": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "i_x[0] + i_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_170": {
                "variable": {
                    "value": "o",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "o_x[0] + o_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_196": {
                "variable": {
                    "value": "h_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "h_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(h_seq)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(h_seq)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_197": {
                "variable": {
                    "value": "c_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "c_seq",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(c_seq)",
                            "Call"
                        ]
                    ]
                }
            },
            "RNN_211": {
                "variable": {
                    "value": "self.RNN",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "nonlinearity": {
                    "value": "activation",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "torch.tanh",
                            "Attribute"
                        ],
                        [
                            "torch.relu",
                            "Attribute"
                        ],
                        [
                            "'tanh'",
                            "MethodArgument"
                        ],
                        [
                            "'relu'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_212": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "classes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LSTM_243": {
                "variable": {
                    "value": "self.LSTM",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "num_layers",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_244": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "self.hidden_size",
                            "Attribute"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "20",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "classes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ],
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "zeros_57": {
                "variable": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, batch_size, hidden_size)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_147": {
                "variable": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, batch_size, hidden_size)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_150": {
                "variable": {
                    "value": "c",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, batch_size, hidden_size)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sigmoid_179": {
                "variable": {
                    "value": "f_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f_x[t] + f_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_182": {
                "variable": {
                    "value": "i_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "i_x[t] + i_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_185": {
                "variable": {
                    "value": "o_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "o_x[t] + o_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_234": {
                "obj": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "save_266": {
                "obj": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "tanh_175": {
                "input": {
                    "value": "c_seq[-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tanh_174": {
                "input": {
                    "value": "c_x[0] + c_h[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_189": {
                "input": {
                    "value": "c_seq[-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tanh_188": {
                "input": {
                    "value": "c_x[t] + c_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "exercise_3/exercise_code/rnn/solver.py": {
        "torch": {
            "device_51": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_82": {
                "variable": {
                    "value": "(_, preds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "model(inputs.squeeze(1).permute(1, 0, 2).float())",
                            "Call"
                        ],
                        [
                            "model.forward(inputs.squeeze(1).permute(1, 0, 2).float())",
                            "Call"
                        ]
                    ]
                }
            },
            "max_104": {
                "variable": {
                    "value": "(_, preds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "model(inputs.squeeze(1).permute(1, 0, 2).float())",
                            "Call"
                        ],
                        [
                            "model.forward(inputs.squeeze(1).permute(1, 0, 2).float())",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_51": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "exercise_3/exercise_code/segmentation_nn.py": {
        "torch": {
            "Sequential_21": {
                "variable": {
                    "value": "self.base.aux_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*aux_classifier[:-1]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.base.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*classifier[:-1]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "save_65": {
                "obj": {
                    "value": "self",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "23",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "23",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "exercise_3/exercise_code/solver.py": {
        "torch": {
            "device_96": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_grad_enabled_42": {
                "mode": {
                    "value": "training",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "max_72": {
                "variable": {
                    "value": "(maxs, predict)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "model(batch)",
                            "Call"
                        ]
                    ]
                }
            },
            "max_65": {
                "variable": {
                    "value": "(maxs, predict)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "model(batch)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "exercise_3/exercise_code/transforms.py": {
        "torch": {
            "from_numpy_36": {
                "ndarray": {
                    "value": "image",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "image / 255",
                            "BinOp"
                        ]
                    ]
                }
            },
            "from_numpy_37": {
                "ndarray": {
                    "value": "key_pts",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "key_pts / 48",
                            "BinOp"
                        ],
                        [
                            "key_pts - 1",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    }
}