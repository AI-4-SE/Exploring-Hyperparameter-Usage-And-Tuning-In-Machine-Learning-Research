{
    "marching_cube/model/cffi/build.py": {
        "torch": {}
    },
    "marching_cube/model/cffi/build_cuda.py": {
        "torch": {
            "is_available_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "marching_cube/model/cffi/functions/grid_pooling.py": {
        "torch": {
            "is_available_5": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_21": {
                "variable": {
                    "value": "feat_cells",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "W * H * D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "feat_points.size()[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_25": {
                "variable": {
                    "value": "feat_cells",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "W * H * D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "feat_points.size()[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_39": {
                "variable": {
                    "value": "grad_points",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.N",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.C",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_42": {
                "variable": {
                    "value": "grad_points",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.N",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.C",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_22": {
                "*size": {
                    "value": "W * H * D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "feat_points.size()[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "ones_26": {
                "*size": {
                    "value": "W * H * D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "feat_points.size()[1]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "marching_cube/model/cffi/functions/occupancy_to_topology.py": {
        "torch": {
            "is_available_5": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_23": {
                "variable": {
                    "value": "topology",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "W * H * D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "T",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "int"
                        ]
                    ]
                }
            },
            "zeros_26": {
                "variable": {
                    "value": "topology",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "W * H * D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "T",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "int"
                        ]
                    ]
                }
            },
            "zeros_36": {
                "variable": {
                    "value": "grad_occupancy",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.occupancy.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_39": {
                "variable": {
                    "value": "grad_occupancy",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.occupancy.size()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "marching_cube/model/cffi/functions/point_triangle_distance.py": {
        "torch": {
            "is_available_5": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_28": {
                "variable": {
                    "value": "distances_full",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(W - 1) * (H - 1) * (D - 1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "T",
                    "type": "variable",
                    "possible_values": [
                        [
                            "48",
                            "int"
                        ]
                    ]
                }
            },
            "zeros_33": {
                "variable": {
                    "value": "distances_full",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(W - 1) * (H - 1) * (D - 1)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "T",
                    "type": "variable",
                    "possible_values": [
                        [
                            "48",
                            "int"
                        ]
                    ]
                }
            },
            "zeros_45": {
                "variable": {
                    "value": "grad_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "offset.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_49": {
                "variable": {
                    "value": "grad_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "offset.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_29": {
                "*size": {
                    "value": "points.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "T",
                    "type": "variable",
                    "possible_values": [
                        [
                            "48",
                            "int"
                        ]
                    ]
                }
            },
            "ones_34": {
                "*size": {
                    "value": "points.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "T",
                    "type": "variable",
                    "possible_values": [
                        [
                            "48",
                            "int"
                        ]
                    ]
                }
            }
        }
    },
    "marching_cube/model/cffi/functions/smooth_constraint.py": {
        "torch": {
            "is_available_6": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_22": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_33": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_49": {
                "variable": {
                    "value": "grad_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "offset.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_61": {
                "variable": {
                    "value": "grad_topology",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "topology.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_63": {
                "variable": {
                    "value": "grad_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "offset.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_75": {
                "variable": {
                    "value": "grad_topology",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "topology.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_89": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_92": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_100": {
                "variable": {
                    "value": "grad_occupancy",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.occ.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_106": {
                "variable": {
                    "value": "grad_occupancy",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.occ.size()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "marching_cube/model/cffi/modules/point_triangle_distance.py": {
        "torch": {}
    },
    "marching_cube/model/cffi/modules/smooth_constraint.py": {
        "torch": {}
    },
    "marching_cube/model/dmc.py": {
        "torch": {
            "is_available_11": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "transpose_29": {
                "variable": {
                    "value": "feat_cell",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feat_cell",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Variable(torch.zeros(batchsize, W * H * D, C).type(dtype))",
                            "Call"
                        ],
                        [
                            "torch.transpose(feat_cell, 1, 2).contiguous().view(-1, C, W, H, D)",
                            "Call"
                        ]
                    ]
                },
                "dim0": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dim1": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1d_47": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1d_48": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_51": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_62": {
                "variable": {
                    "value": "self.conv1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_63": {
                "variable": {
                    "value": "self.conv1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_64": {
                "variable": {
                    "value": "self.conv2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_65": {
                "variable": {
                    "value": "self.conv2_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_66": {
                "variable": {
                    "value": "self.conv3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_67": {
                "variable": {
                    "value": "self.conv3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv3d_68": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_71": {
                "variable": {
                    "value": "self.conv1_1_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_72": {
                "variable": {
                    "value": "self.conv1_2_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_73": {
                "variable": {
                    "value": "self.conv2_1_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_74": {
                "variable": {
                    "value": "self.conv2_2_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_75": {
                "variable": {
                    "value": "self.conv3_1_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_76": {
                "variable": {
                    "value": "self.conv3_2_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_77": {
                "variable": {
                    "value": "self.conv4_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool3d_79": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "return_indices": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_85": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_1_bn(self.conv1_1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_86": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv1_2_bn(self.conv1_2(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_92": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_1_bn(self.conv2_1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_93": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv2_2_bn(self.conv2_2(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_99": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_1_bn(self.conv3_1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_100": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv3_2_bn(self.conv3_2(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_106": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv4_bn(self.conv4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_123": {
                "variable": {
                    "value": "self.deconv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_124": {
                "variable": {
                    "value": "self.deconv3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_125": {
                "variable": {
                    "value": "self.deconv3_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_126": {
                "variable": {
                    "value": "self.deconv2_off_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_127": {
                "variable": {
                    "value": "self.deconv2_off_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_128": {
                "variable": {
                    "value": "self.deconv2_occ_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_129": {
                "variable": {
                    "value": "self.deconv2_occ_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_130": {
                "variable": {
                    "value": "self.deconv1_off_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_131": {
                "variable": {
                    "value": "self.deconv1_off_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_132": {
                "variable": {
                    "value": "self.deconv1_occ_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose3d_133": {
                "variable": {
                    "value": "self.deconv1_occ_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_136": {
                "variable": {
                    "value": "self.deconv4_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_137": {
                "variable": {
                    "value": "self.deconv3_1_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_138": {
                "variable": {
                    "value": "self.deconv3_2_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_139": {
                "variable": {
                    "value": "self.deconv2_off_1_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_140": {
                "variable": {
                    "value": "self.deconv2_off_2_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_141": {
                "variable": {
                    "value": "self.deconv2_occ_1_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_142": {
                "variable": {
                    "value": "self.deconv2_occ_2_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_143": {
                "variable": {
                    "value": "self.deconv1_off_1_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm3d_144": {
                "variable": {
                    "value": "self.deconv1_occ_1_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_146": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxUnpool3d_148": {
                "variable": {
                    "value": "self.maxunpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_158": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.deconv4_bn(self.deconv4(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_164": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.deconv3_1_bn(self.deconv3_1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_165": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.deconv3_2_bn(self.deconv3_2(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_171": {
                "variable": {
                    "value": "x_occupancy",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.deconv2_occ_1_bn(self.deconv2_occ_1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_172": {
                "variable": {
                    "value": "x_occupancy",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.deconv2_occ_2_bn(self.deconv2_occ_2(x_occupancy))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_173": {
                "variable": {
                    "value": "x_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.deconv2_off_1_bn(self.deconv2_off_1(x))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_174": {
                "variable": {
                    "value": "x_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.deconv2_off_2_bn(self.deconv2_off_2(x_offset))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_183": {
                "variable": {
                    "value": "x_occupancy",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.deconv1_occ_1_bn(self.deconv1_occ_1(x_occupancy))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_185": {
                "variable": {
                    "value": "x_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.deconv1_off_1_bn(self.deconv1_off_1(x_offset))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_24": {
                "*size": {
                    "value": "batchsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "feat.size()[0]",
                            "Subscript"
                        ],
                        [
                            "occupancy.size()[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "W * H * D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "feat.size()[2]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_35": {
                "*size": {
                    "value": "curr_size[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "curr_size[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "curr_size[2] + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "layout": {
                    "value": "curr_size[3] + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "curr_size[4] + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_163": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(feat3, x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_170": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(feat2, x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_179": {
                "variable": {
                    "value": "x_occupancy",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(feat1, x_occupancy)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_182": {
                "variable": {
                    "value": "x_offset",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(feat1, x_offset)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_231": {
                "*size": {
                    "value": "batchsize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "feat.size()[0]",
                            "Subscript"
                        ],
                        [
                            "occupancy.size()[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "self.W * self.H * self.D",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "T",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "int"
                        ]
                    ]
                }
            }
        }
    },
    "marching_cube/model/loss.py": {
        "torch": {}
    },
    "marching_cube/model/loss_autograd.py": {
        "torch": {}
    },
    "marching_cube/model/table.py": {
        "torch": {}
    },
    "marching_cube/train.py": {
        "torch": {}
    },
    "marching_cube/utils/util.py": {
        "torch": {
            "cat_27": {
                "variable": {
                    "value": "distances",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "distances",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[dis_to_mesh(pts[0], pts_index, vectices, faces, x_, y_, z_) for faces in topologys]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(distances)",
                            "Call"
                        ]
                    ]
                }
            },
            "min_78": {
                "variable": {
                    "value": "(dis_all_faces, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.cat(dis_all_faces, dim=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_70": {
                "tensors": {
                    "value": "vertices[face[0]]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_80": {
                "input": {
                    "value": "dis_all_faces",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.min(torch.cat(dis_all_faces, dim=1), dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_183": {
                "tensors": {
                    "value": "normal",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "ones_54": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_78": {
                "tensors": {
                    "value": "dis_all_faces",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.min(torch.cat(dis_all_faces, dim=1), dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_125": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_70": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_71": {
                "tensors": {
                    "value": "vertices[face[1]]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "unsqueeze_71": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_72": {
                "tensors": {
                    "value": "vertices[face[2]]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "unsqueeze_72": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cross_182": {
                "input": {
                    "value": "torch.cat(p[b]) - torch.cat(p[a])",
                    "type": "BinOp",
                    "possible_values": []
                },
                "other": {
                    "value": "torch.cat(p[c]) - torch.cat(p[a])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_30": {
                "input": {
                    "value": "distances[0:-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "unsqueeze_75": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_176": {
                "*size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_182": {
                "tensors": {
                    "value": "p[a]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "marching_cube/utils/visualize.py": {
        "torch": {
            "max_13": {
                "variable": {
                    "value": "(_, topology_max)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "topology",
                    "type": "variable",
                    "possible_values": [
                        [
                            "topology",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "marching_cube/val.py": {
        "torch": {}
    }
}