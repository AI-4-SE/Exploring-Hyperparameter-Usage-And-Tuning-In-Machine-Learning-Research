{
    "torchsim/core/eval/metrics/mutual_information_metric.py": {
        "sklearn": {
            "normalized_mutual_info_score_63": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "labels_true": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data",
                            "variable"
                        ],
                        [
                            "id_to_one_hot(data, n_classes)",
                            "Call"
                        ]
                    ]
                }
            },
            "mutual_info_score_65": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "labels_true": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "labels_pred": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data",
                            "variable"
                        ],
                        [
                            "id_to_one_hot(data, n_classes)",
                            "Call"
                        ]
                    ]
                }
            },
            "normalized_mutual_info_score_110": {
                "variable": {
                    "value": "mutual_information_by_rf[phase, flock_i, flock_j, rf_y, rf_x]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "labels_true": {
                    "value": "ids_i",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_ids[phase, :, flock_i, rf_y, rf_x].cpu().numpy()",
                            "Call"
                        ]
                    ]
                },
                "labels_pred": {
                    "value": "ids_j",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_ids[phase, :, flock_j, rf_y, rf_x].cpu().numpy()",
                            "Call"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "zeros_83": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_a.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "vector_len",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_101": {
                "variable": {
                    "value": "mutual_information_by_rf",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_phases",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "n_flocks",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "n_flocks",
                    "type": "variable",
                    "possible_values": []
                },
                "layout": {
                    "value": "n_rfs_y",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "n_rfs_x",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/eval/metrics/simple_classifier_svm.py": {
        "sklearn": {
            "SVC_125": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0",
                            "float"
                        ],
                        [
                            "c",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'linear'",
                            "str"
                        ],
                        [
                            "kernel",
                            "Method Argument"
                        ]
                    ]
                },
                "gamma": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'auto'",
                            "str"
                        ],
                        [
                            "gamma",
                            "Method Argument"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "tensor_71": {
                "data": {
                    "value": "model.predict(inputs.cpu().numpy())",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "eval_utils.py": {
        "torch": {
            "empty_cache_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "kubench.py": {
        "torch": {
            "synchronize_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_device_57": {
                "device": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "set_grad_enabled_60": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "rand_24": {
                "*size": {
                    "value": "(block_size, 1024, 1024)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CUDA",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "synchronize_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main_expert_flock_profiling.py": {
        "torch": {
            "Stream_81": {
                "variable": {
                    "value": "copy_stream",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Stream_82": {
                "variable": {
                    "value": "compute_stream",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_102": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(total_iterations, flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CUDA",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "rand_274": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CUDA",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "rand_369": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "default_cuda_dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda:0'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CUDA",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "synchronize_117": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_279": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_290": {
                "variable": {
                    "value": "random_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CUDA",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "synchronize_312": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_374": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_385": {
                "variable": {
                    "value": "random_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "default_cuda_dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda:0'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CUDA",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "synchronize_415": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_device_456": {
                "device": {
                    "value": "0 if not args.device1 else 1",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "set_grad_enabled_459": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "memory_allocated_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_75": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_128": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_159": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_160": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_267": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_268": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_296": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_310": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_323": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_324": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_362": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_363": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_391": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_404": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_413": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_426": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_427": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_291": {
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "100",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CPU",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "rand_386": {
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "100",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "100",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CPU",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "tests/benchmarks.py": {
        "torch": {
            "rand_8": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(10000, 500, 4)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "rand_9": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(10000, 500)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "rand_25": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(10000, 500, 4)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "rand_26": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(10000, 500)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "synchronize_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/datasets/test_SE_dataset.py": {
        "torch": {
            "tensor_121": {
                "variable": {
                    "value": "results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 3, 6, 9, 1, 4, 7, 10, 2, 5, 8, 11]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_108": {
                "data": {
                    "value": "[0, 0, 40, 0, 70, 0, 99, 0, 0, 55, 30, 55, 60, 55, 99.9, 55, 0, 99, 30, 99, 60, 98, 97, 98]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/eval/classifier_tests.py": {
        "torch": {
            "rand_23": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ],
                        [
                            "31",
                            "int"
                        ],
                        [
                            "19",
                            "int"
                        ],
                        [
                            "300",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "301",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "300",
                            "int"
                        ],
                        [
                            "320",
                            "int"
                        ],
                        [
                            "n_samples",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ],
                        [
                            "n_classes * input_multiplier",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randint_49": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "9",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "6",
                            "int"
                        ],
                        [
                            "13",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "15",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "n_classes",
                            "Method Argument"
                        ]
                    ]
                },
                "high": {
                    "value": "[n_samples]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_49": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_53": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[n_samples]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_53": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_130": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ],
                        [
                            "31",
                            "int"
                        ],
                        [
                            "19",
                            "int"
                        ],
                        [
                            "300",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "301",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "300",
                            "int"
                        ],
                        [
                            "320",
                            "int"
                        ],
                        [
                            "n_samples",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "9",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "6",
                            "int"
                        ],
                        [
                            "13",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "15",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "n_classes",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randint_181": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "9",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "6",
                            "int"
                        ],
                        [
                            "13",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "15",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "n_classes",
                            "Method Argument"
                        ]
                    ]
                },
                "high": {
                    "value": "[n_samples]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randint_182": {
                "variable": {
                    "value": "different_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "9",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "6",
                            "int"
                        ],
                        [
                            "13",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "15",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "n_classes",
                            "Method Argument"
                        ]
                    ]
                },
                "high": {
                    "value": "[n_samples]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randint_221": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "9",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "6",
                            "int"
                        ],
                        [
                            "13",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "15",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "n_classes",
                            "Method Argument"
                        ]
                    ]
                },
                "high": {
                    "value": "[n_samples]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_221": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_226": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[n_samples]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_226": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_309": {
                "variable": {
                    "value": "sum_comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": [
                        [
                            "a == b",
                            "Compare"
                        ]
                    ]
                }
            },
            "tensor_324": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.rand(n_samples, n_classes, device=device) * noise_amplitude",
                            "BinOp"
                        ],
                        [
                            "generate_data(n_classes, n_samples, noise_amplitude, device)",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, noise_amplitude, device)",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, noise_amplitude, device)",
                            "Call"
                        ],
                        [
                            "torch.rand(n_samples, n_classes, device=device)",
                            "Call"
                        ],
                        [
                            "labels * input_multiplier",
                            "BinOp"
                        ],
                        [
                            "torch.rand(n_samples, n_classes * dimension_multiplier, device=device) * noise_amplitude",
                            "BinOp"
                        ],
                        [
                            "generate_data(n_classes, n_samples, noise_amp, device)",
                            "Call"
                        ],
                        [
                            "torch.tensor(inputs)",
                            "Call"
                        ],
                        [
                            "inputs",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_325": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.randint(n_classes, [n_samples], device=device).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "labels.squeeze().long()",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, noise_amplitude, device)",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, noise_amplitude, device)",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, noise_amplitude, device)",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, 1, device)",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, 1, device)",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, 1, device)",
                            "Call"
                        ],
                        [
                            "torch.randint(n_classes, [n_samples], device=device).long()",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, 1, device)",
                            "Call"
                        ],
                        [
                            "torch.randint(n_classes, [n_samples], device=device).unsqueeze(1)",
                            "Call"
                        ],
                        [
                            "labels.squeeze().long()",
                            "Call"
                        ],
                        [
                            "generate_data(n_classes, n_samples, noise_amp, device)",
                            "Call"
                        ],
                        [
                            "torch.tensor(labels)",
                            "Call"
                        ],
                        [
                            "labels",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_52": {
                "*size": {
                    "value": "n_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ],
                        [
                            "31",
                            "int"
                        ],
                        [
                            "19",
                            "int"
                        ],
                        [
                            "300",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "301",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "300",
                            "int"
                        ],
                        [
                            "320",
                            "int"
                        ],
                        [
                            "n_samples",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "9",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "6",
                            "int"
                        ],
                        [
                            "13",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "15",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "n_classes",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_224": {
                "*size": {
                    "value": "n_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "100",
                            "int"
                        ],
                        [
                            "31",
                            "int"
                        ],
                        [
                            "19",
                            "int"
                        ],
                        [
                            "300",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "301",
                            "int"
                        ],
                        [
                            "111",
                            "int"
                        ],
                        [
                            "300",
                            "int"
                        ],
                        [
                            "320",
                            "int"
                        ],
                        [
                            "n_samples",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_classes * dimension_multiplier",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ones_304": {
                "*size": {
                    "value": "num",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "int"
                        ]
                    ]
                }
            },
            "ones_305": {
                "*size": {
                    "value": "num",
                    "type": "variable",
                    "possible_values": [
                        [
                            "256",
                            "int"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/eval/test_classifier_interface.py": {
        "torch": {
            "Tensor_50": {}
        }
    },
    "tests/core/eval/test_cluster_agreement.py": {
        "torch": {
            "tensor_8": {
                "variable": {
                    "value": "cluster_ids_1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 1, 1, 0, 3, 5, 3, 2, 9]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_9": {
                "variable": {
                    "value": "cluster_ids_2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 23, 33, 1, 3, 3, 0, 3, 9, 0]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/eval/test_cluster_mutual_information.py": {
        "torch": {
            "zeros_25": {
                "variable": {
                    "value": "cluster_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_phases",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "n_steps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "n_rfs_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "n_rfs_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/eval/test_comparison_matrix.py": {
        "torch": {}
    },
    "tests/core/eval/test_doc_generator.py": {
        "torch": {
            "rand_19": {
                "*size": {
                    "value": "(2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/eval/test_entropy.py": {
        "torch": {
            "zeros_10": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "n_components",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "n_elements",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "int"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/eval2/test_scaffolding_graph.py": {
        "torch": {
            "add_66": {
                "input": {
                    "value": "i[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "i[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "o[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/graph/test_memory_block.py": {
        "torch": {
            "zeros_20": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[1, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_32": {
                "variable": {
                    "value": "tens",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[10, 12]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_34": {
                "variable": {
                    "value": "another_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[10, 12]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_64": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "tensor_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor_shape",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/graph/test_node_base.py": {
        "torch": {
            "clone_45": {
                "variable": {
                    "value": "output_1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "node.outputs.output.tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clone_48": {
                "variable": {
                    "value": "output_2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "node.outputs.output.tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clone_52": {
                "variable": {
                    "value": "output_3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "node.outputs.output.tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "clone_56": {
                "variable": {
                    "value": "output_4",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "node.outputs.output.tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/graph/test_node_group.py": {
        "torch": {
            "rand_174": {
                "variable": {
                    "value": "output_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(2, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "rand_209": {
                "variable": {
                    "value": "output_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(2, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/graph/test_node_ordering.py": {
        "torch": {
            "tensor_29": {
                "variable": {
                    "value": "self.outputs.output1.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_30": {
                "variable": {
                    "value": "self.outputs.output2.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/graph/test_save_load.py": {
        "torch": {}
    },
    "tests/core/gui/observers/test_cluster_observer.py": {
        "torch": {
            "tensor_14": {
                "variable": {
                    "value": "sequences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 0], [0, 1, 2], [0, 1, 3], [0, 2, 1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_20": {
                "variable": {
                    "value": "seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[5, 2, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_33": {
                "variable": {
                    "value": "sequences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_34": {
                "variable": {
                    "value": "seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1.5]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_35": {
                "variable": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_44": {
                "variable": {
                    "value": "sequences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[-1, -1, -1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_47": {
                "variable": {
                    "value": "seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_48": {
                "variable": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0], [0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_57": {
                "variable": {
                    "value": "sequences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 0], [0, 1, 2], [0, 1, 3], [0, 2, 1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_63": {
                "variable": {
                    "value": "seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[5, 2, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_76": {
                "variable": {
                    "value": "sequences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_77": {
                "variable": {
                    "value": "seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1.5]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_78": {
                "variable": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_86": {
                "variable": {
                    "value": "sequences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[-1, -1, -1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_89": {
                "variable": {
                    "value": "seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_90": {
                "variable": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0], [0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "variable": {
                    "value": "transformer._means",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "[data_dims]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ones_103": {
                "variable": {
                    "value": "transformer._std_devs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "[data_dims]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_113": {
                "variable": {
                    "value": "data_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_116": {
                "variable": {
                    "value": "projection_matrix",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(data_dim, min(data_dim, 3))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "tensor_21": {
                "data": {
                    "value": "[[0, 8, 1, 0], [5, 0, 2, 1], [0, 1, 0, 0], [0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_64": {
                "data": {
                    "value": "[[9, 9, 3, 1], [9, 9, 3, 1], [3, 3, 3, 0], [1, 1, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/gui/observers/test_flock_process_observable.py": {
        "torch": {
            "tensor_21": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_41": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CPU",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_46": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_47": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CPU",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_43": {
                "data": {
                    "value": "[0, float('nan')]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CPU",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_49": {
                "data": {
                    "value": "[float('nan'), 0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CPU",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_54": {
                "data": {
                    "value": "[float('nan'), float('nan')]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CPU",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/gui/observers/test_tensor_observable.py": {
        "torch": {
            "zeros_78": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dims",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_109": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(h, w)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_286": {
                "variable": {
                    "value": "t_input",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "g(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mul_286": {
                "variable": {
                    "value": "t_input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "t_input.unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "arange_181": {
                "start": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "t_input_size + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "arange_284": {
                "start": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "t_input_size + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "arange_304": {
                "start": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "t_input_size + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "arange_343": {
                "start": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "t_input_size + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Tensor_372": {},
            "Tensor_374": {},
            "Tensor_376": {}
        }
    },
    "tests/core/memory/test_on_device.py": {
        "torch": {
            "rand_like_77": {
                "variable": {
                    "value": "new_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "on_device.tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_like_92": {
                "variable": {
                    "value": "new_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "on_device.tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_21": {
                "variable": {
                    "value": "self.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/flock/test_buffer.py": {
        "torch": {
            "rand_37": {
                "variable": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_48": {
                "variable": {
                    "value": "inp",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.1, 0.1, 0.1], [0.2, 0.2, 0.2], [0.3, 0.3, 0.3]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_52": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 9, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "full_56": {
                "variable": {
                    "value": "ground_truth_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(3, 10, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_61": {
                "variable": {
                    "value": "ground_truth_pointer",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 9, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_69": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 3, 6]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_70": {
                "variable": {
                    "value": "buffer.t1.stored_data[0][1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.1, 0.1, 0.1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_71": {
                "variable": {
                    "value": "buffer.t1.stored_data[1][3]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.2, 0.2, 0.2]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_73": {
                "variable": {
                    "value": "inp",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.1, 0.1, 0.1], [0.2, 0.2, 0.2], [0.3, 0.3, 0.3]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_77": {
                "variable": {
                    "value": "ground_truth",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "randn_95": {
                "variable": {
                    "value": "buffer.t1.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "buffer.t1.stored_data.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_98": {
                "variable": {
                    "value": "sample",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(7, 100, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "full_101": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(7,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "990",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "full_110": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(7,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "cat_114": {
                "variable": {
                    "value": "ground_truth_sample",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[buffer.t1.stored_data[:, -49:], buffer.t1.stored_data[:, :51]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_121": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[50, 200, 10, 500, 70, 95, 33]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "stack_131": {
                "variable": {
                    "value": "ground_truth_sample",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "ground_truth_sample",
                    "type": "variable",
                    "possible_values": [
                        [
                            "buffer.t1.stored_data[:, 891:991]",
                            "Subscript"
                        ],
                        [
                            "torch.cat([buffer.t1.stored_data[:, -49:], buffer.t1.stored_data[:, :51]], dim=1)",
                            "Call"
                        ],
                        [
                            "[torch.cat([buffer.t1.stored_data[0, -49:], buffer.t1.stored_data[0, :51]]), buffer.t1.stored_data[1, 101:201], torch.cat([buffer.t1.stored_data[2, -89:], buffer.t1.stored_data[2, :11]]), buffer.t1.stored_data[3, 401:501], torch.cat([buffer.t1.stored_data[4, -29:], buffer.t1.stored_data[4, :71]]), torch.cat([buffer.t1.stored_data[5, -4:], buffer.t1.stored_data[5, :96]]), torch.cat([buffer.t1.stored_data[6, -66:], buffer.t1.stored_data[6, :34]])]",
                            "List"
                        ],
                        [
                            "torch.stack(ground_truth_sample)",
                            "Call"
                        ],
                        [
                            "buffer.t1.stored_data[:, 501 - batch_size:501]",
                            "Subscript"
                        ],
                        [
                            "buffer.t1.stored_data[:, 501 - batch_size:501]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_138": {
                "variable": {
                    "value": "sample",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(7, 1, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "full_139": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(7,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_148": {
                "variable": {
                    "value": "sample",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(7, 423, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "full_149": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(7,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "500",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_162": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 3, 5, 8]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_163": {
                "variable": {
                    "value": "non_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 2, 4, 6, 7, 9]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_166": {
                "variable": {
                    "value": "original_t1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(10, 10, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_167": {
                "variable": {
                    "value": "original_new_t1_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(4, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_169": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 1, 2, 4, 1, 0, 9, 9, 3, 8]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_186": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 3, 5, 8]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "rand_189": {
                "variable": {
                    "value": "original_t1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(10, 10, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_192": {
                "variable": {
                    "value": "batch_t",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(4, batch_size, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_194": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 1, 2, 4, 1, 2, 9, 9, 6, 8]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "stack_200": {
                "variable": {
                    "value": "expected_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "expected_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[torch.cat([original_t1[0, -4:], original_t1[0, 0].unsqueeze(0)]), original_t1[3, :5], torch.cat([original_t1[5, -2:], original_t1[5, :3]]), original_t1[8, 2:7]]",
                            "List"
                        ],
                        [
                            "torch.stack(expected_batch)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_214": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 2, 3, 9, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_215": {
                "variable": {
                    "value": "buffer.flock_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 3, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_223": {
                "variable": {
                    "value": "expected_ptr",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 3, 3, 0, 5]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_241": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 2, 3, 9, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_242": {
                "variable": {
                    "value": "buffer.flock_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 3, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_251": {
                "variable": {
                    "value": "expected_ptr",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, (2 + steps) % buffer_size, 3, (9 + steps) % buffer_size, (4 + steps) % buffer_size]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_309": {
                "variable": {
                    "value": "flock_indices1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_312": {
                "variable": {
                    "value": "expected_data1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[3, nan, 0, nan], [7, nan, 4, nan], [11, nan, 8, nan]], [[15, 14, 13, nan], [19, 18, 17, nan], [23, 22, 21, nan]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(DEVICE)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_324": {
                "variable": {
                    "value": "flock_indices2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_326": {
                "variable": {
                    "value": "expected_data2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]], [[15, 14, 13, nan], [19, 18, 17, nan], [23, 22, 21, nan]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(DEVICE)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_340": {
                "variable": {
                    "value": "inp",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.1, 0.1, 0.1], [0.2, 0.2, 0.2], [0.3, 0.3, 0.3]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_344": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[2]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "full_348": {
                "variable": {
                    "value": "ground_truth_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1, 10, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_353": {
                "variable": {
                    "value": "ground_truth_pointer",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[2]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "ones_378": {
                "variable": {
                    "value": "storing_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_ind_len, last_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CUDA",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_392": {
                "variable": {
                    "value": "expected_comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_401": {
                "variable": {
                    "value": "out_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_ind_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "flock_indices.numel()",
                            "Call"
                        ],
                        [
                            "flock_size",
                            "variable"
                        ]
                    ]
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CUDA",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_404": {
                "variable": {
                    "value": "expected_out_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_ind_len, 3, last_dim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "FLOAT_TYPE_CUDA",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_218": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.1, 0.1], [0.5, 0.2], [0.2, 0.2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_245": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.1, 0.1], [0.5, 0.2], [0.2, 0.2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "DEVICE",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_278": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[3, 4, 0, 15], [3, 2, 1, 4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_280": {
                "variable": {
                    "value": "buffer.t1.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]], [[12, 13, 14, 15], [16, 17, 18, 19], [20, 21, 22, 23]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "buffer._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_372": {
                "variable": {
                    "value": "flock_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "flock_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(flock_indices, dtype=torch.int64)",
                            "Call"
                        ],
                        [
                            "flock_indices",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_24": {
                "data": {
                    "value": "[0, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_35": {
                "data": {
                    "value": "[0, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_89": {
                "*size": {
                    "value": "(7, 1000, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            },
            "cat_122": {
                "tensors": {
                    "value": "[buffer.t1.stored_data[0, -49:], buffer.t1.stored_data[0, :51]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_124": {
                "tensors": {
                    "value": "[buffer.t1.stored_data[2, -89:], buffer.t1.stored_data[2, :11]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_126": {
                "tensors": {
                    "value": "[buffer.t1.stored_data[4, -29:], buffer.t1.stored_data[4, :71]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_127": {
                "tensors": {
                    "value": "[buffer.t1.stored_data[5, -4:], buffer.t1.stored_data[5, :96]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_128": {
                "tensors": {
                    "value": "[buffer.t1.stored_data[6, -66:], buffer.t1.stored_data[6, :34]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_195": {
                "tensors": {
                    "value": "[original_t1[0, -4:], original_t1[0, 0].unsqueeze(0)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_197": {
                "tensors": {
                    "value": "[original_t1[5, -2:], original_t1[5, :3]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_87": {
                "*size": {
                    "value": "(7, 1001, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/flock/test_expert_flock.py": {
        "torch": {
            "full_48": {
                "variable": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock.params.flock_size, flock.n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "nan",
                    "type": "variable",
                    "possible_values": [
                        [
                            "float('nan')",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_51": {
                "variable": {
                    "value": "expected_output_context",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[flock.sp_flock.forward_clusters, flock.tp_flock.action_rewards, flock.tp_flock.action_punishments, flock.tp_flock.passive_predicted_clusters_outputs[:, seq_lookbehind, :], padding, padding]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_84": {
                "variable": {
                    "value": "input_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "rand_85": {
                "variable": {
                    "value": "input_context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_providers, NUMBER_OF_CONTEXT_TYPES, max_provider_context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "rand_87": {
                "variable": {
                    "value": "input_rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_89": {
                "variable": {
                    "value": "expected_rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_104": {
                "variable": {
                    "value": "expected_flock_context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "5",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_providers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "layout": {
                    "value": "max_provider_context_size2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_139": {
                "variable": {
                    "value": "input_data1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "rand_143": {
                "variable": {
                    "value": "input_data2[1, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_145": {
                "variable": {
                    "value": "sp_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_146": {
                "variable": {
                    "value": "sp_reconstructions",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/flock/test_flock_integration.py": {
        "torch": {
            "rand_54": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "iterations",
                    "type": "variable",
                    "possible_values": [
                        [
                            "50",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "synchronize_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_102": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_103": {
                "variable": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_providers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "n_providers",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "layout": {
                    "value": "context_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Stream_73": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/models/flock/test_process.py": {
        "torch": {
            "arange_33": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "num_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_36": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(10, 15)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "rand_37": {
                "variable": {
                    "value": "q",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(10, 15)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "arange_52": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "num_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_69": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 1, 3, 6, 9]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_70": {
                "variable": {
                    "value": "non_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[2, 4, 5, 7, 8]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_73": {
                "variable": {
                    "value": "read1",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_74": {
                "variable": {
                    "value": "read2",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_76": {
                "variable": {
                    "value": "rw1",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_77": {
                "variable": {
                    "value": "rw2",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_98": {
                "size": {
                    "value": "(flock_size, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_99": {
                "size": {
                    "value": "(flock_size, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_102": {
                "size": {
                    "value": "(5, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_103": {
                "size": {
                    "value": "(5, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "15",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_105": {
                "size": {
                    "value": "(5, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_106": {
                "size": {
                    "value": "(5, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/models/integration_test_utils.py": {
        "torch": {
            "stack_34": {
                "tensors": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(expected_results, flock_tensors)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/receptive_field/test_grid.py": {
        "torch": {
            "tensor_94": {
                "variable": {
                    "value": "expected_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_result",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_result",
                            "Method Argument"
                        ],
                        [
                            "expected_result",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/receptive_field/test_mapping.py": {
        "torch": {
            "zeros_25": {
                "variable": {
                    "value": "children_output",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "grids.child_grid_height",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "grids.child_grid_width",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_50": {
                "variable": {
                    "value": "input_image",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "image_grid_size_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "8",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "image_grid_size_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "16",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_66": {
                "variable": {
                    "value": "input_image_1",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "x * y",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_like_67": {
                "variable": {
                    "value": "input_image_2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_image_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.arange(0, x * y, dtype=float_dtype, device=device).view(y, x)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_73": {
                "data": {
                    "value": "[[0, 1, 3, 4], [1, 2, 4, 5], [3, 4, 6, 7], [4, 5, 7, 8], [6, 7, 9, 10], [7, 8, 10, 11]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_95": {
                "data": {
                    "value": "[[1, 2, 1], [2, 4, 2], [2, 4, 2], [1, 2, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/receptive_field/test_reverse_mapping.py": {
        "torch": {
            "arange_31": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "4 * 2 * 5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_21": {
                "start": {
                    "value": "start * context_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "end": {
                    "value": "(start + 1) * context_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_25": {
                "size": {
                    "value": "(count,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/spatial_pooler/test_buffer.py": {
        "torch": {
            "tensor_54": {
                "variable": {
                    "value": "buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[[get_cluster_center(i) for i in range(buffer_size)], [get_cluster_center(i + 1) for i in range(buffer_size)]]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_56": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, batch_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "stack_67": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(indices, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_75": {
                "variable": {
                    "value": "sampled_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "sampled_clusters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(sampled_clusters, dim=0)",
                            "Call"
                        ],
                        [
                            "torch.gather(buffer.clusters.get_stored_data(), dim=1, index=sampled_indices)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_147": {
                "variable": {
                    "value": "sampled_data",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(f_size, batch_size, 5)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "dummy_value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-2.1",
                            "UnaryOp"
                        ],
                        [
                            "-2.1",
                            "UnaryOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "gather_151": {
                "variable": {
                    "value": "sampled_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "buffer.clusters.get_stored_data()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "sampled_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "buffer.sample_learning_batch(batch_size, sampled_data, method)",
                            "Call"
                        ],
                        [
                            "sampled_indices.view(f_size, batch_size, 1).expand(f_size, batch_size, n_cluster_centers)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/spatial_pooler/test_forward.py": {
        "torch": {
            "arange_19": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_24": {
                "variable": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[-1], [1], [2]], [[4], [5], [6]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_25": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.4], [1.1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                }
            },
            "zeros_27": {
                "variable": {
                    "value": "forward_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_37": {
                "variable": {
                    "value": "ground_truth_result",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 0], [1, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_42": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.4], [5]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_48": {
                "variable": {
                    "value": "ground_truth_result",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 0.0], [0, 1, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/spatial_pooler/test_learning.py": {
        "torch": {
            "arange_24": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_24": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_28": {
                "variable": {
                    "value": "buffer.inputs.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "buffer.inputs.stored_data.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_30": {
                "variable": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_31": {
                "variable": {
                    "value": "cluster_center_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_33": {
                "variable": {
                    "value": "cluster_center_deltas",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_35": {
                "variable": {
                    "value": "cluster_boosting_durations",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "995",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_37": {
                "variable": {
                    "value": "boosting_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_38": {
                "variable": {
                    "value": "prev_boosted_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_40": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "9",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_42": {
                "variable": {
                    "value": "buffer_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, batch_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "stack_74": {
                "variable": {
                    "value": "ground_truth",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "all_sum_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "gather_89": {
                "variable": {
                    "value": "boosting_cluster_centers",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "previous_cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_centers.clone()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "boosting_targets_indexes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "boosting_targets.unsqueeze(dim=2).expand(flock_size, n_cluster_centers, input_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "arange_138": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_138": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_140": {
                "variable": {
                    "value": "cluster_boosting_durations",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "cluster_boosting_durations",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.full((flock_size, n_cluster_centers), fill_value=995, device=device, dtype=torch.int64)",
                            "Call"
                        ],
                        [
                            "torch.tensor(cluster_boosting_durations, dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.randint(0, 2000, (2, 4), device=device).type(torch.int64)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[0, 1, 198, 3], [0, 1, 198, 101], [0, 1, 100, 3], [0, 200, 15, 3], [0, 1, 217, 3], [0, 616, 15, 3]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "cluster_boosting_durations",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_142": {
                "variable": {
                    "value": "variance_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "variance_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(variance_batch, dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[0.1431, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, 0.7248]], dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "variance_batch",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_143": {
                "variable": {
                    "value": "cluster_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "cluster_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(cluster_batch, dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], [[0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 1.0]]], dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "cluster_batch",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_like_145": {
                "variable": {
                    "value": "prev_boosted_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cluster_boosting_durations",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.full((flock_size, n_cluster_centers), fill_value=995, device=device, dtype=torch.int64)",
                            "Call"
                        ],
                        [
                            "torch.tensor(cluster_boosting_durations, dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.randint(0, 2000, (2, 4), device=device).type(torch.int64)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[0, 1, 198, 3], [0, 1, 198, 101], [0, 1, 100, 3], [0, 200, 15, 3], [0, 1, 217, 3], [0, 616, 15, 3]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "cluster_boosting_durations",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_146": {
                "variable": {
                    "value": "boosting_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(2, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_148": {
                "variable": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "out": {
                    "value": "n_cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "5",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_149": {
                "variable": {
                    "value": "cluster_center_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_151": {
                "variable": {
                    "value": "cluster_center_deltas",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_173": {
                "variable": {
                    "value": "expected_boosting_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_boosting_targets",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(expected_boosting_targets, dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "expected_boosting_targets",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_189": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_191": {
                "variable": {
                    "value": "cluster_center_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randint_193": {
                "variable": {
                    "value": "cluster_boosting_durations",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "2000",
                    "type": "int",
                    "possible_values": []
                },
                "size": {
                    "value": "(2, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_195": {
                "variable": {
                    "value": "variance_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.1431, -1.0, -1.0, -1.0], [-1.0, -1.0, -1.0, 0.7248]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_197": {
                "variable": {
                    "value": "cluster_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0], [1.0, 0.0, 0.0, 0.0]], [[0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 1.0], [0.0, 0.0, 0.0, 1.0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_206": {
                "variable": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(2, 4, 20)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_like_207": {
                "variable": {
                    "value": "prev_boosted_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cluster_boosting_durations",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.full((flock_size, n_cluster_centers), fill_value=995, device=device, dtype=torch.int64)",
                            "Call"
                        ],
                        [
                            "torch.tensor(cluster_boosting_durations, dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.randint(0, 2000, (2, 4), device=device).type(torch.int64)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[0, 1, 198, 3], [0, 1, 198, 101], [0, 1, 100, 3], [0, 200, 15, 3], [0, 1, 217, 3], [0, 616, 15, 3]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "cluster_boosting_durations",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_208": {
                "variable": {
                    "value": "boosting_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(2, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_209": {
                "variable": {
                    "value": "cluster_center_deltas",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(2, 4, 20)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_251": {
                "variable": {
                    "value": "cluster_boosting_durations",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 198, 3], [0, 1, 198, 101], [0, 1, 100, 3], [0, 200, 15, 3], [0, 1, 217, 3], [0, 616, 15, 3]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_257": {
                "variable": {
                    "value": "prev_boosted_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1, 0], [0, 0, 1, 0], [0, 0, 1, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 1, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_272": {
                "variable": {
                    "value": "expected_prev_boosted_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1, 0], [0, 0, 1, 1], [0, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 1, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_279": {
                "variable": {
                    "value": "expected_should_recompute",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 1, 1, 1, 0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_305": {
                "variable": {
                    "value": "flock.buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0], [1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]], [[0, 0, 0, 1], [1, 0, 0, 0], [1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_324": {
                "variable": {
                    "value": "data_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(subflock_size, batch_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "stack_326": {
                "variable": {
                    "value": "expected_data_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[flock.buffer.inputs.stored_data[0, :4, :], flock.buffer.inputs.stored_data[1, 1:5, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_354": {
                "variable": {
                    "value": "flock.buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0], [1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]], [[0, 0, 0, 1], [1, 0, 0, 0], [1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_370": {
                "variable": {
                    "value": "flock.cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]], [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_379": {
                "variable": {
                    "value": "data_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(subflock_size, batch_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_67": {
                "variable": {
                    "value": "mean_data_points",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(process._input_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "mean_70": {
                "variable": {
                    "value": "mean_data_points",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "individual_data_points",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_data[indices, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_72": {
                "tensors": {
                    "value": "sum_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "sum_236": {
                "input": {
                    "value": "torch.abs(non_boosted_cc_deltas)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_236": {
                "input": {
                    "value": "non_boosted_cc_deltas",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_center_deltas[prev_boosted_clusters == 0]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/spatial_pooler/test_process.py": {
        "torch": {
            "rand_43": {
                "variable": {
                    "value": "flock.buffer.inputs.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, buffer_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_45": {
                "variable": {
                    "value": "flock.buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, buffer_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_48": {
                "variable": {
                    "value": "flock.buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_49": {
                "variable": {
                    "value": "flock.buffer.total_data_written",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_52": {
                "variable": {
                    "value": "flock.cluster_boosting_durations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "clamp_53": {
                "variable": {
                    "value": "flock.prev_boosted_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.round(torch.rand((flock_size, n_cluster_centers), device=device))",
                    "type": "Call",
                    "possible_values": []
                },
                "min": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_55": {
                "variable": {
                    "value": "flock.boosting_targets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_58": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "np.random.choice(flock_size, subflock_size, replace=False)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_68": {
                "variable": {
                    "value": "flock.buffer.inputs.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock.buffer.inputs.dims",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_70": {
                "variable": {
                    "value": "flock.buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock.buffer.clusters.dims",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randint_71": {
                "variable": {
                    "value": "flock.buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "params.spatial.buffer_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "flock.buffer.current_ptr.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randint_73": {
                "variable": {
                    "value": "flock.buffer.total_data_written",
                    "type": "Attribute",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "params.spatial.buffer_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "flock.buffer.current_ptr.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randint_76": {
                "variable": {
                    "value": "flock.cluster_boosting_durations",
                    "type": "Attribute",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "size": {
                    "value": "flock.cluster_boosting_durations.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "clamp_79": {
                "variable": {
                    "value": "flock.prev_boosted_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.randint(0, 2, flock.prev_boosted_clusters.size(), device=device)",
                    "type": "Call",
                    "possible_values": []
                },
                "min": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randint_80": {
                "variable": {
                    "value": "flock.boosting_targets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "params.flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "flock.boosting_targets.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_82": {
                "variable": {
                    "value": "flock.forward_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock.forward_clusters.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_86": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list(map(int, indices_np))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_86": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_19": {
                "*size": {
                    "value": "(flock_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "arange_105": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_108": {
                "variable": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[-1, 2], [1, 2], [2, 2]], [[4, 0], [5, 0], [6, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_110": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.4, 1], [1.1, -1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_113": {
                "variable": {
                    "value": "expected_result",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[2.96, 1.36, 3.56]], [[9.41, 16.21, 25.01]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_122": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "int"
                        ],
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_125": {
                "variable": {
                    "value": "closest_cluster_centers",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1], [2, 2], [1, 2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_128": {
                "variable": {
                    "value": "expected_result",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0], [0, 1, 0]], [[0, 0, 1], [0, 0, 1]], [[0, 1, 0], [0, 0, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_152": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "round_53": {
                "input": {
                    "value": "torch.rand((flock_size, n_cluster_centers), device=device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randint_79": {
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "size": {
                    "value": "flock.prev_boosted_clusters.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_53": {
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/spatial_pooler/test_spatial_pooler.py": {
        "torch": {
            "arange_77": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "f_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_77": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_79": {
                "variable": {
                    "value": "flock.cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.25, 1.1], [-0.3, 0.2]], [[1.2, 1.3], [-1, -2]], [[0.6, 0.2], [-1.2, -0.8]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_84": {
                "variable": {
                    "value": "data1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.2, 1], [1.1, 1.1], [-1.2, -0.7]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_85": {
                "variable": {
                    "value": "cc1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.0, 0], [1.0, 0], [0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_95": {
                "variable": {
                    "value": "data2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.2, 1], [-1, -0.4], [0.2, 0.3]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_96": {
                "variable": {
                    "value": "cc2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.0, 0], [0, 1.0], [1, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_112": {
                "variable": {
                    "value": "data3",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.1, 1], [-1.1, -0.4], [0.3, 0.3]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_113": {
                "variable": {
                    "value": "cc3",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.0, 0], [0, 1.0], [1, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_131": {
                "variable": {
                    "value": "data4",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.1, 1], [-1.1, FLOAT_NAN], [0.3, 0.3]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_141": {
                "variable": {
                    "value": "data5",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[FLOAT_NAN, 1], [-1, -0.4], [0.2, 0.3]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_181": {
                "variable": {
                    "value": "flock.forward_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1, 0], [0.2, 0.3, 0.4, 0.1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_184": {
                "variable": {
                    "value": "flock.predicted_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0.5, 0.5, 0], [1, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_187": {
                "variable": {
                    "value": "flock.cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0.5, 0.5, 0], [0, 0, 0.5, 0, 0.5]], [[1, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_198": {
                "variable": {
                    "value": "expected_reconstructed_input",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0.5, 0.5, 0], [0.2, 0.3, 0.4, 0.1, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_201": {
                "variable": {
                    "value": "expected_predicted_reconstructed_input",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0.5, 0.25, 0.25, 0], [1, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_222": {
                "variable": {
                    "value": "flock.forward_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1, 0], [0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_225": {
                "variable": {
                    "value": "flock.predicted_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0.5, 0.5, 0], [0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_228": {
                "variable": {
                    "value": "flock.cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0.5, 0.5, 0], [0, 0, 0.5, 0, 0.5]], [[1, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_237": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_241": {
                "variable": {
                    "value": "expected_reconstructed_input",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0.5, 0.5, 0], [0, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_244": {
                "variable": {
                    "value": "expected_predicted_reconstructed_input",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0.5, 0.25, 0.25, 0], [0, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_276": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0, 0], [1.0, 0], [0.0, 1], [1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_329": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.0, 0], [0.0, 0]], [[1.0, 0], [1.0, 0]], [[0.0, 1], [0.0, 1]], [[1, 1], [1, 1]], [[0, 1], [1, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_339": {
                "variable": {
                    "value": "expected_forward_executions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[iters * 5], [iters * 4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_391": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0, 0], [1.0, 0], [0.0, 1], [1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_414": {
                "variable": {
                    "value": "flock.cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 0.5, 0.5, 0], [0, 0, 0.5, 0, 0.5]], [[1, 0, 0, 0, 0], [0, 1, 0, 0, 0], [0, 0, 1, 0, 0], [0, 0, 0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_423": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1, 0], [0.2, 0.3, 0.4, 0.1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_428": {
                "variable": {
                    "value": "expected_projection",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0.5, 0.5, 0], [0.2, 0.3, 0.4, 0.1, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_442": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_523": {
                "variable": {
                    "value": "input_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 0, 4], [1, 0.3, -1], [2, 0.1, 0.5], [0.7, 0.9, 0.8], [2, 0, 4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_531": {
                "variable": {
                    "value": "expected_forward_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_535": {
                "variable": {
                    "value": "expected_common_buffer",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1, params.spatial.buffer_size, params.spatial.input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_618": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.0, 0], [0.0, 0]], [[1.0, 0], [1.0, 0]], [[0.0, 1], [0.0, 1]], [[1, 1], [1, 1]], [[0, 1], [1, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_628": {
                "variable": {
                    "value": "expected_forward_executions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[iters * 5], [iters * 4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_18": {
                "variable": {
                    "value": "buffer_data",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock.flock_size, flock.batch_size, flock.n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_24": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "flock.flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "flock._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_46": {
                "variable": {
                    "value": "ground_truth",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "all_sum_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "isnan_103": {
                "input": {
                    "value": "cc_deltas2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cc_targets2 - flock.cluster_centers",
                            "BinOp"
                        ]
                    ]
                }
            },
            "isnan_120": {
                "input": {
                    "value": "cc_deltas3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cc_targets3 - flock.cluster_centers",
                            "BinOp"
                        ]
                    ]
                }
            },
            "tensor_629": {
                "data": {
                    "value": "[[iters * 5]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ones_469": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_469": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_470": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_470": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_471": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_471": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_472": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_473": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_474": {
                "data": {
                    "value": "[0, 1, 1, 0, 0, 0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_475": {
                "data": {
                    "value": "[0, 1, 1, 0, 0, 0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_476": {
                "data": {
                    "value": "[0, 1, 1, 1, 0, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_477": {
                "data": {
                    "value": "[11, 9, 11, 11, 15, 8, 100]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_478": {
                "data": {
                    "value": "[5, 6, 4, 8, 5, 1, 5]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_479": {
                "data": {
                    "value": "[0, 0, 0, 1, 0, 0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_556": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_556": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_557": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_557": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_558": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_558": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_559": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_560": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_39": {
                "variable": {
                    "value": "mean_data_points",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock.input_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "mean_42": {
                "variable": {
                    "value": "mean_data_points",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "individual_data_points",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_data[indices, :]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_44": {
                "tensors": {
                    "value": "sum_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "Stream_288": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/models/temporal_pooler/test_conv_tp.py": {
        "torch": {
            "arange_60": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "end": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_60": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_174": {
                "variable": {
                    "value": "learning_proc._all_encountered_seqs[0, 0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_177": {
                "variable": {
                    "value": "learning_proc._all_encountered_seqs[0, 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "[2, 1, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_183": {
                "variable": {
                    "value": "all_enc_cont_occ",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1, max_encountered_seqs, seq_length, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_185": {
                "variable": {
                    "value": "all_enc_exp_att",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, max_encountered_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_187": {
                "variable": {
                    "value": "all_enc_exp_suc_rates",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, max_encountered_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_189": {
                "variable": {
                    "value": "all_enc_rew_pun",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, max_encountered_seqs, seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_192": {
                "variable": {
                    "value": "most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 3], [2, 1, 3], [-1, -1, -1], [3, 1, 3]]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_194": {
                "variable": {
                    "value": "newly_enc_seq_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 3, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_200": {
                "variable": {
                    "value": "expected_all_enc_seqs[0, -max_new_seqs:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 1, 3], [0, 1, 3], [3, 1, 3]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_203": {
                "variable": {
                    "value": "expected_all_enc_seq_occ[0, -max_new_seqs:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "[3, 2, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_263": {
                "variable": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0], [1, 0, 0]], [[0, 1, 0], [0, 1, 0]], [[0, 0, 1], [0, 0, 1]], [[0, 1, 0], [0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_268": {
                "variable": {
                    "value": "contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[1, 0], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]], [[[[1, 0], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]], [[[[1, 0], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]], [[[[0, 1], [0, 0], [0, 0]]], [[[0, 1], [0, 0], [0, 0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_273": {
                "variable": {
                    "value": "expected_actions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [0, 1, 0]], [[0, 0, 1], [0, 0, 1]], [[0, 1, 0], [0, 1, 0]], [[1, 0, 0], [1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_278": {
                "variable": {
                    "value": "expected_projections",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.6666, 0.3333, 0.0], [0.6666, 0.3333, 0.0]], [[0.0, 0.6666, 0.3333], [0.0, 0.6666, 0.3333]], [[0.0, 0.3333, 0.6666], [0.0, 0.3333, 0.6666]], [[0.3333, 0.6666, 0.0], [0.3333, 0.6666, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_320": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "flock_size * batch_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_320": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_329": {
                "variable": {
                    "value": "expected_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[tensor, torch.zeros((flock_size, overlap, n_cluster_centers), dtype=dtype, device=device)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_373": {
                "variable": {
                    "value": "training_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1]], [[0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0]], [[0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_377": {
                "variable": {
                    "value": "training_contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[1, 0], [0, 0], [0, 0]]], [[[0, 1], [0, 0], [0, 0]]]], [[[[1, 0], [0, 0], [0, 0]]], [[[0, 1], [0, 0], [0, 0]]]], [[[[1, 0], [0, 0], [0, 0]]], [[[0, 1], [0, 0], [0, 0]]]], [[[[1, 0], [0, 0], [0, 0]]], [[[0, 1], [0, 0], [0, 0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_382": {
                "variable": {
                    "value": "expected_actions_1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0]], [[0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0]], [[1, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_401": {
                "variable": {
                    "value": "testing_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0]], [[0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_405": {
                "variable": {
                    "value": "testing_contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0, 1], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]], [[[[0, 1], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]], [[[[0, 1], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]], [[[[0, 1], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_410": {
                "variable": {
                    "value": "expected_actions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 0, 0, 0, 1, 0], [0, 1, 0, 0, 0, 0]], [[0, 0, 0, 1, 0, 0], [0, 0, 1, 0, 0, 0]], [[0, 0, 0, 0, 0, 1], [1, 0, 0, 0, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_447": {
                "variable": {
                    "value": "cluster_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, batch_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_448": {
                "variable": {
                    "value": "context_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, batch_size, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_449": {
                "variable": {
                    "value": "exploring_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, batch_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_450": {
                "variable": {
                    "value": "actions_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, batch_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_451": {
                "variable": {
                    "value": "rewards_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, batch_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_461": {
                "variable": {
                    "value": "expected_comb_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[cluster_batch, torch.zeros(flock_size, overlap, n_cluster_centers)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_462": {
                "variable": {
                    "value": "expected_comb_contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[context_batch, torch.zeros(flock_size, overlap, context_size)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_463": {
                "variable": {
                    "value": "expected_comb_exploring",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[exploring_batch, torch.zeros(flock_size, overlap, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_464": {
                "variable": {
                    "value": "expected_comb_actions",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[actions_batch, torch.zeros(flock_size, overlap, n_cluster_centers)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_465": {
                "variable": {
                    "value": "expected_comb_rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[rewards_batch, torch.zeros(flock_size, overlap, 2)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_66": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1, n_frequent_seqs, seq_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_70": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_74": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1, n_frequent_seqs, seq_length, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_78": {
                "variable": {
                    "value": "frequent_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_82": {
                "variable": {
                    "value": "frequent_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_86": {
                "variable": {
                    "value": "all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, max_encountered_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_90": {
                "variable": {
                    "value": "all_encountered_exploration_success_rates",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, max_encountered_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_94": {
                "variable": {
                    "value": "execution_counter_learning",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_97": {
                "variable": {
                    "value": "all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1, max_encountered_seqs, seq_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_101": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "max_encountered_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "7",
                            "int"
                        ],
                        [
                            "7",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_104": {
                "variable": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1, max_encountered_seqs, seq_length, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_108": {
                "variable": {
                    "value": "all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, max_encountered_seqs, seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_112": {
                "variable": {
                    "value": "frequent_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, n_frequent_seqs, seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_467": {
                "tensors": {
                    "value": "[torch.ones((flock_size, batch_size - overlap), dtype=torch.int64), torch.zeros((flock_size, overlap * 2), dtype=torch.int64)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_329": {
                "*size": {
                    "value": "(flock_size, overlap, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_461": {
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "overlap",
                    "type": "variable",
                    "possible_values": [
                        [
                            "overlap",
                            "Method Argument"
                        ],
                        [
                            "overlap",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "n_cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "n_cluster_centers",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_462": {
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "overlap",
                    "type": "variable",
                    "possible_values": [
                        [
                            "overlap",
                            "Method Argument"
                        ],
                        [
                            "overlap",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "context_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_463": {
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "overlap",
                    "type": "variable",
                    "possible_values": [
                        [
                            "overlap",
                            "Method Argument"
                        ],
                        [
                            "overlap",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_464": {
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "overlap",
                    "type": "variable",
                    "possible_values": [
                        [
                            "overlap",
                            "Method Argument"
                        ],
                        [
                            "overlap",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "n_cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "n_cluster_centers",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_465": {
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "overlap",
                    "type": "variable",
                    "possible_values": [
                        [
                            "overlap",
                            "Method Argument"
                        ],
                        [
                            "overlap",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_467": {
                "*size": {
                    "value": "(flock_size, batch_size - overlap)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_468": {
                "*size": {
                    "value": "(flock_size, overlap * 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/models/temporal_pooler/test_forward_process.py": {
        "torch": {
            "tensor_193": {
                "variable": {
                    "value": "buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 0], [0, 1, 0], [1, 0, 0], [0, 0, 1], [1, 0, 0]], [[0, 1, 0], [0, 0, 1], [1, 0, 0], [0, 0, 1], [nan, nan, nan], [nan, nan, nan]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_207": {
                "variable": {
                    "value": "buffer.contexts.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 1]], [[0.1, 0.1]], [[0, 1]], [[1, 0.5]], [[1, 0]], [[0, 0]]], [[[1, 1]], [[1, 1]], [[0.9, 0]], [[1, 0]], [[nan, nan]], [[nan, nan]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_225": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_226": {
                "variable": {
                    "value": "buffer.total_data_written",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[8, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_228": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2], [1, 0, 1], [invalid, invalid, invalid]], [[0, 1, 0], [invalid, invalid, invalid], [invalid, invalid, invalid]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_235": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[5, 4, 0], [3, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_238": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[4.5, 2.5]], [[1, 2.5]], [[3, 2.5]]], [[[4, 2]], [[0.1, 2]], [[3, 2]]], [[[0, 0]], [[0, 0]], [[0, 0]]]], [[[[0, 1.5]], [[1, 1.5]], [[2.9, 1.5]]], [[[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[0, 0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_246": {
                "variable": {
                    "value": "cluster_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1], [0.5, 0.5, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_253": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1], [0, 0], [0, 0]]], [[[1, 0.5], [0, 0], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_260": {
                "variable": {
                    "value": "frequent_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_265": {
                "variable": {
                    "value": "projection_output",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_266": {
                "variable": {
                    "value": "action_output",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_296": {
                "variable": {
                    "value": "expected_seq_likelihoods_clusters_only",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[eps, eps ** 2, 0], [0.5 * eps, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_299": {
                "variable": {
                    "value": "expected_seq_likelihoods_without_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[5 * eps, 4 * eps ** 2, 0], [3 * 0.5 * eps, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_303": {
                "variable": {
                    "value": "expected_buffer_current_ptr",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[2, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_304": {
                "variable": {
                    "value": "expected_buffer_total_data_written",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[9, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_306": {
                "variable": {
                    "value": "expected_buffer_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 0], [0, 0, 1], [1, 0, 0], [0, 0, 1], [1, 0, 0]], [[0, 1, 0], [0, 0, 1], [1, 0, 0], [0, 0, 1], [0.5, 0.5, 0], [nan, nan, nan]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_320": {
                "variable": {
                    "value": "expected_buffer_contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 1]], [[0.1, 0.1]], [[0, 1]], [[1, 0.5]], [[1, 0]], [[0, 0]]], [[[1, 1]], [[1, 1]], [[0.9, 0]], [[1, 0]], [[1, 0.5]], [[nan, nan]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_335": {
                "variable": {
                    "value": "expected_buffer_seq_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[2, 2, 2], [2, 2, 2], [0.9999, 0.0001, 0], [2, 2, 2], [2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [1, 0, 0], [2, 2, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_349": {
                "variable": {
                    "value": "expected_buffer_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[2, 2, 2], [2, 2, 2], [0.25, 0.5, 0.25], [2, 2, 2], [2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [0.5, 0.5, 0], [2, 2, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_362": {
                "variable": {
                    "value": "expected_projection_output",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.25, 0.5, 0.25], [0.5, 0.5, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_365": {
                "variable": {
                    "value": "expected_action_output",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1], [1, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_407": {
                "variable": {
                    "value": "buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_415": {
                "variable": {
                    "value": "buffer.contexts.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0]], [[0.1, 0.1]], [[0, 1]], [[0, 0.5]], [[0.5, 0.5]], [[1, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_427": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[5]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_428": {
                "variable": {
                    "value": "buffer.total_data_written",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[8]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_431": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2], [0, 1, 0], [invalid, invalid, invalid]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_435": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[5, 4, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_438": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[1, 0.01]], [[0.01, 1]], [[0.01, 5]]], [[[0.5, 0.5]], [[0.01, 1]], [[4, 0.01]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_444": {
                "variable": {
                    "value": "cluster_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_447": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1], [5, 0], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_449": {
                "variable": {
                    "value": "frequent_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0, 1]], [[1, 0, 0]], [[0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_457": {
                "variable": {
                    "value": "projection_output",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_458": {
                "variable": {
                    "value": "action_output",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_460": {
                "variable": {
                    "value": "passive_predicted_cluster_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, seq_length, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_520": {
                "variable": {
                    "value": "expected_seq_likelihoods_clusters_only",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.9996, 0.9996, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_522": {
                "variable": {
                    "value": "expected_seq_likelihoods_without_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[4.998, 3.9984, 0.0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_525": {
                "variable": {
                    "value": "expected_buffer_current_ptr",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_526": {
                "variable": {
                    "value": "expected_buffer_total_data_written",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[9]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_528": {
                "variable": {
                    "value": "expected_buffer_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_536": {
                "variable": {
                    "value": "expected_buffer_contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1]], [[0.1, 0.1]], [[0, 1]], [[0, 0.5]], [[0.5, 0.5]], [[1, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_545": {
                "variable": {
                    "value": "expected_buffer_seq_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.7142, 0.2858, 0], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_553": {
                "variable": {
                    "value": "expected_buffer_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.3214, 0.5, 0.1786], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_560": {
                "variable": {
                    "value": "expected_passive_predicted_clusters_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 0, 0], [0, 1, 0], [0.2858, 0, 0.7142]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_560": {
                "variable": {
                    "value": "expected_passive_predicted_clusters_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_564": {
                "variable": {
                    "value": "expected_projection_output",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.3214, 0.5, 0.1786]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_566": {
                "variable": {
                    "value": "expected_action_output",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.2858, 0, 0.7142]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_596": {
                "variable": {
                    "value": "expected_seq_likelihoods_clusters_only",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.9996, 0.9996, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_598": {
                "variable": {
                    "value": "expected_seq_likelihoods_without_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[4.998, 3.9984, 0.0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_601": {
                "variable": {
                    "value": "expected_buffer_current_ptr",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_602": {
                "variable": {
                    "value": "expected_buffer_total_data_written",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[9]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_604": {
                "variable": {
                    "value": "expected_buffer_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1], [0, 1, 0], [1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_612": {
                "variable": {
                    "value": "expected_buffer_contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1]], [[0.1, 0.1]], [[0, 1]], [[0, 0.5]], [[0.5, 0.5]], [[1, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_621": {
                "variable": {
                    "value": "expected_buffer_seq_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.7142, 0.2858, 0], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_629": {
                "variable": {
                    "value": "expected_buffer_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.3214, 0.5, 0.1786], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_636": {
                "variable": {
                    "value": "expected_projection_output",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.3214, 0.5, 0.1786]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_638": {
                "variable": {
                    "value": "expected_action_output",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.6133, 0.0, 0.3867]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_686": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_687": {
                "variable": {
                    "value": "buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 0.1, 0.9], [1, 0, 0], [0, 1, 0], [1, 0, 0], [0, 0.5, 0.5]], [[0, 1, 0], [0, 0, 1], [1, 0, 0], [0.2, 0.4, 0.4], [0.5, 0, 0.5]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_699": {
                "variable": {
                    "value": "buffer.contexts.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.2, 0.1], [0.3, 0.4]], [[1, 0], [1, 0.2]], [[0, 1], [0.3, 0.4]], [[0, 1], [1, 0.2]], [[0, 1], [0.5, 0.5]]], [[[1, 0.3], [1, 0.5]], [[0.2, 0.4], [0, 1]], [[0, 1], [1, 0.6]], [[0.5, 0.5], [0.4, 0.2]], [[0.2, 0.4], [0.1, 0.9]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_711": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [0, 1, 2], [1, 2, 0], [invalid, invalid, invalid]], [[1, 0, 1], [0, 1, 2], [1, 2, 0], [0, 2, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_720": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[3, 2, 1, 0], [10, 2, 2, 0.1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_723": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.5, 0.5], [0.5, 0.5]], [[0.5, 0.5], [0.5, 0.5]], [[0.5, 0.5], [0.5, 0.5]]], [[[0.5238, 0.6], [0.375, 0.2]], [[0.3023, 0.2], [0.2593, 0.4]], [[0.2308, 0.5], [0.2105, 1]]], [[[0.1, 1], [0.1, 1]], [[0.1, 1], [0.1, 1]], [[0.1, 1], [0.1, 1]]], [[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]]], [[[[0.2, 0.5], [0.2, 0.4]], [[0.4, 0], [0.1, 0.1]], [[1, 0], [0.9, 0.3]]], [[[0.2, 0.1], [0.3333, 0.3]], [[0.1, 0.9], [0.1, 0.4]], [[0.1, 0.4], [0.1, 0.7]]], [[[0.1, 0.4], [0.1, 1]], [[0.4, 0.1], [0.1, 1]], [[0.1, 0.6], [0.1, 1]]], [[[0.1, 0.54], [0.1, 0.67]], [[0.1, 0.31], [0.1, 0.62]], [[0.1, 0.62], [33333, 0.552]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_756": {
                "variable": {
                    "value": "seq_likelihoods_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_759": {
                "variable": {
                    "value": "seq_likelihoods_priors_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_762": {
                "variable": {
                    "value": "seq_likelihoods_for_each_provider",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookbehind, n_providers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_765": {
                "variable": {
                    "value": "seq_likelihoods_priors_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_768": {
                "variable": {
                    "value": "seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_771": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "end": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_771": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_773": {
                "variable": {
                    "value": "cluster_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_774": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_providers, NUMBER_OF_CONTEXT_TYPES, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_776": {
                "variable": {
                    "value": "projection_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_777": {
                "variable": {
                    "value": "action_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_779": {
                "variable": {
                    "value": "provider_informativeness",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, seq_lookbehind, n_providers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_804": {
                "variable": {
                    "value": "expected_cluster_history",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 0.5, 0.5], [0, 0.1, 0.9]], [[0.2, 0.4, 0.4], [0.5, 0, 0.5]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_810": {
                "variable": {
                    "value": "expected_context_history",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1], [0.5, 0.5]], [[0.2, 0.1], [0.3, 0.4]]], [[[0.5, 0.5], [0.4, 0.2]], [[0.2, 0.4], [0.1, 0.9]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_816": {
                "variable": {
                    "value": "expected_seq_likelihoods_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0.45, 0], [0.2, 0, 0.2, 0.1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_820": {
                "variable": {
                    "value": "expected_seq_likelihoods_for_each_provider",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0.44, 0.24], [0.054, 0.19]], [[0, 0], [0, 0]]], [[[0.7, 0.32], [0.16, 0.2]], [[0, 0], [0, 0]], [[0.1, 0.096], [0.048, 0.36]], [[0, 0], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_829": {
                "variable": {
                    "value": "expected_likelihood_priors_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0.45, 0], [2, 0, 0.4, 0.01]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_832": {
                "variable": {
                    "value": "expected_provider_informativeness",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.0, 0.0], [0.0, 0.0]], [[0.007, 0.012], [0.013, 0.48]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_836": {
                "variable": {
                    "value": "expected_seq_likelihoods_priors_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 0.44, 0], [0.2, 0, 0.36, 0.0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_840": {
                "variable": {
                    "value": "expected_seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1, 0], [0.077, 0, 0.7, 0.21]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_843": {
                "variable": {
                    "value": "seq_likelihoods_by_context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_frequent_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "layout": {
                    "value": "context_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "5",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_889": {
                "variable": {
                    "value": "buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0, 0], [1, 0, 0, 0], [0, 0, 1, 0]], [[0, 0, 1, 0], [0, 1, 0, 0], [1, 0, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_897": {
                "variable": {
                    "value": "cluster_history",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, seq_lookbehind, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_898": {
                "variable": {
                    "value": "seq_likelihoods_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_899": {
                "variable": {
                    "value": "seq_likelihoods_priors_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_901": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 2], [0, 2, 1], [-1, -1, -1]], [[2, 1, 0], [0, 2, 1], [1, 0, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_903": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 3, 0], [4, 1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_909": {
                "variable": {
                    "value": "expected_cluster_history",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0], [0, 0, 1, 0]], [[0, 1, 0, 0], [1, 0, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_911": {
                "variable": {
                    "value": "expected_seq_likelihoods_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 0], [0, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_912": {
                "variable": {
                    "value": "expected_seq_likelihoods_priors_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 3, 0], [0, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_936": {
                "variable": {
                    "value": "buffer.contexts.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 0, 0], [1, 0, 0]], [[1, 0, 0], [0, 0, 1]], [[0, 1, 0], [0, 1, 0]]], [[[1, 0, 0], [1, 0, 0]], [[1, 0, 0], [0, 1, 0]], [[0, 1, 0], [0, 0, 1]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_950": {
                "variable": {
                    "value": "context_history",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, seq_lookbehind, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_953": {
                "variable": {
                    "value": "seq_likelihoods_priors_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[3, 3, 0], [2, 1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_958": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.0, 0.1, 0.4], [0, 0, 1]], [[0.5, 0.5, 0], [1, 0, 0]], [[0.7, 0.3, 0], [0, 1, 0]]], [[[1, 0, 0], [0, 1, 0]], [[0.4, 0.6, 0], [0, 1, 0]], [[0.1, 0.9, 0], [0, 1, 0]]], [[[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]]], [[[[0.4, 0.6, 0], [0, 1, 0]], [[0.2, 0.4, 0.4], [0, 1, 0]], [[0.4, 0.3, 0.3], [1, 0, 0]]], [[[0.7, 0.2, 0.1], [0.8, 0.2, 0]], [[1, 0.0, 0], [1, 0, 0]], [[0.2, 0.6, 0], [1, 0, 0]]], [[[1, 0.0, 0], [0, 0, 1]], [[0.7, 0.3, 0], [0, 0, 1]], [[0.2, 0.8, 0], [0, 0, 1]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_983": {
                "variable": {
                    "value": "seq_likelihoods_for_each_provider",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookbehind, n_providers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_986": {
                "variable": {
                    "value": "seq_likelihoods_by_context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_frequent_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "layout": {
                    "value": "context_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "5",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_993": {
                "variable": {
                    "value": "expected_seq_likelihoods_for_each_provider",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.0, 3], [1.5, 0.0]], [[3, 0.0], [1.8, 3]], [[0.0, 0.0], [0.0, 0.0]]], [[[0.8, 2.0], [0.8, 0.0]], [[0.7, 0.2], [0.0, 0.0]], [[1.0, 0.0], [0.3, 1.0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1009": {
                "variable": {
                    "value": "expected_seq_likelihoods_by_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[2.1, 0.9, 0.0], [0.0, 3.0, 0.0]], [[0.3, 2.7, 0.0], [0.0, 3.0, 0.0]], [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]], [[[0.8, 0.6, 0.6], [2.0, 0.0, 0.0]], [[0.2, 0.6, 0.0], [1.0, 0.0, 0.0]], [[0.2, 0.8, 0.0], [0.0, 0.0, 1.0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1045": {
                "variable": {
                    "value": "buffer.contexts.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1, nan], [1, 0, 0]], [[1, 0, nan], [0, 0, 1]], [[1, 0, nan], [0, 1, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1055": {
                "variable": {
                    "value": "context_history",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, seq_lookbehind, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1058": {
                "variable": {
                    "value": "seq_likelihoods_priors_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1064": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.8, 0.2, nan], [0.2, 0.2, 0.8]], [[0.8, 0.2, nan], [0.2, 0.8, 0.2]], [[0.8, 0.2, nan], [0.8, 0.2, 0.2]]], [[[0.8, 0.2, nan], [0.2, 0.2, 0.8]], [[0.2, 0.8, nan], [0.2, 0.8, 0.2]], [[0.8, 0.2, nan], [0.8, 0.2, 0.2]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1072": {
                "variable": {
                    "value": "seq_likelihoods_for_each_provider",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, n_providers, seq_lookbehind)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1075": {
                "variable": {
                    "value": "seq_likelihoods_by_context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_frequent_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "layout": {
                    "value": "context_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "5",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1083": {
                "variable": {
                    "value": "expected_seq_likelihoods_for_each_provider",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.8, 0.8], [0.8, 0.8]], [[0.8, 0.8], [0.2, 0.8]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1087": {
                "variable": {
                    "value": "expected_seq_likelihoods_by_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.8, 0.2, 0.0], [0.8, 0.2, 0.2]], [[0.8, 0.2, 0.0], [0.8, 0.2, 0.2]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1092": {
                "variable": {
                    "value": "provider_informativeness",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_providers, seq_lookbehind)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1098": {
                "variable": {
                    "value": "expected_provider_informativeness",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.0, 0.0], [0.2231, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1102": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.993, 0.006, nan], [0.006, 0.006, 0.993]], [[0.993, 0.006, nan], [0.006, 0.993, 0.006]], [[0.993, 0.006, nan], [0.993, 0.006, 0.006]]], [[[0.993, 0.006, nan], [0.006, 0.006, 0.993]], [[0.006, 0.993, nan], [0.006, 0.993, 0.006]], [[0.993, 0.006, nan], [0.993, 0.006, 0.006]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1116": {
                "variable": {
                    "value": "expected_seq_likelihoods_for_each_provider",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.993, 0.993], [0.993, 0.993]], [[0.993, 0.993], [0.006, 0.993]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1120": {
                "variable": {
                    "value": "expected_seq_likelihoods_by_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.993, 0.006, 0.0], [0.993, 0.006, 0.006]], [[0.993, 0.006, 0.0], [0.993, 0.006, 0.006]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1129": {
                "variable": {
                    "value": "expected_provider_informativeness",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.0, 0.0], [1.8674, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1154": {
                "variable": {
                    "value": "context_informativeness",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, seq_lookbehind, n_providers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1157": {
                "variable": {
                    "value": "seq_likelihoods_priors_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[4, 3, 0], [2, 3, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1160": {
                "variable": {
                    "value": "seq_likelihoods_for_each_provider",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1.5, 3], [0, 0]], [[4.8, 3], [0, 0]], [[0, 0], [0, 0]]], [[[1.6, 0.1], [0, 0]], [[0.7, 0.1], [0, 0]], [[1.3, 1], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1170": {
                "variable": {
                    "value": "expected_context_informativeness",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.2537, 0.0102], [0.0, 0.0]], [[0.2475, 1.0897], [0.0, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1196": {
                "variable": {
                    "value": "seq_likelihoods_priors_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1200": {
                "variable": {
                    "value": "context_informativeness",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.9621, 0.2674], [0.0017, 0.1186]], [[0.9939, 1.3206], [0.0865, 0.7034]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1204": {
                "variable": {
                    "value": "seq_likelihoods_for_each_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.3, 1.8], [4.5, 0.3]], [[4.8, 6], [3, 0.6]], [[0, 0], [0, 0]]], [[[4, 6], [1, 5.2]], [[0.3, 0.2], [0.6, 0.6]], [[0.1, 0.2], [0.3, 0.3]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1214": {
                "variable": {
                    "value": "expected_seq_likelihoods_priors_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.3, 4.8, 0], [6, 0.2, 0.2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_1227": {
                "variable": {
                    "value": "seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1231": {
                "variable": {
                    "value": "seq_likelihoods_priors_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.3, 4.8, 0], [6, 0.2, 0.2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1235": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 3, 0], [4, 1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1241": {
                "variable": {
                    "value": "expected_seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0857, 0.9143, 0], [0.7895, 0.1053, 0.1053]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1264": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2], [1, 2, 3], [2, 3, 0], [3, 0, 1]], [[0, 1, 0], [1, 0, 1], [0, 1, 2], [1, 2, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1273": {
                "variable": {
                    "value": "frequent_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[3, 2, 1, 0], [10, 2, 2, 0.1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_1276": {
                "variable": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1287": {
                "variable": {
                    "value": "process._seq_likelihoods",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 2, 0], [0.5, 0, 0.5, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1294": {
                "variable": {
                    "value": "expected_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.25, 0, 0.25, 0.5], [0.375, 0.5, 0.125, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1311": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2, 3], [0, 2, 3, 2], [1, 3, 2, 0], [3, 2, 3, 2], [-1, -1, -1, -1]], [[1, 3, 2, 1], [0, 1, 0, 3], [3, 2, 0, 1], [1, 3, 2, 3], [3, 2, 1, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1331": {
                "variable": {
                    "value": "pred_outputs1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "seq_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1332": {
                "variable": {
                    "value": "pred_outputs2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "seq_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1334": {
                "variable": {
                    "value": "seq_likelihoods1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[3, 1, 2, 2, 0], [4, 1, 2, 4, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1335": {
                "variable": {
                    "value": "seq_likelihoods2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 1, 1, 1, 0], [2, 3, 1, 2, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1337": {
                "variable": {
                    "value": "expected_pred_outputs1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.5, 0.25, 0, 0.25], [0, 0.375, 0.375, 0.25], [0, 0, 0.625, 0.375], [0.25, 0, 0.375, 0.375]], [[0.0909, 0.7273, 0, 0.1818], [0, 0.0909, 0.1818, 0.7273], [0.2727, 0, 0.7273, 0], [0.0, 0.5455, 0.0, 0.4545]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1346": {
                "variable": {
                    "value": "expected_pred_outputs2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.6, 0.2, 0, 0.2], [0, 0.4, 0.4, 0.2], [0, 0, 0.6, 0.4], [0.2, 0, 0.4, 0.4]], [[0.375, 0.5, 0, 0.125], [0, 0.375, 0.125, 0.5], [0.5, 0, 0.5, 0], [0, 0.375, 0, 0.625]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1386": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2], [0, 1, 3], [0, 2, 3]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1390": {
                "variable": {
                    "value": "freq_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1392": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0, 0], [5, 3, 0], [0, 0, 0]], [[0, 0, 0], [1.5, 3, 0], [0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1401": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.7, 0.2, 0.1], [0.5, 0.3, 0.2]], [[0.6, 0.2, 0.5], [0.5, 0.2, 0.1]], [[0.4, 0, 0.1], [0.6, 0.7, 0.5]]], [[[0.3, 0.5, 0.7], [0.9, 0.2, 0.3]], [[0.1, 0.2, 0.5], [0.3, 0.4, 0.5]], [[0.7, 0.4, 0.2], [0.5, 0.5, 0]]], [[[0.9, 0.1, 0.3], [0.2, 0, 0.1]], [[0.25, 0, 0.5], [0, 0.3, 0]], [[1, 1, 0], [1, 0, 1]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1431": {
                "variable": {
                    "value": "frequent_exploration_destination_dists",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.01, 0.7, 0.3, 0.01], [0.01, 0.01, 0.6, 0.4]], [[0.01, 0.7, 0.3, 0.01], [0.01, 0.01, 0.1, 0.9]], [[0.01, 0.2, 0.8, 0.01], [0.01, 0.01, 0.01, 1]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1441": {
                "variable": {
                    "value": "seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.2, 0.3, 0.5]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1454": {
                "variable": {
                    "value": "seq_rewards_goal_directed1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1457": {
                "variable": {
                    "value": "expected_seq_rewards1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.72, 0], [1.1961, 0], [3.6, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1459": {
                "variable": {
                    "value": "frequent_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1484": {
                "variable": {
                    "value": "seq_rewards_goal_directed2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1487": {
                "variable": {
                    "value": "expected_seq_rewards2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.8423, 0], [1.3366, 0], [2.9368, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1525": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2], [0, 2, 3], [1, 2, 3], [0, 1, 3]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1530": {
                "variable": {
                    "value": "freq_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1532": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0, 0], [5, 3, 1.2], [0, 0, 0]], [[0, 0, 0], [1.5, 7, 2], [0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1541": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.7, 0.2, 0.1], [0.5, 0.3, 0.2]], [[0.6, 0.2, 0.5], [0.5, 0.2, 0.1]], [[0.4, 0, 0.1], [0.6, 0.7, 0.5]]], [[[0.3, 0.5, 0.7], [0.9, 0.2, 0.3]], [[0.1, 0.2, 0.5], [0.3, 0.4, 0.5]], [[0.7, 0.4, 0.2], [0.5, 0.5, 0]]], [[[0.9, 0.1, 0.3], [0.2, 0, 0.1]], [[0.25, 0, 0.5], [0, 0.3, 0]], [[0.5, 0.2, 0], [0.3, 0, 0.6]]], [[[0.2, 0.7, 0.1], [0.8, 0.1, 0.2]], [[0.4, 0.2, 0.9], [0.1, 0.3, 0.1]], [[0.5, 0.2, 0.6], [0.3, 0.1, 0.3]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1578": {
                "variable": {
                    "value": "frequent_exploration_destination_dists",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0.6, 0.4, 0], [0, 0, 0.8, 0.2]], [[0, 0.2, 0.8, 0], [0, 0, 0, 1]], [[0, 0, 1, 0], [0, 0, 0, 1]], [[0, 0.9, 0.1, 0], [0, 0, 0.3, 0.7]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1591": {
                "variable": {
                    "value": "seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.2, 0.25, 0.35, 0.2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1604": {
                "variable": {
                    "value": "seq_rewards_goal_directed1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1607": {
                "variable": {
                    "value": "expected_seq_rewards1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.0422, 0], [1.1115, 0], [0.9765, 0], [0.736, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1610": {
                "variable": {
                    "value": "frequent_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1635": {
                "variable": {
                    "value": "seq_rewards_goal_directed2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1638": {
                "variable": {
                    "value": "expected_seq_rewards2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.8686, 0], [0.9775, 0], [0.8788, 0], [0.6762, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1672": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 4, 1, 3], [0, 1, 3, 2], [0, 2, 4, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1676": {
                "variable": {
                    "value": "freq_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[5, 5, 5]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1678": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0, 0], [0, 0, 0], [0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1683": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_frequent_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "layout": {
                    "value": "n_providers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1686": {
                "variable": {
                    "value": "frequent_exploration_destination_dists",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0, 0, 0, 1], [0, 1, 0, 0, 0], [0, 0, 0, 1, 0]], [[0, 1, 0, 0, 0], [0, 0, 0, 1, 0], [0, 0, 1, 0, 0]], [[0, 0, 1, 0, 0], [0, 0, 0, 0, 1], [0, 1, 0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1699": {
                "variable": {
                    "value": "seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.33, 0.33, 0.33]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1701": {
                "variable": {
                    "value": "frequent_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0], [25, 0], [0, 0]], [[25, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [25, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1718": {
                "variable": {
                    "value": "seq_rewards_goal_directed",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1721": {
                "variable": {
                    "value": "expected_seq_rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.3365, 0], [1.485, 0], [1.2028, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1765": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2], [0, 1, 3], [0, 1, 4], [0, 2, 3]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1770": {
                "variable": {
                    "value": "freq_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[5, 3, 2, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1772": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 0, 0], [5, 3, 1.2], [0, 0, 0]], [[0, 0, 0], [1.5, 7, 1000], [0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1781": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.7, 0.2, 0.1], [0.5, 0.3, 0.0]], [[0.6, 0.2, 0.5], [0.5, 0.2, 0.0]], [[0.4, 0, 0.1], [0.6, 0.7, 0.0]]], [[[0.3, 0.5, 0.7], [0.9, 0.2, 0.0]], [[0.1, 0.2, 0.5], [0.3, 0.4, 0.0]], [[0.7, 0.4, 0.2], [0.5, 0.5, 0]]], [[[0.9, 0.1, 0.3], [0.2, 0, 0]], [[0.25, 0, 0.5], [0, 0.3, 0]], [[0.5, 0.2, 0], [0.3, 0, 1]]], [[[0.3, 0.5, 0.7], [0.9, 0.2, 0.0]], [[0.1, 0.2, 0.5], [0.3, 0.4, 0.0]], [[0.7, 0.4, 0.2], [0.5, 0.5, 0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1818": {
                "variable": {
                    "value": "frequent_exploration_destination_dists",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1, 0, 0, 0], [0, 0, 1, 0, 0]], [[0, 1, 0, 0, 0], [0, 0, 0, 1, 0]], [[0, 1, 0, 0, 0], [0, 0, 0, 0, 1]], [[0, 0.5, 0.5, 0, 0], [0, 0, 0, 1, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1831": {
                "variable": {
                    "value": "seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.21, 0.34, 0.0001, 0.4499]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1844": {
                "variable": {
                    "value": "seq_rewards_goal_directed1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1847": {
                "variable": {
                    "value": "expected_seq_rewards1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.1529, 0], [1.5422, 0], [0.09, 0], [2.0003, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1850": {
                "variable": {
                    "value": "frequent_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[10, 0], [15, 0]], [[3.3, 0], [3, 0]], [[2, 0], [2, 0]], [[0, 0], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1878": {
                "variable": {
                    "value": "seq_rewards_goal_directed2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1881": {
                "variable": {
                    "value": "expected_seq_rewards2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.0376, 0], [1.388, 0], [0.081, 0], [1.8077, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1919": {
                "variable": {
                    "value": "frequent_sequences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 2, 3], [0, 2, 3, 2], [1, 3, 2, 0], [3, 2, 3, 2]], [[1, 3, 2, 1], [0, 1, 0, 3], [3, 2, 0, 1], [1, 3, 2, 3]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1923": {
                "variable": {
                    "value": "pred_outputs1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "seq_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_1924": {
                "variable": {
                    "value": "pred_outputs2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "seq_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1926": {
                "variable": {
                    "value": "sequence_likelihoods1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[3, 1, 2, 2], [4, 1, 2, 4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1927": {
                "variable": {
                    "value": "sequence_likelihoods2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 1, 1, 1], [2, 3, 1, 2]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1929": {
                "variable": {
                    "value": "expected_pred_outputs1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.5, 0.25, 0, 0.25], [0, 0.375, 0.375, 0.25], [0, 0, 0.625, 0.375], [0.25, 0, 0.375, 0.375]], [[0.0909, 0.7273, 0, 0.1818], [0, 0.0909, 0.1818, 0.7272], [0.2727, 0, 0.7273, 0], [0.0, 0.5455, 0.0, 0.4545]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1938": {
                "variable": {
                    "value": "expected_pred_outputs2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.6, 0.2, 0, 0.2], [0, 0.4, 0.4, 0.2], [0, 0, 0.6, 0.4], [0.2, 0, 0.4, 0.4]], [[0.375, 0.5, 0, 0.125], [0, 0.375, 0.125, 0.5], [0.5, 0, 0.5, 0], [0, 0.375, 0, 0.625]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_53": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_56": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "end": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_56": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_59": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_62": {
                "variable": {
                    "value": "frequent_seq_likelihoods_priors_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_69": {
                "variable": {
                    "value": "cluster_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_72": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_providers, NUMBER_OF_CONTEXT_TYPES, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_75": {
                "variable": {
                    "value": "reward_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_78": {
                "variable": {
                    "value": "projection_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_81": {
                "variable": {
                    "value": "action_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_84": {
                "variable": {
                    "value": "action_rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_87": {
                "variable": {
                    "value": "action_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_90": {
                "variable": {
                    "value": "passive_predicted_cluster_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, seq_length, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_93": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_length, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_97": {
                "variable": {
                    "value": "frequent_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_101": {
                "variable": {
                    "value": "frequent_explorations_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_105": {
                "variable": {
                    "value": "frequent_explorations_results",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_110": {
                "variable": {
                    "value": "execution_counter_forward",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "empty_113": {
                "variable": {
                    "value": "seq_likelihoods_by_context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "150",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "n_frequent_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "layout": {
                    "value": "context_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "5",
                            "Method Argument"
                        ],
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "empty_115": {
                "variable": {
                    "value": "best_matching_context",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/temporal_pooler/test_integration.py": {
        "torch": {
            "randint_17": {
                "variable": {
                    "value": "flock.buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "params.temporal.buffer_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "flock.buffer.current_ptr.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "randint_19": {
                "variable": {
                    "value": "flock.buffer.total_data_written",
                    "type": "Attribute",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "params.spatial.buffer_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "flock.buffer.current_ptr.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_39": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list(map(int, indices_np))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_39": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_65": {
                "variable": {
                    "value": "cluster_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_66": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_providers, NUMBER_OF_CONTEXT_TYPES, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_67": {
                "variable": {
                    "value": "reward_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/models/temporal_pooler/test_learn_process.py": {
        "torch": {
            "arange_62": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "end": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_62": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_169": {
                "variable": {
                    "value": "buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 0], [0, 1, 0], [1, 0, 0], [1, 0, 0], [-1, -1, -1]], [[0, 1, 0], [0, 0, 1], [1, 0, 0], [0, 0, 1], [1, 0, 0], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_182": {
                "variable": {
                    "value": "buffer.contexts.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 1, 1, 1]], [[0, 0, 0, 0]], [[0, 1, 0, 1]], [[1, 0.5, 0.5, 0.2]], [[1, 0, 0, 1]], [[-1, -1, -1, -1]]], [[[1, 1, 0, 1]], [[1, 1, 0, 0.2]], [[0.9, 0, 0, 1]], [[1, 0, 0, 1]], [[0, 1, 0, 0]], [[-1, -1, -1, -1]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_195": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[4, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_197": {
                "variable": {
                    "value": "all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]], [[1, 0, 1], [0, 1, 2], [1, 2, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_212": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.55, 0.4, 0, 0, 0, 0, 0], [0.5, 0.5, 0.5, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_215": {
                "variable": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0, 0.2, 0, 0]], [[0, 0.1, 0.2, 0.3]], [[0.2, 0.1, 0, 0]]], [[[0.2, 0.2, 0.2, 0.2]], [[0.2, 0.2, 0.2, 0.2]], [[0.1, 0.1, 0.1, 0.1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]]], [[[[0, 0, 0, 0.1]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0.2]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0.3]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_259": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_262": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_265": {
                "variable": {
                    "value": "frequent_pos_context_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_length, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_270": {
                "variable": {
                    "value": "expected_all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [0, 1, 0], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]], [[1, 2, 0], [0, 2, 0], [2, 0, 2], [0, 1, 2], [1, 0, 1], [-1, -1, -1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_285": {
                "variable": {
                    "value": "expected_all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.55, 1.0, 0.4, 0.0, 0.0, 0.0, 0.0], [1.0, 0.6667, 0.6667, 0.3333, 0.3333, 0.0, 0.0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_290": {
                "variable": {
                    "value": "expected_frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [0, 1, 0], [2, 1, 0]], [[1, 2, 0], [0, 2, 0], [2, 0, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_296": {
                "variable": {
                    "value": "expected_frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.55, 1.0, 0.4], [1.0, 0.6667, 0.6667]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_300": {
                "variable": {
                    "value": "expected_all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[1, 1.2, 1, 1]], [[0, 0.1, 0.2, 0.3]], [[0.2, 1.1, 0, 1]]], [[[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]]], [[[0.2, 0.2, 0.2, 0.2]], [[0.2, 0.2, 0.2, 0.2]], [[0.1, 0.1, 0.1, 0.1]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]]], [[[[0.6667, 0.6667, 0, 0.8667]], [[0.6667, 0.6667, 0, 0.13333]], [[0.6, 0, 0, 0.6667]]], [[[0.3333, 0.3333, 0.3333, 0.3333]], [[0.3333, 0.3333, 0.3333, 0.3333]], [[0.3333, 0.3333, 0.3333, 0.3333]]], [[[0.3333, 0.3333, 0.3333, 0.3333]], [[0.3333, 0.3333, 0.3333, 0.3333]], [[0.3333, 0.3333, 0.3333, 0.3333]]], [[[0, 0, 0, 0.1333]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0.0667]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[-0.6667, -0.6667, -0.6667, -0.6667]], [[-0.6667, -0.6667, -0.6667, -0.6667]], [[-0.6667, -0.6667, -0.6667, -0.6667]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_344": {
                "variable": {
                    "value": "expected_frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.5195, 0.5368, 0.5195, 0.5195]], [[0.4329, 0.4416, 0.4502, 0.4589]], [[0.4502, 0.5281, 0.4329, 0.5195]]], [[[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]]], [[[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]], [[0.4904, 0.4904, 0.4904, 0.4904]]]], [[[[0.5152, 0.5152, 0.4545, 0.5333]], [[0.5152, 0.5152, 0.4545, 0.4667]], [[0.5091, 0.4545, 0.4545, 0.5152]]], [[[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]]], [[[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_372": {
                "variable": {
                    "value": "expected_encountered_batch_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_376": {
                "variable": {
                    "value": "expected_most_probable_batch_seq_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 0, 0], [1, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_384": {
                "variable": {
                    "value": "expected_most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [-1, -1, -1], [-1, -1, -1]], [[0, 2, 0], [-1, -1, -1], [2, 0, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_390": {
                "variable": {
                    "value": "expected_newly_encountered_seqs_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 0, 0], [1, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_391": {
                "variable": {
                    "value": "expected_newly_encountered_seqs_indicator",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 1], [0, 1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_393": {
                "variable": {
                    "value": "expected_total_encountered_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[2.95, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_438": {
                "variable": {
                    "value": "cluster_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 0], [0, 1, 0], [1, 0, 0], [1, 0, 0]], [[0, 1, 0], [0, 0, 1], [1, 0, 0], [0, 0, 1], [1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_449": {
                "variable": {
                    "value": "context_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 0, 1, 1]], [[0.2, 0.8, 0.33, 1]], [[0.6, 0.99, 1, 0]], [[0, 1, 1, 0]], [[0, 1, 1, 1]]], [[[1, 1, 1, 1]], [[0, 0, 0, 0]], [[1, 1, 0, 0]], [[0, 0, 1, 1]], [[0, 1, 0, 1]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_460": {
                "variable": {
                    "value": "rewards_punishments_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.5, 0], [1.2, 0], [0, 0.53], [1.2, 0], [1.1, 0]], [[0, 1.9], [0, 0], [1.2, 0], [0, 0], [1.3, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_471": {
                "variable": {
                    "value": "exploring_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1], [0], [1], [0], [1]], [[0], [1], [1], [1], [0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_482": {
                "variable": {
                    "value": "actions_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.5, 0.5, 0], [0, 0.2, 0.8], [1, 0, 0], [0, 1, 0], [0, 0, 1]], [[0, 0.5, 0.5], [0, 0, 1], [0, 1, 0], [0, 0.5, 0.5], [0.2, 0.4, 0.4]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_493": {
                "variable": {
                    "value": "all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]], [[1, 0, 1], [0, 1, 2], [1, 2, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_508": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.5, 0.5, 0, 0, 0, 0, 0], [0.5, 0.5, 0.5, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_511": {
                "variable": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[5, 8.2, 0, 13]], [[0, 1, 2, 3]], [[5.2, 2, 0, 0]]], [[[2, 2, 2, 2]], [[2, 2, 2, 2]], [[1, 1, 1, 1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]]], [[[[0, 0, 1, 0.1]], [[1, 1, 1, 1]], [[1, 2, 1, 5]]], [[[0, 0, 1, 0.1]], [[1, 1, 1, 1]], [[1, 2, 1, 5]]], [[[0, 0, 1, 0.1]], [[1, 1, 1, 1]], [[1, 2, 1, 5]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_554": {
                "variable": {
                    "value": "all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.32, 0.36], [1, 0.0]], [[0.0, 1], [0.4, 0.4]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]], [[[0.0, 1.0], [0.1, 0.0]], [[0.3, 0.3], [0.4, 0.4]], [[0.0, 0.0], [1, 0.0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_584": {
                "variable": {
                    "value": "all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.1, 0.2], [0.3, 0.4], [prior, prior], [prior, prior], [prior, prior], [prior, prior], [prior, prior]], [[0.1, 0.2], [0.3, 0.4], [0.5, 0.6], [prior, prior], [prior, prior], [prior, prior], [prior, prior]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_600": {
                "variable": {
                    "value": "all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.32, 0.36, 0.32], [1, 0.0, 0.0]], [[0.0, 1, 0.3], [0.4, 0.4, 0.4]], [[prior, 1, prior], [1, prior, prior]], [[prior, prior, prior], [prior, prior, prior]], [[prior, prior, prior], [prior, prior, prior]], [[prior, prior, prior], [prior, prior, prior]], [[prior, prior, prior], [prior, prior, prior]]], [[[0.0, 1.0, 0.0], [0.1, 0.0, 0.0]], [[0.3, 0.3, 0.3], [0.4, 0.4, 0.4]], [[0.0, 0.0, 1], [1, 0.0, 0.0]], [[prior, 1, prior], [prior, prior, 1]], [[1, prior, prior], [prior, 1, prior]], [[prior, prior, prior], [prior, prior, prior]], [[prior, prior, prior], [prior, prior, prior]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_632": {
                "variable": {
                    "value": "expected_all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [0, 1, 0], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]], [[1, 2, 0], [0, 2, 0], [2, 0, 2], [0, 1, 2], [1, 0, 1], [-1, -1, -1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_647": {
                "variable": {
                    "value": "expected_all_encountered_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.5, 1.0, 0.5, 0.0, 0.0, 0.0, 0.0], [1.5, 1.0, 1.0, 0.5, 0.5, 0.0, 0.0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_651": {
                "variable": {
                    "value": "expected_all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[6, 8.2, 1, 14]], [[0.2, 1.8, 2.33, 4]], [[5.8, 2.99, 1, 0]]], [[[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]]], [[[2, 2, 2, 2]], [[2, 2, 2, 2]], [[1, 1, 1, 1]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]]], [[[[1, 1, 2, 1.1]], [[1, 1, 1, 1]], [[2, 3, 1, 5]]], [[[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]]], [[[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]], [[0.5, 0.5, 0.5, 0.5]]], [[[0, 0, 1, 0.1]], [[1, 1, 1, 1]], [[1, 2, 1, 5]]], [[[0, 0, 1, 0.1]], [[1, 1, 1, 1]], [[1, 2, 1, 5]]], [[[-1, -1, -1, -1]], [[-1, -1, -1, -1]], [[-1, -1, -1, -1]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_695": {
                "variable": {
                    "value": "expected_all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1.52, 0.36], [1, 0.53]], [[0.0, 0], [0.0, 0.0]], [[0, 1], [0.4, 0.4]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]], [[[0.0, 0.0], [2.2, 0.0]], [[0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0]], [[0.3, 0.3], [0.4, 0.4]], [[0.0, 1], [0.1, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_725": {
                "variable": {
                    "value": "expected_all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.6, 0.2], [prior, prior], [0.3, 0.4], [prior, prior], [prior, prior], [prior, prior], [prior, prior]], [[0.5, 0.6], [prior, prior], [prior, prior], [1.3, 0.4], [0.1, 0.2], [prior, prior], [prior, prior]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_743": {
                "variable": {
                    "value": "expected_all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.957, 0.022, 0.02], [1.0, 0.0, 0.0]], [[prior, 1, prior], [1, prior, prior]], [[0.0, 1.0, 0.3], [0.4, 0.4, 0.4]], [[prior, prior, prior], [prior, prior, prior]], [[prior, prior, prior], [prior, prior, prior]], [[prior, 1, prior], [1, prior, prior]], [[prior, prior, prior], [prior, prior, prior]]], [[[0.0, 0.0, 1.0], [1.0, 0.0, 0.0]], [[prior, prior, 1], [1, prior, prior]], [[1, prior, prior], [prior, prior, 1]], [[0.069, 0.069, 0.83], [0.4, 0.4, 0.4]], [[0.0, 1.0, 0.0], [0.1, 0.0, 0.0]], [[prior, 1, prior], [prior, prior, 1]], [[prior, prior, prior], [prior, prior, prior]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_788": {
                "variable": {
                    "value": "expected_encountered_batch_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_790": {
                "variable": {
                    "value": "expected_most_probable_batch_seq_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 0, 0], [1, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_792": {
                "variable": {
                    "value": "expected_most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [-1, -1, -1], [-1, -1, -1]], [[0, 2, 0], [-1, -1, -1], [2, 0, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_798": {
                "variable": {
                    "value": "expected_newly_encountered_seqs_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 0, 0], [1, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_799": {
                "variable": {
                    "value": "expected_newly_encountered_seqs_indicator",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 1], [0, 1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_802": {
                "variable": {
                    "value": "expected_encountered_batch_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.5, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [1, 0], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_818": {
                "variable": {
                    "value": "expected_encountered_batch_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1.5, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0]], [[0, 0, 1], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_890": {
                "variable": {
                    "value": "cluster_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.1, 0.9, 0], [0.8, 0, 0.2], [0, 1, 0], [1, 0, 0], [0.1, 0.8, 0.1]], [[0, 1, 0], [0, 0, 1], [1, 0, 0], [0.5, 0.5, 0], [0.1, 0.6, 0.3]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_901": {
                "variable": {
                    "value": "rewards_punishments_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.1, 0.9], [0.8, 0], [0, 1], [1, 0], [0.1, 0.8]], [[0, 1], [0, 0], [1, 0], [0.5, 0.5], [0.1, 0.6]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_912": {
                "variable": {
                    "value": "context_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 0, 1, 1], [0, 0, 0, 0]], [[0.2, 0.8, 0.33, 1], [0, 0, 0, 0]], [[0.6, 0.99, 1, 0], [0, 0, 0, 0]], [[0, 1, 1, 0], [0, 0, 0, 0]], [[0, 1, 1, 1], [0, 0, 0, 0]]], [[[1, 1, 1, 1], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0, 0]], [[1, 1, 0, 0], [0, 0, 0, 0]], [[0, 0, 1, 1], [0, 0, 0, 0]], [[0, 1, 0, 1], [0, 0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_923": {
                "variable": {
                    "value": "exploring_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1], [0], [1], [0], [1]], [[0], [1], [1], [1], [0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_934": {
                "variable": {
                    "value": "actions_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.5, 0.5, 0], [0, 0.2, 0.8], [1, 0, 0], [0, 1, 0], [0, 0, 1]], [[0, 0.5, 0.5], [0, 0, 1], [0, 1, 0], [0, 0.5, 0.5], [0.2, 0.4, 0.4]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_945": {
                "variable": {
                    "value": "all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]], [[1, 0, 1], [0, 1, 2], [1, 2, 0], [1, 2, 1], [2, 1, 2], [-1, -1, -1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_960": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.5, 0.5, 0, 0, 0, 0, 0], [0.5, 0.5, 0.5, 0, 0.5, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_997": {
                "variable": {
                    "value": "expected_encountered_batch_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.52, 0.2, 0, 0, 0, 0, 0], [0, 0.15, 1, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1001": {
                "variable": {
                    "value": "expected_newly_encountered_seqs_indicator",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 0], [0, 1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1008": {
                "variable": {
                    "value": "expected_encountered_batch_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[1.2, 0.792, 1.52, 0.72]], [[0.144, 1.376, 1.0376, 0.72]], [[0.432, 1.5128, 1.52, 0.8]]], [[[0.04, 0.16, 0.066, 0.2]], [[0.12, 0.198, 0.2, 0]], [[0, 0.2, 0.2, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]], [[[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0.15, 0.15, 0, 0]], [[0, 0, 0.15, 0.15]], [[0, 0.15, 0, 0.15]]], [[[1, 1, 1, 1]], [[0, 0, 0, 0]], [[1, 1, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]], [[[0, 0, 0, 0]], [[0, 0, 0, 0]], [[0, 0, 0, 0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1058": {
                "variable": {
                    "value": "expected_encountered_batch_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1.36, 0, 0.09], [0, 0, 0]], [[0, 0, 0], [0.2, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]], [[[0, 0, 0], [0, 0, 0]], [[0.5, 0.5, 0.0], [0.025, 0.15, 0.075]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]], [[0, 0, 0], [0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1088": {
                "variable": {
                    "value": "expected_encountered_batch_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.45, 0], [0, 0.2], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]], [[0, 0], [1.0, 0.25], [0, 0], [0, 0], [0, 0], [0, 0], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1111": {
                "variable": {
                    "value": "expected_encountered_batch_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1.376, 0], [0.08, 1.36]], [[0, 0.2], [0.2, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]], [[[0, 0], [0, 0]], [[0.075, 0.075], [0.015, 0.09]], [[0, 0], [1, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]], [[0, 0], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1147": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.5, 0.5, 0, 0, 0, 0, 0], [0.5, 0.5, 0.5, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1149": {
                "variable": {
                    "value": "encountered_batch_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.52, 0.2, 0, 0, 0, 0, 0], [0, 0.15, 1, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1152": {
                "variable": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 2, 3], [1, 2, 3], [1, 2, 3]], [[1, 2, 3], [1, 2, 3], [1, 2, 3]], [[1, 2, 3], [1, 2, 3], [1, 2, 3]]], [[[4, 4, 4], [4, 4, 4], [4, 4, 4]], [[4, 4, 4], [4, 4, 4], [4, 4, 4]], [[4, 4, 4], [4, 4, 4], [4, 4, 4]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1159": {
                "variable": {
                    "value": "encountered_batch_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.2, 0.2, 0.2], [0.2, 0.2, 0.2], [0.2, 0.2, 0.2]], [[0.2, 0.2, 0.2], [0.2, 0.2, 0.2], [0.2, 0.2, 0.2]], [[0.2, 0.2, 0.2], [0.2, 0.2, 0.2], [0.2, 0.2, 0.2]]], [[[0.1, 0.2, 0.3], [0.1, 0.2, 0.3], [0.1, 0.2, 0.3]], [[0.1, 0.2, 0.3], [0.1, 0.2, 0.3], [0.1, 0.2, 0.3]], [[0.1, 0.2, 0.3], [0.1, 0.2, 0.3], [0.1, 0.2, 0.3]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1167": {
                "variable": {
                    "value": "all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[3], [5.2], [0], [0], [0], [0], [0]], [[0], [0], [1], [0], [0], [0], [0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1182": {
                "variable": {
                    "value": "encountered_batch_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1.5], [0], [0], [0], [0], [0], [0]], [[1], [2], [3], [0], [0], [0], [0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1197": {
                "variable": {
                    "value": "all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.1, 0, 0]], [[0.5, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]], [[[0, 0, 0]], [[0, 0, 0]], [[1, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1212": {
                "variable": {
                    "value": "encountered_batch_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1.4, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]], [[[1, 0, 0]], [[0, 0, 0]], [[0.5, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1227": {
                "variable": {
                    "value": "all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.1, 0]], [[0.5, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[1, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1242": {
                "variable": {
                    "value": "encountered_batch_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1.4, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[1, 0]], [[0, 0]], [[0.5, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1268": {
                "variable": {
                    "value": "expected_all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2.02, 0.7, 0, 0, 0, 0, 0], [0.5, 0.65, 1.5, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1271": {
                "variable": {
                    "value": "expected_all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1.2, 2.2, 3.2], [1.2, 2.2, 3.2], [1.2, 2.2, 3.2]], [[1.2, 2.2, 3.2], [1.2, 2.2, 3.2], [1.2, 2.2, 3.2]], [[1.2, 2.2, 3.2], [1.2, 2.2, 3.2], [1.2, 2.2, 3.2]]], [[[4.1, 4.2, 4.3], [4.1, 4.2, 4.3], [4.1, 4.2, 4.3]], [[4.1, 4.2, 4.3], [4.1, 4.2, 4.3], [4.1, 4.2, 4.3]], [[4.1, 4.2, 4.3], [4.1, 4.2, 4.3], [4.1, 4.2, 4.3]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1279": {
                "variable": {
                    "value": "expected_all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[4.5], [5.2], [0], [0], [0], [0], [0]], [[1], [2], [4], [0], [0], [0], [0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1294": {
                "variable": {
                    "value": "expected_all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.3778, 0, 0]], [[0.5, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]], [[[1, 0, 0]], [[0, 0, 0]], [[0.375, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]], [[0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1309": {
                "variable": {
                    "value": "expected_all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1.5, 0]], [[0.5, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[1, 0]], [[0, 0]], [[1.5, 0]], [[0, 0]], [[0, 0]], [[0, 0]], [[0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1335": {
                "variable": {
                    "value": "batch",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.1, 0.9, 0], [0.8, 0, 0.2], [0, 1, 0], [1, 0, 0], [0.1, 0.8, 0.1]], [[0, 1, 0], [0, 0, 1], [1, 0, 0], [0.5, 0.5, 0], [0.1, 0.6, 0.3]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1346": {
                "variable": {
                    "value": "newly_encountered_seqs_indicator",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 0], [1, 1, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1361": {
                "variable": {
                    "value": "expected_most_probable_batch_seq_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0.8, 0], [1, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1363": {
                "variable": {
                    "value": "expected_most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [0, 1, 0], [1, 0, 1]], [[1, 2, 0], [2, 0, 0], [0, 0, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1393": {
                "variable": {
                    "value": "process.most_probable_batch_seq_probs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "most_probable_batch_seq_probs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "most_probable_batch_seq_probs",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1395": {
                "variable": {
                    "value": "process.most_probable_batch_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([[[1, 0, 1], [0, 1, 0], [1, 0, 1]], [[1, 2, 0], [2, 0, 1], [0, 0, 1]]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[1, 0, 1, 3], [0, 1, 0, 2], [1, 0, 1, 7]]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[2, 7, 17, 10], [7, 17, 10, 2], [17, 10, 2, 11], [10, 2, 11, 2], [2, 11, 2, 17], [11, 2, 17, 10], [2, 17, 10, 2], [17, 10, 2, 13], [10, 2, 13, 17], [2, 13, 17, 2], [13, 17, 2, 17], [17, 2, 17, 13], [2, 17, 13, 10], [17, 13, 10, 7], [13, 10, 7, 11], [10, 7, 11, 1], [7, 11, 1, 10], [11, 1, 10, 7], [1, 10, 7, 10], [10, 7, 10, 7], [7, 10, 7, 11], [10, 7, 11, 13], [7, 11, 13, 2], [11, 13, 2, 10], [13, 2, 10, 5], [2, 10, 5, 10], [10, 5, 10, 11], [5, 10, 11, 7], [10, 11, 7, 11], [11, 7, 11, 14], [7, 11, 14, 11], [11, 14, 11, 7], [14, 11, 7, 10], [11, 7, 10, 2], [7, 10, 2, 7], [10, 2, 7, 14], [2, 7, 14, 13], [7, 14, 13, 10], [14, 13, 10, 7], [13, 10, 7, 11], [10, 7, 11, 7], [7, 11, 7, 10], [11, 7, 10, 13], [7, 10, 13, 7], [10, 13, 7, 12], [13, 7, 12, 2], [7, 12, 2, 13], [12, 2, 13, 17], [2, 13, 17, 2], [13, 17, 2, 10], [17, 2, 10, 7], [2, 10, 7, 11], [10, 7, 11, 12], [7, 11, 12, 13], [11, 12, 13, 14], [12, 13, 14, 7], [13, 14, 7, 14], [14, 7, 14, 1], [7, 14, 1, 2], [14, 1, 2, 10], [1, 2, 10, 13], [2, 10, 13, 11], [10, 13, 11, 17], [13, 11, 17, 13], [11, 17, 13, 10], [17, 13, 10, 7], [13, 10, 7, 11], [10, 7, 11, 5], [7, 11, 5, 13], [11, 5, 13, 14], [5, 13, 14, 13], [13, 14, 13, 2], [14, 13, 2, 11], [13, 2, 11, 2], [2, 11, 2, 12], [11, 2, 12, 2], [2, 12, 2, 17], [12, 2, 17, 8], [2, 17, 8, 2], [17, 8, 2, 10], [8, 2, 10, 13], [2, 10, 13, 17], [10, 13, 17, 11], [13, 17, 11, 13], [17, 11, 13, 12], [11, 13, 12, 5], [13, 12, 5, 2], [12, 5, 2, 10], [5, 2, 10, 13], [2, 10, 13, 7], [10, 13, 7, 13], [13, 7, 13, 11], [7, 13, 11, 12], [13, 11, 12, 1], [11, 12, 1, 7], [12, 1, 7, 11], [1, 7, 11, 13], [7, 11, 13, 7], [11, 13, 7, 5], [13, 7, 5, 7], [7, 5, 7, 13], [5, 7, 13, 7], [7, 13, 7, 17], [13, 7, 17, 14], [7, 17, 14, 17], [17, 14, 17, 7], [14, 17, 7, 13], [17, 7, 13, 11], [7, 13, 11, 10], [13, 11, 10, 13], [11, 10, 13, 7], [10, 13, 7, 12], [13, 7, 12, 17], [7, 12, 17, 7], [12, 17, 7, 11], [17, 7, 11, 13], [7, 11, 13, 7], [11, 13, 7, 11], [13, 7, 11, 13], [7, 11, 13, 7], [11, 13, 7, 11], [13, 7, 11, 10], [7, 11, 10, 8], [11, 10, 8, 4], [10, 8, 4, 14], [8, 4, 14, 11], [4, 14, 11, 1], [14, 11, 1, 14], [11, 1, 14, 13], [1, 14, 13, 7], [14, 13, 7, 13], [13, 7, 13, 2], [7, 13, 2, 7], [13, 2, 7, 5], [2, 7, 5, 7], [7, 5, 7, 2], [5, 7, 2, 7], [7, 2, 7, 13], [2, 7, 13, 7], [7, 13, 7, 11], [13, 7, 11, 2], [7, 11, 2, 10], [11, 2, 10, 11], [2, 10, 11, 1], [10, 11, 1, 10], [11, 1, 10, 7], [1, 10, 7, 13], [10, 7, 13, 5], [7, 13, 5, 2], [13, 5, 2, 13], [5, 2, 13, 7], [2, 13, 7, 10], [13, 7, 10, 2], [7, 10, 2, 7], [10, 2, 7, 13], [2, 7, 13, 2], [7, 13, 2, 7], [13, 2, 7, 2], [2, 7, 2, 13], [7, 2, 13, 2], [2, 13, 2, 13], [13, 2, 13, 10], [2, 13, 10, 11], [13, 10, 11, 13], [10, 11, 13, 17], [11, 13, 17, 2], [13, 17, 2, 13], [17, 2, 13, 2], [2, 13, 2, 13], [13, 2, 13, 7], [2, 13, 7, 2], [13, 7, 2, 10], [7, 2, 10, 2], [2, 10, 2, 17], [10, 2, 17, 2], [2, 17, 2, 13], [17, 2, 13, 7], [2, 13, 7, 2], [13, 7, 2, 5], [7, 2, 5, 11], [2, 5, 11, 7], [5, 11, 7, 13], [11, 7, 13, 2], [7, 13, 2, 11], [13, 2, 11, 7], [2, 11, 7, 8], [11, 7, 8, 7], [7, 8, 7, 17], [8, 7, 17, 5], [7, 17, 5, 14], [17, 5, 14, 11], [5, 14, 11, 5], [14, 11, 5, 17], [11, 5, 17, 7], [5, 17, 7, 11], [17, 7, 11, 7], [7, 11, 7, 13], [11, 7, 13, 7], [7, 13, 7, 13], [13, 7, 13, 11], [7, 13, 11, 13], [13, 11, 13, 10], [11, 13, 10, 17], [13, 10, 17, 10], [10, 17, 10, 7], [17, 10, 7, 1], [10, 7, 1, 11], [7, 1, 11, 7], [1, 11, 7, 8], [11, 7, 8, 1], [7, 8, 1, 13], [8, 1, 13, 7], [1, 13, 7, 10], [13, 7, 10, 7], [7, 10, 7, 5], [10, 7, 5, 7], [7, 5, 7, 13], [5, 7, 13, 7], [7, 13, 7, 13], [13, 7, 13, 12], [7, 13, 12, 2], [13, 12, 2, 10], [12, 2, 10, 2], [2, 10, 2, 13], [10, 2, 13, 7], [2, 13, 7, 5], [13, 7, 5, 13], [7, 5, 13, 7], [5, 13, 7, 13], [13, 7, 13, 7], [7, 13, 7, 14], [13, 7, 14, 13], [7, 14, 13, 1], [14, 13, 1, 14], [13, 1, 14, 11], [1, 14, 11, 2], [14, 11, 2, 13], [11, 2, 13, 12], [2, 13, 12, 10], [13, 12, 10, 13], [12, 10, 13, 11], [10, 13, 11, 10], [13, 11, 10, 17], [11, 10, 17, 10], [10, 17, 10, 13], [17, 10, 13, 7], [10, 13, 7, 13], [13, 7, 13, 17], [7, 13, 17, 10], [13, 17, 10, 13], [17, 10, 13, 11], [10, 13, 11, 13], [13, 11, 13, 7], [11, 13, 7, 10], [13, 7, 10, 14], [7, 10, 14, 10], [10, 14, 10, 12], [14, 10, 12, 2], [10, 12, 2, 17], [12, 2, 17, 2], [2, 17, 2, 10], [17, 2, 10, 7], [2, 10, 7, 2], [10, 7, 2, 13], [7, 2, 13, 12], [2, 13, 12, 7], [13, 12, 7, 12], [12, 7, 12, 2], [7, 12, 2, 13], [12, 2, 13, 2], [2, 13, 2, 13], [13, 2, 13, 10], [2, 13, 10, 17], [13, 10, 17, 7], [10, 17, 7, 13], [17, 7, 13, 12], [7, 13, 12, 7], [13, 12, 7, 10], [12, 7, 10, 12], [7, 10, 12, 10], [10, 12, 10, 7], [12, 10, 7, 13], [10, 7, 13, 7], [7, 13, 7, 11], [13, 7, 11, 2], [7, 11, 2, 12], [11, 2, 12, 17], [2, 12, 17, 11], [12, 17, 11, 17], [17, 11, 17, 2], [11, 17, 2, 10], [17, 2, 10, 7], [2, 10, 7, 17], [10, 7, 17, 5], [7, 17, 5, 7], [17, 5, 7, 13], [5, 7, 13, 11]]], device=device, dtype=torch.int64)",
                            "Call"
                        ],
                        [
                            "most_probable_batch_seqs",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1405": {
                "variable": {
                    "value": "expected_newly_encountered_seqs_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_newly_encountered_seqs_counts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([[1, 0, 0], [1, 0, 1]], dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[1, 0, 0], [1, 0, 1]], dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor(expected_newly_encountered_seqs_counts, dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "expected_newly_encountered_seqs_counts",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1408": {
                "variable": {
                    "value": "expected_most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([[[0, 1, 0], [-1, -1, -1], [-1, -1, -1]], [[0, 2, 0], [-1, -1, -1], [2, 0, 2]]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[0, 1, 0], [-1, -1, -1], [-1, -1, -1]], [[0, 2, 0], [-1, -1, -1], [2, 0, 2]]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[1, 0, 1], [0, 1, 0], [1, 0, 1]], [[1, 2, 0], [2, 0, 0], [0, 0, 1]]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor(expected_most_probable_batch_seqs, dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[1, 0, 1], [-1, -1, -1], [-1, -1, -1]], [[1, 2, 0], [2, 0, 1], [-1, -1, -1]]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[1, 0, 1, 3], [-1, -1, -1, -1], [-1, -1, -1, -1]]], dtype=torch.int64, device=device)",
                            "Call"
                        ],
                        [
                            "most_probable_batch_seqs.clone()",
                            "Call"
                        ],
                        [
                            "expected_most_probable_batch_seqs",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1811": {
                "variable": {
                    "value": "all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]], [[1, 0, 1], [0, 1, 2], [1, 2, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1826": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.5, 0.5, 0, 0, 0, 0, 0], [0.5, 0.5, 0.5, 0, 0, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1829": {
                "variable": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[2, 2]], [[2, 2]], [[2, 2]]], [[[1, 1]], [[1, 1]], [[1, 1]]], [[[0.0, 0.0]], [[0.0, 2.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[3.0, 3.0]], [[3.0, 3.0]], [[3.0, 3.0]]], [[[1.0, 1]], [[1.0, 1.0]], [[1.0, 1.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]], [[[[3, 3]], [[3, 3]], [[3, 3]]], [[[4, 4]], [[4, 4]], [[4, 4]]], [[[5, 5]], [[5, 5]], [[5, 5]]], [[[0.0, 0.0]], [[1.0, 0.0]], [[0.0, 0.0]]], [[[3.3, 3.3]], [[3.0, 6.0]], [[3.0, 3.0]]], [[[3.4, 3.1]], [[3.0, 3.0]], [[9.0, 0.0]]], [[[3.1, 3.0]], [[7.0, 2.0]], [[3.23, 1.0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1845": {
                "variable": {
                    "value": "all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[3], [5.2], [0], [1], [2], [0], [0]], [[0], [0], [1], [1], [2], [3], [4]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1860": {
                "variable": {
                    "value": "all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[3, 3, 3]], [[5.2, 5.2, 5.2]], [[0, 0, 0]], [[1, 1, 1]], [[2, 2, 2]], [[0, 0, 0]], [[0, 0, 0]]], [[[0, 0, 0]], [[0, 0, 0]], [[1, 1, 1]], [[2, 2, 2]], [[3, 3, 3]], [[4, 4, 4]], [[5, 5, 5]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1875": {
                "variable": {
                    "value": "all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[3, 3]], [[5.2, 5.2]], [[0, 0]], [[1, 1]], [[2, 2]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[1, 1]], [[2, 2]], [[3, 3]], [[4, 4]], [[5, 5]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1896": {
                "variable": {
                    "value": "process.most_probable_batch_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [-1, -1, -1], [-1, -1, -1]], [[1, 2, 1], [2, 0, 1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1903": {
                "variable": {
                    "value": "process.newly_encountered_seqs_counts",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.4, 0, 0], [1, 0.6, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1915": {
                "variable": {
                    "value": "expected_all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [0, 1, 0], [-1, -1, -1], [-1, -1, -1]], [[1, 0, 1], [0, 1, 2], [1, 2, 0], [-1, -1, -1], [1, 2, 1], [2, 0, 1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_1930": {
                "variable": {
                    "value": "expected_all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.5, 0.5, 0, 0, 1.4, 0, 0], [0.5, 0.5, 0.5, 0, 1, 0.6, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1933": {
                "variable": {
                    "value": "expected_all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[2, 2]], [[2, 2]], [[2, 2]]], [[[1, 1]], [[1, 1]], [[1, 1]]], [[[0.0, 0.0]], [[0.0, 2.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.7, 0.7]], [[0.7, 0.7]], [[0.7, 0.7]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]], [[[[3, 3]], [[3, 3]], [[3, 3]]], [[[4, 4]], [[4, 4]], [[4, 4]]], [[[5, 5]], [[5, 5]], [[5, 5]]], [[[0.0, 0.0]], [[1.0, 0.0]], [[0.0, 0.0]]], [[[0.5, 0.5]], [[0.5, 0.5]], [[0.5, 0.5]]], [[[0.3, 0.3]], [[0.3, 0.3]], [[0.3, 0.3]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1951": {
                "variable": {
                    "value": "expected_all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[3], [5.2], [0], [1], [prior], [prior], [prior]], [[0], [0], [1], [1], [prior], [prior], [prior]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1967": {
                "variable": {
                    "value": "expected_all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[3, 3, 3]], [[5.2, 5.2, 5.2]], [[0, 0, 0]], [[1, 1, 1]], [[1, prior, prior]], [[prior, prior, prior]], [[prior, prior, prior]]], [[[0, 0, 0]], [[0, 0, 0]], [[1, 1, 1]], [[2, 2, 2]], [[prior, 1, prior]], [[prior, 1, prior]], [[prior, prior, prior]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_1982": {
                "variable": {
                    "value": "expected_all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[3, 3]], [[5.2, 5.2]], [[0, 0]], [[1, 1]], [[0, 0]], [[0, 0]], [[0, 0]]], [[[0, 0]], [[0, 0]], [[1, 1]], [[2, 2]], [[0, 0]], [[0, 0]], [[0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2027": {
                "variable": {
                    "value": "buffer.seq_probs.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.4, 0.2, 0.4], [0.9, 0.7, 0], [0.1, 0.2, 0.7], [0.4, 0.2, 0.4], [nan, nan, nan]], [[0.4, 0.3, 0.3], [1, 0, 0], [0.2, 0.7, 0.1], [0.1, 0.1, 0.8], [nan, nan, nan]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_2038": {
                "variable": {
                    "value": "all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [0, 1, 0], [-1, -1, -1], [-1, -1, -1]], [[1, 0, 1], [0, 1, 2], [1, 2, 0], [-1, -1, -1], [1, 2, 1], [2, 0, 1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_2053": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.5, 0.5, 0, 0, 1.4, 0, 0], [0.5, 0.5, 0.5, 0, 1, 0.6, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_2057": {
                "variable": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[2, 2]], [[2, 2]], [[2, 2]]], [[[1, 1]], [[1, 1]], [[1, 1]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]], [[[[3, 3]], [[3, 3]], [[3, 3]]], [[[4, 4]], [[4, 4]], [[4, 4]]], [[[5, 5]], [[5, 5]], [[5, 5]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_2073": {
                "variable": {
                    "value": "all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1], [5.2], [3], [4], [5], [6], [7]], [[11], [12], [13], [14], [15], [0], [0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2088": {
                "variable": {
                    "value": "all_encountered_exploration_success_rates",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[3, 3, 3]], [[4, 4, 4]], [[5, 5, 5]], [[6, 6, 6]], [[7, 7, 7]], [[8, 8, 8]], [[9, 9, 9]]], [[[0, 0, 0]], [[1, 1, 1]], [[2, 2, 2]], [[3, 3, 3]], [[4, 4, 4]], [[5, 5, 5]], [[6, 6, 6]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2103": {
                "variable": {
                    "value": "all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[3, 3]], [[4, 4]], [[5, 5]], [[6, 6]], [[7, 7]], [[8, 8]], [[9, 9]]], [[[0, 0]], [[1, 1]], [[2, 2]], [[3, 3]], [[4, 4]], [[5, 5]], [[6, 6]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2126": {
                "variable": {
                    "value": "expectedstored_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[nan, 0.4, 0.2], [nan, 0.9, 0.7], [nan, 0.1, 0.2], [nan, 0.4, 0.2], [nan, nan, nan]], [[nan, nan, 0.4], [nan, nan, 1], [nan, nan, 0.2], [nan, nan, 0.1], [nan, nan, nan]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_2137": {
                "variable": {
                    "value": "expected_all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 1], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]], [[1, 2, 1], [2, 0, 1], [1, 0, 1], [0, 1, 2], [1, 2, 0], [-1, -1, -1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_2152": {
                "variable": {
                    "value": "expected_all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.4, 0.5, 0.5, 0, 0, 0, 0], [1, 0.6, 0.5, 0.5, 0.5, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_2156": {
                "variable": {
                    "value": "expected_all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[2, 2]], [[2, 2]], [[2, 2]]], [[[1, 1]], [[1, 1]], [[1, 1]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]], [[[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[3, 3]], [[3, 3]], [[3, 3]]], [[[4, 4]], [[4, 4]], [[4, 4]]], [[[5, 5]], [[5, 5]], [[5, 5]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_2173": {
                "variable": {
                    "value": "expected_all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[5], [1], [5.2], [3], [4], [6], [7]], [[15], [0], [11], [12], [13], [14], [0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2188": {
                "variable": {
                    "value": "expected_all_encountered_exploration_success_rates",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[7, 7, 7]], [[3, 3, 3]], [[4, 4, 4]], [[5, 5, 5]], [[6, 6, 6]], [[8, 8, 8]], [[9, 9, 9]]], [[[4, 4, 4]], [[5, 5, 5]], [[0, 0, 0]], [[1, 1, 1]], [[2, 2, 2]], [[3, 3, 3]], [[6, 6, 6]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2203": {
                "variable": {
                    "value": "expected_all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[7, 7]], [[3, 3]], [[4, 4]], [[5, 5]], [[6, 6]], [[8, 8]], [[9, 9]]], [[[4, 4]], [[5, 5]], [[0, 0]], [[1, 1]], [[2, 2]], [[3, 3]], [[6, 6]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2233": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.5, 0.5, 0, 0, 1.4, 0, 0], [1, 2, 1, 0, 1.5, 0.5, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2236": {
                "variable": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[2, 2], [2, 2], [2, 2]], [[1, 1], [1, 1], [1, 1]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]]], [[[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[3, 3], [3, 3], [3, 3]], [[4, 4], [4, 4], [4, 4]], [[5, 5], [5, 5], [5, 5]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2251": {
                "variable": {
                    "value": "all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1], [2], [3], [7], [3], [3], [22]], [[1], [2], [3], [10], [3], [11], [14]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2254": {
                "variable": {
                    "value": "all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 9]], [[2, 8]], [[3, 7]], [[4, 6]], [[5, 5]], [[6, 4]], [[7, 3]]], [[[1, 1]], [[2, 8]], [[3, 3]], [[4, 4]], [[5, 5]], [[6, 6]], [[7, 7]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2264": {
                "variable": {
                    "value": "expected_all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.5, 0.5, 0, 0, 1.4, 0, 0], [0.5, 1, 0.5, 0, 0.75, 0.25, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2267": {
                "variable": {
                    "value": "expected_total_encountered_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[2.4, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2269": {
                "variable": {
                    "value": "expected_all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[2, 2], [2, 2], [2, 2]], [[1, 1], [1, 1], [1, 1]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]]], [[[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[1.5, 1.5], [1.5, 1.5], [1.5, 1.5]], [[2, 2], [2, 2], [2, 2]], [[2.5, 2.5], [2.5, 2.5], [2.5, 2.5]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]], [[0.0, 0.0], [0.0, 0.0], [0.0, 0.0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2285": {
                "variable": {
                    "value": "expected_all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[5], [5], [5], [7], [5], [5], [22]], [[5], [5], [5], [5], [5], [5.5], [7]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2289": {
                "variable": {
                    "value": "expected_all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 9]], [[2, 8]], [[3, 7]], [[4, 6]], [[5, 5]], [[6, 4]], [[7, 3]]], [[[0.5, 0.5]], [[1, 4]], [[1.5, 1.5]], [[2, 2]], [[2.5, 2.5]], [[3, 3]], [[3.5, 3.5]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2318": {
                "variable": {
                    "value": "all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 1], [2, 1, 0], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1], [-1, -1, -1]], [[1, 2, 1], [2, 0, 1], [1, 0, 1], [0, 1, 2], [1, 2, 0], [-1, -1, -1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_2333": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[4.4, 3.5, 3.5, 0, 0, 0, 0], [4, 3.6, 3.5, 3.5, 3.5, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2336": {
                "variable": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[2, 2]], [[2, 2]], [[2, 2]]], [[[1, 1]], [[1, 1]], [[1, 1]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]], [[[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[1.5, 1.5]], [[1.5, 1.5]], [[1.5, 1.5]]], [[[2, 2]], [[2, 2]], [[2, 2]]], [[[2.5, 2.5]], [[2.5, 2.5]], [[2.5, 2.5]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]], [[[0.0, 0.0]], [[0.0, 0.0]], [[0.0, 0.0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2351": {
                "variable": {
                    "value": "all_encountered_reward_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1]], [[1, 0]], [[2, 0.6]], [[-1, -1]], [[-1, -1]], [[-1, -1]], [[-1, -1]]], [[[1, 2]], [[2, 0]], [[1, 0]], [[0, 1]], [[1, 2]], [[-1, -1]], [[-1, -1]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2366": {
                "variable": {
                    "value": "all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1], [2], [4], [5], [7], [8], [9]], [[5], [6], [7], [8], [9], [10], [11]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2369": {
                "variable": {
                    "value": "all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.1, 0.4, 0.3]], [[0.2, 0.4, 0.5]], [[0.4, 0.5, 0.1]], [[0.4, 0.6, 0.7]], [[0.2, 0.2, 0.1]], [[0.1, 0.7, 0.3]], [[0.5, 0.4, 0.3]]], [[[0.5, 0.8, 1.1]], [[0.6, 0.4, 3.2]], [[0.7, 1.2, 0.6]], [[0.9, 0.2, 0.6]], [[0.3, 0.9, 0.0]], [[0.5, 0.3, 0.2]], [[0.4, 8.8, 9.4]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_2385": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_len)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_2387": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_2389": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_len, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_2392": {
                "variable": {
                    "value": "frequent_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_2394": {
                "variable": {
                    "value": "frequent_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_2397": {
                "variable": {
                    "value": "frequent_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2413": {
                "variable": {
                    "value": "expected_frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 1], [2, 1, 0]], [[1, 2, 1], [2, 0, 1], [1, 0, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_2420": {
                "variable": {
                    "value": "expected_frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[4.4, 3.5, 3.5], [4, 3.6, 3.5]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2423": {
                "variable": {
                    "value": "expected_frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[0.3472, 0.3472]], [[0.3472, 0.3472]], [[0.3472, 0.3472]]], [[[0.5185, 0.5185]], [[0.5185, 0.5185]], [[0.5185, 0.5185]]], [[[0.4444, 0.4444]], [[0.4444, 0.4444]], [[0.4444, 0.4444]]]], [[[[0.3571, 0.3571]], [[0.3571, 0.3571]], [[0.3571, 0.3571]]], [[[0.3676, 0.3676]], [[0.3676, 0.3676]], [[0.3676, 0.3676]]], [[[0.4815, 0.4815]], [[0.4815, 0.4815]], [[0.4815, 0.4815]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2448": {
                "variable": {
                    "value": "expected_frequent_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1], [2], [4]], [[5], [6], [7]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2451": {
                "variable": {
                    "value": "expected_frequent_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.1, 0.4, 0.3]], [[0.2, 0.4, 0.5]], [[0.4, 0.5, 0.1]]], [[[0.5, 0.8, 1.1]], [[0.6, 0.4, 3.2]], [[0.7, 1.2, 0.6]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_2458": {
                "variable": {
                    "value": "expected_frequent_reward_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1]], [[1, 0]], [[2, 0.6]]], [[[1, 2]], [[2, 0]], [[1, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "rand_2483": {
                "variable": {
                    "value": "clusters_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, batch_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_2490": {
                "variable": {
                    "value": "expected_padding",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "padding_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "subbatches_capacity - process._combined_batch_size",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "n_cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "int"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_68": {
                "variable": {
                    "value": "frequent_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_72": {
                "variable": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_76": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_length, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_80": {
                "variable": {
                    "value": "frequent_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_84": {
                "variable": {
                    "value": "frequent_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_88": {
                "variable": {
                    "value": "all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, max_encountered_seqs, seq_lookahead)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_93": {
                "variable": {
                    "value": "all_encountered_exploration_success_rates",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, max_encountered_seqs, seq_lookahead, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_98": {
                "variable": {
                    "value": "execution_counter_learning",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_101": {
                "variable": {
                    "value": "all_encountered_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, max_encountered_seqs, seq_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_105": {
                "variable": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, max_encountered_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_109": {
                "variable": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, max_encountered_seqs, seq_length, n_providers, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_114": {
                "variable": {
                    "value": "all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, max_encountered_seqs, seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_118": {
                "variable": {
                    "value": "frequent_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1423": {
                "variable": {
                    "value": "most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [0, 1, 0], [1, 0, 1]], [[1, 2, 0], [2, 0, 1], [0, 0, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1430": {
                "variable": {
                    "value": "newly_encountered_seqs_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.4, 0, 0], [1, 0.6, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1435": {
                "variable": {
                    "value": "expected_most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1], [-1, -1, -1], [-1, -1, -1]], [[1, 2, 0], [2, 0, 1], [-1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1447": {
                "variable": {
                    "value": "most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1, 3], [0, 1, 0, 2], [1, 0, 1, 7]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1451": {
                "variable": {
                    "value": "newly_encountered_seqs_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.4, 0, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1455": {
                "variable": {
                    "value": "expected_most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 1, 3], [-1, -1, -1, -1], [-1, -1, -1, -1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_1474": {
                "variable": {
                    "value": "most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[2, 7, 17, 10], [7, 17, 10, 2], [17, 10, 2, 11], [10, 2, 11, 2], [2, 11, 2, 17], [11, 2, 17, 10], [2, 17, 10, 2], [17, 10, 2, 13], [10, 2, 13, 17], [2, 13, 17, 2], [13, 17, 2, 17], [17, 2, 17, 13], [2, 17, 13, 10], [17, 13, 10, 7], [13, 10, 7, 11], [10, 7, 11, 1], [7, 11, 1, 10], [11, 1, 10, 7], [1, 10, 7, 10], [10, 7, 10, 7], [7, 10, 7, 11], [10, 7, 11, 13], [7, 11, 13, 2], [11, 13, 2, 10], [13, 2, 10, 5], [2, 10, 5, 10], [10, 5, 10, 11], [5, 10, 11, 7], [10, 11, 7, 11], [11, 7, 11, 14], [7, 11, 14, 11], [11, 14, 11, 7], [14, 11, 7, 10], [11, 7, 10, 2], [7, 10, 2, 7], [10, 2, 7, 14], [2, 7, 14, 13], [7, 14, 13, 10], [14, 13, 10, 7], [13, 10, 7, 11], [10, 7, 11, 7], [7, 11, 7, 10], [11, 7, 10, 13], [7, 10, 13, 7], [10, 13, 7, 12], [13, 7, 12, 2], [7, 12, 2, 13], [12, 2, 13, 17], [2, 13, 17, 2], [13, 17, 2, 10], [17, 2, 10, 7], [2, 10, 7, 11], [10, 7, 11, 12], [7, 11, 12, 13], [11, 12, 13, 14], [12, 13, 14, 7], [13, 14, 7, 14], [14, 7, 14, 1], [7, 14, 1, 2], [14, 1, 2, 10], [1, 2, 10, 13], [2, 10, 13, 11], [10, 13, 11, 17], [13, 11, 17, 13], [11, 17, 13, 10], [17, 13, 10, 7], [13, 10, 7, 11], [10, 7, 11, 5], [7, 11, 5, 13], [11, 5, 13, 14], [5, 13, 14, 13], [13, 14, 13, 2], [14, 13, 2, 11], [13, 2, 11, 2], [2, 11, 2, 12], [11, 2, 12, 2], [2, 12, 2, 17], [12, 2, 17, 8], [2, 17, 8, 2], [17, 8, 2, 10], [8, 2, 10, 13], [2, 10, 13, 17], [10, 13, 17, 11], [13, 17, 11, 13], [17, 11, 13, 12], [11, 13, 12, 5], [13, 12, 5, 2], [12, 5, 2, 10], [5, 2, 10, 13], [2, 10, 13, 7], [10, 13, 7, 13], [13, 7, 13, 11], [7, 13, 11, 12], [13, 11, 12, 1], [11, 12, 1, 7], [12, 1, 7, 11], [1, 7, 11, 13], [7, 11, 13, 7], [11, 13, 7, 5], [13, 7, 5, 7], [7, 5, 7, 13], [5, 7, 13, 7], [7, 13, 7, 17], [13, 7, 17, 14], [7, 17, 14, 17], [17, 14, 17, 7], [14, 17, 7, 13], [17, 7, 13, 11], [7, 13, 11, 10], [13, 11, 10, 13], [11, 10, 13, 7], [10, 13, 7, 12], [13, 7, 12, 17], [7, 12, 17, 7], [12, 17, 7, 11], [17, 7, 11, 13], [7, 11, 13, 7], [11, 13, 7, 11], [13, 7, 11, 13], [7, 11, 13, 7], [11, 13, 7, 11], [13, 7, 11, 10], [7, 11, 10, 8], [11, 10, 8, 4], [10, 8, 4, 14], [8, 4, 14, 11], [4, 14, 11, 1], [14, 11, 1, 14], [11, 1, 14, 13], [1, 14, 13, 7], [14, 13, 7, 13], [13, 7, 13, 2], [7, 13, 2, 7], [13, 2, 7, 5], [2, 7, 5, 7], [7, 5, 7, 2], [5, 7, 2, 7], [7, 2, 7, 13], [2, 7, 13, 7], [7, 13, 7, 11], [13, 7, 11, 2], [7, 11, 2, 10], [11, 2, 10, 11], [2, 10, 11, 1], [10, 11, 1, 10], [11, 1, 10, 7], [1, 10, 7, 13], [10, 7, 13, 5], [7, 13, 5, 2], [13, 5, 2, 13], [5, 2, 13, 7], [2, 13, 7, 10], [13, 7, 10, 2], [7, 10, 2, 7], [10, 2, 7, 13], [2, 7, 13, 2], [7, 13, 2, 7], [13, 2, 7, 2], [2, 7, 2, 13], [7, 2, 13, 2], [2, 13, 2, 13], [13, 2, 13, 10], [2, 13, 10, 11], [13, 10, 11, 13], [10, 11, 13, 17], [11, 13, 17, 2], [13, 17, 2, 13], [17, 2, 13, 2], [2, 13, 2, 13], [13, 2, 13, 7], [2, 13, 7, 2], [13, 7, 2, 10], [7, 2, 10, 2], [2, 10, 2, 17], [10, 2, 17, 2], [2, 17, 2, 13], [17, 2, 13, 7], [2, 13, 7, 2], [13, 7, 2, 5], [7, 2, 5, 11], [2, 5, 11, 7], [5, 11, 7, 13], [11, 7, 13, 2], [7, 13, 2, 11], [13, 2, 11, 7], [2, 11, 7, 8], [11, 7, 8, 7], [7, 8, 7, 17], [8, 7, 17, 5], [7, 17, 5, 14], [17, 5, 14, 11], [5, 14, 11, 5], [14, 11, 5, 17], [11, 5, 17, 7], [5, 17, 7, 11], [17, 7, 11, 7], [7, 11, 7, 13], [11, 7, 13, 7], [7, 13, 7, 13], [13, 7, 13, 11], [7, 13, 11, 13], [13, 11, 13, 10], [11, 13, 10, 17], [13, 10, 17, 10], [10, 17, 10, 7], [17, 10, 7, 1], [10, 7, 1, 11], [7, 1, 11, 7], [1, 11, 7, 8], [11, 7, 8, 1], [7, 8, 1, 13], [8, 1, 13, 7], [1, 13, 7, 10], [13, 7, 10, 7], [7, 10, 7, 5], [10, 7, 5, 7], [7, 5, 7, 13], [5, 7, 13, 7], [7, 13, 7, 13], [13, 7, 13, 12], [7, 13, 12, 2], [13, 12, 2, 10], [12, 2, 10, 2], [2, 10, 2, 13], [10, 2, 13, 7], [2, 13, 7, 5], [13, 7, 5, 13], [7, 5, 13, 7], [5, 13, 7, 13], [13, 7, 13, 7], [7, 13, 7, 14], [13, 7, 14, 13], [7, 14, 13, 1], [14, 13, 1, 14], [13, 1, 14, 11], [1, 14, 11, 2], [14, 11, 2, 13], [11, 2, 13, 12], [2, 13, 12, 10], [13, 12, 10, 13], [12, 10, 13, 11], [10, 13, 11, 10], [13, 11, 10, 17], [11, 10, 17, 10], [10, 17, 10, 13], [17, 10, 13, 7], [10, 13, 7, 13], [13, 7, 13, 17], [7, 13, 17, 10], [13, 17, 10, 13], [17, 10, 13, 11], [10, 13, 11, 13], [13, 11, 13, 7], [11, 13, 7, 10], [13, 7, 10, 14], [7, 10, 14, 10], [10, 14, 10, 12], [14, 10, 12, 2], [10, 12, 2, 17], [12, 2, 17, 2], [2, 17, 2, 10], [17, 2, 10, 7], [2, 10, 7, 2], [10, 7, 2, 13], [7, 2, 13, 12], [2, 13, 12, 7], [13, 12, 7, 12], [12, 7, 12, 2], [7, 12, 2, 13], [12, 2, 13, 2], [2, 13, 2, 13], [13, 2, 13, 10], [2, 13, 10, 17], [13, 10, 17, 7], [10, 17, 7, 13], [17, 7, 13, 12], [7, 13, 12, 7], [13, 12, 7, 10], [12, 7, 10, 12], [7, 10, 12, 10], [10, 12, 10, 7], [12, 10, 7, 13], [10, 7, 13, 7], [7, 13, 7, 11], [13, 7, 11, 2], [7, 11, 2, 12], [11, 2, 12, 17], [2, 12, 17, 11], [12, 17, 11, 17], [17, 11, 17, 2], [11, 17, 2, 10], [17, 2, 10, 7], [2, 10, 7, 17], [10, 7, 17, 5], [7, 17, 5, 7], [17, 5, 7, 13], [5, 7, 13, 11]]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_1772": {
                "variable": {
                    "value": "newly_encountered_seqs_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 2.0, 3.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 2.0, 1.0, 0.0, 1.0, 3.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 3.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 2.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 2.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 3.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 2.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 2.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "current_stream_1416": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "current_stream_1464": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/models/temporal_pooler/test_temporal_pooler.py": {
        "torch": {
            "tensor_63": {
                "variable": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0], [1, 0, 0]], [[1, 0, 0], [0, 1, 0]], [[1, 0, 0], [0, 0, 1]], [[1, 0, 0], [0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_68": {
                "variable": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 0, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]]], [[[1, 0, 1, 1], [0, 0, 0, 0], [0, 0, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_72": {
                "variable": {
                    "value": "expected_actions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.0, 0.0, 0.0], [0, 1, 0]], [[0.0, 0.0, 0.0], [0, 0, 1]], [[0.0, 0.0, 0.0], [0, 1, 0]], [[0.0, 0.0, 0.0], [1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_77": {
                "variable": {
                    "value": "expected_projections",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.3333, 0.3333, 0.3333], [0.5, 0.5, 0]], [[0.3333, 0.3333, 0.3333], [0.25, 0.5, 0.25]], [[0.3333, 0.3333, 0.3333], [0, 0.5, 0.5]], [[0.3333, 0.3333, 0.3333], [0.25, 0.5, 0.25]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_83": {
                "variable": {
                    "value": "expected_buffer_total_data_written",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 20]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_118": {
                "variable": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0], [1, 0, 0]], [[0, 1, 0], [0, 1, 0]], [[0, 0, 1], [0, 0, 1]], [[0, 1, 0], [0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_123": {
                "variable": {
                    "value": "contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[[1, 0], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]], [[[[1, 0], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]], [[[[1, 0], [0, 0], [0, 0]]], [[[1, 0], [0, 0], [0, 0]]]], [[[[1, 0], [0, 0], [0, 0]]], [[[0, 1], [0, 0], [0, 0]]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_129": {
                "variable": {
                    "value": "expected_actions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [0, 1, 0]], [[0.5, 0, 0.5], [0, 0, 1]], [[0, 1, 0], [0, 1, 0]], [[0.5, 0, 0.5], [1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_134": {
                "variable": {
                    "value": "expected_projections",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.6666, 0.3333, 0.0], [0.6666, 0.3333, 0.0]], [[0.1666, 0.6666, 0.1666], [0, 0.6666, 0.3333]], [[0.0, 0.3333, 0.6666], [0.0, 0.3333, 0.6666]], [[0.1666, 0.6666, 0.1666], [0.3333, 0.6666, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_175": {
                "variable": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0, 0]], [[0, 1, 0, 0, 0]], [[0, 0, 1, 0, 0]], [[1, 0, 0, 0, 0]], [[0, 0, 0, 1, 0]], [[0, 0, 0, 0, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_184": {
                "variable": {
                    "value": "contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1], [0.5]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_192": {
                "variable": {
                    "value": "rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 1]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [1, 0], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_199": {
                "variable": {
                    "value": "expected_actions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 0.5, 0, 0.5, 0], [0, 0, 0, 1, 0], [0, 0, 0, 1, 0]], [[0, 0, 1, 0, 0], [0, 0, 1, 0, 0], [0, 0, 1, 0, 0]], [[1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0]], [[0, 0.5, 0, 0.5, 0], [0, 0, 0, 1, 0], [0, 0, 0, 1, 0]], [[0, 0, 0, 0, 1], [0, 0, 0, 0, 1], [0, 0, 0, 0, 1]], [[1, 0, 0, 0, 0], [1, 0, 0, 0, 0], [1, 0, 0, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_233": {
                "variable": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0], [1, 0, 0]], [[1, 0, 0], [0, 1, 0]], [[1, 0, 0], [0, 0, 1]], [[1, 0, 0], [0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_239": {
                "variable": {
                    "value": "expected_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0.3333, 0.3333, 0.3333]], [[0, 1, 0]]], [[[0.3333, 0.3333, 0.3333]], [[0, 0, 1]]], [[[0.3333, 0.3333, 0.3333]], [[0, 1, 0]]], [[[0.3333, 0.3333, 0.3333]], [[1, 0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_244": {
                "variable": {
                    "value": "expected_projections",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.3333, 0.3333, 0.3333], [0.5, 0.5, 0]], [[0.3333, 0.3333, 0.3333], [0.25, 0.5, 0.25]], [[0.3333, 0.3333, 0.3333], [0, 0.5, 0.5]], [[0.3333, 0.3333, 0.3333], [0.25, 0.5, 0.25]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_272": {
                "variable": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0]], [[0, 1, 0]], [[0, 0, 1]], [[0, 1, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_333": {
                "variable": {
                    "value": "input_clusters_seq",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0], [1, 0, 0]], [[0, 1, 0], [1, 0, 0]], [[0, 0, 1], [0, 1, 0]], [[0, 1, 0], [0, 0, 1]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_440": {
                "variable": {
                    "value": "t_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seqs[k % 4]",
                            "Subscript"
                        ],
                        [
                            "data",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_441": {
                "variable": {
                    "value": "t_seqs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([[[1, 0, 0], [1, 0, 0]], [[1, 0, 0], [0, 1, 0]], [[1, 0, 0], [0, 0, 1]], [[1, 0, 0], [0, 1, 0]]], dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[1, 0, 0], [1, 0, 0]], [[0, 1, 0], [0, 1, 0]], [[0, 0, 1], [0, 0, 1]], [[0, 1, 0], [0, 1, 0]]], dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[1, 0, 0, 0, 0]], [[0, 1, 0, 0, 0]], [[0, 0, 1, 0, 0]], [[1, 0, 0, 0, 0]], [[0, 0, 0, 1, 0]], [[0, 0, 0, 0, 1]]], dtype=float_dtype, device=device).expand(data_length, flock_size, n_cluster_centers)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[1, 0, 0], [1, 0, 0]], [[1, 0, 0], [0, 1, 0]], [[1, 0, 0], [0, 0, 1]], [[1, 0, 0], [0, 1, 0]]], dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[1, 0, 0]], [[0, 1, 0]], [[0, 0, 1]], [[0, 1, 0]]], dtype=float_dtype, device=device)",
                            "Call"
                        ],
                        [
                            "seqs",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_442": {
                "variable": {
                    "value": "t_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "likelihoods",
                    "type": "variable",
                    "possible_values": [
                        [
                            "likelihoods",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_443": {
                "variable": {
                    "value": "t_expected_output",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_output",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_354": {
                "data": {
                    "value": "[[]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "permute_354": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_356": {
                "data": {
                    "value": "[[]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "permute_356": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_357": {
                "data": {
                    "value": "[[0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_358": {
                "data": {
                    "value": "[[0], [1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_363": {
                "data": {
                    "value": "[[0], [1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_364": {
                "data": {
                    "value": "[[0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_365": {
                "data": {
                    "value": "[[1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_366": {
                "data": {
                    "value": "[[]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "permute_366": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Stream_250": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_291": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_291": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_292": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_292": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_293": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_293": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_294": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_295": {
                "*size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_296": {
                "data": {
                    "value": "[0, 1, 1, 0, 0, 0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_297": {
                "data": {
                    "value": "[0, 1, 1, 0, 0, 0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_298": {
                "data": {
                    "value": "[0, 1, 1, 1, 0, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_299": {
                "data": {
                    "value": "[11, 9, 11, 11, 15, 8, 100]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_300": {
                "data": {
                    "value": "[5, 6, 4, 8, 5, 1, 5]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_301": {
                "data": {
                    "value": "[0, 0, 0, 1, 0, 0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/models/temporal_pooler/test_tp_output_projection.py": {
        "torch": {
            "tensor_57": {
                "variable": {
                    "value": "seqs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seqs",
                            "Method Argument"
                        ],
                        [
                            "seqs",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_58": {
                "variable": {
                    "value": "likelihoods_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "likelihoods",
                    "type": "variable",
                    "possible_values": [
                        [
                            "likelihoods",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_59": {
                "variable": {
                    "value": "expected_output_projection_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_output_projection",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_output_projection",
                            "Method Argument"
                        ],
                        [
                            "expected_output_projection",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_68": {
                "variable": {
                    "value": "projection_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_98": {
                "variable": {
                    "value": "seqs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seqs",
                            "Method Argument"
                        ],
                        [
                            "seqs",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_99": {
                "variable": {
                    "value": "expected_output_projection_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_output_projection",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_output_projection",
                            "Method Argument"
                        ],
                        [
                            "expected_output_projection",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_108": {
                "variable": {
                    "value": "projection_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_frequent_seqs, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_154": {
                "data": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/models/temporal_pooler/test_untrained_forward_process.py": {
        "torch": {
            "tensor_79": {
                "variable": {
                    "value": "buffer.clusters.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 0], [0, 1, 0], [1, 0, 0], [0, 0, 1], [1, 0, 0]], [[0, 1, 0], [0, 0, 1], [1, 0, 0], [0, 0, 1], [nan, nan, nan], [nan, nan, nan]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_93": {
                "variable": {
                    "value": "buffer.contexts.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 1]], [[0.1, 0.1]], [[0, 1]], [[1, 0.5]], [[1, 0]], [[0, 0]]], [[[1, 1]], [[1, 1]], [[0.9, 0]], [[1, 0]], [[nan, nan]], [[nan, nan]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_111": {
                "variable": {
                    "value": "buffer.current_ptr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_112": {
                "variable": {
                    "value": "buffer.total_data_written",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[8, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_114": {
                "variable": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[4.5, 2.5], [1, 2.5], [3, 2.5]], [[4, 2], [0.1, 2], [3, 2]], [[0, 0], [0, 0], [0, 0]]], [[[0, 1.5], [1, 1.5], [2.9, 1.5]], [[0, 0], [0, 0], [0, 0]], [[0, 0], [0, 0], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_122": {
                "variable": {
                    "value": "cluster_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1], [0.5, 0.5, 0]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_129": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[0, 1], [0, 0], [0, 0]]], [[[1, 0.5], [0, 0], [0, 0]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_137": {
                "variable": {
                    "value": "projection_output",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_138": {
                "variable": {
                    "value": "action_output",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_160": {
                "variable": {
                    "value": "expected_buffer_current_ptr",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[2, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_161": {
                "variable": {
                    "value": "expected_buffer_total_data_written",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[9, 4]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_163": {
                "variable": {
                    "value": "expected_buffer_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 1, 0], [1, 0, 0], [0, 0, 1], [1, 0, 0], [0, 0, 1], [1, 0, 0]], [[0, 1, 0], [0, 0, 1], [1, 0, 0], [0, 0, 1], [0.5, 0.5, 0], [nan, nan, nan]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_177": {
                "variable": {
                    "value": "expected_buffer_contexts",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[[1, 1]], [[0.1, 0.1]], [[0, 1]], [[1, 0.5]], [[1, 0]], [[0, 0]]], [[[1, 1]], [[1, 1]], [[0.9, 0]], [[1, 0]], [[1, 0.5]], [[nan, nan]]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_192": {
                "variable": {
                    "value": "expected_buffer_seq_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[2, 2, 2], [2, 2, 2], [0, 0, 0], [2, 2, 2], [2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [0, 0, 0], [2, 2, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_207": {
                "variable": {
                    "value": "expected_buffer_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[2, 2, 2], [2, 2, 2], [fill_value, fill_value, fill_value], [2, 2, 2], [2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2], [2, 2, 2], [2, 2, 2], [fill_value, fill_value, fill_value], [2, 2, 2]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_220": {
                "variable": {
                    "value": "expected_projection_output",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "fill_value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / n_cluster_centers",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_221": {
                "variable": {
                    "value": "expected_action_output",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "fill_value",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / n_cluster_centers",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "arange_23": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "end": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "int"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "unsqueeze_23": {
                "variable": {
                    "value": "all_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_29": {
                "variable": {
                    "value": "cluster_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_32": {
                "variable": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2, context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_35": {
                "variable": {
                    "value": "reward_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_38": {
                "variable": {
                    "value": "projection_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_41": {
                "variable": {
                    "value": "action_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/node_accessors/test_mnist_node_accessor.py": {
        "torch": {}
    },
    "tests/core/node_accessors/test_se_dataset_navigation_accessor.py": {
        "torch": {}
    },
    "tests/core/node_accessors/test_sp_flock_node_accessor.py": {
        "torch": {}
    },
    "tests/core/nodes/node_unit_test_base.py": {
        "torch": {}
    },
    "tests/core/nodes/test_accuracy_node.py": {
        "torch": {
            "tensor_42": {
                "variable": {
                    "value": "t_a",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "input_a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_a",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_43": {
                "variable": {
                    "value": "t_b",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "input_b",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_b",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_44": {
                "variable": {
                    "value": "t_expected",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_result",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_result",
                            "Method Argument"
                        ],
                        [
                            "expected_result",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_70": {
                "variable": {
                    "value": "t_buffer",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "buffer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "buffer",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_71": {
                "variable": {
                    "value": "t_expected",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_result",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_result",
                            "Method Argument"
                        ],
                        [
                            "expected_result",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_action_monitor_node.py": {
        "torch": {
            "tensor_41": {
                "data": {
                    "value": "override_action",
                    "type": "variable",
                    "possible_values": [
                        [
                            "override_action",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_17": {
                "*size": {
                    "value": "descriptor.ACTION_COUNT",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_19": {
                "*size": {
                    "value": "descriptor.ACTION_COUNT",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/nodes/test_dataset_mnist_node.py": {
        "torch": {}
    },
    "tests/core/nodes/test_dataset_sequence_mnist_node.py": {
        "torch": {
            "cat_22": {
                "variable": {
                    "value": "actual_sequence",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "actual_sequence",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(actual_sequence, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(actual_sequence, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_46": {
                "variable": {
                    "value": "actual_sequence",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "actual_sequence",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(actual_sequence, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(actual_sequence, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "bincount_47": {
                "input": {
                    "value": "actual_sequence",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(actual_sequence, dim=0)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(actual_sequence, dim=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_50": {
                "data": {
                    "value": "trans_probs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "trans_probs",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sum_50": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_12": {
                "data": {
                    "value": "[0, 1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/nodes/test_expand_node.py": {
        "torch": {
            "zeros_17": {
                "variable": {
                    "value": "input_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_shape",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_18": {
                "variable": {
                    "value": "expected_output",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "expected_output_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_output_shape",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_34": {
                "variable": {
                    "value": "output_data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "output_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_shape",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_35": {
                "variable": {
                    "value": "expected_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "expected_input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_input_shape",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_expert_flock_node.py": {
        "torch": {
            "zeros_112": {
                "variable": {
                    "value": "self.context_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self.params.temporal.n_providers, NUMBER_OF_CONTEXT_TYPES, self.params.temporal.incoming_context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(self._device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "rand_437": {
                "variable": {
                    "value": "input_block.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(params.flock_size,) + input_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(self._device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_442": {
                "variable": {
                    "value": "node._unit.flock.sp_flock.cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0.5, 0.5, 0, 0], [0, 0, 0.5, 0, 0.5, 0]], [[1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(self._device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_452": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1, 0], [0.2, 0.3, 0.4, 0.1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(self._device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_459": {
                "variable": {
                    "value": "expected_projection",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 0], [0.5, 0.5], [0, 0]], [[0.2, 0.3], [0.4, 0.1], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(self._device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_125": {
                "variable": {
                    "value": "self.reward_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_129": {
                "variable": {
                    "value": "self.reward_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_132": {
                "variable": {
                    "value": "self.reward_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_374": {
                "*size": {
                    "value": "sp_data_input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sp_data_input_shape",
                            "Method Argument"
                        ],
                        [
                            "sp_data_input_shape",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_375": {
                "*size": {
                    "value": "context_input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context_input_shape",
                            "Method Argument"
                        ],
                        [
                            "context_input_shape",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_392": {
                "*size": {
                    "value": "sp_data_input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sp_data_input_shape",
                            "Method Argument"
                        ],
                        [
                            "sp_data_input_shape",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_393": {
                "*size": {
                    "value": "context_input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "context_input_shape",
                            "Method Argument"
                        ],
                        [
                            "context_input_shape",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_135": {
                "variable": {
                    "value": "self.reward_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_139": {
                "variable": {
                    "value": "self.reward_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/nodes/test_flatten_node.py": {
        "torch": {}
    },
    "tests/core/nodes/test_focusNode.py": {
        "torch": {}
    },
    "tests/core/nodes/test_grayscale_node.py": {
        "torch": {
            "tensor_20": {
                "variable": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 1, 1], [0, 0, 0], [1, 0, 0], [0, 1, 0], [0, 0, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.float32",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tensor_21": {
                "variable": {
                    "value": "expected_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "tensor_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor_data",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.float32",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_images_dataset_node.py": {
        "torch": {}
    },
    "tests/core/nodes/test_inverse_projection.py": {
        "torch": {
            "rand_34": {
                "variable": {
                    "value": "output_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(2, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.float32",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_lambda_node.py": {
        "torch": {
            "tensor_14": {
                "variable": {
                    "value": "input_tensor_0",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 1, -1]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.float32",
                            "Attribute"
                        ]
                    ]
                }
            },
            "tensor_15": {
                "variable": {
                    "value": "input_tensor_1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 1, -1]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.float32",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_motion_detection_node.py": {
        "torch": {}
    },
    "tests/core/nodes/test_multilayer_perceptron_flock.py": {
        "torch": {
            "tensor_13": {
                "variable": {
                    "value": "batch_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0.8, 0.2, 0], [0.5, 0, 0, 0], [0, 0, 0, 1], [0, 0, 1, 0.1]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_19": {
                "variable": {
                    "value": "batch_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[-1, 1], [0.9, -1], [-1, -0.8], [1, 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_43": {
                "variable": {
                    "value": "batch_learning_weights",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.1, 0.2, 0.4, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                }
            },
            "tensor_78": {
                "variable": {
                    "value": "batch_learning_coefficients",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "learning_coefficients",
                    "type": "variable",
                    "possible_values": [
                        [
                            "learning_coefficients",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/nodes/test_network_flock_node.py": {
        "torch": {
            "sum_113": {
                "variable": {
                    "value": "nns_targeted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_batch > 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/nodes/test_nnet_node.py": {
        "torch": {
            "Adam_187": {
                "variable": {
                    "value": "_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "_network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "_params.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_208": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "123",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ],
                        [
                            "5",
                            "int"
                        ]
                    ]
                }
            },
            "tensor_225": {
                "variable": {
                    "value": "is_testing_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "randn_204": {
                "*size": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_shape",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "permute_204": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/nodes/test_pass_node.py": {
        "torch": {
            "tensor_14": {
                "variable": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, -1], [1, 2, 3]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.float32",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_periodic_update_node_group.py": {
        "torch": {
            "tensor_33": {
                "data": {
                    "value": "[step]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tensor_37": {
                "data": {
                    "value": "[self.UPDATE_PERIOD * (step // self.UPDATE_PERIOD)]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/nodes/test_random_noise_node.py": {
        "torch": {
            "manual_seed_all_47": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "manual_seed_48": {
                "seed": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/nodes/test_random_number_node.py": {
        "torch": {}
    },
    "tests/core/nodes/test_receptive_field.py": {
        "torch": {
            "zeros_31": {
                "variable": {
                    "value": "input_image",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "image_grid_size_y",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "image_grid_size_x",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_64": {
                "variable": {
                    "value": "memory_block.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "image_grid_size_y",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "image_grid_size_x",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_102": {
                "variable": {
                    "value": "memory_block.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "image_grid_size_y",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "image_grid_size_x",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "n_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ],
                        [
                            "4",
                            "int"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cpu'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_salient_region_node.py": {
        "torch": {}
    },
    "tests/core/nodes/test_scatter_node.py": {
        "torch": {
            "tensor_59": {
                "variable": {
                    "value": "input_mb.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 0.5]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_61": {
                "variable": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 0, 0.5, 0, 0, 0, 0, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_42": {
                "variable": {
                    "value": "input_mb.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_43": {
                "variable": {
                    "value": "expected",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_result",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_result",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_se_dataset_node.py": {
        "torch": {
            "stack_75": {
                "tensors": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "collect_data(node, n_steps)",
                            "Call"
                        ],
                        [
                            "collect_data(node, n_steps)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_89": {
                "tensors": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "collect_data(node, n_steps)",
                            "Call"
                        ],
                        [
                            "collect_data(node, n_steps)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_se_objects_dataset_node.py": {
        "torch": {}
    },
    "tests/core/nodes/test_spatial_pooler_node.py": {
        "torch": {
            "rand_33": {
                "variable": {
                    "value": "input_block.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(params.flock_size,) + input_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_38": {
                "variable": {
                    "value": "node._unit.flock.cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 0.5, 0.5, 0, 0], [0, 0, 0.5, 0, 0.5, 0]], [[1, 0, 0, 0, 0, 0], [0, 1, 0, 0, 0, 0], [0, 0, 1, 0, 0, 0], [0, 0, 0, 1, 0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_47": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1, 0], [0.2, 0.3, 0.4, 0.1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_54": {
                "variable": {
                    "value": "expected_projection",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0, 0], [0.5, 0.5], [0, 0]], [[0.2, 0.3], [0.4, 0.1], [0, 0]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_switch_node.py": {
        "torch": {
            "zeros_13": {
                "*size": {
                    "value": "self._shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_14": {
                "*size": {
                    "value": "self._shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_17": {
                "*size": {
                    "value": "self._shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_27": {
                "*size": {
                    "value": "self._shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_28": {
                "*size": {
                    "value": "self._shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_29": {
                "data": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_32": {
                "*size": {
                    "value": "self._shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_42": {
                "*size": {
                    "value": "self._shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_43": {
                "*size": {
                    "value": "self._shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_44": {
                "data": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_47": {
                "*size": {
                    "value": "self._shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/nodes/test_to_one_hot_node.py": {
        "torch": {
            "tensor_87": {
                "variable": {
                    "value": "mb.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vector",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(input_shape, dtype=get_float(device), device=device)",
                            "Call"
                        ],
                        [
                            "vector",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_88": {
                "variable": {
                    "value": "t_expected_indexes",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_indexes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_indexes",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.uint8",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_114": {
                "variable": {
                    "value": "vector",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(150,)",
                            "Tuple"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_117": {
                "variable": {
                    "value": "mb.tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "vector",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros(input_shape, dtype=get_float(device), device=device)",
                            "Call"
                        ],
                        [
                            "vector",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "rand_108": {
                "*size": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(150,)",
                            "Tuple"
                        ]
                    ]
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/nodes/test_unsqueeze_node.py": {
        "torch": {}
    },
    "tests/core/nodes/test_visited_area_node.py": {
        "torch": {}
    },
    "tests/core/nodes/test_weighted_avg_node.py": {
        "torch": {}
    },
    "tests/core/test_seed_utils.py": {
        "torch": {
            "rand_14": {
                "variable": {
                    "value": "tensor1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[5, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_17": {
                "variable": {
                    "value": "tensor2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[5, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_24": {
                "variable": {
                    "value": "tensor1",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[5, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_27": {
                "variable": {
                    "value": "tensor2",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "[5, 2]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/test_tensor_utils.py": {
        "torch": {
            "tensor_16": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0], [1, 0, 0]], [[1, 0.5, 0.5], [0.3333, 0.6666, 0.9]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_22": {
                "variable": {
                    "value": "expected_output",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_37": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[1, 0, 0], [1, 0, 0]], [[1, 0.5, 0.5], [0.3333, 0.6666, 0.9]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_43": {
                "variable": {
                    "value": "expected_output",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_58": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 2, 3, 4)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_68": {
                "variable": {
                    "value": "probabilities",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_71": {
                "variable": {
                    "value": "probabilities",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_83": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_84": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tensor_85": {
                "variable": {
                    "value": "non_zeros",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_107": {
                "variable": {
                    "value": "source",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "source",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(source)",
                            "Call"
                        ],
                        [
                            "source",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_108": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(indices, dtype=torch.int64)",
                            "Call"
                        ],
                        [
                            "indices",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_146": {
                "variable": {
                    "value": "indexes_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "indexes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "indexes",
                            "Method Argument"
                        ],
                        [
                            "indexes",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_181": {
                "variable": {
                    "value": "indexes_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "indexes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "indexes",
                            "Method Argument"
                        ],
                        [
                            "indexes",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_247": {
                "variable": {
                    "value": "t_p",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": [
                        [
                            "p",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_248": {
                "variable": {
                    "value": "t_q",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "q",
                    "type": "variable",
                    "possible_values": [
                        [
                            "q",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_249": {
                "variable": {
                    "value": "t_expected_result",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_result",
                    "type": "variable",
                    "possible_values": [
                        [
                            "expected_result",
                            "Method Argument"
                        ],
                        [
                            "expected_result",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_250": {
                "variable": {
                    "value": "t_result",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(t_p.shape[0],)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_150": {
                "variable": {
                    "value": "ground_truth",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]], dtype=float_type, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]], dtype=float_type, device=device)",
                            "Call"
                        ],
                        [
                            "expected_output",
                            "Method Argument"
                        ],
                        [
                            "expected_output",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_153": {
                "variable": {
                    "value": "ground_truth",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]], dtype=float_type, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]], dtype=float_type, device=device)",
                            "Call"
                        ],
                        [
                            "expected_output",
                            "Method Argument"
                        ],
                        [
                            "expected_output",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "dtype",
                            "Method Argument"
                        ],
                        [
                            "dtype",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_185": {
                "variable": {
                    "value": "ground_truth",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]], dtype=float_type, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]], dtype=float_type, device=device)",
                            "Call"
                        ],
                        [
                            "expected_output",
                            "Method Argument"
                        ],
                        [
                            "expected_output",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_type",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_188": {
                "variable": {
                    "value": "ground_truth",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "expected_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]], dtype=float_type, device=device)",
                            "Call"
                        ],
                        [
                            "torch.tensor([[[0.9999, 0.0001, 0.0001], [0.9999, 0.0001, 0.0001]], [[0.9999, 0.5, 0.5], [0.333333, 0.666567, 0.89992]]], dtype=float_type, device=device)",
                            "Call"
                        ],
                        [
                            "expected_output",
                            "Method Argument"
                        ],
                        [
                            "expected_output",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "dtype",
                            "Method Argument"
                        ],
                        [
                            "dtype",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sum_70": {
                "input": {
                    "value": "normalized",
                    "type": "variable",
                    "possible_values": [
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=False)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_73": {
                "input": {
                    "value": "normalized",
                    "type": "variable",
                    "possible_values": [
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=False)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_75": {
                "input": {
                    "value": "normalized",
                    "type": "variable",
                    "possible_values": [
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=False)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_77": {
                "input": {
                    "value": "normalized",
                    "type": "variable",
                    "possible_values": [
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=False)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_79": {
                "input": {
                    "value": "normalized",
                    "type": "variable",
                    "possible_values": [
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(probabilities, 0, add_constant=False)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=True)",
                            "Call"
                        ],
                        [
                            "normalize_probs(normalized, 0, add_constant=False)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_93": {
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_264": {
                "*size": {
                    "value": "tensor_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor_shape",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ones_94": {
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_94": {
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "tests/core/utils/list_list_utils.py": {
        "torch": {
            "tensor_34": {
                "variable": {
                    "value": "input1",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_35": {
                "variable": {
                    "value": "input2",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "list2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list2",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "tests/core/utils/test_inverse_projection_utils.py": {
        "torch": {
            "Tensor_22": {
                "variable": {
                    "value": "t_source",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_23": {
                "variable": {
                    "value": "t_projections",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Tensor_24": {
                "variable": {
                    "value": "t_expected",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "tests/gui/server/test_ui_api.py": {
        "torch": {
            "rand_17": {
                "variable": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(128, 64, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "get_float(device)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "tests/profiling.py": {
        "torch": {
            "rand_27": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "size",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_61": {
                "variable": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, n_cluster_centers, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_66": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, batch_size, input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "full_69": {
                "variable": {
                    "value": "distances",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(flock_size, batch_size, n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "-2.3",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_84": {
                "variable": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(10, 10, 10)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "empty_89": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "index_select_80": {
                "input": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.rand((10, 10, 10), dtype=float_dtype, device=device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.rand(10, dtype=float_dtype, device=device) < 0.4",
                            "Compare"
                        ],
                        [
                            "indices.nonzero().squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.empty(1, dtype=float_dtype, device=device)",
                            "Call"
                        ]
                    ]
                }
            },
            "rand_86": {
                "*size": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ],
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "'cuda'",
                            "str"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sum_13": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_14": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_15": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "tests/templates/test_template_helpers.py": {
        "torch": {}
    },
    "tests/testing_utils.py": {
        "torch": {
            "synchronize_106": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_114": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/__init__.py": {
        "torch": {}
    },
    "torchsim/core/datasets/alphabet/alphabet.py": {
        "torch": {
            "from_numpy_34": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(image)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_50": {
                "tensors": {
                    "value": "rendered_symbols",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[self._create_symbol(s) for s in symbols]",
                            "ListComp"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/core/datasets/convert_dataset.py": {
        "torch": {
            "load_66": {
                "variable": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "path + dir_file",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_81": {
                "variable": {
                    "value": "last_id",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "examples[:NUM_SNIPPETS]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "from_numpy_37": {
                "variable": {
                    "value": "images",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "numpy.array(dataset[0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "permute_37": {
                "variable": {
                    "value": "images",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_38": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "numpy.array(dataset[1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_50": {
                "obj": {
                    "value": "torch_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "path + '/' + 'SE_' + task + '_' + size + '_' + type + '_' + 'full.set'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_51": {
                "obj": {
                    "value": "torch_snippet",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[images[:last_id].clone(), labels[:last_id].clone(), instance_ids[:last_id].clone(), examples[:NUM_SNIPPETS].clone()]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "path + '/' + 'SE_' + task + '_' + size + '_' + type + '_' + 'snippet.set'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_87": {
                "obj": {
                    "value": "torch_snippet",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[images[:last_id].clone(), labels[:last_id].clone(), instance_ids[:last_id].clone(), examples[:NUM_SNIPPETS].clone()]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "path + 'SE_' + task + '_' + size + '_' + type + '_' + 'snippet.set'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/datasets/dataset_se_task_one.py": {
        "torch": {
            "load_53": {
                "variable": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "self._filename_with_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/datasets/dataset_se_task_zero.py": {
        "torch": {
            "load_63": {
                "variable": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "self._train_filename_with_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_69": {
                "variable": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "self._test_filename_with_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/datasets/mnist.py": {
        "torch": {}
    },
    "torchsim/core/datasets/space_divisor.py": {
        "torch": {
            "tensor_47": {
                "variable": {
                    "value": "self.nans",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "(self.num_landmarks,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_51": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[FLOAT_NAN]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_84": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[res]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "floor_97": {
                "variable": {
                    "value": "yx_landmarks",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "yx_positions / self.segment_sizes",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tensor_45": {
                "data": {
                    "value": "[self.vertical_segments, self.horizontal_segments]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/eval/metrics/abstract_classifier.py": {
        "torch": {
            "tensor_242": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(data, device=device, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.stack(data)",
                            "Call"
                        ],
                        [
                            "id_to_one_hot(data, vector_len=classifier_input_size)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_245": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(data, device=device, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.stack(data)",
                            "Call"
                        ],
                        [
                            "id_to_one_hot(data, vector_len=classifier_input_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "isnan_256": {
                "input": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(data, device=device, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "torch.stack(data)",
                            "Call"
                        ],
                        [
                            "id_to_one_hot(data, vector_len=classifier_input_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "any_256": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/eval/metrics/cluster_agreement.py": {
        "torch": {}
    },
    "torchsim/core/eval/metrics/comparison_matrix.py": {
        "torch": {
            "full_22": {
                "variable": {
                    "value": "comparisons",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "[size, size]",
                    "type": "List",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "empty_element_value",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "full_53": {
                "variable": {
                    "value": "accuracies",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "[size, size]",
                    "type": "List",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "empty_element_value",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/eval/metrics/entropy.py": {
        "torch": {}
    },
    "torchsim/core/eval/metrics/mean_squared_error.py": {
        "torch": {
            "mse_loss_6": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "reconstruction",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/eval/metrics/simple_classifier_nn.py": {
        "torch": {
            "Linear_116": {
                "variable": {
                    "value": "self._hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self._input_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_117": {
                "variable": {
                    "value": "self._relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_119": {
                "variable": {
                    "value": "self._out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self._hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._output_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Softmax_120": {
                "variable": {
                    "value": "self._softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_148": {
                "variable": {
                    "value": "self._out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self._input_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._output_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Softmax_149": {
                "variable": {
                    "value": "self._softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_253": {
                "variable": {
                    "value": "self._batch_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._inputs.shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "str(inputs.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_254": {
                "variable": {
                    "value": "self._batch_labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._labels.shape",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "str(inputs.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "randint_266": {
                "variable": {
                    "value": "indexes",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "self._n_samples",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "[self._batch_size]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_270": {
                "variable": {
                    "value": "self._batch_inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self._inputs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "expanded_idnexes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "idx.expand([-1, self._data_size])",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_272": {
                "variable": {
                    "value": "self._batch_labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self._labels.unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "idx",
                    "type": "variable",
                    "possible_values": [
                        [
                            "indexes.view(-1, 1).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_272": {
                "variable": {
                    "value": "self._batch_labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SGD_319": {
                "variable": {
                    "value": "self._optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self._net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self._learn_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_320": {
                "variable": {
                    "value": "self._loss_func",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "squeeze_339": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_394": {
                "input": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._net.forward(inputs)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/eval/metrics/sp_convergence_metrics.py": {
        "torch": {}
    },
    "torchsim/core/eval/node_accessors/flock_node_accessor.py": {
        "torch": {
            "argmax_25": {
                "variable": {
                    "value": "max_id",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node.outputs.sp.forward_clusters.tensor",
                            "Attribute"
                        ],
                        [
                            "node.memory_blocks.sp.forward_clusters.tensor",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/core/eval/node_accessors/mnist_node_accessor.py": {
        "torch": {}
    },
    "torchsim/core/eval/node_accessors/random_number_accessor.py": {
        "torch": {}
    },
    "torchsim/core/eval/node_accessors/se_io_accessor.py": {
        "torch": {}
    },
    "torchsim/core/eval/node_accessors/sp_node_accessor.py": {
        "torch": {
            "argmax_20": {
                "variable": {
                    "value": "max_id",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "node.outputs.sp.forward_clusters.tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/eval2/experiment.py": {
        "torch": {
            "empty_cache_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/graph/hierarchical_observable_node.py": {
        "torch": {}
    },
    "torchsim/core/graph/inverse_pass_packet.py": {
        "torch": {}
    },
    "torchsim/core/graph/slots.py": {
        "torch": {}
    },
    "torchsim/core/graph/unit.py": {
        "torch": {}
    },
    "torchsim/core/kernels/__init__.py": {
        "torch": {
            "load_38": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "name",
                            "Method Argument"
                        ]
                    ]
                },
                "map_location": {
                    "value": "sources",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[abspath(source) for source in sources]",
                            "ListComp"
                        ],
                        [
                            "sources",
                            "Method Argument"
                        ]
                    ]
                },
                "pickle_module": {
                    "value": "extra_cflags",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "**pickle_load_args": {
                    "value": "cuda_cflags",
                    "type": "variable",
                    "possible_values": [
                        [
                            "['-Xptxas -dlcm=ca']",
                            "List"
                        ],
                        [
                            "cuda_cflags + extra_cuda_cflags",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/core/memory/on_device.py": {
        "torch": {
            "save_148": {
                "obj": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._get_tensors()",
                            "Call"
                        ],
                        [
                            "self._get_tensors()",
                            "Call"
                        ],
                        [
                            "self._get_tensors()",
                            "Call"
                        ],
                        [
                            "self._get_tensors()",
                            "Call"
                        ],
                        [
                            "torch.load(os.path.join(folder, data))",
                            "Call"
                        ],
                        [
                            "tensor",
                            "Method Argument"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(folder, file_name)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_133": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(folder, data)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/memory/tensor_creator.py": {
        "torch": {}
    },
    "torchsim/core/models/flock/buffer.py": {
        "torch": {
            "gather_238": {
                "variable": {
                    "value": "data_at_pointers",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "pointers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._single_item_expander.expand(self._buffer.current_ptr).to(self._device)",
                            "Call"
                        ]
                    ]
                }
            },
            "squeeze_238": {
                "variable": {
                    "value": "data_at_pointers",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_118": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.unsqueeze(data, dim=1)",
                            "Call"
                        ],
                        [
                            "data",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gather_215": {
                "variable": {
                    "value": "vals",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "selector",
                    "type": "variable",
                    "possible_values": [
                        [
                            "start.view(-1, 1).expand(self._buffer.flock_size, batch_size)",
                            "Call"
                        ],
                        [
                            "(selector + self._buffer.batching_tensor[0:batch_size]) % self._buffer.buffer_size",
                            "BinOp"
                        ],
                        [
                            "self._batch_expander.expand(selector, batch_size)",
                            "Call"
                        ],
                        [
                            "start.view(-1, 1).expand(self._buffer.flock_size, batch_size)",
                            "Call"
                        ],
                        [
                            "(selector + self._buffer.batching_tensor[0:batch_size]) % self._buffer.buffer_size",
                            "BinOp"
                        ],
                        [
                            "self._batch_expander.expand(selector, batch_size).to(self._device)",
                            "Call"
                        ],
                        [
                            "gather_from_dim(selector, self._buffer.flock_indices.to(self._device), dim=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_220": {
                "variable": {
                    "value": "vals",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "gather_from_dim(self.stored_data, self._buffer.flock_indices.to(self._device), dim=0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "selector",
                    "type": "variable",
                    "possible_values": [
                        [
                            "start.view(-1, 1).expand(self._buffer.flock_size, batch_size)",
                            "Call"
                        ],
                        [
                            "(selector + self._buffer.batching_tensor[0:batch_size]) % self._buffer.buffer_size",
                            "BinOp"
                        ],
                        [
                            "self._batch_expander.expand(selector, batch_size)",
                            "Call"
                        ],
                        [
                            "start.view(-1, 1).expand(self._buffer.flock_size, batch_size)",
                            "Call"
                        ],
                        [
                            "(selector + self._buffer.batching_tensor[0:batch_size]) % self._buffer.buffer_size",
                            "BinOp"
                        ],
                        [
                            "self._batch_expander.expand(selector, batch_size).to(self._device)",
                            "Call"
                        ],
                        [
                            "gather_from_dim(selector, self._buffer.flock_indices.to(self._device), dim=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_261": {
                "variable": {
                    "value": "nan_column",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(self._buffer.flock_size, self._buffer.buffer_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_265": {
                "variable": {
                    "value": "original_data_with_nan_column",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.stored_data, nan_column]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_275": {
                "variable": {
                    "value": "nan_column",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(new_flock_size, self._buffer.buffer_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_278": {
                "variable": {
                    "value": "original_data_with_nan_column",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.stored_data[flock_indices], nan_column]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gather_280": {
                "variable": {
                    "value": "self.stored_data[flock_indices]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "original_data_with_nan_column",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat([self.stored_data, nan_column], dim=2)",
                            "Call"
                        ],
                        [
                            "torch.cat([self.stored_data[flock_indices], nan_column], dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "new_indices_with_nans",
                    "type": "variable",
                    "possible_values": [
                        [
                            "indices_with_nans.unsqueeze(dim=1).expand(new_dims)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_351": {
                "variable": {
                    "value": "steps_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "self.flock_indices.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "steps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "steps",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_267": {
                "input": {
                    "value": "original_data_with_nan_column",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat([self.stored_data, nan_column], dim=2)",
                            "Call"
                        ],
                        [
                            "torch.cat([self.stored_data[flock_indices], nan_column], dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "indices_with_nans.unsqueeze(dim=1).expand(self.dims)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "self.stored_data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/flock/expert_flock.py": {
        "torch": {}
    },
    "torchsim/core/models/flock/flock.py": {
        "torch": {}
    },
    "torchsim/core/models/flock/flock_utils.py": {
        "torch": {}
    },
    "torchsim/core/models/flock/process.py": {
        "torch": {}
    },
    "torchsim/core/models/neural_network/network_flock_buffer.py": {
        "torch": {}
    },
    "torchsim/core/models/receptive_field/grid.py": {
        "torch": {
            "full_164": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(*self._child_grid_dims, *rc_dims, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "nan",
                    "type": "variable",
                    "possible_values": [
                        [
                            "-1",
                            "UnaryOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/receptive_field/mapping.py": {
        "torch": {
            "zeros_53": {
                "variable": {
                    "value": "self._pre_allocated_parent_input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "grids.n_parent_rfs * grids.parent_rf_area * self.chunk_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_106": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._grids.child_grid_area * self.chunk_size",
                            "BinOp"
                        ],
                        [
                            "values.numel()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_154": {
                "variable": {
                    "value": "initial_indexes",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "tensor_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._grids.child_grid_area * self.chunk_size",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_185": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._grids.child_grid_area * self.chunk_size",
                            "BinOp"
                        ],
                        [
                            "values.numel()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_186": {
                "variable": {
                    "value": "counts",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._grids.child_grid_area * self.chunk_size",
                            "BinOp"
                        ],
                        [
                            "values.numel()",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_218": {
                "data": {
                    "value": "[i for i in self._generate_1d_indexes(rf_size, stride, n_rfs)]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_116": {
                "input": {
                    "value": "flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Mapping._flatten(elements)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "self._indexes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "destination",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/receptive_field/reverse_mapping.py": {
        "torch": {
            "cat_54": {
                "variable": {
                    "value": "linearized_data_with_nans",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(linearized_data, torch.full((1, *data_size), FLOAT_NAN, device=self._device))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "full_55": {
                "size": {
                    "value": "(1, *data_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "FLOAT_NAN",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/spatial_pooler/buffer.py": {
        "torch": {
            "argmax_44": {
                "variable": {
                    "value": "cluster_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.clusters.get_stored_data()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gather_53": {
                "variable": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "sampling_weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.clusters.get_stored_data()",
                            "Call"
                        ],
                        [
                            "sampling_weights.sum(1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "cluster_ids",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.argmax(self.clusters.get_stored_data(), dim=2)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_55": {
                "variable": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "flock_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.flock_size if self.flock_indices is None else len(self.flock_indices)",
                            "IfExp"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ],
                        [
                            "flock_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "self.buffer_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_82": {
                "input": {
                    "value": "self.inputs.get_stored_data()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "expanded_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "indices.view(flock_size, batch_size, 1).expand(sampled_data_batch.shape)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "sampled_data_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sampled_data_batch",
                            "Method Argument"
                        ],
                        [
                            "sampled_data_batch",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "rand_107": {
                "variable": {
                    "value": "sample",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self.buffer_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "topk_110": {
                "variable": {
                    "value": "(_, indices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "sample",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.rand((flock_size, self.buffer_size), device=self._device, dtype=self._float_dtype)",
                            "Call"
                        ],
                        [
                            "-sample / exp_lambda",
                            "BinOp"
                        ]
                    ]
                },
                "k": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "largest": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/spatial_pooler/forward.py": {
        "torch": {
            "unsqueeze_75": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self._data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_80": {
                "input": {
                    "value": "closest_clusters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.compute_closest_cluster_centers(self._cluster_centers, data)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/spatial_pooler/learning.py": {
        "torch": {
            "arange_49": {
                "variable": {
                    "value": "self._cluster_index_matrix",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "self._n_cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_52": {
                "variable": {
                    "value": "self._expert_row_indices",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_57": {
                "variable": {
                    "value": "self.tmp_boosting_targets",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self._n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_59": {
                "variable": {
                    "value": "self.boost_deltas",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self._n_cluster_centers, self._input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_62": {
                "variable": {
                    "value": "self.data_batch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self.batch_size, self._input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "bmm_193": {
                "variable": {
                    "value": "sum_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "index_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_batch.permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "data_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_batch",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sum_197": {
                "variable": {
                    "value": "cluster_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "index_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_batch.permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_233": {
                "variable": {
                    "value": "datapoints_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cluster_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._sample_batch(self._cluster_centers, self.data_batch, self._buffer)",
                            "Call"
                        ],
                        [
                            "self.compute_closest_cluster_centers(cluster_centers, data_batch)",
                            "Call"
                        ],
                        [
                            "torch.gather(buffer.clusters.get_stored_data(), dim=1, index=indices)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sort_261": {
                "variable": {
                    "value": "(_, sorted_indices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "variance_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._sample_batch(self._cluster_centers, self.data_batch, self._buffer)",
                            "Call"
                        ],
                        [
                            "self.compute_closest_cluster_centers(cluster_centers, data_batch)",
                            "Call"
                        ],
                        [
                            "self.compute_closest_cluster_centers(cluster_centers, buffer.inputs.get_stored_data())",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "descending": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ne_315": {
                "variable": {
                    "value": "new_boost_condition",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "over_threshold",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_boosting_durations > cluster_boost_threshold",
                            "Compare"
                        ]
                    ]
                },
                "other": {
                    "value": "prev_boosted_clusters",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "any_315": {
                "variable": {
                    "value": "new_boost_condition",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gather_343": {
                "variable": {
                    "value": "boosting_cluster_centers",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_centers",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "boosting_targets_indexes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "boosting_targets.unsqueeze(dim=2).expand(self._flock_size, self._n_cluster_centers, self._input_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_152": {
                "variable": {
                    "value": "cluster_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "buffer.clusters.get_stored_data()",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "buffer.sample_learning_batch(self.batch_size, data_batch, self._sampling_method)",
                            "Call"
                        ],
                        [
                            "indices.view(self._flock_size, self.batch_size, 1).expand(self._flock_size, self.batch_size, self._n_cluster_centers)",
                            "Call"
                        ]
                    ]
                }
            },
            "div_201": {
                "input": {
                    "value": "sum_tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.bmm(index_batch, data_batch)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "cluster_counts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sum(index_batch, dim=2, keepdim=True)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "cluster_center_targets",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "add_331": {
                "input": {
                    "value": "cluster_center_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "alpha": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "other": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_centers",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "cluster_center_deltas",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "add_344": {
                "input": {
                    "value": "boosting_cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.gather(cluster_centers, dim=1, index=boosting_targets_indexes)",
                            "Call"
                        ]
                    ]
                },
                "alpha": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "other": {
                    "value": "cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cluster_centers",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "_boost_deltas",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_264": {
                "input": {
                    "value": "prev_boosted_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "isnan_334": {
                "input": {
                    "value": "cluster_center_deltas",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/spatial_pooler/process.py": {
        "torch": {
            "sum_61": {
                "variable": {
                    "value": "datapoint_variances",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "one_hot_cluster_centers * distances",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_85": {
                "variable": {
                    "value": "distances",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, batch_size, self._n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmin_104": {
                "input": {
                    "value": "distances",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._compute_squared_distances(cluster_centers, data)",
                            "Call"
                        ],
                        [
                            "torch.zeros((self._flock_size, batch_size, self._n_cluster_centers), dtype=self._float_dtype, device=self._device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_65": {
                "input": {
                    "value": "one_hot_cluster_centers",
                    "type": "variable",
                    "possible_values": [
                        [
                            "id_to_one_hot(closest, self._n_cluster_centers, dtype=self._float_dtype)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/spatial_pooler/reconstruction.py": {
        "torch": {}
    },
    "torchsim/core/models/spatial_pooler/spatial_pooler.py": {
        "torch": {
            "isnan_160": {
                "variable": {
                    "value": "sum_of_nans",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "data1",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_160": {
                "variable": {
                    "value": "sum_of_nans",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_281": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.flock_size, self.input_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_292": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "self.flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/temporal_pooler/forward_and_backward.py": {
        "torch": {
            "zeros_81": {
                "variable": {
                    "value": "self.cluster_history",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.seq_lookbehind",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_84": {
                "variable": {
                    "value": "self.context_history",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.seq_lookbehind",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.context_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_89": {
                "variable": {
                    "value": "self.seq_likelihoods_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.n_frequent_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_93": {
                "variable": {
                    "value": "self.seq_likelihoods_priors_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.n_frequent_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_98": {
                "variable": {
                    "value": "self.seq_likelihoods_for_each_provider",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.n_frequent_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.n_providers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_102": {
                "variable": {
                    "value": "self.predicted_clusters_by_context",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.n_providers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layout": {
                    "value": "self.n_cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_107": {
                "variable": {
                    "value": "self.seq_probs_clusters_context",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.n_frequent_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_114": {
                "variable": {
                    "value": "self.seq_likelihoods_exploration",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.n_frequent_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_117": {
                "variable": {
                    "value": "self.seq_likelihoods_active",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self.n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_120": {
                "variable": {
                    "value": "self.active_predicted_clusters",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self.seq_length, self.n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_123": {
                "variable": {
                    "value": "self.exploring",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_126": {
                "variable": {
                    "value": "self.exploration_random_numbers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_128": {
                "variable": {
                    "value": "self.context_informativeness",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.seq_lookbehind",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_131": {
                "variable": {
                    "value": "self.frequent_seqs_scaled",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self.n_frequent_seqs, self.n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_134": {
                "variable": {
                    "value": "self.seq_rewards_goal_directed",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self.n_frequent_seqs, NUMBER_OF_CONTEXT_TYPES - 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_138": {
                "variable": {
                    "value": "self._influence_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self.n_frequent_seqs, self.seq_length - 1, self.n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "empty_372": {
                "variable": {
                    "value": "predicted_cluster_output",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self.seq_length, self.n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_541": {
                "variable": {
                    "value": "most_informative_context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "context_informativeness.view(self._flock_size, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randint_663": {
                "variable": {
                    "value": "random_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "self.n_frequent_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(self._flock_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randint_682": {
                "variable": {
                    "value": "random_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "self.n_cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(self._flock_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_751": {
                "variable": {
                    "value": "cluster_rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self.n_frequent_seqs, self.n_providers, 2, self.n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_801": {
                "variable": {
                    "value": "(next_potentials, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "next_potentials",
                    "type": "variable",
                    "possible_values": [
                        [
                            "discounted_rewards[:, :, self.seq_lookbehind]",
                            "Subscript"
                        ],
                        [
                            "torch.max(next_potentials, dim=2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mul_466": {
                "input": {
                    "value": "seq_likelihoods_clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "other": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "seq_likelihoods_priors_clusters",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "gather_549": {
                "input": {
                    "value": "each_context_viewed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "seq_likelihoods_for_each_context.view(self._flock_size, self.n_frequent_seqs, -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "indexes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "most_informative_context.view(self._flock_size, 1, 1).expand(self._flock_size, self.n_frequent_seqs, 1)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "seq_likelihoods_priors_clusters_context.unsqueeze(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "div_557": {
                "input": {
                    "value": "seq_likelihoods_priors_clusters_context",
                    "type": "variable",
                    "possible_values": []
                },
                "other": {
                    "value": "frequent_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_789": {
                "variable": {
                    "value": "max_ev",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "current_rewards[:, :, transition]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "isnan_494": {
                "input": {
                    "value": "likelihoods",
                    "type": "variable",
                    "possible_values": [
                        [
                            "frequent_context_likelihoods[:, :, :self.seq_lookbehind, :, :] * context_history_expanded",
                            "BinOp"
                        ],
                        [
                            "likelihoods.sum(dim=4)",
                            "Call"
                        ],
                        [
                            "likelihoods * multi_unsqueeze(seq_likelihoods_priors_clusters, [2, 3]).expand(likelihoods.size())",
                            "BinOp"
                        ]
                    ]
                }
            },
            "isnan_506": {
                "input": {
                    "value": "likelihoods_by_context",
                    "type": "variable",
                    "possible_values": [
                        [
                            "frequent_context_likelihoods[:, :, self.seq_lookbehind, :, :].clone()",
                            "Call"
                        ],
                        [
                            "likelihoods_by_context * multi_unsqueeze(seq_likelihoods_priors_clusters, [2, 3]).expand(likelihoods_by_context.size())",
                            "BinOp"
                        ]
                    ]
                }
            },
            "isnan_562": {
                "input": {
                    "value": "seq_probs_clusters_context",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "isnan_717": {
                "input": {
                    "value": "influence_model",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "isnan_718": {
                "input": {
                    "value": "context_data",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/temporal_pooler/learning.py": {
        "torch": {
            "zeros_107": {
                "variable": {
                    "value": "self.cluster_batch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self._batch_size, self._n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_110": {
                "variable": {
                    "value": "self.context_batch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self._batch_size, self._n_providers, self._context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_113": {
                "variable": {
                    "value": "self.rewards_punishments_batch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self._batch_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_116": {
                "variable": {
                    "value": "self.exploring_batch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self._batch_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_119": {
                "variable": {
                    "value": "self.actions_batch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self._batch_size, self._n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_176": {
                "variable": {
                    "value": "self.cluster_subbatch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._subbatch_size, self._n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_179": {
                "variable": {
                    "value": "self.context_subbatch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._subbatch_size, self._n_providers, self._context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_183": {
                "variable": {
                    "value": "self.rewards_punishments_subbatch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._subbatch_size, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_186": {
                "variable": {
                    "value": "self.exploring_subbatch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._subbatch_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_189": {
                "variable": {
                    "value": "self.actions_subbatch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._subbatch_size, self._n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_192": {
                "variable": {
                    "value": "self.encountered_batch_seq_occurrences",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._max_encountered_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_195": {
                "variable": {
                    "value": "self.encountered_batch_context_occurrences",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._max_encountered_seqs, self._seq_length, self._n_providers, self._context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_200": {
                "variable": {
                    "value": "self.encountered_batch_rewards_punishments",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._max_encountered_seqs, self._seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_204": {
                "variable": {
                    "value": "self.encountered_batch_exploration_attempts",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._max_encountered_seqs, self._seq_lookahead)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_209": {
                "variable": {
                    "value": "self.encountered_batch_exploration_results",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._max_encountered_seqs, self._seq_lookahead, self._n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_214": {
                "variable": {
                    "value": "self.newly_encountered_seqs_indicator",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._max_seqs_in_batch)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_216": {
                "variable": {
                    "value": "self.newly_encountered_seqs_counts",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._max_seqs_in_batch)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_220": {
                "variable": {
                    "value": "self.encountered_subbatch_seq_occurrences",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._max_encountered_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_224": {
                "variable": {
                    "value": "self.encountered_subbatch_context_occurrences",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._max_encountered_seqs, self._seq_length, self._n_providers, self._context_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_228": {
                "variable": {
                    "value": "self.encountered_subbatch_rewards_punishments",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._max_encountered_seqs, self._seq_lookahead, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_232": {
                "variable": {
                    "value": "self.encountered_subbatch_exploration_attempts",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._max_encountered_seqs, self._seq_lookahead)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_237": {
                "variable": {
                    "value": "self.encountered_subbatch_exploration_results",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._n_subbatches, self._max_encountered_seqs, self._seq_lookahead, self._n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_242": {
                "variable": {
                    "value": "self.most_probable_batch_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._max_seqs_in_batch, self._seq_length)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_246": {
                "variable": {
                    "value": "self.most_probable_batch_seq_probs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size, self._max_seqs_in_batch)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_250": {
                "variable": {
                    "value": "self.total_encountered_occurrences",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(flock_size,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sort_533": {
                "variable": {
                    "value": "(_, indices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "sortable_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._create_ordering(most_probable_batch_seqs)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sort_561": {
                "variable": {
                    "value": "(sorted_newly_encountered_seq_counts, indices)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "newly_encountered_seq_counts",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "descending": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "arange_565": {
                "variable": {
                    "value": "offsets",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "indices.numel()",
                    "type": "Call",
                    "possible_values": []
                },
                "step": {
                    "value": "self._max_seqs_in_batch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sort_611": {
                "variable": {
                    "value": "(all_encountered_seq_occurrences_sorted, indices_sorted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_seq_occurrences",
                            "Method Argument"
                        ],
                        [
                            "all_encountered_seq_occurrences",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "descending": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "gather_614": {
                "variable": {
                    "value": "all_encountered_seqs_sorted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "all_encountered_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_seqs",
                            "Method Argument"
                        ],
                        [
                            "all_encountered_seqs",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "indices_sorted.unsqueeze(dim=2).expand(dimensions)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "gather_620": {
                "variable": {
                    "value": "all_encountered_context_occurrences_sorted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "all_encountered_context_occurrences",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_context_occurrences",
                            "Method Argument"
                        ],
                        [
                            "all_encountered_context_occurrences",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "context_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "multi_unsqueeze(indices_sorted, [2, 3, 4]).expand(all_encountered_context_occurrences.size())",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_625": {
                "variable": {
                    "value": "all_encountered_rewards_punishments_sorted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "all_encountered_rewards_punishments",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_rewards_punishments",
                            "Method Argument"
                        ],
                        [
                            "all_encountered_rewards_punishments",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "reward_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "multi_unsqueeze(indices_sorted, [2, 3]).expand(all_encountered_rewards_punishments.size())",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_631": {
                "variable": {
                    "value": "all_encountered_exploration_attempts_sorted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "all_encountered_exploration_attempts",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_exploration_attempts",
                            "Method Argument"
                        ],
                        [
                            "all_encountered_exploration_attempts",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "exploration_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "multi_unsqueeze(indices_sorted, [2]).expand(all_encountered_exploration_attempts.size())",
                            "Call"
                        ],
                        [
                            "multi_unsqueeze(indices_sorted, [2, 3]).expand(all_encountered_exploration_results.size())",
                            "Call"
                        ]
                    ]
                }
            },
            "gather_636": {
                "variable": {
                    "value": "all_encountered_exploration_results_sorted",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_exploration_results",
                            "Method Argument"
                        ],
                        [
                            "all_encountered_exploration_results",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "exploration_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "multi_unsqueeze(indices_sorted, [2]).expand(all_encountered_exploration_attempts.size())",
                            "Call"
                        ],
                        [
                            "multi_unsqueeze(indices_sorted, [2, 3]).expand(all_encountered_exploration_results.size())",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_766": {
                "variable": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "ranges",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "index_select_768": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "padded_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat([batch, batch_padding], dim=1)",
                            "Call"
                        ],
                        [
                            "batch",
                            "variable"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sort(sortable_batch, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.sort(newly_encountered_seq_counts, dim=1, descending=True)",
                            "Call"
                        ],
                        [
                            "torch.cat(ranges).to(self._device)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_858": {
                "variable": {
                    "value": "tensor_padding",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._batch_flock_size, self._subbatch_overlap) + tensor.size()[2:]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_861": {
                "variable": {
                    "value": "combined_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[tensor, tensor_padding]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_873": {
                "variable": {
                    "value": "tensor_valid",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._batch_flock_size, self._batch_size - self._subbatch_overlap)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_879": {
                "variable": {
                    "value": "tensor_padding",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._batch_flock_size, self._subbatch_overlap * 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_882": {
                "variable": {
                    "value": "combined_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[tensor_valid, tensor_padding]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_452": {
                "input": {
                    "value": "encountered_subbatch_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "encountered_batch_seq_occurrences",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_453": {
                "input": {
                    "value": "encountered_subbatch_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "encountered_batch_context_occurrences",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_454": {
                "input": {
                    "value": "encountered_subbatch_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "encountered_batch_exploration_attempts",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_455": {
                "input": {
                    "value": "encountered_subbatch_exploration_results",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "encountered_batch_exploration_results",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_456": {
                "input": {
                    "value": "encountered_subbatch_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "encountered_batch_rewards_punishments",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "div_481": {
                "input": {
                    "value": "new_results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_attempts_expanded * all_encountered_exploration_results + encountered_batch_exploration_results",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "exp_attempts_expanded",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_exploration_attempts.unsqueeze(3).expand(all_encountered_exploration_results.size())",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_exploration_results",
                            "Method Argument"
                        ],
                        [
                            "all_encountered_exploration_results",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sum_655": {
                "input": {
                    "value": "all_encountered_seq_occurrences",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_seq_occurrences",
                            "Method Argument"
                        ],
                        [
                            "all_encountered_seq_occurrences",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "total_encountered_occurrences",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "div_698": {
                "input": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": [
                        [
                            "frequent_context_likelihoods + self._context_prior",
                            "BinOp"
                        ],
                        [
                            "frequent_context_likelihoods",
                            "Method Argument"
                        ],
                        [
                            "frequent_context_likelihoods",
                            "Method Argument"
                        ]
                    ]
                },
                "other": {
                    "value": "freq_seq_occurrences_expanded + self._context_prior * 2.0",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "frequent_context_likelihoods",
                    "type": "variable",
                    "possible_values": [
                        [
                            "frequent_context_likelihoods + self._context_prior",
                            "BinOp"
                        ],
                        [
                            "frequent_context_likelihoods",
                            "Method Argument"
                        ],
                        [
                            "frequent_context_likelihoods",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_753": {
                "variable": {
                    "value": "batch_padding",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_756": {
                "variable": {
                    "value": "padded_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch, batch_padding]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "arange_126": {
                "start": {
                    "value": "seq_length - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "end": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "step": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "isnan_484": {
                "input": {
                    "value": "all_encountered_exploration_results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "all_encountered_exploration_results",
                            "Method Argument"
                        ],
                        [
                            "all_encountered_exploration_results",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "gather_535": {
                "input": {
                    "value": "most_probable_batch_seqs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "most_probable_batch_seqs",
                            "Method Argument"
                        ]
                    ]
                },
                "index": {
                    "value": "batch_seq_indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "indices.unsqueeze(2).expand(self._flock_size, self._max_seqs_in_batch, self._seq_length)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "gather_536": {
                "input": {
                    "value": "most_probable_batch_seq_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "index": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.sort(sortable_batch, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.sort(newly_encountered_seq_counts, dim=1, descending=True)",
                            "Call"
                        ],
                        [
                            "torch.cat(ranges).to(self._device)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "arange_763": {
                "start": {
                    "value": "offset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "int"
                        ],
                        [
                            "offset + self._subbatch_size - self._subbatch_overlap",
                            "BinOp"
                        ]
                    ]
                },
                "end": {
                    "value": "offset + self._subbatch_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/temporal_pooler/temporal_pooler.py": {
        "torch": {
            "randint_441": {
                "variable": {
                    "value": "action_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "high": {
                    "value": "self.n_cluster_centers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(annoyed_experts.item(),)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "empty_like_597": {
                "variable": {
                    "value": "projection_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.projection_outputs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_615": {
                "variable": {
                    "value": "matched_sequences",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.frequent_seqs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "indices",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._determine_learning(forward_mask).nonzero()",
                            "Call"
                        ],
                        [
                            "sorted_idxs.unsqueeze(-1).expand((self.flock_size, n_top_sequences, self.seq_length))",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_451": {
                "*size": {
                    "value": "(annoyed_indices.numel(),)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_480": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(2,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "abs_485": {
                "input": {
                    "value": "input_rewards",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_rewards",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/core/models/temporal_pooler/tp_output_projection.py": {
        "torch": {
            "tensor_30": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "output_prob_scaling",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._generate_prob_scaling(seq_length, seq_lookahead)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_34": {
                "variable": {
                    "value": "self.frequent_seqs_scaled",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, self.n_frequent_seqs, self.n_cluster_centers)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_102": {
                "input": {
                    "value": "frequent_seqs_unrolled * self._output_prob_scaling",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.frequent_seqs_scaled",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_113": {
                "input": {
                    "value": "self.frequent_seqs_scaled",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_135": {
                "input": {
                    "value": "frequent_seqs_unrolled * self._output_prob_scaling",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_155": {
                "input": {
                    "value": "sequences - items",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_155": {
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/models/temporal_pooler/untrained_forward_and_backward.py": {
        "torch": {
            "zeros_38": {
                "variable": {
                    "value": "self.dummy_explore",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_39": {
                "variable": {
                    "value": "self.dummy_seq_probs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._flock_size, n_frequent_seqs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float_dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_float(device)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/core/nodes/accuracy_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/actions_monitor_node.py": {
        "torch": {
            "tensor_27": {
                "variable": {
                    "value": "inp_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "input_action",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_action.cpu().numpy()",
                            "Call"
                        ],
                        [
                            "np.array([1 if action else 0 for action in actions_values])",
                            "Call"
                        ],
                        [
                            "input_action",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/cartographic_map_node.py": {
        "torch": {
            "from_numpy_135": {
                "variable": {
                    "value": "self.map_rgb[:, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.cmap(self.cnorm(value_map))[:, :, :-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "conv2d_83": {
                "variable": {
                    "value": "raw_map",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "raw_map",
                    "type": "variable",
                    "possible_values": [
                        [
                            "raw_map.unsqueeze(0).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "F.conv2d(raw_map, kernel, padding=1)",
                            "Call"
                        ],
                        [
                            "raw_map.permute((2, 0, 1))",
                            "Call"
                        ],
                        [
                            "raw_map.unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "raw_map.squeeze()",
                            "Call"
                        ],
                        [
                            "raw_map",
                            "Method Argument"
                        ]
                    ]
                },
                "weight": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "kernel",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_88": {
                "variable": {
                    "value": "raw_map[:, 0, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "raw_map[:, 0, :, :].unsqueeze(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "weight": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "kernel",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_91": {
                "variable": {
                    "value": "raw_map[:, 1, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "raw_map[:, 1, :, :].unsqueeze(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "weight": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "kernel",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_94": {
                "variable": {
                    "value": "raw_map[:, 2, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "raw_map[:, 2, :, :].unsqueeze(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "weight": {
                    "value": "kernel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "kernel",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_64": {
                "*size": {
                    "value": "(self._params.kernel_shape[0], self._params.kernel_shape[1])",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/dataset_alphabet_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/dataset_mnist_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/dataset_se_navigation_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/dataset_se_objects_node.py": {
        "torch": {
            "tensor_294": {
                "data": {
                    "value": "[0.0 if training else 1.0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/dataset_simple_point_gravity_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/disentagled_world_renderer.py": {
        "torch": {}
    },
    "torchsim/core/nodes/disentangled_world_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/eval_nodes/four_points.py": {
        "torch": {}
    },
    "torchsim/core/nodes/expand_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/expert_node.py": {
        "torch": {
            "stack_415": {
                "tensors": {
                    "value": "all_projections[projection_id]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/flatten_node.py": {
        "torch": {
            "prod_30": {
                "input": {
                    "value": "torch.tensor(input_shape[start_dim:end_dim + 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_30": {
                "data": {
                    "value": "input_shape[start_dim:end_dim + 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/flock_networks/delay_buffer.py": {
        "torch": {}
    },
    "torchsim/core/nodes/flock_networks/multi_layer_perceptron_flock.py": {
        "torch": {
            "Sequential_30": {
                "variable": {
                    "value": "self._hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_35": {
                "variable": {
                    "value": "self._out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "sizes[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_138": {
                "variable": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._params.flock_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs.shape[1]",
                            "Subscript"
                        ],
                        [
                            "inputs.shape[1]",
                            "Subscript"
                        ],
                        [
                            "input_batch.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.output_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Adam_71": {
                "params": {
                    "value": "self.nets[i].parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "params.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "in_features": {
                    "value": "in_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "out_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/flock_networks/neural_network_flock.py": {
        "torch": {
            "TensorDataset_145": {
                "variable": {
                    "value": "data_set",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "nn_input",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "WeightedRandomSampler_147": {
                "variable": {
                    "value": "sampler",
                    "type": "variable",
                    "possible_values": []
                },
                "weights": {
                    "value": "nn_weights.squeeze(-1).unsqueeze(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "num_samples": {
                    "value": "mini_batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "30",
                            "int"
                        ]
                    ]
                }
            },
            "DataLoader_153": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "TensorDataset(nn_input, nn_targets)",
                            "Call"
                        ]
                    ]
                },
                "batch_sampler": {
                    "value": "sampler",
                    "type": "variable",
                    "possible_values": [
                        [
                            "WeightedRandomSampler(nn_weights.squeeze(-1).unsqueeze(0), mini_batch_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "Softmax_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/focus_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/fork_node.py": {
        "torch": {
            "cat_81": {
                "tensors": {
                    "value": "tensors",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "self._dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "index_select_65": {
                "input": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "self._dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "index": {
                    "value": "index",
                    "type": "variable",
                    "possible_values": [
                        [
                            "creator.arange(split_start, split_start + split, dtype=torch.long, device=self._device)",
                            "Call"
                        ],
                        [
                            "index in enumerate(self._indices)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "self.output_tensors[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/grayscale_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/grid_world_node.py": {
        "torch": {
            "stack_73": {
                "tensors": {
                    "value": "[unit.last_image for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.last_images",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_74": {
                "tensors": {
                    "value": "[unit.egocentric_image for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.egocentric_images",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_75": {
                "tensors": {
                    "value": "[unit.last_position for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.last_positions",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_76": {
                "tensors": {
                    "value": "[unit.last_action for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.last_actions",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_77": {
                "tensors": {
                    "value": "[unit.last_position_one_hot_matrix for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.last_position_one_hot_matrices",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_79": {
                "tensors": {
                    "value": "[unit.reward for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.rewards",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_80": {
                "tensors": {
                    "value": "[unit.bit_map_last_action for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.bit_map_last_actions",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_81": {
                "tensors": {
                    "value": "[unit.ego_last_action for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.ego_last_actions",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/images_dataset_node.py": {
        "torch": {
            "from_numpy_68": {
                "ndarray": {
                    "value": "np.stack(images)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/internals/grid_world.py": {
        "torch": {
            "cat_305": {
                "variable": {
                    "value": "ego_action",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.last_action, torch.zeros(self.ego_padding, dtype=self._float_dtype, device=self._device)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_306": {
                "variable": {
                    "value": "bitmap_action",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.last_action, torch.zeros(self.bit_map_padding, dtype=self._float_dtype, device=self._device)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_220": {
                "variable": {
                    "value": "self.circle",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "creator.tensor(self.circle_template).view(1, 1, 9, 9)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[tile_size, tile_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "interpolate_222": {
                "variable": {
                    "value": "self.triangle_wall",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "creator.tensor(self.triangle_wall_template).view(1, 1, 9, 9)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[tile_size, tile_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "interpolate_224": {
                "variable": {
                    "value": "self.circle_wall",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "creator.tensor(self.circle_wall_template).view(1, 1, 9, 9)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "[tile_size, tile_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_308": {
                "tensors": {
                    "value": "[self.egocentric_image, ego_action]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_309": {
                "tensors": {
                    "value": "[self.last_image, bitmap_action]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_305": {
                "*size": {
                    "value": "self.ego_padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_306": {
                "*size": {
                    "value": "self.bit_map_padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/join_node.py": {
        "torch": {
            "cat_54": {
                "tensors": {
                    "value": "tensors",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[x.view(-1) for x in tensors]",
                            "ListComp"
                        ]
                    ]
                },
                "dim": {
                    "value": "self._dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "split_58": {
                "variable": {
                    "value": "split",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "output_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "self._flatten_input_shapes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "split_64": {
                "tensor": {
                    "value": "output_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "split_sizes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[shape[self._dim] for shape in self._input_tensor_shapes]",
                            "ListComp"
                        ]
                    ]
                },
                "dim": {
                    "value": "self._dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/lambda_node.py": {
        "torch": {
            "zeros_67": {
                "*size": {
                    "value": "memory_shape",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/motion_detection_node.py": {
        "torch": {
            "abs_68": {
                "variable": {
                    "value": "self.temp_image",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "input - self.previous_image",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/mse_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/multi_dataset_alphabet_node.py": {
        "torch": {
            "stack_68": {
                "tensors": {
                    "value": "[unit.output_data for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.output_data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_69": {
                "tensors": {
                    "value": "[unit.output_label for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.output_label",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_70": {
                "tensors": {
                    "value": "[unit.output_sequence_id for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.output_sequence_id",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_71": {
                "tensors": {
                    "value": "[unit.output_sequence_id_one_hot for unit in self._units]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.output_sequence_id_one_hot",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/network_flock_node.py": {
        "torch": {
            "tensor_199": {
                "data": {
                    "value": "should_learn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "should_learn",
                            "Call"
                        ],
                        [
                            "self._networks.make_data_loaders(self.inputs_batch.view(learning_size), self.targets_batch.view(learning_size), self.coefficients_batch.view(learning_size), self._network_params.mini_batch_size, self._network_params.coefficients_minimum_max)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/nn_node.py": {
        "torch": {
            "load_132": {
                "variable": {
                    "value": "self.network",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(loader.get_full_folder_path(), 'network.pt')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_121": {
                "obj": {
                    "value": "self.network",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(saver.get_full_folder_path(), 'network.pt')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/pass_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/random_noise_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/random_number_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/receptive_field_node.py": {
        "torch": {
            "zeros_43": {
                "*size": {
                    "value": "input_dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_dims",
                            "Call"
                        ],
                        [
                            "input_dims",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/receptive_field_reverse_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/salient_region_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/scatter_node.py": {
        "torch": {
            "tensor_49": {
                "variable": {
                    "value": "mapping",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "mapping",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(mapping, device=device, dtype=torch.long)",
                            "Call"
                        ],
                        [
                            "mapping",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "'cuda'",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_57": {
                "input": {
                    "value": "self._mapping",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "min_57": {
                "input": {
                    "value": "self._mapping",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/simple_bouncing_ball_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/space_engineers_connector_node.py": {
        "torch": {
            "tensor_128": {
                "variable": {
                    "value": "tmp_img",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "self._connector.send_input_receive_output(action, agent_to_task_label, task_control)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_129": {
                "variable": {
                    "value": "tmp_reward",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[reward]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_130": {
                "variable": {
                    "value": "tmp_task_to_agent_label",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "tta_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "self._connector.send_input_receive_output(action, agent_to_task_label, task_control)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_131": {
                "variable": {
                    "value": "tmp_task_to_agent_location",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "tta_location",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "self._connector.send_input_receive_output(action, agent_to_task_label, task_control)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_132": {
                "variable": {
                    "value": "tmp_task_to_agent_label_target",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "tta_label_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "self._connector.send_input_receive_output(action, agent_to_task_label, task_control)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_133": {
                "variable": {
                    "value": "tmp_task_to_agent_location_target",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "tta_location_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "self._connector.send_input_receive_output(action, agent_to_task_label, task_control)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_134": {
                "variable": {
                    "value": "tmp_metadata_task_id",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[metadata[0]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_135": {
                "variable": {
                    "value": "tmp_metadata_task_instance_id",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[metadata[1]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_136": {
                "variable": {
                    "value": "tmp_metadata_task_status",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[metadata[2]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_137": {
                "variable": {
                    "value": "tmp_metadata_task_instance_status",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[metadata[3]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_138": {
                "variable": {
                    "value": "tmp_metadata_testing_phase",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[metadata[4]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_147": {
                "input": {
                    "value": "self.task_to_agent_location_one_hot",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/spatial_pooler_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/squeeze_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/switch_node.py": {
        "torch": {
            "argmax_35": {
                "variable": {
                    "value": "self.active_input_index",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "tensors[-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/temporal_pooler_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/to_one_hot_node.py": {
        "torch": {
            "multinomial_40": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.normalized_dist.view(-1, self._last_dim)",
                    "type": "Call",
                    "possible_values": []
                },
                "num_samples": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_42": {
                "variable": {
                    "value": "(_, x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "input_flattened",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_tensor.view(-1, self._last_dim)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/nodes/unsqueeze_node.py": {
        "torch": {}
    },
    "torchsim/core/nodes/visited_area_node.py": {
        "torch": {
            "add_35": {
                "input": {
                    "value": "current",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.last_visited_area * self._params.fading_factor",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "node_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.inputs.node_input.tensor",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/core/nodes/weighted_avg_node.py": {
        "torch": {
            "sum_60": {
                "input": {
                    "value": "inputs * self.node_weights",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/physics_model/latent_world.py": {
        "torch": {
            "stack_11": {
                "tensors": {
                    "value": "instances",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[instance.to_tensor() for instance in instances]",
                            "ListComp"
                        ],
                        [
                            "instances",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/core/physics_model/pymunk_physics.py": {
        "torch": {
            "zeros_33": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.max()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_147": {
                "data": {
                    "value": "self.pm_body.position_normalize() + self.pm_body.velocity_normalize() + self.color.to_one_hot() + self.shape.to_one_hot()",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/physics_model/rendered_world.py": {
        "torch": {
            "zeros_17": {
                "variable": {
                    "value": "scene",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "tuple(self.world_size) + (3,)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_20": {
                "variable": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "tuple(self.world_size)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/utils/image_processing_utilities.py": {
        "torch": {
            "chunk_11": {
                "variable": {
                    "value": "(r, g, b)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "chunks": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/utils/inverse_projection_utils.py": {
        "torch": {
            "index_select_65": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "projections",
                    "type": "variable",
                    "possible_values": [
                        [
                            "node.recursive_inverse_projection_from_input(packet)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "index": {
                    "value": "safe_index.view(-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "synchronize_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_like_29": {
                "variable": {
                    "value": "projected_values_of_expert",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "projected_values[:, i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "full_16": {
                "size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "float('nan')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/core/utils/tensor_utils.py": {
        "torch": {
            "sum_97": {
                "variable": {
                    "value": "summed",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor.unsqueeze(k)",
                            "Call"
                        ],
                        [
                            "add_small_constant(tensor, SMALL_CONSTANT)",
                            "Call"
                        ],
                        [
                            "tensor + constant",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dim",
                            "Method Argument"
                        ]
                    ]
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "sum_107": {
                "variable": {
                    "value": "summed",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor.unsqueeze(k)",
                            "Call"
                        ],
                        [
                            "add_small_constant(tensor, SMALL_CONSTANT)",
                            "Call"
                        ],
                        [
                            "tensor + constant",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dim",
                            "Method Argument"
                        ]
                    ]
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_343": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "n_samples",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data_a.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "vector_len",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.device",
                            "Attribute"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dtype or get_float(device)",
                            "BoolOp"
                        ]
                    ]
                }
            },
            "memory_allocated_483": {
                "variable": {
                    "value": "out_tensor_alloc",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_cached_484": {
                "variable": {
                    "value": "out_cached",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_536": {
                "variable": {
                    "value": "into_tensor_alloc[func_name]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_cached_537": {
                "variable": {
                    "value": "into_cached_alloc[func_name]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "add_123": {
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor.unsqueeze(k)",
                            "Call"
                        ],
                        [
                            "add_small_constant(tensor, SMALL_CONSTANT)",
                            "Call"
                        ],
                        [
                            "tensor + constant",
                            "BinOp"
                        ]
                    ]
                },
                "alpha": {
                    "value": "-SMALL_CONSTANT * 2.0",
                    "type": "BinOp",
                    "possible_values": []
                },
                "other": {
                    "value": "tensor - 0.5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor.unsqueeze(k)",
                            "Call"
                        ],
                        [
                            "add_small_constant(tensor, SMALL_CONSTANT)",
                            "Call"
                        ],
                        [
                            "tensor + constant",
                            "BinOp"
                        ]
                    ]
                }
            },
            "argmax_380": {
                "input": {
                    "value": "one_hot",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "min_398": {
                "variable": {
                    "value": "clamped_max",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_403": {
                "variable": {
                    "value": "clamped_min",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "clamped_max",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.min(input_tensor, max)",
                            "Call"
                        ],
                        [
                            "input_tensor",
                            "variable"
                        ]
                    ]
                }
            },
            "isnan_156": {
                "input": {
                    "value": "tensor_1",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "isnan_157": {
                "input": {
                    "value": "tensor_2",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "log_209": {
                "input": {
                    "value": "input_p / input_q",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "isnan_210": {
                "input": {
                    "value": "divergence",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_p * torch.log(input_p / input_q)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "is_tensor_26": {
                "obj": {
                    "value": "obj",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "is_tensor_29": {
                "obj": {
                    "value": "obj",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "max_memory_allocated_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_67": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_allocated_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/gui/observer_system_browser.py": {
        "torch": {}
    },
    "torchsim/gui/observers/buffer_observer.py": {
        "torch": {
            "arange_58": {
                "variable": {
                    "value": "offsets",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "buffer_size * flock_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "step": {
                    "value": "buffer_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "math.floor(projection_params.count / flock_size)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "ptr_tensor.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/gui/observers/cluster_observer.py": {
        "torch": {
            "eq_627": {
                "variable": {
                    "value": "expert_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "process.indices.squeeze()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "expert_id",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0 if self.is_convolutional else self.expert_id",
                            "IfExp"
                        ],
                        [
                            "0 if self.is_convolutional else self.expert_id",
                            "IfExp"
                        ]
                    ]
                }
            },
            "eq_715": {
                "variable": {
                    "value": "expert_mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "process.indices.squeeze()",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "expert_id",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0 if self.is_convolutional else self.expert_id",
                            "IfExp"
                        ],
                        [
                            "0 if self.is_convolutional else self.expert_id",
                            "IfExp"
                        ]
                    ]
                }
            },
            "einsum_987": {
                "variable": {
                    "value": "similarities",
                    "type": "variable",
                    "possible_values": []
                },
                "equation": {
                    "value": "ij,kj,j->ik",
                    "type": "str",
                    "possible_values": []
                },
                "*operands": {
                    "value": "masks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sequences.new_empty(size=(cluster_centers_count, sequences_count), dtype=torch.uint8)",
                            "Call"
                        ],
                        [
                            "masks.float()",
                            "Call"
                        ]
                    ]
                }
            },
            "add_958": {
                "variable": {
                    "value": "flat_indices",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "sequences[:, i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "other": {
                    "value": "cluster_centers_count",
                    "type": "variable",
                    "possible_values": []
                },
                "alpha": {
                    "value": "sequences[:, i - 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_155": {
                "tensors": {
                    "value": "(projected, projected.new_zeros((projected.shape[0], missing_dims)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "isnan_271": {
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._tensor_provider.learn_process_data_batch()",
                            "Call"
                        ],
                        [
                            "tensor.clone().masked_fill_(torch.isnan(tensor), 0)",
                            "Call"
                        ],
                        [
                            "self._tensor_provider.learn_process_last_batch_clusters()",
                            "Call"
                        ],
                        [
                            "self._tensor_provider.learn_process_data_batch()",
                            "Call"
                        ],
                        [
                            "tensor.clone().masked_fill_(torch.isnan(tensor), 0)",
                            "Call"
                        ],
                        [
                            "self.tensor_view_projection.transform_tensor(tensor, self.is_rgb)",
                            "Call"
                        ],
                        [
                            "self._get_inverse_projections(group_id)",
                            "Call"
                        ],
                        [
                            "self.flock_node.memory_blocks.sp.forward_clusters.tensor",
                            "Attribute"
                        ],
                        [
                            "tensor._base if tensor._base is not None else tensor",
                            "IfExp"
                        ],
                        [
                            "self.flock_node.memory_blocks.sp.cluster_centers.tensor",
                            "Attribute"
                        ],
                        [
                            "self.flock_node.memory_blocks.sp.execution_counter_learning.tensor",
                            "Attribute"
                        ],
                        [
                            "self.flock_node.memory_blocks.tp.frequent_seqs.tensor",
                            "Attribute"
                        ],
                        [
                            "self.flock_node.memory_blocks.tp.frequent_seq_occurrences.tensor",
                            "Attribute"
                        ],
                        [
                            "FlockProcessObservable(self.flock_node.params.flock_size, lambda : process, tensor_getter).get_tensor()",
                            "Call"
                        ],
                        [
                            "self.sp_flock_node.outputs.sp.forward_clusters.tensor",
                            "Attribute"
                        ],
                        [
                            "tensor._base if tensor._base is not None else tensor",
                            "IfExp"
                        ],
                        [
                            "self.sp_flock_node.memory_blocks.sp.cluster_centers.tensor",
                            "Attribute"
                        ],
                        [
                            "self.sp_flock_node.memory_blocks.sp.execution_counter_learning.tensor",
                            "Attribute"
                        ]
                    ]
                }
            },
            "isnan_303": {
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._tensor_provider.learn_process_data_batch()",
                            "Call"
                        ],
                        [
                            "tensor.clone().masked_fill_(torch.isnan(tensor), 0)",
                            "Call"
                        ],
                        [
                            "self._tensor_provider.learn_process_last_batch_clusters()",
                            "Call"
                        ],
                        [
                            "self._tensor_provider.learn_process_data_batch()",
                            "Call"
                        ],
                        [
                            "tensor.clone().masked_fill_(torch.isnan(tensor), 0)",
                            "Call"
                        ],
                        [
                            "self.tensor_view_projection.transform_tensor(tensor, self.is_rgb)",
                            "Call"
                        ],
                        [
                            "self._get_inverse_projections(group_id)",
                            "Call"
                        ],
                        [
                            "self.flock_node.memory_blocks.sp.forward_clusters.tensor",
                            "Attribute"
                        ],
                        [
                            "tensor._base if tensor._base is not None else tensor",
                            "IfExp"
                        ],
                        [
                            "self.flock_node.memory_blocks.sp.cluster_centers.tensor",
                            "Attribute"
                        ],
                        [
                            "self.flock_node.memory_blocks.sp.execution_counter_learning.tensor",
                            "Attribute"
                        ],
                        [
                            "self.flock_node.memory_blocks.tp.frequent_seqs.tensor",
                            "Attribute"
                        ],
                        [
                            "self.flock_node.memory_blocks.tp.frequent_seq_occurrences.tensor",
                            "Attribute"
                        ],
                        [
                            "FlockProcessObservable(self.flock_node.params.flock_size, lambda : process, tensor_getter).get_tensor()",
                            "Call"
                        ],
                        [
                            "self.sp_flock_node.outputs.sp.forward_clusters.tensor",
                            "Attribute"
                        ],
                        [
                            "tensor._base if tensor._base is not None else tensor",
                            "IfExp"
                        ],
                        [
                            "self.sp_flock_node.memory_blocks.sp.cluster_centers.tensor",
                            "Attribute"
                        ],
                        [
                            "self.sp_flock_node.memory_blocks.sp.execution_counter_learning.tensor",
                            "Attribute"
                        ]
                    ]
                }
            },
            "any_984": {
                "input": {
                    "value": "sequences == c",
                    "type": "Compare",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "masks[c]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "sequences.new_empty(size=(cluster_centers_count, sequences_count), dtype=torch.uint8)",
                            "Call"
                        ],
                        [
                            "masks.float()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/gui/observers/flock_process_observable.py": {
        "torch": {
            "zeros_32": {
                "variable": {
                    "value": "self._cached_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "change_dim(current_tensor.shape, 0, self._flock_size)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "current_tensor.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "current_tensor.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/gui/observers/hierarchical_observer.py": {
        "torch": {}
    },
    "torchsim/gui/observers/memory_block_observer.py": {
        "torch": {}
    },
    "torchsim/gui/observers/plot_observers.py": {
        "torch": {}
    },
    "torchsim/gui/observers/tensor_observable.py": {
        "torch": {
            "arange_173": {
                "variable": {
                    "value": "a",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "count",
                    "type": "variable",
                    "possible_values": [
                        [
                            "math.ceil(column_tensor.size()[0] / height)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "arange_175": {
                "variable": {
                    "value": "i",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "width * height",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tensor_221": {
                "variable": {
                    "value": "pad_color",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.3, 0.3, 0.3]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tensor.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "tensor.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_231": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[tensor.view([-1, 3]), pad_color.expand([missing_values, 3])]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_248": {
                "variable": {
                    "value": "padded_column_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[column_tensor, pad_tensor]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_290": {
                "variable": {
                    "value": "negative_color",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1.0, 0.0, 0.0]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "data.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_291": {
                "variable": {
                    "value": "positive_color",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.0, 1.0, 0.0]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "data.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_292": {
                "variable": {
                    "value": "nan_color",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.0, 0.0, 1.0]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "data.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_293": {
                "variable": {
                    "value": "positive_inf_color",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.0, 1.0, 1.0]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "data.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_294": {
                "variable": {
                    "value": "negative_inf_color",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1.0, 0.0, 1.0]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "data.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "isnan_302": {
                "variable": {
                    "value": "mask_nan",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.float()",
                            "Call"
                        ],
                        [
                            "data.float()",
                            "Call"
                        ],
                        [
                            "(data - minimum) / (maximum - minimum)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_310": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "result_dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.size() + (3,)",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "data.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_21": {
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "float('nan')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_49": {
                "data": {
                    "value": "[[[1, 1, 0.0]]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_314": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "result_dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.size() + (3,)",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "data.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_321": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "result_dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.size() + (3,)",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "data.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_23": {
                "size": {
                    "value": "tensor.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "float('nan')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "isnan_167": {
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.apply_any_transforms(tensor)",
                            "Call"
                        ],
                        [
                            "tensor.contiguous().view([-1])",
                            "Call"
                        ],
                        [
                            "self._colorize(tensor, self._min, self._max)",
                            "Call"
                        ],
                        [
                            "self._rgb_transform(tensor, self._min, self._max)",
                            "Call"
                        ],
                        [
                            "tensor.sum(self._sum_dim)",
                            "Call"
                        ],
                        [
                            "torch.cat([tensor.view([-1, 3]), pad_color.expand([missing_values, 3])])",
                            "Call"
                        ],
                        [
                            "self.apply_any_transforms(tensor)",
                            "Call"
                        ],
                        [
                            "self._tensor_view_projection.transform_tensor(self._tensor, self._is_rgb)",
                            "Call"
                        ],
                        [
                            "tensor",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "all_167": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/gui/server/ui_api.py": {
        "torch": {}
    },
    "torchsim/gui/ui_utils.py": {
        "torch": {}
    },
    "torchsim/research/baselines/adapters/task_0_baselines_adapter.py": {
        "torch": {
            "memory_allocated_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_cached_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_cached_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/experiment_templates/lrf_1sp_flock_template.py": {
        "torch": {
            "tensor_226": {
                "variable": {
                    "value": "memory_used",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self._memory_used",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_238": {
                "variable": {
                    "value": "accuracy_memory_ratio",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "accuracy_memory_ratio",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.tensor(accuracy_memory_ratio)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_176": {
                "variable": {
                    "value": "clusters",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "clusters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(*testing_phase)",
                            "Call"
                        ],
                        [
                            "torch.stack(clusters)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_179": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(*testing_phase)",
                            "Call"
                        ],
                        [
                            "torch.tensor(labels)",
                            "Call"
                        ],
                        [
                            "torch.stack(labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_181": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(*testing_phase)",
                            "Call"
                        ],
                        [
                            "torch.tensor(labels)",
                            "Call"
                        ],
                        [
                            "torch.stack(labels)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_229": {
                "data": {
                    "value": "mse_testing",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.array(self._mse_testing)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_191": {
                "tensors": {
                    "value": "images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(*testing_phase)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_192": {
                "tensors": {
                    "value": "reconstructed_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(*testing_phase)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/research/experiment_templates/sp_learning_convergence_template.py": {
        "torch": {
            "tensor_248": {
                "variable": {
                    "value": "labels_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "labels_window",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._topology_adapter.get_device()",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_249": {
                "variable": {
                    "value": "outputs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "outputs_window",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._topology_adapter.get_device()",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_250": {
                "variable": {
                    "value": "baseline_outputs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "baseline_outputs_window",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "dev",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._topology_adapter.get_device()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/research/experiment_templates/task0_online_learning_template.py": {
        "torch": {}
    },
    "torchsim/research/experiment_templates/task0_train_test_classification_acc_template.py": {
        "torch": {}
    },
    "torchsim/research/experiment_templates/task0_train_test_learning_rate_template.py": {
        "torch": {}
    },
    "torchsim/research/experiment_templates/task0_train_test_template_base.py": {
        "torch": {}
    },
    "torchsim/research/experiment_templates/task0_train_test_template_relearning.py": {
        "torch": {
            "tensor_294": {
                "data": {
                    "value": "single_phase_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model_outputs",
                            "variable"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/experiment_templates2/task0_ta_analysis_template.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_1_1_2_one_expert_lrf/adapters/LRF_1SPFlock_MNIST.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_1_1_2_one_expert_lrf/adapters/LRF_1SPFlock_SE_NAV.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_1_1_2_one_expert_lrf/topologies/lrf_topology.py": {
        "torch": {
            "zeros_64": {
                "variable": {
                    "value": "self.reconstructed_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.input_square_side, self.input_square_side)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_66": {
                "variable": {
                    "value": "self.image_difference",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.input_square_side, self.input_square_side)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_1_1_2_one_expert_lrf/topologies/se_nav_lrf_topology.py": {
        "torch": {
            "zeros_53": {
                "variable": {
                    "value": "self.reconstructed_data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.input_square_side, self.input_square_side, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_56": {
                "variable": {
                    "value": "self.image_difference",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self.input_square_side, self.input_square_side, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_1_1_3_space_benchmarks/adapters/se_dataset_ta_running_stats_adapter.py": {
        "torch": {
            "memory_allocated_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_allocated_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_memory_cached_33": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "memory_cached_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_1_1_3_space_benchmarks/nodes/rgb_debug_node.py": {
        "torch": {
            "cat_57": {
                "variable": {
                    "value": "tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.r_output_tensor, self.g_output_tensor, self.b_output_tensor]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_1_1_4_task0_experiments/adapters/task0_adapter_base.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_1_1_4_task0_experiments/topologies/conv_wide_two_layer_topology.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_1_1_4_task0_experiments/topologies/task0_conv_wide_topology.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_1_relearning/adapters/task0_relearn_basic_adapter.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/adapters/classification_accuracy_adapter.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/adapters/modular/classification_accuracy_modular_adapter.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/adapters/modular/learning_rate_ta_modular_adapter.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/adapters/modular/model_classification_adapter_base.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/adapters/ta_classification_accuracy_adapter.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/adapters/task0_ta_multilayer_adapter.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/adapters/wide_ta_learning_rate_adapter.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/node_groups/nn_node_group.py": {
        "torch": {
            "Adam_90": {
                "variable": {
                    "value": "self._optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self._network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self._params.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/node_groups/se_node_group.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/node_groups/ta_multilayer_node_group.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate/utils/cluster_agreement_measurement.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate2/node_groups/classification_model_group.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate2/node_groups/ta_multilayer_node_group.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_2_learning_rate2/topologies/classification_accuracy_modular_topology.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_2_1_3_conv_temporal_compression/rt_2_1_3_experiment_template.py": {
        "torch": {
            "flatten_204": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "start_dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end_dim": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "flatten_205": {
                "input": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "start_dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end_dim": {
                    "value": "-2",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_3_1_lr_subfields/random_subfield_node.py": {
        "torch": {
            "zeros_31": {
                "variable": {
                    "value": "self.counts",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "input_shape[first_non_expanded_dim:]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_36": {
                "variable": {
                    "value": "filter_sparse",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "filter_sparse",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros(total_size)",
                            "Call"
                        ],
                        [
                            "torch.tensor(filter_sparse, dtype=self._float_dtype, device=self._device)",
                            "Call"
                        ],
                        [
                            "filter_sparse.view(input_shape[first_non_expanded_dim:])",
                            "Call"
                        ],
                        [
                            "filter_sparse.expand(input_shape)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self._float_dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "div_57": {
                "input": {
                    "value": "torch.mul(tensor, self.filters[index])",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "self.counts",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mul_57": {
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(self, unit.filters)",
                            "Call"
                        ],
                        [
                            "zip(self, unit.output_tensors)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "self.filters[index]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mul_54": {
                "input": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(self, unit.filters)",
                            "Call"
                        ],
                        [
                            "zip(self, unit.output_tensors)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "self.filters[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_3_6_1_inductive_bias_attention/node_groups/attention_classification_group.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_3_7_1_task0_analysis/node_groups/dummy_model_group.py": {
        "torch": {
            "rand_101": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._layer_sizes[layer_id]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "self._sp_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_3_7_1_task0_analysis/node_groups/multilayer_model_group.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_3_7_1_task0_analysis/node_groups/ta_multilayer_classification_group.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_4_1_1_gradual_learning_basic/topologies/dataset_alphabet_node_group.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_4_1_1_gradual_learning_basic/topologies/gradual_learning_basic_topology.py": {
        "torch": {}
    },
    "torchsim/research/research_topics/rt_4_1_1_gradual_learning_basic/topologies/specialist_node_group.py": {
        "torch": {
            "zeros_106": {
                "variable": {
                    "value": "specialist_extract_predicted_output_last_value",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(self._params.flock_size, self._params.n_symbols)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "eye_145": {
                "variable": {
                    "value": "eye",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "self._params.n_symbols",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mean_136": {
                "input": {
                    "value": "torch.stack(data_window)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_136": {
                "tensors": {
                    "value": "data_window",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_4_2_1_actions/topologies/goal_directed_template_topology.py": {
        "torch": {
            "cat_70": {
                "variable": {
                    "value": "rewards",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[rewards, torch.zeros_like(rewards)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_70": {
                "input": {
                    "value": "rewards",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs[0]",
                            "Subscript"
                        ],
                        [
                            "torch.cat([rewards, torch.zeros_like(rewards)], dim=-1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "torchsim/research/research_topics/rt_4_3_1_gradual_world/nodes/custom_nodes.py": {
        "torch": {
            "tensor_63": {
                "variable": {
                    "value": "predicted_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "predicted_indexes",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/se_tasks/topologies/se_task0_convolutionalSP_topology.py": {
        "torch": {}
    },
    "torchsim/research/se_tasks/topologies/se_task0_convolutional_expert_topology.py": {
        "torch": {}
    },
    "torchsim/research/se_tasks/topologies/se_task1_basic_topology.py": {
        "torch": {
            "stack_84": {
                "tensors": {
                    "value": "[inputs[0], inputs[1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "unsqueeze_84": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/research/se_tasks/topologies/se_task1_conv_topology.py": {
        "torch": {
            "stack_78": {
                "tensors": {
                    "value": "[inputs[0], inputs[1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "unsqueeze_78": {
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/topologies/expert_hierarchy_topology.py": {
        "torch": {}
    },
    "torchsim/topologies/gl_nn_topology.py": {
        "torch": {
            "zeros_17": {
                "variable": {
                    "value": "r",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "length",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "round_18": {
                "input": {
                    "value": "inputs[0][0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/topologies/goal_directed_narrow_hierarchy_topology.py": {
        "torch": {}
    },
    "torchsim/topologies/goal_directed_topology.py": {
        "torch": {}
    },
    "torchsim/topologies/gradual_learning_topology.py": {
        "torch": {}
    },
    "torchsim/topologies/nnet_topology.py": {
        "torch": {
            "CrossEntropyLoss_25": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_36": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "h * w * 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "120",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_40": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "120",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "84",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_41": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "84",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "20",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "max_pool2d_44": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "F.relu(self.conv1(x))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_pool2d_45": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "F.relu(self.conv2(x))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_48": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Adam_114": {
                "variable": {
                    "value": "self._optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self._network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self._params.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_44": {
                "input": {
                    "value": "self.conv1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_45": {
                "input": {
                    "value": "self.conv2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/topologies/single_expert_expermental_topology.py": {
        "torch": {}
    },
    "torchsim/topologies/switch_topology.py": {
        "torch": {}
    },
    "torchsim/topologies/symbolic_input_topology.py": {
        "torch": {}
    },
    "torchsim/utils/baselines_utils.py": {
        "torch": {
            "BatchSampler_165": {
                "variable": {
                    "value": "_sampler",
                    "type": "variable",
                    "possible_values": []
                },
                "sampler": {
                    "value": "sampler(**kwargs)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_109": {
                "*size": {
                    "value": "*obs_types[name]",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/utils/list_utils.py": {
        "torch": {
            "tensor_47": {
                "variable": {
                    "value": "dimensions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "dimensions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(dimensions)",
                            "Call"
                        ],
                        [
                            "dimensions",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "prod_52": {
                "input": {
                    "value": "dimensions[start_dim:end_dim + 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/utils/sample_collection_overseer.py": {
        "torch": {
            "cat_66": {
                "variable": {
                    "value": "train_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "self.train_images",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_67": {
                "variable": {
                    "value": "train_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "self.train_labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_68": {
                "variable": {
                    "value": "train_instance_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(self.train_instance_ids)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_69": {
                "variable": {
                    "value": "train_examples_per_trajectory",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(self.train_examples_per_trajectory)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "test_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "self.test_images",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_72": {
                "variable": {
                    "value": "test_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "self.test_labels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_73": {
                "variable": {
                    "value": "test_instance_ids",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(self.test_instance_ids)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_74": {
                "variable": {
                    "value": "test_examples_per_trajectory",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(self.test_examples_per_trajectory)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_93": {
                "variable": {
                    "value": "last_id",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "train_examples_per_trajectory[:20]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sum_99": {
                "variable": {
                    "value": "last_id",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "test_examples_per_trajectory[:20]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "interpolate_77": {
                "variable": {
                    "value": "train_images",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "train_images.type(get_float(train_images.device)).unsqueeze(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(render_width, render_height, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "squeeze_77": {
                "variable": {
                    "value": "train_images",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_79": {
                "variable": {
                    "value": "test_images",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "test_images.type(get_float(test_images.device)).unsqueeze(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(render_width, render_height, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "squeeze_79": {
                "variable": {
                    "value": "test_images",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_108": {
                "obj": {
                    "value": "train_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[train_images, train_labels, train_instance_ids, train_examples_per_trajectory]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "path + 'SE_' + task + '_' + size + '_' + 'train' + '_' + 'full.set'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_109": {
                "obj": {
                    "value": "train_snippet",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[train_images[:last_id].clone(), train_labels[:last_id].clone(), train_instance_ids[:last_id].clone(), train_examples_per_trajectory[:20].clone()]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "path + 'SE_' + task + '_' + size + '_' + 'train' + '_' + 'snippet.set'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_111": {
                "obj": {
                    "value": "test_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[test_images, test_labels, test_instance_ids, test_examples_per_trajectory]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "path + 'SE_' + task + '_' + size + '_' + 'test' + '_' + 'full.set'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_112": {
                "obj": {
                    "value": "test_snippet",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[test_images[:last_id].clone(), test_labels[:last_id].clone(), test_instance_ids[:last_id].clone(), test_examples_per_trajectory[:20].clone()]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "path + 'SE_' + task + '_' + size + '_' + 'test' + '_' + 'snippet.set'",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/utils/seed_utils.py": {
        "torch": {
            "is_available_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_50": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "generate_seed()",
                            "Call"
                        ],
                        [
                            "generate_seed()",
                            "Call"
                        ]
                    ]
                }
            },
            "manual_seed_20": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "generate_seed()",
                            "Call"
                        ],
                        [
                            "generate_seed()",
                            "Call"
                        ]
                    ]
                }
            },
            "manual_seed_all_21": {
                "seed": {
                    "value": "seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "generate_seed()",
                            "Call"
                        ],
                        [
                            "generate_seed()",
                            "Call"
                        ]
                    ]
                }
            },
            "synchronize_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/utils/space_engineers_connector.py": {
        "torch": {
            "from_numpy_182": {
                "variable": {
                    "value": "collected_image",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.socket.recv_multipart()",
                            "Call"
                        ],
                        [
                            "np.frombuffer(image, dtype=np.uint8)",
                            "Call"
                        ],
                        [
                            "image.reshape((self._se_config.render_height, self._se_config.render_width, 4))",
                            "Call"
                        ],
                        [
                            "image[:, :, 0:3]",
                            "Subscript"
                        ],
                        [
                            "image / 255",
                            "BinOp"
                        ]
                    ]
                }
            },
            "unsqueeze_182": {
                "variable": {
                    "value": "collected_image",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_183": {
                "variable": {
                    "value": "collected_label",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "tta_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.frombuffer(label, dtype=np.float32, count=self._se_config.task_to_agent_buffer_size)",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_183": {
                "variable": {
                    "value": "collected_label",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "torchsim/utils/template_utils/template_helpers.py": {
        "torch": {
            "tensor_169": {
                "variable": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(outputs, device=device, dtype=torch.long)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_171": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor(labels, device=device, dtype=torch.long)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "isnan_188": {
                "input": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "any_188": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_276": {
                "data": {
                    "value": "single_phase_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model_outputs",
                            "variable"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_19": {
                "input": {
                    "value": "(first - second) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}