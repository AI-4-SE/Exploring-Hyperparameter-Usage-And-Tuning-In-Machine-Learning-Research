{
    "demystifying/data_projection.py": {
        "sklearn": {
            "GaussianMixture_170": {
                "variable": {
                    "value": "GMM",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "i_comp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "i_comp in range(min_comp, max_comp + 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "GaussianMixture_175": {
                "variable": {
                    "value": "best_GMM",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "i_comp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "i_comp in range(min_comp, max_comp + 1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "demystifying/feature_extraction/feature_extractor.py": {
        "sklearn": {
            "KFold_91": {
                "variable": {
                    "value": "kf",
                    "type": "variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "self.n_splits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "self.shuffle_datasets",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "demystifying/feature_extraction/mlp_ae_feature_extractor.py": {
        "sklearn": {}
    },
    "demystifying/feature_extraction/mlp_feature_extractor.py": {
        "sklearn": {
            "MLPRegressor_252": {
                "**kwargs": {
                    "value": "*",
                    "type": "kwargs",
                    "possible_values": []
                }
            },
            "MLPClassifier_253": {
                "**kwargs": {
                    "value": "*",
                    "type": "kwargs",
                    "possible_values": []
                }
            }
        }
    },
    "demystifying/feature_extraction/pca_feature_extractor.py": {
        "sklearn": {
            "PCA_40": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "*",
                    "type": "kwargs",
                    "possible_values": []
                }
            }
        }
    },
    "demystifying/feature_extraction/random_forest_feature_extractor.py": {
        "sklearn": {
            "RandomForestRegressor_84": {
                "**kwargs": {
                    "value": "*",
                    "type": "kwargs",
                    "possible_values": []
                }
            },
            "RandomForestClassifier_85": {
                "**kwargs": {
                    "value": "*",
                    "type": "kwargs",
                    "possible_values": []
                }
            }
        }
    },
    "demystifying/feature_extraction/rbm_feature_extractor.py": {
        "sklearn": {
            "BernoulliRBM_52": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "**kwargs": {
                    "value": "*",
                    "type": "kwargs",
                    "possible_values": []
                }
            }
        }
    },
    "demystifying/utils.py": {
        "sklearn": {
            "MinMaxScaler_76": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}