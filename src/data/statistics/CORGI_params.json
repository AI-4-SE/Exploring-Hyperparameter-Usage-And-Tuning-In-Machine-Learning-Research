{
    "attention.py": {
        "torch": {
            "zeros_13": {
                "variable": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_15": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "weight",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros(self.feature_dim, self.feature_dim)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_16": {
                "variable": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "self.feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_18": {
                "variable": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros(1, self.feature_dim)",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_23": {
                "variable": {
                    "value": "u",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input.contiguous().view(-1, self.feature_dim)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_26": {
                "variable": {
                    "value": "u",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.matmul(self.w, u.view(self.feature_dim, -1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_30": {
                "variable": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "u",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.matmul(input.contiguous().view(-1, self.feature_dim), self.weight).view(-1, self.feature_dim)",
                            "Call"
                        ],
                        [
                            "torch.tanh(torch.matmul(self.w, u.view(self.feature_dim, -1)))",
                            "Call"
                        ],
                        [
                            "u * context",
                            "BinOp"
                        ]
                    ]
                }
            },
            "matmul_34": {
                "variable": {
                    "value": "weighted_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input.view(self.feature_dim, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "a.view(-1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_35": {
                "input": {
                    "value": "weighted_input",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.matmul(input.view(self.feature_dim, -1), a.view(-1, 1))",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "matmul_26": {
                "input": {
                    "value": "self.w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "other": {
                    "value": "u.view(self.feature_dim, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_32": {
                "input": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.exp(u)",
                            "Call"
                        ],
                        [
                            "a / (torch.sum(a, 1, keepdim=True) + 1e-10)",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "modeltest.py": {
        "torch": {
            "load_21": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_testing-reasoning-17.tch",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "net.py": {
        "torch": {
            "Embedding_49": {
                "variable": {
                    "value": "self.char_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.charset_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.char_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_50": {
                "variable": {
                    "value": "self.char_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.char_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_53": {
                "variable": {
                    "value": "self.var_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.varset_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.var_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_63": {
                "variable": {
                    "value": "self.enc_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.enc_input_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.state_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "variable": {
                    "value": "self.enc_fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.state_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.state_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LSTM_70": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.lstm_input_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_76": {
                "variable": {
                    "value": "self.rule_embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.ruleset_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.rule_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_78": {
                "variable": {
                    "value": "self.rule_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.rule_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_79": {
                "variable": {
                    "value": "self.rule_fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.rule_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.rule_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_83": {
                "variable": {
                    "value": "self.term_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_87": {
                "variable": {
                    "value": "self.vars_fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.var_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.var_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_88": {
                "variable": {
                    "value": "self.vars_fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.var_embedding_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.varset_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_112": {
                "variable": {
                    "value": "r_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(parent_t.view(1, 1, -1), sister_t.view(1, 1, -1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_119": {
                "variable": {
                    "value": "rule_distribution",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.matmul(key, rulekeys)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_122": {
                "variable": {
                    "value": "term",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.term_fc(h)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_141": {
                "variable": {
                    "value": "chartensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(query)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_187": {
                "variable": {
                    "value": "vartensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(len(var), 1, 300)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "elu_223": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.enc_fc1(merged)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_227": {
                "variable": {
                    "value": "merged",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[state.view(1, 1, -1), rule.view(1, 1, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_like_107": {
                "variable": {
                    "value": "parent_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.rule_embedding(torch.LongTensor([0]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_111": {
                "variable": {
                    "value": "sister_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.rule_embedding(torch.LongTensor([0]))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_softmax_130": {
                "variable": {
                    "value": "var",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.vars_fc2(F.elu(self.vars_fc1(v)))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_168": {
                "variable": {
                    "value": "ruletensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "elu_117": {
                "input": {
                    "value": "self.rule_fc1(h)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_119": {
                "input": {
                    "value": "key",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rule_fc2(F.elu(self.rule_fc1(h)))",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "rulekeys",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.rule_embedding.weight.t()",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_184": {
                "*size": {
                    "value": "(self.maxvars, 1, self.var_embedding_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_193": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_197": {
                "variable": {
                    "value": "vartensor[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_257": {
                "ndarray": {
                    "value": "embedding_matrix",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.random.normal(emb_mean, emb_std, (nb_words, 300))",
                            "Call"
                        ],
                        [
                            "np.random.normal(emb_mean, emb_std, (nb_words, 300))",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_241": {
                "*size": {
                    "value": "nlayers",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_242": {
                "*size": {
                    "value": "nlayers",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "mm_299": {
                "input": {
                    "value": "x1",
                    "type": "Variable",
                    "possible_values": []
                },
                "mat2": {
                    "value": "x2.t()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "elu_130": {
                "input": {
                    "value": "self.vars_fc1(v)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "reasoning.py": {
        "torch": {}
    }
}