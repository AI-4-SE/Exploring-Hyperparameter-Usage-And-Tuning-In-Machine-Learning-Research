{
    "logger.py": {
        "tensorflow": {
            "FileWriter_15": {
                "variable": {
                    "value": "self.writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logdir": {
                    "value": "log_dir",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Summary_19": {
                "variable": {
                    "value": "summary",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "[tf.Summary.Value(tag=tag, simple_value=value)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Summary_42": {
                "variable": {
                    "value": "summary",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "img_summaries",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "HistogramProto_52": {
                "variable": {
                    "value": "hist",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Summary_69": {
                "variable": {
                    "value": "summary",
                    "type": "Name",
                    "possible_values": []
                },
                "value": {
                    "value": "[tf.Summary.Value(tag=tag, histo=hist)]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "data_loader.py": {
        "torch": {
            "DataLoader_54": {
                "variable": {
                    "value": "loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "dsets.LSUN(self.path, classes=[classes], transform=transforms)",
                            "Call"
                        ],
                        [
                            "dsets.ImageFolder(self.path + '/CelebA', transform=transforms)",
                            "Call"
                        ],
                        [
                            "dsets.ImageFolder(self.path + '/hearthstone-card-images', transform=transforms)",
                            "Call"
                        ],
                        [
                            "self.load_lsun()",
                            "Call"
                        ],
                        [
                            "self.load_celeb()",
                            "Call"
                        ],
                        [
                            "self.load_hearthstone()",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.batch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "self.shuf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {}
    },
    "sagan_models.py": {
        "torch": {
            "Conv2d_15": {
                "variable": {
                    "value": "self.query_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_16": {
                "variable": {
                    "value": "self.key_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "self.value_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_18": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Softmax_20": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "bmm_34": {
                "variable": {
                    "value": "energy",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_query",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.query_conv(x).view(m_batchsize, -1, width * height).permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "proj_key",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.key_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_40": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.value_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "attention.permute(0, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_99": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layer1",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_100": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layer2",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_101": {
                "variable": {
                    "value": "self.l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layer3",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_102": {
                "variable": {
                    "value": "self.l4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layer4",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_108": {
                "variable": {
                    "value": "self.last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*last",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_170": {
                "variable": {
                    "value": "self.l1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layer1",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_171": {
                "variable": {
                    "value": "self.l2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layer2",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_172": {
                "variable": {
                    "value": "self.l3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layer3",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_173": {
                "variable": {
                    "value": "self.l4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layer4",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_177": {
                "variable": {
                    "value": "self.last",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*last",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_18": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_64": {
                "num_features": {
                    "value": "int(conv_dim * mult)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_65": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_70": {
                "num_features": {
                    "value": "int(curr_dim / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_76": {
                "num_features": {
                    "value": "int(curr_dim / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_82": {
                "num_features": {
                    "value": "int(curr_dim / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_106": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(conv_dim * mult)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LeakyReLU_150": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_155": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_159": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_163": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_176": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(conv_dim * mult)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_63": {
                "in_channels": {
                    "value": "z_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "100",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "int(conv_dim * mult)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_69": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(conv_dim * mult)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "int(curr_dim / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_75": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(conv_dim * mult)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "int(curr_dim / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_81": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(conv_dim * mult)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "int(curr_dim / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_149": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "conv_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_154": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(conv_dim * mult)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "curr_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_158": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(conv_dim * mult)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "curr_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_162": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(conv_dim * mult)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "curr_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "sagan_models_dynamic.py": {
        "torch": {
            "Conv2d_15": {
                "variable": {
                    "value": "self.query_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_16": {
                "variable": {
                    "value": "self.key_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim // 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "self.value_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_dim",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_18": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Softmax_20": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "bmm_32": {
                "variable": {
                    "value": "energy",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_query",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.query_conv(x).view(m_batchsize, -1, width * height).permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "proj_key",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.key_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ]
                    ]
                }
            },
            "bmm_36": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "proj_value",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.value_conv(x).view(m_batchsize, -1, width * height)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "attention.permute(0, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_94": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Parameter_115": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.tensor([])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_149": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_18": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_63": {
                "num_features": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_dim * mult",
                            "BinOp"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ReLU_64": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_78": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_dim * mult",
                            "BinOp"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_81": {
                "*args": {
                    "value": "*first_layer",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "*args": {
                    "value": "*final_layer",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_115": {
                "data": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "LeakyReLU_124": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_137": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_dim * mult",
                            "BinOp"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_139": {
                "*args": {
                    "value": "*first_layer",
                    "type": null,
                    "possible_values": []
                }
            },
            "Parameter_146": {
                "data": {
                    "value": "*final_layer",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_62": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "conv_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_70": {
                "num_features": {
                    "value": "int(curr_dim / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_83": {
                "*args": {
                    "value": "*loop_layers[n]",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_123": {
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "conv_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_131": {
                "negative_slope": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_141": {
                "*args": {
                    "value": "*loop_layers[n]",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_69": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_dim * mult",
                            "BinOp"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "int(curr_dim / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_130": {
                "in_channels": {
                    "value": "curr_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "conv_dim * mult",
                            "BinOp"
                        ],
                        [
                            "int(curr_dim / 2)",
                            "Call"
                        ],
                        [
                            "conv_dim",
                            "Name"
                        ],
                        [
                            "curr_dim * 2",
                            "BinOp"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "curr_dim * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "spectral.py": {
        "torch": {
            "Parameter_53": {
                "variable": {
                    "value": "u",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "w.data.new(height).normal_(0, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_54": {
                "variable": {
                    "value": "v",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "w.data.new(width).normal_(0, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_57": {
                "variable": {
                    "value": "w_bar",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "w.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mv_30": {
                "input": {
                    "value": "torch.t(w.view(height, -1).data)",
                    "type": "Call",
                    "possible_values": []
                },
                "vec": {
                    "value": "u.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "mv_31": {
                "input": {
                    "value": "w.view(height, -1).data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "vec": {
                    "value": "v.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "t_30": {
                "input": {
                    "value": "w.view(height, -1).data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "trainer.py": {
        "torch": {
            "Adam_322": {
                "variable": {
                    "value": "self.g_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "filter(lambda p: p.requires_grad, self.G.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.g_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "[self.beta1, self.beta2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Adam_325": {
                "variable": {
                    "value": "self.d_optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "filter(lambda p: p.requires_grad, self.D.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.d_lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "[self.beta1, self.beta2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_329": {
                "variable": {
                    "value": "self.c_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_316": {
                "variable": {
                    "value": "self.G",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.G",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataParallel_317": {
                "variable": {
                    "value": "self.D",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "self.D",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "normal_94": {
                "mean": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "std": {
                    "value": "torch.ones([self.batch_size, self.z_dim]) * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "rand_160": {
                "variable": {
                    "value": "alpha",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "real_images.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_176": {
                "variable": {
                    "value": "grad_l2norm",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.sum(grad ** 2, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_177": {
                "variable": {
                    "value": "d_loss_gp",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "(grad_l2norm - 1) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_293": {
                "variable": {
                    "value": "attn_images",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "attn_list",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "load_344": {
                "f": {
                    "value": "os.path.join(self.model_save_path, '{}_G.pth'.format(self.pretrained_model))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_346": {
                "f": {
                    "value": "os.path.join(self.model_save_path, '{}_D.pth'.format(self.pretrained_model))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_128": {
                "variable": {
                    "value": "d_loss_real",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "normal_131": {
                "mean": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "std": {
                    "value": "torch.ones([real_images.size(0), self.z_dim]) * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_147": {
                "variable": {
                    "value": "d_loss_fake",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "normal_189": {
                "mean": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "std": {
                    "value": "torch.ones([real_images.size(0), self.z_dim]) * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "from_numpy_289": {
                "variable": {
                    "value": "attn_torch",
                    "type": "Name",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "attn_np",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.uint8((255 * img_with_heatmap).reshape(img_with_heatmap.shape[2], img_with_heatmap.shape[0], img_with_heatmap.shape[1]))",
                            "Call"
                        ]
                    ]
                }
            },
            "save_302": {
                "obj": {
                    "value": "self.G.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(self.model_save_path, '{}_G.pth'.format(step + 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_305": {
                "obj": {
                    "value": "self.D.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(self.model_save_path, '{}_D.pth'.format(step + 1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_94": {
                "*size": {
                    "value": "[self.batch_size, self.z_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "mean_126": {
                "input": {
                    "value": "d_out_real",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.D(real_images)",
                            "Call"
                        ]
                    ]
                }
            },
            "grad_166": {
                "outputs": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.D(interpolated)",
                            "Call"
                        ]
                    ]
                },
                "inputs": {
                    "value": "interpolated",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Variable(alpha * real_images.data + (1 - alpha) * fake_images.data, requires_grad=True)",
                            "Call"
                        ]
                    ]
                },
                "grad_outputs": {
                    "value": "torch.ones(out.size()).cuda()",
                    "type": "Call",
                    "possible_values": []
                },
                "retain_graph": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "create_graph": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "only_inputs": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_176": {
                "input": {
                    "value": "grad ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_131": {
                "*size": {
                    "value": "[real_images.size(0), self.z_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ones_189": {
                "*size": {
                    "value": "[real_images.size(0), self.z_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ones_169": {
                "*size": {
                    "value": "out.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_128": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_147": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "torch": {
            "is_available_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}