{
    "src/pipeline/get_data.py": {
        "sklearn": {
            "SimpleImputer_16": {
                "variable": {
                    "value": "imp_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "missing_values": {
                    "value": "np.nan",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strategy": {
                    "value": "mean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "train_test_split_20": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "args['test_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LabelEncoder_36": {
                "variable": {
                    "value": "labelencoder_X_1",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LabelEncoder_38": {
                "variable": {
                    "value": "labelencoder_X_2",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "OneHotEncoder_41": {
                "variable": {
                    "value": "onehotencoder",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "train_test_split_47": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "StandardScaler_51": {
                "variable": {
                    "value": "sc",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/pipeline/test.py": {
        "sklearn": {
            "roc_curve_26": {
                "variable": {
                    "value": "(fpr, tpr, thresholds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_score": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model.predict(X)",
                            "Call"
                        ]
                    ]
                }
            },
            "auc_28": {
                "variable": {
                    "value": "area_under_curve",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y, y_pred)",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "tpr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "roc_curve(y, y_pred)",
                            "Call"
                        ]
                    ]
                }
            },
            "classification_report_29": {
                "variable": {
                    "value": "cr",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred > args['threshold']",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "confusion_matrix_33": {
                "variable": {
                    "value": "(tn, fp, fn, tp)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred > args['threshold']",
                    "type": "Compare",
                    "possible_values": []
                }
            }
        }
    }
}