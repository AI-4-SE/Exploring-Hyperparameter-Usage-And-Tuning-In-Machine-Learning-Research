{
    "behavior_metrics/behaviorlib/keraslib/keras_predict.py": {
        "tensorflow": {
            "Session_57": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "get_default_graph_58": {
                "variable": {
                    "value": "self.graph",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_model_60": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "path_to_hdf5",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "set_session_59": {
                "session": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/agents/turtlebot/circuit2c_turtlebot_camera_dqn.py": {
        "tensorflow": {
            "Variable_244": {
                "variable": {
                    "value": "episode_reward",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Variable_246": {
                "variable": {
                    "value": "episode_ave_max_q",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Variable_248": {
                "variable": {
                    "value": "logged_epsilon",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Variable_250": {
                "variable": {
                    "value": "logged_T",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "merge_all_254": {
                "variable": {
                    "value": "summary_op",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "scalar_245": {
                "name": {
                    "value": "Episode_Reward",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "episode_reward",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Variable(0.0)",
                            "Call"
                        ]
                    ]
                }
            },
            "scalar_247": {
                "name": {
                    "value": "Max_Q_Value",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "episode_ave_max_q",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Variable(0.0)",
                            "Call"
                        ]
                    ]
                }
            },
            "scalar_249": {
                "name": {
                    "value": "Epsilon",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "logged_epsilon",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Variable(0.0)",
                            "Call"
                        ]
                    ]
                }
            },
            "placeholder_252": {
                "dtype": {
                    "value": "float",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras-lstm.py": {
        "tensorflow": {
            "load_model_62": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras.py": {
        "tensorflow": {
            "load_model_59": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_classification-bw.py": {
        "tensorflow": {
            "load_model_48": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_classification.py": {
        "tensorflow": {
            "load_model_48": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_opencv_dataset.py": {
        "tensorflow": {
            "load_model_64": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_preprocessed.py": {
        "tensorflow": {
            "load_model_45": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_preprocessed_lstm.py": {
        "tensorflow": {
            "load_model_49": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_preprocessed_lstm_3_elements-60pts.py": {
        "tensorflow": {
            "load_model_52": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_preprocessed_lstm_3_elements.py": {
        "tensorflow": {
            "load_model_72": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_preprocessed_lstm_5_elements.py": {
        "tensorflow": {
            "load_model_49": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_preprocessed_v_w.py": {
        "tensorflow": {
            "load_model_49": {
                "variable": {
                    "value": "self.net_v",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "load_model_50": {
                "variable": {
                    "value": "self.net_w",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_scripting.py": {
        "tensorflow": {
            "load_model_60": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_54": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_seq_3.py": {
        "tensorflow": {
            "load_model_61": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_keras_seq_3_opencv_dataset.py": {
        "tensorflow": {
            "load_model_68": {
                "variable": {
                    "value": "self.net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filepath": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "gpu_device_name_62": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/utils/gradcam/gradcam.py": {
        "tensorflow": {
            "Model_38": {
                "variable": {
                    "value": "grad_model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[self.model.inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "[self.model.get_layer(self.layerName).output, self.model.output]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cast_56": {
                "variable": {
                    "value": "cast_conv_outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "conv_outputs > 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cast_57": {
                "variable": {
                    "value": "cast_grads",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "grads > 0",
                    "type": "Compare",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_mean_68": {
                "variable": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "guided_grads",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cast_conv_outputs * cast_grads * grads",
                            "BinOp"
                        ],
                        [
                            "guided_grads[0]",
                            "Subscript"
                        ]
                    ]
                },
                "axis": {
                    "value": "(0, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_69": {
                "variable": {
                    "value": "cam",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.multiply(weights, conv_outputs)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cast_48": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "image",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "GradientTape_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "multiply_69": {
                "x": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(guided_grads, axis=(0, 1))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "conv_outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "conv_outputs[0]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "gym-gazebo/agents/turtlebot/circuit2c_turtlebot_camera_dqn.py": {
        "tensorflow": {
            "Variable_244": {
                "variable": {
                    "value": "episode_reward",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Variable_246": {
                "variable": {
                    "value": "episode_ave_max_q",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Variable_248": {
                "variable": {
                    "value": "logged_epsilon",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Variable_250": {
                "variable": {
                    "value": "logged_T",
                    "type": "variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "merge_all_254": {
                "variable": {
                    "value": "summary_op",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "scalar_245": {
                "name": {
                    "value": "Episode_Reward",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "episode_reward",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Variable(0.0)",
                            "Call"
                        ]
                    ]
                }
            },
            "scalar_247": {
                "name": {
                    "value": "Max_Q_Value",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "episode_ave_max_q",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Variable(0.0)",
                            "Call"
                        ]
                    ]
                }
            },
            "scalar_249": {
                "name": {
                    "value": "Epsilon",
                    "type": "str",
                    "possible_values": []
                },
                "data": {
                    "value": "logged_epsilon",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.Variable(0.0)",
                            "Call"
                        ]
                    ]
                }
            },
            "placeholder_252": {
                "dtype": {
                    "value": "float",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_torch-lstm.py": {
        "torch": {
            "device_50": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_51": {
                "variable": {
                    "value": "self.gpu_inference",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_68": {
                "f": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                },
                "map_location": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_104": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_torch.py": {
        "torch": {
            "device_47": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() and self.gpu_inference else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "load_64": {
                "f": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                },
                "map_location": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_112": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/brain_f1_torchstacked.py": {
        "torch": {
            "device_47": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_49": {
                "variable": {
                    "value": "self.gpu_inference",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "vstack_120": {
                "variable": {
                    "value": "stacked_image",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "list(self.image_horizon)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "vstack_124": {
                "variable": {
                    "value": "stacked_image",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "list(self.image_horizon)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_72": {
                "f": {
                    "value": "PRETRAINED_MODELS + model",
                    "type": "BinOp",
                    "possible_values": []
                },
                "map_location": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_126": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/torch_utils/convlstm.py": {
        "torch": {
            "Conv2d_36": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.input_dim + self.hidden_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * self.hidden_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "self.kernel_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_45": {
                "variable": {
                    "value": "combined",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[input_tensor, h_cur]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "split_48": {
                "variable": {
                    "value": "(cc_i, cc_f, cc_o, cc_g)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "tensor": {
                    "value": "combined_conv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(combined)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_49": {
                "variable": {
                    "value": "i",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cc_i",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sigmoid_50": {
                "variable": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cc_f",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sigmoid_51": {
                "variable": {
                    "value": "o",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cc_o",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "tanh_52": {
                "variable": {
                    "value": "g",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "cc_g",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ModuleList_122": {
                "variable": {
                    "value": "self.cell_list",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "cell_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "stack_167": {
                "variable": {
                    "value": "layer_output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "output_inner",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_55": {
                "input": {
                    "value": "c_next",
                    "type": "variable",
                    "possible_values": [
                        [
                            "f * c_cur + i * g",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_61": {
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "height",
                    "type": "variable",
                    "possible_values": []
                },
                "layout": {
                    "value": "width",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "self.conv.weight.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_62": {
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "height",
                    "type": "variable",
                    "possible_values": []
                },
                "layout": {
                    "value": "width",
                    "type": "variable",
                    "possible_values": []
                },
                "device": {
                    "value": "self.conv.weight.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/torch_utils/deepest_lstm_tinypilotnet.py": {
        "torch": {
            "Conv2d_9": {
                "variable": {
                    "value": "self.cn_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.num_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_10": {
                "variable": {
                    "value": "self.relu_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_11": {
                "variable": {
                    "value": "self.cn_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_12": {
                "variable": {
                    "value": "self.relu_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_13": {
                "variable": {
                    "value": "self.cn_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_14": {
                "variable": {
                    "value": "self.relu_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_15": {
                "variable": {
                    "value": "self.dropout_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.fc_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "8 * 11 * 5",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_20": {
                "variable": {
                    "value": "self.relu_fc_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_21": {
                "variable": {
                    "value": "self.fc_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_22": {
                "variable": {
                    "value": "self.relu_fc_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_23": {
                "variable": {
                    "value": "self.fc_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_labels",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "behavior_metrics/brains/f1/torch_utils/pilotnet.py": {
        "torch": {
            "BatchNorm2d_17": {
                "variable": {
                    "value": "self.ln_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.num_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "eps": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "variable": {
                    "value": "self.cn_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.num_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "24",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "variable": {
                    "value": "self.cn_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "24",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "36",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.cn_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "36",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "variable": {
                    "value": "self.cn_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "variable": {
                    "value": "self.cn_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.fc_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1 * 18 * 64",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1164",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "variable": {
                    "value": "self.fc_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1164",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_27": {
                "variable": {
                    "value": "self.fc_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "variable": {
                    "value": "self.fc_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_29": {
                "variable": {
                    "value": "self.fc_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.output_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_36": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_38": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_40": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_42": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_44": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_49": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_51": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_53": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_55": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "behavior_metrics/brains/f1/torch_utils/pilotnetStacked.py": {
        "torch": {
            "BatchNorm2d_18": {
                "variable": {
                    "value": "self.ln_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.num_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "eps": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "variable": {
                    "value": "self.cn_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.num_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "36",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.cn_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "36",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "variable": {
                    "value": "self.cn_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "48",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "variable": {
                    "value": "self.cn_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_24": {
                "variable": {
                    "value": "self.cn_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "80",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "variable": {
                    "value": "self.fc_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1 * 18 * 80",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1164",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_27": {
                "variable": {
                    "value": "self.fc_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1164",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "variable": {
                    "value": "self.fc_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_29": {
                "variable": {
                    "value": "self.fc_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_30": {
                "variable": {
                    "value": "self.fc_5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.output_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_37": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_39": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_41": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_43": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_45": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_50": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_52": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_54": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_56": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.ln_1(img)",
                            "Call"
                        ],
                        [
                            "self.cn_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.cn_5(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "out.reshape(out.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_1(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_2(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_3(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_4(out)",
                            "Call"
                        ],
                        [
                            "torch.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc_5(out)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}