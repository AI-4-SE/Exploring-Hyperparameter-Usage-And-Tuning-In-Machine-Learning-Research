{
    "functions.py": {
        "torch": {
            "mean_40": {
                "input": {
                    "value": "loss",
                    "possible_values": [
                        [
                            "torch.sigmoid(diff) + torch.sigmoid(torch.pow(item_j, 2))",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sigmoid_39": {
                "input": {
                    "value": "torch.pow(item_j, 2)",
                    "possible_values": []
                }
            },
            "mean_45": {
                "input": {
                    "value": "torch.logsigmoid(diff)",
                    "possible_values": []
                }
            },
            "pow_39": {
                "input": {
                    "value": "item_j",
                    "possible_values": [
                        [
                            "random.choices(neg_candidates[u], k=cnt * n_negs)",
                            "Call"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "logsigmoid_45": {
                "input": {
                    "value": "diff",
                    "possible_values": [
                        [
                            "item_j - item_i",
                            "BinOp"
                        ],
                        [
                            "item_i - item_j",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "BCEWithLogitsLoss_79": {
                "variable": {
                    "value": "point_loss_function",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Adam_80": {
                "variable": {
                    "value": "optimizer",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "possible_values": [
                        [
                            "0.0001",
                            "Constant"
                        ]
                    ]
                }
            },
            "is_available_33": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "device_34": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "possible_values": []
                }
            },
            "device_37": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "possible_values": []
                }
            },
            "manual_seed_41": {
                "seed": {
                    "value": "manualSeed",
                    "possible_values": [
                        [
                            "706",
                            "Constant"
                        ]
                    ]
                }
            },
            "is_available_42": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "zeros_like_106": {
                "variable": {
                    "value": "Y_uj",
                    "possible_values": []
                },
                "input": {
                    "value": "Y_ui",
                    "possible_values": [
                        [
                            "labels / rating_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "chunk_156": {
                "variable": {
                    "value": "preds",
                    "possible_values": []
                },
                "input": {
                    "value": "preds.detach().cpu()",
                    "possible_values": []
                },
                "chunks": {
                    "value": "e_batch_size",
                    "possible_values": [
                        [
                            "eval_batch_size // 100",
                            "BinOp"
                        ]
                    ]
                }
            },
            "chunk_157": {
                "variable": {
                    "value": "chunked_items",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.IntTensor(i_ids)",
                    "possible_values": []
                },
                "chunks": {
                    "value": "e_batch_size",
                    "possible_values": [
                        [
                            "eval_batch_size // 100",
                            "BinOp"
                        ]
                    ]
                }
            },
            "topk_160": {
                "variable": {
                    "value": "(_, indices)",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "possible_values": []
                },
                "k": {
                    "value": "10",
                    "possible_values": []
                }
            },
            "take_161": {
                "variable": {
                    "value": "recommends",
                    "possible_values": []
                },
                "input": {
                    "value": "chunked_items[i]",
                    "possible_values": []
                },
                "index": {
                    "value": "indices",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "JNCF_6": {
                "base_class_0": {
                    "value": "torch.nn.Module",
                    "possible_values": []
                },
                "self.combination": {
                    "value": "combination",
                    "possible_values": []
                },
                "Sequential_29": {
                    "variable": {
                        "value": "self.DF_user",
                        "possible_values": []
                    },
                    "*args": {
                        "value": "*user_MLP",
                        "possible_values": []
                    }
                },
                "Sequential_39": {
                    "variable": {
                        "value": "self.DF_item",
                        "possible_values": []
                    },
                    "*args": {
                        "value": "*item_MLP",
                        "possible_values": []
                    }
                },
                "Sequential_49": {
                    "variable": {
                        "value": "self.DI",
                        "possible_values": []
                    },
                    "*args": {
                        "value": "*DI_MLP",
                        "possible_values": []
                    }
                },
                "Linear_51": {
                    "variable": {
                        "value": "self.predict_layer",
                        "possible_values": []
                    },
                    "in_features": {
                        "value": "self.factor_dim",
                        "possible_values": []
                    },
                    "out_features": {
                        "value": "1",
                        "possible_values": []
                    },
                    "bias": {
                        "value": "False",
                        "possible_values": []
                    }
                }
            },
            "cat_81": {
                "variable": {
                    "value": "i_feature_vector",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(user_feature, item_i_feature)",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "possible_values": []
                }
            },
            "cat_82": {
                "variable": {
                    "value": "j_feature_vector",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(user_feature, item_j_feature)",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "in_features": {
                    "value": "n_item",
                    "possible_values": []
                },
                "out_features": {
                    "value": "DF_layers[i]",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Linear_27": {
                "in_features": {
                    "value": "DF_layers[i - 1]",
                    "possible_values": []
                },
                "out_features": {
                    "value": "DF_layers[i]",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "n_user",
                    "possible_values": []
                },
                "out_features": {
                    "value": "DF_layers[i]",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "in_features": {
                    "value": "DF_layers[i - 1]",
                    "possible_values": []
                },
                "out_features": {
                    "value": "DF_layers[i]",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "in_features": {
                    "value": "self.embed_dim",
                    "possible_values": []
                },
                "out_features": {
                    "value": "DI_layers[i]",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Linear_47": {
                "in_features": {
                    "value": "DI_layers[i - 1]",
                    "possible_values": []
                },
                "out_features": {
                    "value": "DI_layers[i]",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            }
        }
    },
    "run.py": {
        "torch": {
            "BCEWithLogitsLoss_111": {
                "variable": {
                    "value": "point_loss_function",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Adam_112": {
                "variable": {
                    "value": "optimizer",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "possible_values": []
                }
            },
            "is_available_85": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "device_86": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "possible_values": []
                }
            },
            "device_89": {
                "variable": {
                    "value": "device",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "possible_values": []
                }
            },
            "manual_seed_93": {
                "seed": {
                    "value": "manualSeed",
                    "possible_values": [
                        [
                            "706",
                            "Constant"
                        ]
                    ]
                }
            },
            "is_available_94": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "zeros_like_137": {
                "variable": {
                    "value": "Y_uj",
                    "possible_values": []
                },
                "input": {
                    "value": "Y_ui",
                    "possible_values": [
                        [
                            "labels / rating_max",
                            "BinOp"
                        ]
                    ]
                }
            },
            "chunk_185": {
                "variable": {
                    "value": "preds",
                    "possible_values": []
                },
                "input": {
                    "value": "preds.detach().cpu()",
                    "possible_values": []
                },
                "chunks": {
                    "value": "e_batch_size",
                    "possible_values": [
                        [
                            "eval_batch_size // 100",
                            "BinOp"
                        ]
                    ]
                }
            },
            "chunk_186": {
                "variable": {
                    "value": "chunked_items",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.IntTensor(i_ids)",
                    "possible_values": []
                },
                "chunks": {
                    "value": "e_batch_size",
                    "possible_values": [
                        [
                            "eval_batch_size // 100",
                            "BinOp"
                        ]
                    ]
                }
            },
            "topk_189": {
                "variable": {
                    "value": "(_, indices)",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "possible_values": []
                },
                "k": {
                    "value": "10",
                    "possible_values": []
                }
            },
            "take_190": {
                "variable": {
                    "value": "recommends",
                    "possible_values": []
                },
                "input": {
                    "value": "chunked_items[i]",
                    "possible_values": []
                },
                "index": {
                    "value": "indices",
                    "possible_values": []
                }
            }
        }
    }
}