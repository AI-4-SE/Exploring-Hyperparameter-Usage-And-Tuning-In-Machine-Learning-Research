{
    "experiment_template/dataloader.py": {
        "torch": {
            "DataLoader_148": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ds",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "MNIST(root=os.path.join(datadir, 'mnist'), download=True, train=train)",
                            "Call"
                        ],
                        [
                            "th.utils.data.DataLoader(train_dataset, **kwargs)",
                            "Call"
                        ],
                        [
                            "th.utils.data.DataLoader(test_dataset, **kwargs)",
                            "Call"
                        ],
                        [
                            "FashionMNIST(root, download=True, train=train, transform=transform)",
                            "Call"
                        ],
                        [
                            "CIFAR10(root, download=True, train=train, transform=transform)",
                            "Call"
                        ],
                        [
                            "tnt.dataset.TensorDataset([data, labels])",
                            "Call"
                        ],
                        [
                            "ds.transform({0: augment, 1: ltrans})",
                            "Call"
                        ],
                        [
                            "CIFAR100(root, download=True, train=train, transform=transform)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_269": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ds",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "MNIST(root=os.path.join(datadir, 'mnist'), download=True, train=train)",
                            "Call"
                        ],
                        [
                            "th.utils.data.DataLoader(train_dataset, **kwargs)",
                            "Call"
                        ],
                        [
                            "th.utils.data.DataLoader(test_dataset, **kwargs)",
                            "Call"
                        ],
                        [
                            "FashionMNIST(root, download=True, train=train, transform=transform)",
                            "Call"
                        ],
                        [
                            "CIFAR10(root, download=True, train=train, transform=transform)",
                            "Call"
                        ],
                        [
                            "tnt.dataset.TensorDataset([data, labels])",
                            "Call"
                        ],
                        [
                            "ds.transform({0: augment, 1: ltrans})",
                            "Call"
                        ],
                        [
                            "CIFAR100(root, download=True, train=train, transform=transform)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_107": {
                "variable": {
                    "value": "ds",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder(d, transforms.Compose([*gtransf, transforms.RandomCrop(64, padding=8), transforms.RandomHorizontalFlip(), *training_transforms, transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_115": {
                "variable": {
                    "value": "ds",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder(d, transforms.Compose([*gtransf, transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_228": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ds",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "MNIST(root=os.path.join(datadir, 'mnist'), download=True, train=train)",
                            "Call"
                        ],
                        [
                            "th.utils.data.DataLoader(train_dataset, **kwargs)",
                            "Call"
                        ],
                        [
                            "th.utils.data.DataLoader(test_dataset, **kwargs)",
                            "Call"
                        ],
                        [
                            "FashionMNIST(root, download=True, train=train, transform=transform)",
                            "Call"
                        ],
                        [
                            "CIFAR10(root, download=True, train=train, transform=transform)",
                            "Call"
                        ],
                        [
                            "tnt.dataset.TensorDataset([data, labels])",
                            "Call"
                        ],
                        [
                            "ds.transform({0: augment, 1: ltrans})",
                            "Call"
                        ],
                        [
                            "CIFAR100(root, download=True, train=train, transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "sampler": {
                    "value": "sampler.SubsetRandomSampler(indices)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_233": {
                "variable": {
                    "value": "dataloader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ds",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "MNIST(root=os.path.join(datadir, 'mnist'), download=True, train=train)",
                            "Call"
                        ],
                        [
                            "th.utils.data.DataLoader(train_dataset, **kwargs)",
                            "Call"
                        ],
                        [
                            "th.utils.data.DataLoader(test_dataset, **kwargs)",
                            "Call"
                        ],
                        [
                            "FashionMNIST(root, download=True, train=train, transform=transform)",
                            "Call"
                        ],
                        [
                            "CIFAR10(root, download=True, train=train, transform=transform)",
                            "Call"
                        ],
                        [
                            "tnt.dataset.TensorDataset([data, labels])",
                            "Call"
                        ],
                        [
                            "ds.transform({0: augment, 1: ltrans})",
                            "Call"
                        ],
                        [
                            "CIFAR100(root, download=True, train=train, transform=transform)",
                            "Call"
                        ]
                    ]
                }
            },
            "SubsetRandomSampler_229": {
                "indices": {
                    "value": "indices",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.arange(subset.start, subset.stop)",
                            "Call"
                        ],
                        [
                            "np.arange(subset[0], subset[1])",
                            "Call"
                        ],
                        [
                            "subset",
                            "Name"
                        ],
                        [
                            "np.random.choice(sample_size, num_samples)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "experiment_template/train.py": {
        "torch": {
            "is_available_30": {
                "variable": {
                    "value": "has_cuda",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_103": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_129": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "[{'params': oparams, 'weight_decay': args.decay}, {'params': bparams, 'weight_decay': 0.0}]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "nesterov": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "manual_seed_36": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LambdaLR_139": {
                "variable": {
                    "value": "lscheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "optim.SGD([{'params': oparams, 'weight_decay': args.decay}, {'params': bparams, 'weight_decay': 0.0}], lr=args.lr, momentum=args.momentum, nesterov=False)",
                            "Call"
                        ]
                    ]
                },
                "lr_lambda": {
                    "value": "llam",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "lambda e: float(lS[max(bisect.bisect_right(lS[:, 0], e) - 1, 0), 1])",
                            "Lambda"
                        ]
                    ]
                }
            },
            "DataParallel_110": {
                "variable": {
                    "value": "pmodel",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "getattr(models.farkas, args.model)(**model_args)",
                            "Call"
                        ],
                        [
                            "model.cuda(0)",
                            "Call"
                        ]
                    ]
                }
            },
            "device_count_109": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_169": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "synchronize_203": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_220": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_309": {
                "obj": {
                    "value": "{'ix': ix, 'epoch': e + 1, 'model': args.model, 'state_dict': model.state_dict(), 'pct_err': pct_err, 'loss': loss}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "save_model_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(args.logdir, 'checkpoint.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/blocks.py": {
        "torch": {
            "Parameter_29": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(out_dim, in_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "linear_68": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "Parameter_119": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(out_channels, in_channels, *kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_168": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "groups": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_31": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(out_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm1d_38": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "affine": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_43": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Parameter_121": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_136": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "affine": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_141": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_228": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "affine": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_297": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "affine": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "randn_29": {
                "*size": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "in_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softplus_78": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "randn_119": {
                "*size": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "*kernel_size",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "softplus_178": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "softplus_252": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "softplus_326": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "randn_31": {
                "*size": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "leaky_relu_80": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "randn_121": {
                "*size": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "leaky_relu_180": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "leaky_relu_254": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "leaky_relu_328": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "Parameter_55": {
                "variable": {
                    "value": "self.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.zeros(out_dim, in_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "selu_82": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "Parameter_153": {
                "variable": {
                    "value": "self.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.zeros(out_channels, in_channels, *kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "selu_182": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "selu_256": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "selu_330": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "elu_84": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "elu_184": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "elu_258": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "elu_332": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_55": {
                "*size": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "in_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "relu_86": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_153": {
                "*size": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "*kernel_size",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "relu_186": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_260": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_334": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "y + b",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.conv0(x)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.conv2(y)",
                            "Call"
                        ],
                        [
                            "x + y",
                            "BinOp"
                        ],
                        [
                            "smoothrelu(y)",
                            "Call"
                        ],
                        [
                            "F.softplus(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/cifar.py": {
        "torch": {}
    },
    "models/farkas.py": {
        "torch": {
            "Parameter_26": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(out_dim - 1, in_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_27": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(out_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "linear_63": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "self.layer0(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.layers(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "self.view(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "cat_67": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[y, ybar]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_69": {
                "variable": {
                    "value": "bbar",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-self.bias[0:-1].mean()",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_70": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.bias[0:-1], bbar.unsqueeze(0)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_119": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(out_channels - 1, in_channels, *kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_120": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conv2d_165": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "self.layer0(x)",
                            "Call"
                        ],
                        [
                            "self.maxpool(x)",
                            "Call"
                        ],
                        [
                            "self.layers(x)",
                            "Call"
                        ],
                        [
                            "self.pool(x)",
                            "Call"
                        ],
                        [
                            "self.view(x)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.stride",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "groups": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_169": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[y, ybar]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_170": {
                "variable": {
                    "value": "bbar",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-self.bias[0:-1].mean()",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.bias[0:-1], bbar.unsqueeze(0)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_276": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.padding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "groups": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_286": {
                "variable": {
                    "value": "bbar",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-self.bias[0:-1].mean()",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_287": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.bias[0:-1], bbar.unsqueeze(0)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "conv2d_394": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "groups": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_404": {
                "variable": {
                    "value": "bbar",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-self.bias[0:-1].mean()",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_405": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.bias[0:-1], bbar.unsqueeze(0)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_488": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*_layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Linear_499": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2 ** i * base_channels + u",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "classes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_33": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "affine": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_38": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "leaky_relu_75": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "BatchNorm2d_132": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "affine": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_137": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "leaky_relu_176": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "Parameter_228": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.zeros(channels, channels, *kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_229": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.zeros(channels + 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_231": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(channels, channels, *kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_232": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(channels + 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_235": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "channels + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "affine": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_240": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_281": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x + y, ybar]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_284": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[y, ybar]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_292": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "Parameter_346": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.zeros(channels, channels // 4, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_347": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.zeros(channels + 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_349": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(channels, channels // 4, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_350": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.randn(channels + 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm2d_352": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "channels + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "affine": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_357": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_399": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x + y, ybar]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_402": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[y, ybar]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "leaky_relu_410": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "Dropout_495": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ],
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "randn_26": {
                "*size": {
                    "value": "out_dim - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "in_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "randn_27": {
                "*size": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "selu_77": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "randn_119": {
                "*size": {
                    "value": "out_channels - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "*kernel_size",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "randn_120": {
                "*size": {
                    "value": "out_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "selu_178": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "selu_294": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "selu_412": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_463": {
                "*args": {
                    "value": "*sublayers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "elu_79": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "elu_180": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_228": {
                "*size": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "*kernel_size",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "zeros_229": {
                "*size": {
                    "value": "channels + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randn_231": {
                "*size": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "*kernel_size",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "randn_232": {
                "*size": {
                    "value": "channels + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "elu_296": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_346": {
                "*size": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "channels // 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_347": {
                "*size": {
                    "value": "channels + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "randn_349": {
                "*size": {
                    "value": "channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "channels // 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_350": {
                "*size": {
                    "value": "channels + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "elu_414": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "Parameter_50": {
                "variable": {
                    "value": "self.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.zeros(out_dim, in_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_81": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "Parameter_150": {
                "variable": {
                    "value": "self.weight.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "th.zeros(out_channels - 1, in_channels, *kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_182": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_298": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_416": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.linear(x, self.weight, None)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_dim)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(x, self.weight, None, self.stride, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, self.padding, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Name"
                        ],
                        [
                            "self.conv0(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "self.conv1(y)",
                            "Call"
                        ],
                        [
                            "self.dropout(y)",
                            "Call"
                        ],
                        [
                            "F.conv2d(y, self.weight, None, 1, 0, 1, 1)",
                            "Call"
                        ],
                        [
                            "th.cat([x + y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat([y, ybar], dim=1)",
                            "Call"
                        ],
                        [
                            "y + b.view(1, self.out_channels, 1, 1)",
                            "BinOp"
                        ],
                        [
                            "F.leaky_relu(y)",
                            "Call"
                        ],
                        [
                            "F.selu(y)",
                            "Call"
                        ],
                        [
                            "self.bn(y)",
                            "Call"
                        ],
                        [
                            "F.elu(y)",
                            "Call"
                        ],
                        [
                            "F.relu(y)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_50": {
                "*size": {
                    "value": "out_dim",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "in_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_150": {
                "*size": {
                    "value": "out_channels - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "in_channels",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "*kernel_size",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "models/resnet.py": {
        "torch": {
            "Sequential_63": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*_layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Dropout_69": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_39": {
                "*args": {
                    "value": "*sublayers",
                    "type": "Starred",
                    "possible_values": []
                }
            }
        }
    },
    "models/utils.py": {
        "torch": {}
    }
}