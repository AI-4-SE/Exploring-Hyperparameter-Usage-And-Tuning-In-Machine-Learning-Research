{
    "curiosity/similarity.py": {
        "sklearn": {
            "TfidfVectorizer_19": {
                "variable": {
                    "value": "self._vectorizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stop_words": {
                    "value": "english",
                    "type": "str",
                    "possible_values": []
                },
                "ngram_range": {
                    "value": "(1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "strip_accents": {
                    "value": "unicode",
                    "type": "str",
                    "possible_values": []
                },
                "decode_error": {
                    "value": "ignore",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cosine_similarity_44": {
                "X": {
                    "value": "query_vector",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._vectorizer.transform([query])",
                            "Call"
                        ]
                    ]
                },
                "Y": {
                    "value": "doc_vectors",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._vectorizer.transform(docs)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "curiosity/baseline_models.py": {
        "torch": {
            "Linear_115": {
                "variable": {
                    "value": "self._like_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_124": {
                "variable": {
                    "value": "self._da_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self._utter_dim + self._dialog_context.get_output_dim(), self._dialog_context.get_output_dim())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_135": {
                "variable": {
                    "value": "self._da_bce_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_142": {
                "variable": {
                    "value": "self._policy_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self._dialog_context.get_output_dim(), self._dialog_context.get_output_dim())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_153": {
                "variable": {
                    "value": "self._policy_bce_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_160": {
                "variable": {
                    "value": "self._dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_prob",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_162": {
                "variable": {
                    "value": "self._fact_bce_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                },
                "pos_weight": {
                    "value": "torch.Tensor([self._fact_pos_weight])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_245": {
                "variable": {
                    "value": "shifted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(dialog_context.new_zeros([shape[0], 1, shape[2]]), dialog_context[:, :-1, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_369": {
                "variable": {
                    "value": "message_w_context",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(messages, shifted_context)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "erf_28": {
                "input": {
                    "value": "x / math.sqrt(2.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_125": {
                "in_features": {
                    "value": "self._utter_dim + self._dialog_context.get_output_dim()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_130": {
                "in_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab.get_vocab_size(DIALOG_ACT_LABELS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_143": {
                "in_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_148": {
                "in_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab.get_vocab_size(DIALOG_ACT_LABELS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_390": {
                "input": {
                    "value": "da_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._da_classifier(message_w_context)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_422": {
                "input": {
                    "value": "policy_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._policy_classifier(shifted_context)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "curiosity/bert.py": {
        "torch": {}
    },
    "curiosity/metrics.py": {
        "torch": {
            "cat_49": {
                "variable": {
                    "value": "all_ranks",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "all_ranks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(all_ranks)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "curiosity/models.py": {
        "torch": {
            "Embedding_91": {
                "variable": {
                    "value": "self._sender_emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "sender_emb_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_93": {
                "variable": {
                    "value": "self._act_embedder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "vocab.get_vocab_size(DIALOG_ACT_LABELS)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "act_emb_size",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_123": {
                "variable": {
                    "value": "self._like_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_128": {
                "variable": {
                    "value": "self._focus_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self._mention_embedder.get_output_dim(), self._dialog_context.get_output_dim())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_135": {
                "variable": {
                    "value": "self._known_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self._mention_embedder.get_output_dim(), self._dialog_context.get_output_dim())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_149": {
                "variable": {
                    "value": "self._da_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self._utter_dim + self._dialog_context.get_output_dim(), self._dialog_context.get_output_dim())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_160": {
                "variable": {
                    "value": "self._da_bce_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_167": {
                "variable": {
                    "value": "self._policy_classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self._dialog_context.get_output_dim(), self._dialog_context.get_output_dim())",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_178": {
                "variable": {
                    "value": "self._policy_bce_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_185": {
                "variable": {
                    "value": "self._dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_prob",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_187": {
                "variable": {
                    "value": "self._fact_bce_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                },
                "pos_weight": {
                    "value": "torch.Tensor([self._fact_pos_weight])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_279": {
                "variable": {
                    "value": "full_context",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(context, sender_emb, act_emb, focus_emb[:, None, :].repeat_interleave(n_turns, 1), known_vec[:, None, :].repeat_interleave(n_turns, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_299": {
                "variable": {
                    "value": "shifted_context",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(dialog_context.new_zeros([shape[0], 1, shape[2]]), dialog_context[:, :-1, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_425": {
                "variable": {
                    "value": "message_w_context",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(messages, shifted_context)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "erf_28": {
                "input": {
                    "value": "x / math.sqrt(2.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_129": {
                "in_features": {
                    "value": "self._mention_embedder.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_136": {
                "in_features": {
                    "value": "self._mention_embedder.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_150": {
                "in_features": {
                    "value": "self._utter_dim + self._dialog_context.get_output_dim()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_155": {
                "in_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab.get_vocab_size(DIALOG_ACT_LABELS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_168": {
                "in_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_173": {
                "in_features": {
                    "value": "self._dialog_context.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "vocab.get_vocab_size(DIALOG_ACT_LABELS)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_443": {
                "input": {
                    "value": "da_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._da_classifier(message_w_context)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_480": {
                "input": {
                    "value": "policy_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._policy_classifier(shifted_context)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "curiosity/nn.py": {
        "torch": {}
    },
    "curiosity/paraphrase_models.py": {
        "torch": {
            "LSTMCell_151": {
                "variable": {
                    "value": "self._decoder_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self._decoder_input_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self._decoder_output_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_155": {
                "variable": {
                    "value": "self._output_projection_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self._decoder_output_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.vocab.get_vocab_size(self._target_namespace)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_softmax_169": {
                "variable": {
                    "value": "class_log_probabilities",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output_projections",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._output_projection_layer(decoder_hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_367": {
                "variable": {
                    "value": "predictions",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "step_predictions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "EmbeddingBag_97": {
                "variable": {
                    "value": "self._dialog_acts_embedder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "n_dialog_acts",
                    "type": "variable",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "da_embedding_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dialog_acts_encoder.get_input_dim()",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_130": {
                "variable": {
                    "value": "self._merge_encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "Linear(self._source_encoder.get_output_dim() + self._dialog_acts_encoder.get_output_dim(), self._encoder_output_dim)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_356": {
                "variable": {
                    "value": "class_probabilities",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output_projections",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self._output_projection_layer(decoder_hidden)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "max_359": {
                "variable": {
                    "value": "(_, predicted_classes)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "class_probabilities",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.softmax(output_projections, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_373": {
                "variable": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "step_logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_434": {
                "variable": {
                    "value": "decoder_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(attended_input, embedded_input)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Linear_131": {
                "in_features": {
                    "value": "self._source_encoder.get_output_dim() + self._dialog_acts_encoder.get_output_dim()",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self._encoder_output_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_285": {
                "tensors": {
                    "value": "[final_encoder_output, dialog_acts_state]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_335": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "curiosity/tests/test_metrics.py": {
        "torch": {
            "tensor_11": {
                "variable": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 2, 0.5, 0, 4, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_11": {
                "variable": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shape": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_12": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 1, 0, 0, 0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_12": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shape": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_13": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reshape_13": {
                "variable": {
                    "value": "mask",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shape": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}