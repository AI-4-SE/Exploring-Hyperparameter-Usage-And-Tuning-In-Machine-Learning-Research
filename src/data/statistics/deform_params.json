{
    "model/cem.py": {
        "torch": {
            "device_182": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_196": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_24": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0] * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_25": {
                "variable": {
                    "value": "multiplier",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[50, 50, 2 * math.pi, 0.14]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_26": {
                "variable": {
                    "value": "addition",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 0, 0.01]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_64": {
                "variable": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] * 4] * N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "as_tensor_76": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.0] * N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "manual_seed_181": {
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_156": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img_initial, img_goal, img_cur]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Uniform_30": {
                "variable": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "high": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MultivariateNormal_34": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Uniform_40": {
                "variable": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "high": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "argsort_121": {
                "variable": {
                    "value": "loss_index",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.as_tensor([0.0] * N)",
                            "Call"
                        ],
                        [
                            "loss_function_img(imgs_recon, img_goal, N)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_126": {
                "variable": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "sorted_sample_actions[:K]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_127": {
                "variable": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.cov(sorted_sample_actions[:K], rowvar=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_153": {
                "obj": {
                    "value": "action_best",
                    "type": "variable",
                    "possible_values": [
                        [
                            "sorted_sample_actions[0]",
                            "Subscript"
                        ]
                    ]
                },
                "f": {
                    "value": "'./plan_result/{}/action_best_step{}_N{}_K{}.pt'.format(plan_folder_name, step_i, N, K)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "floor_38": {
                "input": {
                    "value": "action[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "MultivariateNormal_46": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "mul_31": {
                "input": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ],
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "multiplier",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([50, 50, 2 * math.pi, 0.14])",
                            "Call"
                        ]
                    ]
                }
            },
            "mul_41": {
                "input": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ],
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "multiplier",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([50, 50, 2 * math.pi, 0.14])",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_83": {
                "n": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MultivariateNormal_139": {
                "variable": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MultivariateNormal_140": {
                "variable": {
                    "value": "q",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean_tmp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "mean",
                            "variable"
                        ],
                        [
                            "mean",
                            "variable"
                        ],
                        [
                            "mean",
                            "variable"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov_tmp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "cov",
                            "variable"
                        ],
                        [
                            "cov",
                            "variable"
                        ],
                        [
                            "cov",
                            "variable"
                        ]
                    ]
                }
            },
            "floor_44": {
                "input": {
                    "value": "action[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "model/cem_e2c.py": {
        "torch": {
            "device_175": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_188": {
                "variable": {
                    "value": "checkpoint_e2c",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_24": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0] * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_25": {
                "variable": {
                    "value": "multiplier",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[50, 50, 2 * math.pi, 0.14]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_26": {
                "variable": {
                    "value": "addition",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 0, 0.01]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_66": {
                "variable": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] * 4] * N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "as_tensor_78": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.0] * N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "manual_seed_174": {
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Uniform_31": {
                "variable": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "high": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MultivariateNormal_35": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Uniform_41": {
                "variable": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "high": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MultivariateNormal_45": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "argsort_122": {
                "variable": {
                    "value": "loss_index",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.as_tensor([0.0] * N)",
                            "Call"
                        ],
                        [
                            "loss_function_img(imgs_recon, img_goal, N)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_127": {
                "variable": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "sorted_sample_actions[:K]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_128": {
                "variable": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.cov(sorted_sample_actions[:K], rowvar=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "floor_39": {
                "input": {
                    "value": "action[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "MultivariateNormal_48": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "mul_32": {
                "input": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ],
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "multiplier",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([50, 50, 2 * math.pi, 0.14])",
                            "Call"
                        ]
                    ]
                }
            },
            "mul_42": {
                "input": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ],
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "multiplier",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([50, 50, 2 * math.pi, 0.14])",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_85": {
                "n": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MultivariateNormal_140": {
                "variable": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MultivariateNormal_141": {
                "variable": {
                    "value": "q",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean_tmp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "mean",
                            "variable"
                        ],
                        [
                            "mean",
                            "variable"
                        ],
                        [
                            "mean",
                            "variable"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov_tmp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "cov",
                            "variable"
                        ],
                        [
                            "cov",
                            "variable"
                        ],
                        [
                            "cov",
                            "variable"
                        ]
                    ]
                }
            },
            "floor_46": {
                "input": {
                    "value": "action[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "model/cem_plot_action.py": {
        "torch": {
            "load_70": {
                "variable": {
                    "value": "action_best",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "'./plan_result/03/action_best_step{}_N{}_K{}.pt'.format(i, N, K)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "model/cem_plot_curve.py": {
        "torch": {
            "device_175": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_189": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_24": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0] * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_25": {
                "variable": {
                    "value": "multiplier",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[50, 50, 2 * math.pi, 0.14]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_26": {
                "variable": {
                    "value": "addition",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 0, 0.01]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_66": {
                "variable": {
                    "value": "actions",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0] * 4] * N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "as_tensor_78": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[0.0] * N",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "manual_seed_174": {
                "seed": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Uniform_30": {
                "variable": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "high": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MultivariateNormal_34": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Uniform_40": {
                "variable": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0.0",
                    "type": "float",
                    "possible_values": []
                },
                "high": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "MultivariateNormal_44": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "argsort_122": {
                "variable": {
                    "value": "loss_index",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.as_tensor([0.0] * N)",
                            "Call"
                        ],
                        [
                            "loss_function_img(imgs_recon, img_goal, N)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_127": {
                "variable": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "sorted_sample_actions[:K]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_128": {
                "variable": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.cov(sorted_sample_actions[:K], rowvar=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "floor_38": {
                "input": {
                    "value": "action[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "MultivariateNormal_47": {
                "variable": {
                    "value": "action",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "mul_31": {
                "input": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ],
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "multiplier",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([50, 50, 2 * math.pi, 0.14])",
                            "Call"
                        ]
                    ]
                }
            },
            "mul_41": {
                "input": {
                    "value": "action_base",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ],
                        [
                            "Uniform(low=0.0, high=1.0).sample((4,))",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "multiplier",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.tensor([50, 50, 2 * math.pi, 0.14])",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_85": {
                "n": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MultivariateNormal_140": {
                "variable": {
                    "value": "p",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.mean(sorted_sample_actions[:K], dim=0).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov",
                    "type": "variable",
                    "possible_values": [
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "add_eye(cov)",
                            "Call"
                        ],
                        [
                            "(cov1 + cov2) / 2",
                            "BinOp"
                        ],
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "torch.from_numpy(np.cov(sorted_sample_actions[:K], rowvar=0)).type(torch.DoubleTensor)",
                            "Call"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ],
                        [
                            "None",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MultivariateNormal_141": {
                "variable": {
                    "value": "q",
                    "type": "variable",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean_tmp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "mean",
                            "variable"
                        ],
                        [
                            "mean",
                            "variable"
                        ],
                        [
                            "mean",
                            "variable"
                        ]
                    ]
                },
                "covariance_matrix": {
                    "value": "cov_tmp",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "cov",
                            "variable"
                        ],
                        [
                            "cov",
                            "variable"
                        ],
                        [
                            "cov",
                            "variable"
                        ]
                    ]
                }
            },
            "floor_45": {
                "input": {
                    "value": "action[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "model/create_dataset.py": {
        "torch": {
            "tensor_260": {
                "data": {
                    "value": "resz_action_cur",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.resz_actions[index]",
                            "Subscript"
                        ],
                        [
                            "self.resz_actions[index]",
                            "Subscript"
                        ],
                        [
                            "self.resz_actions[index]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "tensor_270": {
                "data": {
                    "value": "resz_action_cur",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.resz_actions[index]",
                            "Subscript"
                        ],
                        [
                            "self.resz_actions[index]",
                            "Subscript"
                        ],
                        [
                            "self.resz_actions[index]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "tensor_285": {
                "data": {
                    "value": "resz_action_post2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.resz_actions[index + 2]",
                            "Subscript"
                        ],
                        [
                            "self.resz_actions[index + 2]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "tensor_311": {
                "data": {
                    "value": "resz_action_post",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.resz_actions[index + 1]",
                            "Subscript"
                        ],
                        [
                            "self.resz_actions[index + 1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "tensor_312": {
                "data": {
                    "value": "resz_action_post5",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.resz_actions[index + 5]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "tensor_313": {
                "data": {
                    "value": "resz_action_post8",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.resz_actions[index + 8]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "model/e2c.py": {
        "torch": {
            "DataLoader_325": {
                "variable": {
                    "value": "trainloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(image_paths_bi[0:train_num], resz_act[0:train_num], transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "my_collate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_327": {
                "variable": {
                    "value": "testloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(image_paths_bi[train_num:], resz_act[train_num:], transform=ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "my_collate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "device_342": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_345": {
                "variable": {
                    "value": "e2c_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "e2c_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "sum_187": {
                "variable": {
                    "value": "KLD",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "KLD_element",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Qz.mu.pow(2).add_(logvar.exp()).mul_(-1).add_(1).add_(logvar)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mul_187": {
                "variable": {
                    "value": "KLD",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-0.5",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "manual_seed_307": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_355": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cuda' if args.cuda else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "save_418": {
                "obj": {
                    "value": "{'epoch': epoch, 'e2c_model_state_dict': e2c_model.state_dict(), 'e2c_optimizer_state_dict': e2c_optimizer.state_dict(), 'loss_logger': loss_logger}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.conv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_81": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_z * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_82": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_83": {
                "variable": {
                    "value": "self.dconv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(128, 128, 3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_93": {
                "variable": {
                    "value": "self.trans",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(dim_z, 100)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_102": {
                "variable": {
                    "value": "self.fc_B",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim_z * dim_u",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_103": {
                "variable": {
                    "value": "self.fc_o",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "relu_114": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_218": {
                "variable": {
                    "value": "loss_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_next_pred.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "x_next.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_306": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_54": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_data['image_bi_cur']",
                            "Subscript"
                        ],
                        [
                            "x.float().to(device).view(-1, 1, 50, 50)",
                            "Call"
                        ],
                        [
                            "batch_data['image_bi_cur']",
                            "Subscript"
                        ],
                        [
                            "x.float().to(device).view(-1, 1, 50, 50)",
                            "Call"
                        ],
                        [
                            "self.conv_layers(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.shape[0], -1)",
                            "Call"
                        ],
                        [
                            "relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 128, 3, 3)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_111": {
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "chunk_111": {
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_235": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_cur'][:n], x_dec.view(-1, 1, 50, 50).cpu()[:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "no_grad_250": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "binary_cross_entropy_267": {
                "variable": {
                    "value": "loss_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_next_pred.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "x_next.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "save_389": {
                "obj": {
                    "value": "{'epoch': epoch, 'e2c_model_state_dict': e2c_model.state_dict(), 'e2c_optimizer_state_dict': e2c_optimizer.state_dict(), 'loss_logger': loss_logger}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_46": {
                "input": {
                    "value": "self.sigma.pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_60": {
                "input": {
                    "value": "1.0 + sum(v * r) + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_67": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_69": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_70": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_72": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_75": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_76": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_78": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_80": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_83": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_84": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_85": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_86": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_87": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_89": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_90": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_91": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_92": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_94": {
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_95": {
                "num_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_96": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_97": {
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_98": {
                "num_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_100": {
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_z * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "eye_123": {
                "n": {
                    "value": "self.dim_z",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_172": {
                "input": {
                    "value": "1.0 - o + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "isnan_192": {
                "input": {
                    "value": "kl",
                    "type": "variable",
                    "possible_values": [
                        [
                            "KLDGaussian(Qz_next_pred, Qz_next)",
                            "Call"
                        ],
                        [
                            "kl[~torch.isnan(kl)]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_275": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_cur'][:n], x_dec.view(-1, 1, 50, 50).cpu()[:n], batch_data['image_bi_post'][:n], x_next_pred.view(-1, 1, 50, 50).cpu()[:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "eye_43": {
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.v.dim()",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_44": {
                "input": {
                    "value": "self.sigma.pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_44": {
                "input": {
                    "value": "A.t()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_145": {
                "input": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logvar.mul(0.5).exp_()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "model/hidden_dynamics.py": {
        "torch": {
            "device_7": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "norm_32": {
                "input": {
                    "value": "G - U.mm(L.t())",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "norm_38": {
                "input": {
                    "value": "err.view(err.shape[0], -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_7": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "pinverse_19": {
                "input": {
                    "value": "U.t().mm(U) + eps * torch.eye(d).to(device).mm(U.t()).mm(G)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "t_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "matmul_37": {
                "input": {
                    "value": "U.view(U.shape[0], 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "L_T",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "matmul_74": {
                "input": {
                    "value": "latent_image_pre.view(latent_image_pre.shape[0], 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "K_T",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "inverse_26": {
                "input": {
                    "value": "U",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "mm_26": {
                "input": {
                    "value": "G",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "t_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "matmul_62": {
                "input": {
                    "value": "latent_image_pre.view(latent_image_pre.shape[0], 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "K_T",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "matmul_63": {
                "input": {
                    "value": "latent_action.view(latent_action.shape[0], 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "L_T",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "matmul_72": {
                "input": {
                    "value": "latent_image_pre.view(latent_image_pre.shape[0], 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "K_T",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "matmul_59": {
                "input": {
                    "value": "latent_image_pre.view(latent_image_pre.shape[0], 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "K_T",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "matmul_60": {
                "input": {
                    "value": "latent_action.view(latent_action.shape[0], 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "L_T",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "eye_19": {
                "n": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "mm_19": {
                "input": {
                    "value": "G",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "pinverse_23": {
                "input": {
                    "value": "U.mm(U.t()) + eps * torch.eye(n).to(device)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "eye_23": {
                "n": {
                    "value": "n",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "model/nn_large_linear_seprt_no_loop_Kp_Lpa.py": {
        "torch": {
            "DataLoader_384": {
                "variable": {
                    "value": "trainloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(image_paths_bi[0:train_num], resz_act[0:train_num], transform=transform)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "my_collate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "DataLoader_386": {
                "variable": {
                    "value": "testloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(image_paths_bi[train_num:], resz_act[train_num:], transform=ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "my_collate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "device_401": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if args.cuda else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Adam_405": {
                "variable": {
                    "value": "recon_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "recon_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Adam_406": {
                "variable": {
                    "value": "dyn_optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "dyn_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "manual_seed_366": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_416": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cuda' if args.cuda else 'cpu')",
                            "Call"
                        ]
                    ]
                }
            },
            "save_486": {
                "obj": {
                    "value": "{'epoch': epoch, 'recon_model_state_dict': recon_model.state_dict(), 'dyn_model_state_dict': dyn_model.state_dict(), 'recon_optimizer_state_dict': recon_optimizer.state_dict(), 'dyn_optimizer_state_dict': dyn_optimizer.state_dict(), 'loss_logger': loss_logger}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self.conv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_38": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_39": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_state_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_40": {
                "variable": {
                    "value": "self.dconv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(128, 128, 3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_53": {
                "variable": {
                    "value": "self.fc7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_54": {
                "variable": {
                    "value": "self.fc8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_56": {
                "variable": {
                    "value": "self.mul_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[50, 50, 2 * math.pi, 0.14]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_57": {
                "variable": {
                    "value": "self.add_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 0, 0.01]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "relu_66": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_71": {
                "variable": {
                    "value": "h1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc5(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_75": {
                "variable": {
                    "value": "h2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc7(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "self.conv_layers_matrix",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_108": {
                "variable": {
                    "value": "self.fc31",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_state_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_109": {
                "variable": {
                    "value": "self.fc32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_state_dim * latent_state_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_state_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_110": {
                "variable": {
                    "value": "self.fc41",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 2 * 2 + latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_111": {
                "variable": {
                    "value": "self.fc42",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_state_dim * latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_112": {
                "variable": {
                    "value": "self.fc9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_113": {
                "variable": {
                    "value": "self.fc10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_121": {
                "variable": {
                    "value": "xa",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, a)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_127": {
                "input": {
                    "value": "self.fc9(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_137": {
                "input": {
                    "value": "recon_x.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "x.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "mse_loss_145": {
                "input": {
                    "value": "recon_x",
                    "type": "variable",
                    "possible_values": []
                },
                "target": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_layers(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.shape[0], -1)",
                            "Call"
                        ],
                        [
                            "relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 128, 3, 3)",
                            "Call"
                        ],
                        [
                            "self.conv_layers_matrix(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.shape[0], -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "binary_cross_entropy_148": {
                "input": {
                    "value": "recon_img.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "img.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "mse_loss_151": {
                "input": {
                    "value": "recon_act.view(-1, 4)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "act.view(-1, 4)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "binary_cross_entropy_160": {
                "input": {
                    "value": "recon_img_post.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "img_post.view(-1, 2500)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduction": {
                    "value": "sum",
                    "type": "str",
                    "possible_values": []
                }
            },
            "from_numpy_170": {
                "variable": {
                    "value": "embed_state_next",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "get_next_state(embed_state, action, L)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_365": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_63": {
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_72": {
                "input": {
                    "value": "self.fc6(h1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_154": {
                "input": {
                    "value": "latent_img_pre.view(latent_img_pre.shape[0], 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "K_T",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "no_grad_297": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_452": {
                "obj": {
                    "value": "{'epoch': epoch, 'recon_model_state_dict': recon_model.state_dict(), 'dyn_model_state_dict': dyn_model.state_dict(), 'recon_optimizer_state_dict': recon_optimizer.state_dict(), 'dyn_optimizer_state_dict': dyn_optimizer.state_dict(), 'loss_logger': loss_logger}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ],
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_24": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_26": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_29": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_32": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_35": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_37": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_40": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_41": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_42": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_44": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_46": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_48": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mul_76": {
                "input": {
                    "value": "sigmoid(self.fc8(h2))",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "self.mul_tensor.cuda()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_88": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_89": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_90": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_91": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_92": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_93": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_94": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_95": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_96": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_97": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_98": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_99": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_100": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_101": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_102": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_103": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_104": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_105": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_106": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_107": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_123": {
                "input": {
                    "value": "self.fc31(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_124": {
                "input": {
                    "value": "self.fc41(xa)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_216": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_cur'][:n], recon_img_cur.view(-1, 1, 50, 50).cpu()[:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_273": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_cur'][:n], recon_img_cur.view(-1, 1, 50, 50).cpu()[:n], batch_data['image_bi_post'][:n], pred_img_post.view(-1, 1, 50, 50).cpu()[:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_327": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_cur'][:n], recon_img_cur.view(-1, 1, 50, 50).cpu()[:n], batch_data['image_bi_post'][:n], pred_img_post.view(-1, 1, 50, 50).cpu()[:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "sigmoid_76": {
                "input": {
                    "value": "self.fc8(h2)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "model/predict_e2c.py": {
        "torch": {
            "DataLoader_360": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDatasetMultiPred10(image_paths_bi, actions, transform=ToTensorMultiPred10())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "my_collate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "device_367": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "load_373": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "torch.device('cpu')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_182": {
                "variable": {
                    "value": "KLD",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "KLD_element",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Qz.mu.pow(2).add_(logvar.exp()).mul_(-1).add_(1).add_(logvar)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mul_182": {
                "variable": {
                    "value": "KLD",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-0.5",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Sequential_62": {
                "variable": {
                    "value": "self.conv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_76": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_z * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_77": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_78": {
                "variable": {
                    "value": "self.dconv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(128, 128, 3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "self.trans",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(dim_z, 100)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_97": {
                "variable": {
                    "value": "self.fc_B",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim_z * dim_u",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_98": {
                "variable": {
                    "value": "self.fc_o",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "relu_109": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_49": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_layers(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.shape[0], -1)",
                            "Call"
                        ],
                        [
                            "relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 128, 3, 3)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_106": {
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "chunk_106": {
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_192": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_367": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_373": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "diag_41": {
                "input": {
                    "value": "self.sigma.pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_55": {
                "input": {
                    "value": "1.0 + sum(v * r) + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_62": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_64": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_67": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_68": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_69": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_70": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_73": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_74": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_75": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_78": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_80": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_81": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_82": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_83": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_84": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_86": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_87": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_89": {
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_90": {
                "num_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_91": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_92": {
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_93": {
                "num_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_94": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_95": {
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_z * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "eye_118": {
                "n": {
                    "value": "self.dim_z",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_167": {
                "input": {
                    "value": "1.0 - o + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "isnan_187": {
                "input": {
                    "value": "kl",
                    "type": "variable",
                    "possible_values": [
                        [
                            "KLDGaussian(Qz_next_pred, Qz_next)",
                            "Call"
                        ],
                        [
                            "kl[~torch.isnan(kl)]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_281": {
                "variable": {
                    "value": "comparison_GT",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_pre'][:n], batch_data['image_bi_cur'][:n], batch_data['image_bi_post'][:n], batch_data['image_bi_post2'][:n], batch_data['image_bi_post3'][:n], batch_data['image_bi_post4'][:n], batch_data['image_bi_post5'][:n], batch_data['image_bi_post6'][:n], batch_data['image_bi_post7'][:n], batch_data['image_bi_post8'][:n], batch_data['image_bi_post9'][:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_294": {
                "variable": {
                    "value": "comparison_Pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_pre'][:n], recon_img_cur.view(-1, 1, 50, 50).cpu()[:n], recon_img_post.view(-1, 1, 50, 50).cpu()[:n], recon_img_post2.view(-1, 1, 50, 50).cpu()[:n], recon_img_post3.view(-1, 1, 50, 50).cpu()[:n], recon_img_post4.view(-1, 1, 50, 50).cpu()[:n], recon_img_post5.view(-1, 1, 50, 50).cpu()[:n], recon_img_post6.view(-1, 1, 50, 50).cpu()[:n], recon_img_post7.view(-1, 1, 50, 50).cpu()[:n], recon_img_post8.view(-1, 1, 50, 50).cpu()[:n], recon_img_post9.view(-1, 1, 50, 50).cpu()[:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "eye_38": {
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.v.dim()",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_39": {
                "input": {
                    "value": "self.sigma.pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_39": {
                "input": {
                    "value": "A.t()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_140": {
                "input": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logvar.mul(0.5).exp_()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "model/predict_e2c_our_method_compare_gpu.py": {
        "torch": {
            "DataLoader_526": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDatasetMultiPred10(image_paths_bi, actions, transform=ToTensorMultiPred10())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "my_collate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "device_535": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "load_542": {
                "variable": {
                    "value": "checkpoint_e2c",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH_e2c",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name_e2c)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "torch.device('cpu')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_544": {
                "variable": {
                    "value": "checkpoint_our",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH_our",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name_our)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "torch.device('cpu')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_313": {
                "variable": {
                    "value": "KLD",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "KLD_element",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Qz.mu.pow(2).add_(logvar.exp()).mul_(-1).add_(1).add_(logvar)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mul_313": {
                "variable": {
                    "value": "KLD",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-0.5",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Sequential_19": {
                "variable": {
                    "value": "self.conv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_33": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_34": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_state_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_35": {
                "variable": {
                    "value": "self.dconv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(128, 128, 3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_46": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_47": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_48": {
                "variable": {
                    "value": "self.fc7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_49": {
                "variable": {
                    "value": "self.fc8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_51": {
                "variable": {
                    "value": "self.mul_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[50, 50, 2 * math.pi, 0.14]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_52": {
                "variable": {
                    "value": "self.add_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 0, 0.01]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "relu_61": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_66": {
                "variable": {
                    "value": "h1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc5(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_70": {
                "variable": {
                    "value": "h2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc7(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_87": {
                "variable": {
                    "value": "self.conv_layers_matrix",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_107": {
                "variable": {
                    "value": "self.fc31",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_state_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_108": {
                "variable": {
                    "value": "self.fc32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_state_dim * latent_state_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_state_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_109": {
                "variable": {
                    "value": "self.fc41",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 2 * 2 + latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_110": {
                "variable": {
                    "value": "self.fc42",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_state_dim * latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_111": {
                "variable": {
                    "value": "self.fc9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_112": {
                "variable": {
                    "value": "self.fc10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_120": {
                "variable": {
                    "value": "xa",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, a)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_126": {
                "input": {
                    "value": "self.fc9(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_177": {
                "variable": {
                    "value": "self.conv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_191": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_z * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_192": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_193": {
                "variable": {
                    "value": "self.dconv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(128, 128, 3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_203": {
                "variable": {
                    "value": "self.trans",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(dim_z, 100)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_212": {
                "variable": {
                    "value": "self.fc_B",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim_z * dim_u",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_213": {
                "variable": {
                    "value": "self.fc_o",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_217": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_u * 20",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_218": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_u * 20",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_219": {
                "variable": {
                    "value": "self.fc7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_u",
                    "type": "variable",
                    "possible_values": [
                        [
                            "4",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim_u * 20",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_220": {
                "variable": {
                    "value": "self.fc8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim_u * 20",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_221": {
                "variable": {
                    "value": "self.mul_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[50, 50, 2 * math.pi, 0.14]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_222": {
                "variable": {
                    "value": "self.add_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 0, 0.01]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "relu_230": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_235": {
                "variable": {
                    "value": "h1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc5(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_239": {
                "variable": {
                    "value": "h2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc7(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_58": {
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_67": {
                "input": {
                    "value": "self.fc6(h1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_71": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_164": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_layers(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.shape[0], -1)",
                            "Call"
                        ],
                        [
                            "relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 128, 3, 3)",
                            "Call"
                        ],
                        [
                            "self.conv_layers_matrix(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.shape[0], -1)",
                            "Call"
                        ],
                        [
                            "self.conv_layers(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.shape[0], -1)",
                            "Call"
                        ],
                        [
                            "relu(self.fc2(x))",
                            "Call"
                        ],
                        [
                            "x.view(-1, 128, 3, 3)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_227": {
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "chunk_227": {
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_236": {
                "input": {
                    "value": "self.fc6(h1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_325": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_535": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_542": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_544": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_21": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_24": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_27": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_31": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_32": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_35": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_37": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_39": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_41": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_43": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_87": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_89": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_90": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_91": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_92": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_93": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_94": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_95": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_96": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_98": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_99": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_101": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_102": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_104": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_105": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_106": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_122": {
                "input": {
                    "value": "self.fc31(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_123": {
                "input": {
                    "value": "self.fc41(xa)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_156": {
                "input": {
                    "value": "self.sigma.pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_170": {
                "input": {
                    "value": "1.0 + sum(v * r) + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_177": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_178": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_179": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_180": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_181": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_182": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_183": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_184": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_185": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_186": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_187": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_188": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_189": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_190": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_193": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_194": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_195": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_196": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_197": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_198": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_199": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_200": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_201": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_202": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_204": {
                "in_features": {
                    "value": "dim_z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_205": {
                "num_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_206": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_207": {
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm1d_208": {
                "num_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_209": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_210": {
                "in_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim_z * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mul_240": {
                "input": {
                    "value": "sigmoid(self.fc8(h2))",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "self.mul_tensor.cuda()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "eye_247": {
                "n": {
                    "value": "self.dim_z",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_298": {
                "input": {
                    "value": "1.0 - o + eps",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "isnan_318": {
                "input": {
                    "value": "kl",
                    "type": "variable",
                    "possible_values": [
                        [
                            "KLDGaussian(Qz_next_pred, Qz_next)",
                            "Call"
                        ],
                        [
                            "kl[~torch.isnan(kl)]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_414": {
                "variable": {
                    "value": "comparison_GT",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_pre'][:n], batch_data['image_bi_cur'][:n], batch_data['image_bi_post'][:n], batch_data['image_bi_post2'][:n], batch_data['image_bi_post3'][:n], batch_data['image_bi_post4'][:n], batch_data['image_bi_post5'][:n], batch_data['image_bi_post6'][:n], batch_data['image_bi_post7'][:n], batch_data['image_bi_post8'][:n], batch_data['image_bi_post9'][:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_427": {
                "variable": {
                    "value": "comparison_Pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_pre'][:n], recon_img_cur.view(-1, 1, 50, 50).cpu()[:n], recon_img_post.view(-1, 1, 50, 50).cpu()[:n], recon_img_post2.view(-1, 1, 50, 50).cpu()[:n], recon_img_post3.view(-1, 1, 50, 50).cpu()[:n], recon_img_post4.view(-1, 1, 50, 50).cpu()[:n], recon_img_post5.view(-1, 1, 50, 50).cpu()[:n], recon_img_post6.view(-1, 1, 50, 50).cpu()[:n], recon_img_post7.view(-1, 1, 50, 50).cpu()[:n], recon_img_post8.view(-1, 1, 50, 50).cpu()[:n], recon_img_post9.view(-1, 1, 50, 50).cpu()[:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_493": {
                "variable": {
                    "value": "comparison_GT",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_pre'][:n], batch_data['image_bi_cur'][:n], batch_data['image_bi_post'][:n], batch_data['image_bi_post2'][:n], batch_data['image_bi_post3'][:n], batch_data['image_bi_post4'][:n], batch_data['image_bi_post5'][:n], batch_data['image_bi_post6'][:n], batch_data['image_bi_post7'][:n], batch_data['image_bi_post8'][:n], batch_data['image_bi_post9'][:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_506": {
                "variable": {
                    "value": "comparison_Pred",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_pre'][:n], recon_img_cur.view(-1, 1, 50, 50).cpu()[:n], recon_img_post.view(-1, 1, 50, 50).cpu()[:n], recon_img_post2.view(-1, 1, 50, 50).cpu()[:n], recon_img_post3.view(-1, 1, 50, 50).cpu()[:n], recon_img_post4.view(-1, 1, 50, 50).cpu()[:n], recon_img_post5.view(-1, 1, 50, 50).cpu()[:n], recon_img_post6.view(-1, 1, 50, 50).cpu()[:n], recon_img_post7.view(-1, 1, 50, 50).cpu()[:n], recon_img_post8.view(-1, 1, 50, 50).cpu()[:n], recon_img_post9.view(-1, 1, 50, 50).cpu()[:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "mul_72": {
                "input": {
                    "value": "sigmoid(self.fc8(h2))",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "self.mul_tensor.cuda()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mul_74": {
                "input": {
                    "value": "sigmoid(self.fc8(h2))",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "self.mul_tensor",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_153": {
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.v.dim()",
                            "Call"
                        ]
                    ]
                }
            },
            "diag_154": {
                "input": {
                    "value": "self.sigma.pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mm_154": {
                "input": {
                    "value": "A.t()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_240": {
                "input": {
                    "value": "self.fc8(h2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_267": {
                "input": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logvar.mul(0.5).exp_()",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_72": {
                "input": {
                    "value": "self.fc8(h2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_74": {
                "input": {
                    "value": "self.fc8(h2)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "model/predict_large_linear_seprt_no_loop_Kp_Lpa.py": {
        "torch": {
            "DataLoader_173": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MyDataset(image_paths_bi, actions, transform=ToTensor())",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "my_collate",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "device_180": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "load_186": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'./result/{}/checkpoint'.format(folder_name)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "torch.device('cpu')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_17": {
                "variable": {
                    "value": "self.conv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_31": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_32": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_state_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Sequential_33": {
                "variable": {
                    "value": "self.dconv_layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(128, 128, 3, stride=2, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_45": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_46": {
                "variable": {
                    "value": "self.fc7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_47": {
                "variable": {
                    "value": "self.fc8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_49": {
                "variable": {
                    "value": "self.mul_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[50, 50, 2 * math.pi, 0.14]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_50": {
                "variable": {
                    "value": "self.add_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 0, 0.01]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "relu_59": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_64": {
                "variable": {
                    "value": "h1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc5(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_68": {
                "variable": {
                    "value": "h2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc7(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_81": {
                "variable": {
                    "value": "self.conv_layers_matrix",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(1, 32, 3, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_101": {
                "variable": {
                    "value": "self.fc31",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 2 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_state_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_102": {
                "variable": {
                    "value": "self.fc32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_state_dim * latent_state_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_state_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_103": {
                "variable": {
                    "value": "self.fc41",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * 2 * 2 + latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_104": {
                "variable": {
                    "value": "self.fc42",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_state_dim * latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_state_dim * latent_act_dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_105": {
                "variable": {
                    "value": "self.fc9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_106": {
                "variable": {
                    "value": "self.fc10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "latent_act_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "80",
                            "Method Argument"
                        ],
                        [
                            "80",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_114": {
                "variable": {
                    "value": "xa",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, a)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_120": {
                "input": {
                    "value": "self.fc9(u)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_56": {
                "input": {
                    "value": "self.fc1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_65": {
                "input": {
                    "value": "self.fc6(h1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_128": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_180": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_186": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_19": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_22": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_25": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_26": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_30": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_33": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_35": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_37": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_39": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_41": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_42": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mul_69": {
                "input": {
                    "value": "sigmoid(self.fc8(h2))",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "self.mul_tensor.cuda()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_81": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_83": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_84": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_85": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_86": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_87": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_88": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_89": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_90": {
                "in_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_91": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_92": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_93": {
                "in_channels": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_94": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_95": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_96": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_100": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_116": {
                "input": {
                    "value": "self.fc31(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_117": {
                "input": {
                    "value": "self.fc41(xa)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_158": {
                "variable": {
                    "value": "comparison",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[batch_data['image_bi_pre'][:n], batch_data['image_bi_cur'][:n], recon_img_cur.view(-1, 1, 50, 50).cpu()[:n], batch_data['image_bi_post'][:n], recon_img_post.view(-1, 1, 50, 50).cpu()[:n]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "sigmoid_69": {
                "input": {
                    "value": "self.fc8(h2)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}