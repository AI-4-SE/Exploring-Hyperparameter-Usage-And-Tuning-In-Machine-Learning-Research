{
    "learning_to_expire_pytorch/learning_to_expire_pytorch.py": {
        "torch": {
            "zeros_34": {
                "variable": {
                    "value": "zero_pad",
                    "possible_values": []
                },
                "*size": {
                    "value": "(b, h, i, 1)",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dtype",
                    "possible_values": []
                }
            },
            "cat_35": {
                "variable": {
                    "value": "concatted",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[zero_pad, t]",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "possible_values": []
                }
            },
            "cat_23": {
                "tensors": {
                    "value": "tensors",
                    "possible_values": [
                        [
                            "list(filter(exists, tensors))",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "arange_47": {
                "variable": {
                    "value": "t",
                    "possible_values": []
                },
                "start": {
                    "value": "n - 1",
                    "possible_values": []
                },
                "end": {
                    "value": "-1",
                    "possible_values": []
                },
                "step": {
                    "value": "-1",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "possible_values": []
                }
            },
            "einsum_48": {
                "variable": {
                    "value": "sinusoid_inp",
                    "possible_values": []
                },
                "equation": {
                    "value": "i , j -> i j",
                    "possible_values": []
                },
                "*operands": {
                    "value": "t",
                    "possible_values": [
                        [
                            "torch.arange(n - 1, -1, -1, device=device).type_as(self.inv_freq)",
                            "Call"
                        ],
                        [
                            "rearrange(time, 'b j -> b () () j')",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_49": {
                "variable": {
                    "value": "emb",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sinusoid_inp.sin(), sinusoid_inp.cos())",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "possible_values": []
                }
            },
            "Linear_59": {
                "variable": {
                    "value": "self.to_expiration",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "pad_66": {
                "variable": {
                    "value": "r",
                    "possible_values": []
                },
                "input": {
                    "value": "exps - t",
                    "possible_values": []
                },
                "pad": {
                    "value": "(0, seq_len)",
                    "possible_values": []
                },
                "value": {
                    "value": "1.0",
                    "possible_values": []
                }
            },
            "clamp_67": {
                "variable": {
                    "value": "mask",
                    "possible_values": []
                },
                "input": {
                    "value": "r / self.ramp_length + 1",
                    "possible_values": []
                },
                "min": {
                    "value": "0.0",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0",
                    "possible_values": []
                }
            },
            "LayerNorm_75": {
                "variable": {
                    "value": "self.norm",
                    "possible_values": []
                },
                "normalized_shape": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_85": {
                "variable": {
                    "value": "self.net",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(dim, dim * mult)",
                    "possible_values": []
                }
            },
            "Linear_101": {
                "variable": {
                    "value": "self.to_pos",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim_head",
                    "possible_values": [
                        [
                            "dim // heads",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Linear_102": {
                "variable": {
                    "value": "self.to_q",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_103": {
                "variable": {
                    "value": "self.to_kv",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim * 2",
                    "possible_values": []
                }
            },
            "Linear_104": {
                "variable": {
                    "value": "self.to_out",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "pad_123": {
                "variable": {
                    "value": "pos_dots",
                    "possible_values": []
                },
                "input": {
                    "value": "pos_dots",
                    "possible_values": [
                        [
                            "einsum('b h i d, j d -> b h i j', q, pos) * scale",
                            "BinOp"
                        ],
                        [
                            "rel_shift(pos_dots)",
                            "Call"
                        ],
                        [
                            "F.pad(pos_dots, (mem_len, 0), value=0)",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(mem_len, 0)",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "ones_127": {
                "variable": {
                    "value": "mask",
                    "possible_values": []
                },
                "*size": {
                    "value": "dots.shape[-2:]",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "possible_values": []
                }
            },
            "einsum_138": {
                "variable": {
                    "value": "out",
                    "possible_values": []
                },
                "equation": {
                    "value": "b h i j, b h j d -> b h i d",
                    "possible_values": []
                },
                "*operands": {
                    "value": "attn",
                    "possible_values": [
                        [
                            "dots.softmax(dim=-1)",
                            "Call"
                        ],
                        [
                            "attn * expire_mask",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Embedding_155": {
                "variable": {
                    "value": "self.token_emb",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "num_tokens",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ModuleList_165": {
                "variable": {
                    "value": "self.layers",
                    "possible_values": []
                },
                "modules": {
                    "value": "[]",
                    "possible_values": []
                }
            },
            "Linear_173": {
                "variable": {
                    "value": "self.to_logits",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "num_tokens",
                    "possible_values": []
                }
            },
            "tensor_184": {
                "variable": {
                    "value": "aux_loss",
                    "possible_values": []
                },
                "data": {
                    "value": "0.0",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "possible_values": []
                }
            },
            "arange_240": {
                "variable": {
                    "value": "new_times",
                    "possible_values": []
                },
                "start": {
                    "value": "n - 1",
                    "possible_values": []
                },
                "end": {
                    "value": "-1",
                    "possible_values": []
                },
                "step": {
                    "value": "-1",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "possible_values": []
                }
            },
            "Linear_86": {
                "in_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "dim * mult",
                    "possible_values": []
                }
            },
            "GELU_87": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "Linear_88": {
                "in_features": {
                    "value": "dim * mult",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "einsum_117": {
                "equation": {
                    "value": "b h i d, b h j d -> b h i j",
                    "possible_values": []
                },
                "*operands": {
                    "value": "q",
                    "possible_values": [
                        [
                            "self.to_q(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "einsum_121": {
                "equation": {
                    "value": "b h i d, j d -> b h i j",
                    "possible_values": []
                },
                "*operands": {
                    "value": "q",
                    "possible_values": [
                        [
                            "self.to_q(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "randint_193": {
                "variable": {
                    "value": "forget_time_thres",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "possible_values": []
                },
                "high": {
                    "value": "self.max_mem_len",
                    "possible_values": []
                },
                "size": {
                    "value": "(b, 1)",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "possible_values": []
                }
            },
            "pad_196": {
                "variable": {
                    "value": "forget_dropout_mask",
                    "possible_values": []
                },
                "input": {
                    "value": "forget_dropout_mask",
                    "possible_values": [
                        [
                            "(time < forget_time_thres).float()",
                            "Call"
                        ],
                        [
                            "rearrange(forget_dropout_mask, 'b n -> b () () n')",
                            "Call"
                        ],
                        [
                            "F.pad(forget_dropout_mask, (0, n), value=1.0)",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(0, n)",
                    "possible_values": []
                },
                "value": {
                    "value": "1.0",
                    "possible_values": []
                }
            },
            "ModuleList_167": {
                "modules": {
                    "value": "[ExpireSpan(dim, self.max_mem_len, ramp_length), PreNorm(dim, CausalAttention(dim, heads=heads)), PreNorm(dim, FeedForward(dim))]",
                    "possible_values": []
                }
            },
            "zeros_like_224": {
                "variable": {
                    "value": "even_expired_exps_mask",
                    "possible_values": []
                },
                "input": {
                    "value": "expired_exps_mask",
                    "possible_values": [
                        [
                            "(expire_mask <= 0)[..., :-n]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "possible_values": []
                }
            },
            "scatter_224": {
                "variable": {
                    "value": "even_expired_exps_mask",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "possible_values": []
                },
                "dim": {
                    "value": "indices",
                    "possible_values": []
                },
                "index": {
                    "value": "1.0",
                    "possible_values": []
                }
            },
            "arange_42": {
                "start": {
                    "value": "0",
                    "possible_values": []
                },
                "end": {
                    "value": "dim",
                    "possible_values": [
                        [
                            "-1",
                            "MethodArgument"
                        ]
                    ]
                },
                "step": {
                    "value": "2",
                    "possible_values": []
                }
            }
        }
    }
}