{
    "utils.py": {
        "sklearn": {
            "train_test_split_58": {
                "variable": {
                    "value": "(train, valid)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "data",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "utils_pickle_reference.py": {
        "sklearn": {
            "train_test_split_12": {
                "variable": {
                    "value": "(train_ref, valid_ref)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "token_stream",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "discriminator.py": {
        "tensorflow": {
            "get_variable_36": {
                "variable": {
                    "value": "matrix",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Matrix",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[output_size, input_size]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "input_.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_37": {
                "variable": {
                    "value": "bias_term",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Bias",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[output_size]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "input_.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_71": {
                "variable": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_x",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_72": {
                "variable": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_y",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_73": {
                "variable": {
                    "value": "self.dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "dropout_keep_prob",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_76": {
                "variable": {
                    "value": "l2_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_143": {
                "variable": {
                    "value": "d_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['discriminator_lr']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "variable_scope_35": {
                "name_or_scope": {
                    "value": "scope or 'SimpleLinear'",
                    "type": "BoolOp",
                    "possible_values": []
                }
            },
            "matmul_39": {
                "a": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "output",
                            "Name"
                        ]
                    ]
                },
                "b": {
                    "value": "tf.transpose(matrix)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "variable_scope_49": {
                "name_or_scope": {
                    "value": "scope",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "'Highway'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sigmoid_53": {
                "variable": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "linear(input_, size, scope='highway_gate_%d' % idx) + bias",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "concat_114": {
                "variable": {
                    "value": "self.h_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "pooled_outputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_115": {
                "variable": {
                    "value": "self.h_pool_flat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.h_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, num_filters_total]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_39": {
                "a": {
                    "value": "matrix",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.get_variable('Matrix', [output_size, input_size], dtype=input_.dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "variable_scope_78": {
                "name_or_scope": {
                    "value": "discriminator",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_81": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_84": {
                "variable": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_85": {
                "variable": {
                    "value": "self.embedded_chars_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "dropout_123": {
                "variable": {
                    "value": "self.h_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.h_highway",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "self.dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_127": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.truncated_normal([num_filters_total, num_classes], stddev=0.1)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_128": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.constant(0.1, shape=[num_classes])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "xw_plus_b_131": {
                "variable": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.h_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weights": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name='W')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal([num_filters_total, num_classes], stddev=0.1), name='W')",
                            "Call"
                        ]
                    ]
                },
                "biases": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_filter]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_classes]), name='b')",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "scores",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_132": {
                "variable": {
                    "value": "self.ypred_for_auc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_133": {
                "variable": {
                    "value": "self.predictions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "predictions",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_cross_entropy_with_logits_137": {
                "variable": {
                    "value": "losses",
                    "type": "Variable",
                    "possible_values": []
                },
                "logits": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "labels": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_80": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_80": {
                "name": {
                    "value": "embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_93": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.truncated_normal(filter_shape, stddev=0.1)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_94": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.constant(0.1, shape=[num_filter])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "conv2d_95": {
                "variable": {
                    "value": "conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_chars_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name='W')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal([num_filters_total, num_classes], stddev=0.1), name='W')",
                            "Call"
                        ]
                    ]
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "VALID",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "conv",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_102": {
                "variable": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(conv, b)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool_104": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv, b), name='relu')",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[1, sequence_length - filter_size + 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "VALID",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "pool",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_118": {
                "name": {
                    "value": "highway",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_122": {
                "name": {
                    "value": "dropout",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_126": {
                "name": {
                    "value": "output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "l2_loss_129": {
                "t": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name='W')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal([num_filters_total, num_classes], stddev=0.1), name='W')",
                            "Call"
                        ]
                    ]
                }
            },
            "l2_loss_130": {
                "t": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_filter]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_classes]), name='b')",
                            "Call"
                        ]
                    ]
                }
            },
            "name_scope_136": {
                "name": {
                    "value": "loss",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "trainable_variables_140": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "name_scope_90": {
                "name": {
                    "value": "'conv-maxpool-%s' % filter_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "truncated_normal_127": {
                "shape": {
                    "value": "[num_filters_total, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "stddev": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_128": {
                "value": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_classes]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_mean_138": {
                "input_tensor": {
                    "value": "losses",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.softmax_cross_entropy_with_logits(logits=self.scores, labels=self.input_y)",
                            "Call"
                        ]
                    ]
                }
            },
            "truncated_normal_93": {
                "shape": {
                    "value": "filter_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[filter_size, embedding_size, 1, num_filter]",
                            "List"
                        ]
                    ]
                },
                "stddev": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_94": {
                "value": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_filter]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "bias_add_102": {
                "value": {
                    "value": "conv",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(self.embedded_chars_expanded, W, strides=[1, 1, 1, 1], padding='VALID', name='conv')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_filter]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.1, shape=[num_classes]), name='b')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "discriminator_ls.py": {
        "tensorflow": {
            "get_variable_36": {
                "variable": {
                    "value": "matrix",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Matrix",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[output_size, input_size]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "input_.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_37": {
                "variable": {
                    "value": "bias_term",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Bias",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[output_size]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "input_.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_69": {
                "variable": {
                    "value": "self.input_x_real",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_x_real",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_70": {
                "variable": {
                    "value": "self.input_y_real",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_y_real",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_71": {
                "variable": {
                    "value": "self.input_x_fake",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_x_fake",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_72": {
                "variable": {
                    "value": "self.input_y_fake",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_y_fake",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_73": {
                "variable": {
                    "value": "self.dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "dropout_keep_prob",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_76": {
                "variable": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.input_x_real, self.input_x_fake]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_77": {
                "variable": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.input_y_real, self.input_y_fake]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_80": {
                "variable": {
                    "value": "l2_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_153": {
                "variable": {
                    "value": "d_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['discriminator_lr']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "variable_scope_35": {
                "name_or_scope": {
                    "value": "scope or 'SimpleLinear'",
                    "type": "BoolOp",
                    "possible_values": []
                }
            },
            "matmul_39": {
                "a": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "output",
                            "Name"
                        ]
                    ]
                },
                "b": {
                    "value": "tf.transpose(matrix)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "variable_scope_48": {
                "name_or_scope": {
                    "value": "scope",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "'Highway'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sigmoid_52": {
                "variable": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "linear(input_, size, scope='highway_gate_%d' % idx) + bias",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "concat_119": {
                "variable": {
                    "value": "self.h_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "pooled_outputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_120": {
                "variable": {
                    "value": "self.h_pool_flat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.h_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, num_filters_total]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_39": {
                "a": {
                    "value": "matrix",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.get_variable('Matrix', [output_size, input_size], dtype=input_.dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "variable_scope_82": {
                "name_or_scope": {
                    "value": "discriminator",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_86": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_89": {
                "variable": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_90": {
                "variable": {
                    "value": "self.embedded_chars_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "dropout_128": {
                "variable": {
                    "value": "self.h_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.h_highway",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "self.dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_132": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.truncated_normal([num_filters_total, num_classes], stddev=0.1)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_133": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.constant(0.0, shape=[num_classes])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "xw_plus_b_136": {
                "variable": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.h_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weights": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name='W')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal([num_filters_total, num_classes], stddev=0.1), name='W')",
                            "Call"
                        ]
                    ]
                },
                "biases": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_filter]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_classes]), name='b')",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "scores",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sigmoid_137": {
                "variable": {
                    "value": "self.ypred_for_auc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_85": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_85": {
                "name": {
                    "value": "embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_98": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.truncated_normal(filter_shape, stddev=0.1)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_99": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.constant(0.0, shape=[num_filter])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "conv2d_100": {
                "variable": {
                    "value": "conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_chars_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name='W')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal([num_filters_total, num_classes], stddev=0.1), name='W')",
                            "Call"
                        ]
                    ]
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "VALID",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "conv",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_107": {
                "variable": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(conv, b)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool_109": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv, b), name='relu')",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[1, sequence_length - filter_size + 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "VALID",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "pool",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_123": {
                "name": {
                    "value": "highway",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_127": {
                "name": {
                    "value": "dropout",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_131": {
                "name": {
                    "value": "output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "l2_loss_134": {
                "t": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name='W')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal([num_filters_total, num_classes], stddev=0.1), name='W')",
                            "Call"
                        ]
                    ]
                }
            },
            "l2_loss_135": {
                "t": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_filter]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_classes]), name='b')",
                            "Call"
                        ]
                    ]
                }
            },
            "trainable_variables_152": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "name_scope_95": {
                "name": {
                    "value": "'conv-maxpool-%s' % filter_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "truncated_normal_132": {
                "shape": {
                    "value": "[num_filters_total, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "stddev": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_133": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_classes]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "mean_squared_error_139": {
                "y_true": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "truncated_normal_98": {
                "shape": {
                    "value": "filter_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[filter_size, embedding_size, 1, num_filter]",
                            "List"
                        ]
                    ]
                },
                "stddev": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_99": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_filter]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "bias_add_107": {
                "value": {
                    "value": "conv",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(self.embedded_chars_expanded, W, strides=[1, 1, 1, 1], padding='VALID', name='conv')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_filter]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_classes]), name='b')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "discriminator_w.py": {
        "tensorflow": {
            "get_variable_36": {
                "variable": {
                    "value": "matrix",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Matrix",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[output_size, input_size]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "input_.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_37": {
                "variable": {
                    "value": "bias_term",
                    "type": "Variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Bias",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[output_size]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "input_.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_69": {
                "variable": {
                    "value": "self.input_x_real",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_x_real",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_70": {
                "variable": {
                    "value": "self.input_y_real",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_y_real",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_71": {
                "variable": {
                    "value": "self.input_x_fake",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, sequence_length]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_x_fake",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_72": {
                "variable": {
                    "value": "self.input_y_fake",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_y_fake",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "placeholder_73": {
                "variable": {
                    "value": "self.dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "dropout_keep_prob",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_76": {
                "variable": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.input_x_real, self.input_x_fake]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "concat_77": {
                "variable": {
                    "value": "self.input_y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.input_y_real, self.input_y_fake]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_80": {
                "variable": {
                    "value": "l2_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdamOptimizer_154": {
                "variable": {
                    "value": "d_optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "config['discriminator_lr']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "variable_scope_35": {
                "name_or_scope": {
                    "value": "scope or 'SimpleLinear'",
                    "type": "BoolOp",
                    "possible_values": []
                }
            },
            "matmul_39": {
                "a": {
                    "value": "input_",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "output",
                            "Name"
                        ]
                    ]
                },
                "b": {
                    "value": "tf.transpose(matrix)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "variable_scope_48": {
                "name_or_scope": {
                    "value": "scope",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "'Highway'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "sigmoid_52": {
                "variable": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "linear(input_, size, scope='highway_gate_%d' % idx) + bias",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "concat_119": {
                "variable": {
                    "value": "self.h_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "pooled_outputs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "axis": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reshape_120": {
                "variable": {
                    "value": "self.h_pool_flat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensor": {
                    "value": "self.h_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[-1, num_filters_total]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_39": {
                "a": {
                    "value": "matrix",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.get_variable('Matrix', [output_size, input_size], dtype=input_.dtype)",
                            "Call"
                        ]
                    ]
                }
            },
            "variable_scope_82": {
                "name_or_scope": {
                    "value": "discriminator",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_86": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform([vocab_size, embedding_size], -1.0, 1.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "embedding_lookup_89": {
                "variable": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.input_x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "expand_dims_90": {
                "variable": {
                    "value": "self.embedded_chars_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_chars",
                    "type": "Attribute",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "dropout_128": {
                "variable": {
                    "value": "self.h_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.h_highway",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "self.dropout_keep_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_132": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.truncated_normal([num_filters_total, num_classes], stddev=0.1)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_133": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.constant(0.0, shape=[num_classes])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "xw_plus_b_136": {
                "variable": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.h_drop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weights": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name='W')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal([num_filters_total, num_classes], stddev=0.1), name='W')",
                            "Call"
                        ]
                    ]
                },
                "biases": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_filter]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_classes]), name='b')",
                            "Call"
                        ]
                    ]
                },
                "name": {
                    "value": "scores",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sigmoid_137": {
                "variable": {
                    "value": "self.ypred_for_auc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "x": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "split_140": {
                "variable": {
                    "value": "(self.scores_real, self.scores_fake)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "self.scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_or_size_splits": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "device_85": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_85": {
                "name": {
                    "value": "embedding",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_98": {
                "variable": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.truncated_normal(filter_shape, stddev=0.1)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "W",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Variable_99": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.constant(0.0, shape=[num_filter])",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "b",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "conv2d_100": {
                "variable": {
                    "value": "conv",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.embedded_chars_expanded",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name='W')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal([num_filters_total, num_classes], stddev=0.1), name='W')",
                            "Call"
                        ]
                    ]
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "VALID",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "conv",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "relu_107": {
                "variable": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.nn.bias_add(conv, b)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "relu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool_109": {
                "variable": {
                    "value": "pooled",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.relu(tf.nn.bias_add(conv, b), name='relu')",
                            "Call"
                        ]
                    ]
                },
                "ksize": {
                    "value": "[1, sequence_length - filter_size + 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, 1, 1, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "VALID",
                    "type": "Constant",
                    "possible_values": []
                },
                "name": {
                    "value": "pool",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_123": {
                "name": {
                    "value": "highway",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_127": {
                "name": {
                    "value": "dropout",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_131": {
                "name": {
                    "value": "output",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "l2_loss_134": {
                "t": {
                    "value": "W",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.truncated_normal(filter_shape, stddev=0.1), name='W')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.truncated_normal([num_filters_total, num_classes], stddev=0.1), name='W')",
                            "Call"
                        ]
                    ]
                }
            },
            "l2_loss_135": {
                "t": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_filter]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_classes]), name='b')",
                            "Call"
                        ]
                    ]
                }
            },
            "trainable_variables_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "clip_by_value_157": {
                "t": {
                    "value": "param",
                    "type": "Variable",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-0.01",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_95": {
                "name": {
                    "value": "'conv-maxpool-%s' % filter_size",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "truncated_normal_132": {
                "shape": {
                    "value": "[num_filters_total, num_classes]",
                    "type": "List",
                    "possible_values": []
                },
                "stddev": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_133": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_classes]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "truncated_normal_98": {
                "shape": {
                    "value": "filter_shape",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[filter_size, embedding_size, 1, num_filter]",
                            "List"
                        ]
                    ]
                },
                "stddev": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_99": {
                "value": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "[num_filter]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "bias_add_107": {
                "value": {
                    "value": "conv",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.conv2d(self.embedded_chars_expanded, W, strides=[1, 1, 1, 1], padding='VALID', name='conv')",
                            "Call"
                        ]
                    ]
                },
                "bias": {
                    "value": "b",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_filter]), name='b')",
                            "Call"
                        ],
                        [
                            "tf.Variable(tf.constant(0.0, shape=[num_classes]), name='b')",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_142": {
                "input_tensor": {
                    "value": "self.scores_fake",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "generator.py": {
        "tensorflow": {}
    },
    "generator_ls.py": {
        "tensorflow": {}
    },
    "generator_w.py": {
        "tensorflow": {}
    },
    "rollout.py": {
        "tensorflow": {
            "identity_29": {
                "variable": {
                    "value": "self.start_token",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.start_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_32": {
                "variable": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_38": {
                "variable": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.sequence_length]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_39": {
                "variable": {
                    "value": "self.given_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorArray_48": {
                "variable": {
                    "value": "ta_emb_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.sequence_length",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorArray_51": {
                "variable": {
                    "value": "ta_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.sequence_length",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_56": {
                "variable": {
                    "value": "self.h0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.hidden_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_58": {
                "variable": {
                    "value": "self.h0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.h0, self.h0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "TensorArray_61": {
                "variable": {
                    "value": "gen_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.sequence_length",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dynamic_size": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "infer_shape": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "while_loop_91": {
                "variable": {
                    "value": "(i, x_t, h_tm1, given_num, self.gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "lambda i, _1, _2, given_num, _4: i < given_num",
                    "type": "Lambda",
                    "possible_values": []
                },
                "body": {
                    "value": "_g_recurrence_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "(tf.constant(0, dtype=tf.int32), tf.nn.embedding_lookup(self.g_embeddings, self.start_token), self.h0, self.given_num, gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "while_loop_102": {
                "variable": {
                    "value": "(_, _, _, _, self.gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "lambda i, _1, _2, _3, _4: i < self.sequence_length",
                    "type": "Lambda",
                    "possible_values": []
                },
                "body": {
                    "value": "_g_recurrence_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "(i, x_t, h_tm1, given_num, self.gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "transpose_108": {
                "variable": {
                    "value": "self.gen_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "self.gen_x.stack()",
                    "type": "Call",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "identity_156": {
                "variable": {
                    "value": "self.Wi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_157": {
                "variable": {
                    "value": "self.Ui",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_158": {
                "variable": {
                    "value": "self.bi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_160": {
                "variable": {
                    "value": "self.Wf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_161": {
                "variable": {
                    "value": "self.Uf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_162": {
                "variable": {
                    "value": "self.bf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_164": {
                "variable": {
                    "value": "self.Wog",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_165": {
                "variable": {
                    "value": "self.Uog",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_166": {
                "variable": {
                    "value": "self.bog",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_168": {
                "variable": {
                    "value": "self.Wc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_169": {
                "variable": {
                    "value": "self.Uc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_170": {
                "variable": {
                    "value": "self.bc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_265": {
                "variable": {
                    "value": "self.Wo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_266": {
                "variable": {
                    "value": "self.bo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_293": {
                "variable": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_45": {
                "variable": {
                    "value": "self.processed_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.nn.embedding_lookup(self.g_embeddings, self.x)",
                    "type": "Call",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "log_80": {
                "variable": {
                    "value": "log_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.nn.softmax(o_t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cast_82": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reshape(tf.multinomial(log_prob, 1), [self.batch_size])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_84": {
                "variable": {
                    "value": "x_tp1",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "next_token",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.reshape(tf.multinomial(log_prob, 1), [self.batch_size]), tf.int32)",
                            "Call"
                        ]
                    ]
                }
            },
            "unstack_173": {
                "variable": {
                    "value": "(previous_hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tm1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sigmoid_176": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wi) + tf.matmul(previous_hidden_state, self.Ui) + self.bi",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_182": {
                "variable": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wf) + tf.matmul(previous_hidden_state, self.Uf) + self.bf",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_188": {
                "variable": {
                    "value": "o",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wog) + tf.matmul(previous_hidden_state, self.Uog) + self.bog",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_194": {
                "variable": {
                    "value": "c_",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wc) + tf.matmul(previous_hidden_state, self.Uc) + self.bc",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unstack_228": {
                "variable": {
                    "value": "(previous_hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tm1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sigmoid_231": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wi) + tf.matmul(previous_hidden_state, self.Ui) + self.bi",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_237": {
                "variable": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wf) + tf.matmul(previous_hidden_state, self.Uf) + self.bf",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_243": {
                "variable": {
                    "value": "o",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wog) + tf.matmul(previous_hidden_state, self.Uog) + self.bog",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_249": {
                "variable": {
                    "value": "c_",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wc) + tf.matmul(previous_hidden_state, self.Uc) + self.bc",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unstack_269": {
                "variable": {
                    "value": "(hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tuple",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "unstack_282": {
                "variable": {
                    "value": "(hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tuple",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "device_44": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_52": {
                "a": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_205": {
                "values": {
                    "value": "[current_hidden_state, c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_260": {
                "values": {
                    "value": "[current_hidden_state, c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "embedding_lookup_45": {
                "params": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_80": {
                "logits": {
                    "value": "o_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.g_output_unit(h_t)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_82": {
                "tensor": {
                    "value": "tf.multinomial(log_prob, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tanh_203": {
                "x": {
                    "value": "c",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ],
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ]
                    ]
                }
            },
            "identity_211": {
                "input": {
                    "value": "self.lstm.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_212": {
                "input": {
                    "value": "self.lstm.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_213": {
                "input": {
                    "value": "self.lstm.bi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_215": {
                "input": {
                    "value": "self.lstm.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_216": {
                "input": {
                    "value": "self.lstm.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_217": {
                "input": {
                    "value": "self.lstm.bf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_219": {
                "input": {
                    "value": "self.lstm.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_220": {
                "input": {
                    "value": "self.lstm.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_221": {
                "input": {
                    "value": "self.lstm.bog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_223": {
                "input": {
                    "value": "self.lstm.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_224": {
                "input": {
                    "value": "self.lstm.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_225": {
                "input": {
                    "value": "self.lstm.bc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_258": {
                "x": {
                    "value": "c",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ],
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ]
                    ]
                }
            },
            "matmul_271": {
                "a": {
                    "value": "hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_278": {
                "input": {
                    "value": "self.lstm.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_279": {
                "input": {
                    "value": "self.lstm.bo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_284": {
                "a": {
                    "value": "hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multinomial_82": {
                "logits": {
                    "value": "log_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.log(tf.nn.softmax(o_t))",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_97": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_98": {
                "params": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.start_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_177": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_178": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_183": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_184": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_189": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_190": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_195": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_196": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_232": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_233": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_238": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_239": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_244": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_245": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_250": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_251": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "rollout_ls.py": {
        "tensorflow": {
            "identity_29": {
                "variable": {
                    "value": "self.start_token",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.start_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_32": {
                "variable": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_38": {
                "variable": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.sequence_length]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_39": {
                "variable": {
                    "value": "self.given_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorArray_48": {
                "variable": {
                    "value": "ta_emb_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.sequence_length",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorArray_51": {
                "variable": {
                    "value": "ta_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.sequence_length",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_56": {
                "variable": {
                    "value": "self.h0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.hidden_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_58": {
                "variable": {
                    "value": "self.h0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.h0, self.h0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "TensorArray_61": {
                "variable": {
                    "value": "gen_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.sequence_length",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dynamic_size": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "infer_shape": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "while_loop_91": {
                "variable": {
                    "value": "(i, x_t, h_tm1, given_num, self.gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "lambda i, _1, _2, given_num, _4: i < given_num",
                    "type": "Lambda",
                    "possible_values": []
                },
                "body": {
                    "value": "_g_recurrence_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "(tf.constant(0, dtype=tf.int32), tf.nn.embedding_lookup(self.g_embeddings, self.start_token), self.h0, self.given_num, gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "while_loop_102": {
                "variable": {
                    "value": "(_, _, _, _, self.gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "lambda i, _1, _2, _3, _4: i < self.sequence_length",
                    "type": "Lambda",
                    "possible_values": []
                },
                "body": {
                    "value": "_g_recurrence_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "(i, x_t, h_tm1, given_num, self.gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "transpose_108": {
                "variable": {
                    "value": "self.gen_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "self.gen_x.stack()",
                    "type": "Call",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "identity_176": {
                "variable": {
                    "value": "self.Wi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_177": {
                "variable": {
                    "value": "self.Ui",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_178": {
                "variable": {
                    "value": "self.bi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_180": {
                "variable": {
                    "value": "self.Wf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_181": {
                "variable": {
                    "value": "self.Uf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_182": {
                "variable": {
                    "value": "self.bf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_184": {
                "variable": {
                    "value": "self.Wog",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_185": {
                "variable": {
                    "value": "self.Uog",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_186": {
                "variable": {
                    "value": "self.bog",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_188": {
                "variable": {
                    "value": "self.Wc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_189": {
                "variable": {
                    "value": "self.Uc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_190": {
                "variable": {
                    "value": "self.bc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_285": {
                "variable": {
                    "value": "self.Wo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_286": {
                "variable": {
                    "value": "self.bo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_313": {
                "variable": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_45": {
                "variable": {
                    "value": "self.processed_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.nn.embedding_lookup(self.g_embeddings, self.x)",
                    "type": "Call",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "log_80": {
                "variable": {
                    "value": "log_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.nn.softmax(o_t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cast_82": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reshape(tf.multinomial(log_prob, 1), [self.batch_size])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_84": {
                "variable": {
                    "value": "x_tp1",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "next_token",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.reshape(tf.multinomial(log_prob, 1), [self.batch_size]), tf.int32)",
                            "Call"
                        ]
                    ]
                }
            },
            "unstack_193": {
                "variable": {
                    "value": "(previous_hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tm1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sigmoid_196": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wi) + tf.matmul(previous_hidden_state, self.Ui) + self.bi",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_202": {
                "variable": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wf) + tf.matmul(previous_hidden_state, self.Uf) + self.bf",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_208": {
                "variable": {
                    "value": "o",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wog) + tf.matmul(previous_hidden_state, self.Uog) + self.bog",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_214": {
                "variable": {
                    "value": "c_",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wc) + tf.matmul(previous_hidden_state, self.Uc) + self.bc",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unstack_248": {
                "variable": {
                    "value": "(previous_hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tm1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sigmoid_251": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wi) + tf.matmul(previous_hidden_state, self.Ui) + self.bi",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_257": {
                "variable": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wf) + tf.matmul(previous_hidden_state, self.Uf) + self.bf",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_263": {
                "variable": {
                    "value": "o",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wog) + tf.matmul(previous_hidden_state, self.Uog) + self.bog",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_269": {
                "variable": {
                    "value": "c_",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wc) + tf.matmul(previous_hidden_state, self.Uc) + self.bc",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unstack_289": {
                "variable": {
                    "value": "(hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tuple",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "unstack_302": {
                "variable": {
                    "value": "(hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tuple",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "device_44": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_52": {
                "a": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_225": {
                "values": {
                    "value": "[current_hidden_state, c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_280": {
                "values": {
                    "value": "[current_hidden_state, c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "embedding_lookup_45": {
                "params": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_80": {
                "logits": {
                    "value": "o_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.g_output_unit(h_t)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_82": {
                "tensor": {
                    "value": "tf.multinomial(log_prob, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tanh_223": {
                "x": {
                    "value": "c",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ],
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ]
                    ]
                }
            },
            "identity_231": {
                "input": {
                    "value": "self.lstm.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_232": {
                "input": {
                    "value": "self.lstm.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_233": {
                "input": {
                    "value": "self.lstm.bi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_235": {
                "input": {
                    "value": "self.lstm.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_236": {
                "input": {
                    "value": "self.lstm.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_237": {
                "input": {
                    "value": "self.lstm.bf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_239": {
                "input": {
                    "value": "self.lstm.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_240": {
                "input": {
                    "value": "self.lstm.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_241": {
                "input": {
                    "value": "self.lstm.bog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_243": {
                "input": {
                    "value": "self.lstm.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_244": {
                "input": {
                    "value": "self.lstm.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_245": {
                "input": {
                    "value": "self.lstm.bc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_278": {
                "x": {
                    "value": "c",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ],
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ]
                    ]
                }
            },
            "matmul_291": {
                "a": {
                    "value": "hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_298": {
                "input": {
                    "value": "self.lstm.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_299": {
                "input": {
                    "value": "self.lstm.bo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_304": {
                "a": {
                    "value": "hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multinomial_82": {
                "logits": {
                    "value": "log_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.log(tf.nn.softmax(o_t))",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_97": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_98": {
                "params": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.start_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_197": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_198": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_203": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_204": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_209": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_210": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_215": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_216": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_252": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_253": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_258": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_259": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_264": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_265": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_270": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_271": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "rollout_w.py": {
        "tensorflow": {
            "identity_29": {
                "variable": {
                    "value": "self.start_token",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.start_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_32": {
                "variable": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_38": {
                "variable": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.sequence_length]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_39": {
                "variable": {
                    "value": "self.given_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorArray_48": {
                "variable": {
                    "value": "ta_emb_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.sequence_length",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "TensorArray_51": {
                "variable": {
                    "value": "ta_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.sequence_length",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_56": {
                "variable": {
                    "value": "self.h0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size, self.hidden_dim]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_58": {
                "variable": {
                    "value": "self.h0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "values": {
                    "value": "[self.h0, self.h0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "TensorArray_61": {
                "variable": {
                    "value": "gen_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "self.sequence_length",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dynamic_size": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "infer_shape": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "while_loop_91": {
                "variable": {
                    "value": "(i, x_t, h_tm1, given_num, self.gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "lambda i, _1, _2, given_num, _4: i < given_num",
                    "type": "Lambda",
                    "possible_values": []
                },
                "body": {
                    "value": "_g_recurrence_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "(tf.constant(0, dtype=tf.int32), tf.nn.embedding_lookup(self.g_embeddings, self.start_token), self.h0, self.given_num, gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "while_loop_102": {
                "variable": {
                    "value": "(_, _, _, _, self.gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "lambda i, _1, _2, _3, _4: i < self.sequence_length",
                    "type": "Lambda",
                    "possible_values": []
                },
                "body": {
                    "value": "_g_recurrence_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "(i, x_t, h_tm1, given_num, self.gen_x)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "transpose_108": {
                "variable": {
                    "value": "self.gen_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "self.gen_x.stack()",
                    "type": "Call",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "identity_161": {
                "variable": {
                    "value": "self.Wi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_162": {
                "variable": {
                    "value": "self.Ui",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_163": {
                "variable": {
                    "value": "self.bi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_165": {
                "variable": {
                    "value": "self.Wf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_166": {
                "variable": {
                    "value": "self.Uf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_167": {
                "variable": {
                    "value": "self.bf",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_169": {
                "variable": {
                    "value": "self.Wog",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_170": {
                "variable": {
                    "value": "self.Uog",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_171": {
                "variable": {
                    "value": "self.bog",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_173": {
                "variable": {
                    "value": "self.Wc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_174": {
                "variable": {
                    "value": "self.Uc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_175": {
                "variable": {
                    "value": "self.bc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_270": {
                "variable": {
                    "value": "self.Wo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_271": {
                "variable": {
                    "value": "self.bo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.bo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_298": {
                "variable": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.lstm.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "transpose_45": {
                "variable": {
                    "value": "self.processed_x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "a": {
                    "value": "tf.nn.embedding_lookup(self.g_embeddings, self.x)",
                    "type": "Call",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0, 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "log_80": {
                "variable": {
                    "value": "log_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.nn.softmax(o_t)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cast_82": {
                "variable": {
                    "value": "next_token",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reshape(tf.multinomial(log_prob, 1), [self.batch_size])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_84": {
                "variable": {
                    "value": "x_tp1",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "next_token",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.cast(tf.reshape(tf.multinomial(log_prob, 1), [self.batch_size]), tf.int32)",
                            "Call"
                        ]
                    ]
                }
            },
            "unstack_178": {
                "variable": {
                    "value": "(previous_hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tm1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sigmoid_181": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wi) + tf.matmul(previous_hidden_state, self.Ui) + self.bi",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_187": {
                "variable": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wf) + tf.matmul(previous_hidden_state, self.Uf) + self.bf",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_193": {
                "variable": {
                    "value": "o",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wog) + tf.matmul(previous_hidden_state, self.Uog) + self.bog",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_199": {
                "variable": {
                    "value": "c_",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wc) + tf.matmul(previous_hidden_state, self.Uc) + self.bc",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unstack_233": {
                "variable": {
                    "value": "(previous_hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tm1",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "sigmoid_236": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wi) + tf.matmul(previous_hidden_state, self.Ui) + self.bi",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_242": {
                "variable": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wf) + tf.matmul(previous_hidden_state, self.Uf) + self.bf",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_248": {
                "variable": {
                    "value": "o",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wog) + tf.matmul(previous_hidden_state, self.Uog) + self.bog",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "tanh_254": {
                "variable": {
                    "value": "c_",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.matmul(x, self.Wc) + tf.matmul(previous_hidden_state, self.Uc) + self.bc",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "unstack_274": {
                "variable": {
                    "value": "(hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tuple",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "unstack_287": {
                "variable": {
                    "value": "(hidden_state, c_prev)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "value": {
                    "value": "hidden_memory_tuple",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "device_44": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "transpose_52": {
                "a": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                },
                "perm": {
                    "value": "[1, 0]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_210": {
                "values": {
                    "value": "[current_hidden_state, c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "stack_265": {
                "values": {
                    "value": "[current_hidden_state, c]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "embedding_lookup_45": {
                "params": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.x",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_80": {
                "logits": {
                    "value": "o_t",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.g_output_unit(h_t)",
                            "Call"
                        ]
                    ]
                }
            },
            "reshape_82": {
                "tensor": {
                    "value": "tf.multinomial(log_prob, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.batch_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tanh_208": {
                "x": {
                    "value": "c",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ],
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ]
                    ]
                }
            },
            "identity_216": {
                "input": {
                    "value": "self.lstm.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_217": {
                "input": {
                    "value": "self.lstm.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_218": {
                "input": {
                    "value": "self.lstm.bi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_220": {
                "input": {
                    "value": "self.lstm.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_221": {
                "input": {
                    "value": "self.lstm.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_222": {
                "input": {
                    "value": "self.lstm.bf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_224": {
                "input": {
                    "value": "self.lstm.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_225": {
                "input": {
                    "value": "self.lstm.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_226": {
                "input": {
                    "value": "self.lstm.bog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_228": {
                "input": {
                    "value": "self.lstm.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_229": {
                "input": {
                    "value": "self.lstm.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_230": {
                "input": {
                    "value": "self.lstm.bc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tanh_263": {
                "x": {
                    "value": "c",
                    "type": "BinOp",
                    "possible_values": [
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ],
                        [
                            "f * c_prev + i * c_",
                            "BinOp"
                        ]
                    ]
                }
            },
            "matmul_276": {
                "a": {
                    "value": "hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_283": {
                "input": {
                    "value": "self.lstm.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "identity_284": {
                "input": {
                    "value": "self.lstm.bo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_289": {
                "a": {
                    "value": "hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wo",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multinomial_82": {
                "logits": {
                    "value": "log_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.log(tf.nn.softmax(o_t))",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_97": {
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_98": {
                "params": {
                    "value": "self.g_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.start_token",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_182": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_183": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_188": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_189": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_194": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_195": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_200": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_201": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_237": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_238": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Ui",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_243": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_244": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uf",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_249": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_250": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uog",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_255": {
                "a": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Wc",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_256": {
                "a": {
                    "value": "previous_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Uc",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}