{
    "muon_regression/basics.py": {
        "torch": {}
    },
    "muon_regression/nn/callbacks.py": {
        "torch": {
            "sigmoid_30": {
                "input": {
                    "value": "(y - self.offset) / self.div[0]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sigmoid_32": {
                "input": {
                    "value": "(y[y > self.offset] - self.offset) / self.div[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "muon_regression/nn/conv3d.py": {
        "torch": {
            "AdaptiveAvgPool3d_45": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "self.sz",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_156": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_164": {
                "*args": {
                    "value": "*shortcut",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_202": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_220": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, self.grid.expand((x.shape[0], *self.grid.shape[1:])))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_227": {
                "tensors": {
                    "value": "(x_e_sum, x_conv)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool3d_161": {
                "kernel_size": {
                    "value": "self.e_sum_kernel_sz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "stride": {
                    "value": "self.e_sum_kernel_sz",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "self.get_padding(self.e_sum_kernel_sz)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv3d_162": {
                "in_channels": {
                    "value": "self.in_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.conv_out_c",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "not self.pre_act",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Conv3d_194": {
                "in_channels": {
                    "value": "in_c",
                    "type": "Name",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_c",
                    "type": "Name",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_sz",
                    "type": "Name",
                    "possible_values": []
                },
                "padding": {
                    "value": "padding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.get_padding(kernel_sz)",
                            "Call"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": []
                },
                "groups": {
                    "value": "groups",
                    "type": "Name",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "device_219": {
                "type": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "muon_regression/nn/hooks.py": {
        "torch": {
            "stack_67": {
                "variable": {
                    "value": "h",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "self.stats[l][2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "t_67": {
                "variable": {
                    "value": "h",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_47": {
                "tensors": {
                    "value": "self.stats[l][2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "t_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log1p_47": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "muon_regression/nn/loss.py": {
        "torch": {}
    },
    "muon_regression/nn/models.py": {
        "torch": {
            "zeros_59": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, *self.shape)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_204": {
                "variable": {
                    "value": "layers",
                    "type": "Name",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "scripts/train_stride2_model.py": {
        "torch": {
            "set_device_203": {
                "device": {
                    "value": "gpu_id",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "set_device_278": {
                "device": {
                    "value": "gpu_id",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "linspace_88": {
                "start": {
                    "value": "50",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "8000",
                    "type": "Constant",
                    "possible_values": []
                },
                "steps": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}