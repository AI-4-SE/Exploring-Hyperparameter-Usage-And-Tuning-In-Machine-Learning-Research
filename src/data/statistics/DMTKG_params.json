{
    "algo/DeepGraph.py": {
        "tensorflow": {
            "Conv1D_254": {
                "filters": {
                    "value": "self.eigvecs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "activation": {
                    "value": "relu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "dense_256": {
                "inputs": {
                    "value": "{units: 10, activation: 'softmax'}",
                    "type": "Dict",
                    "possible_values": []
                }
            }
        }
    },
    "trainer.py": {
        "tensorflow": {
            "convert_to_tensor_104": {
                "variable": {
                    "value": "test_adj",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "test_adj_high[nnz_ind]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_105": {
                "variable": {
                    "value": "test_adj_ind",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "ind_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "gather_115": {
                "variable": {
                    "value": "src_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "indices[:, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "gather_116": {
                "variable": {
                    "value": "dst_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "indices[:, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Sequential_120": {
                "variable": {
                    "value": "evaluation_model",
                    "type": "variable",
                    "possible_values": []
                },
                "layers": {
                    "value": "[tf.keras.layers.Dense(emb_size, activation=tf.nn.relu), tf.keras.layers.Dense(1, activation=tf.nn.sigmoid)]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "RootMeanSquaredError_129": {
                "variable": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MeanAbsoluteError_133": {
                "variable": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "convert_to_tensor_85": {
                "variable": {
                    "value": "train_adj_label_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "tmp_train_label_val",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tmp_train_adj_dense[nnz_ind]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_117": {
                "x": {
                    "value": "src_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(embeddings, indices[:, 0])",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "dst_embeddings",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(embeddings, indices[:, 1])",
                            "Call"
                        ]
                    ]
                }
            },
            "SparseTensor_63": {
                "indices": {
                    "value": "adj_norm_coord",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "np.array(adj_norm_values, dtype='float32')",
                    "type": "Call",
                    "possible_values": []
                },
                "dense_shape": {
                    "value": "[adj_norm_shape[0], adj_norm_shape[1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "SparseTensor_67": {
                "indices": {
                    "value": "features_tuples[0]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "sparse_to_tuple(sps.identity(adj.shape[0], dtype=np.float32, format='coo'))",
                            "Call"
                        ]
                    ]
                },
                "values": {
                    "value": "features_tuples[1]",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "sparse_to_tuple(sps.identity(adj.shape[0], dtype=np.float32, format='coo'))",
                            "Call"
                        ]
                    ]
                },
                "dense_shape": {
                    "value": "[features_tuples[2][0], features_tuples[2][1]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "convert_to_tensor_91": {
                "value": {
                    "value": "ind_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_121": {
                "units": {
                    "value": "emb_size",
                    "type": "variable",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_122": {
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_166": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "learning_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.learning_rate",
                            "Attribute"
                        ]
                    ]
                }
            },
            "convert_to_tensor_194": {
                "variable": {
                    "value": "train_edge_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "self.get_edge_embeddings(z[-1], train_adj_ind[-1])",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_195": {
                "variable": {
                    "value": "train_values",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "train_adj_label[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "shape": {
                    "value": "[train_adj_label[-1].shape[1], 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "convert_to_tensor_196": {
                "variable": {
                    "value": "test_edge_embeddings",
                    "type": "variable",
                    "possible_values": []
                },
                "value": {
                    "value": "self.get_edge_embeddings(z[-1], test_adj_ind)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_165": {
                "device_name": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'/GPU:0'",
                            "str"
                        ],
                        [
                            "'/CPU:0'",
                            "str"
                        ]
                    ]
                }
            },
            "clear_session_202": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GradientTape_169": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "gather_nd_175": {
                "variable": {
                    "value": "reconstruct_val",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "reconstruction[k]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "indices": {
                    "value": "train_adj_ind[k]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "RootMeanSquaredError_176": {
                "variable": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_185": {
                "variable": {
                    "value": "final_kl",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "previous_kls[-len(train_adj_norm):]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "reduce_mean_181": {
                "input_tensor": {
                    "value": "tf.reduce_sum(1 + 2 * z_std[k] - tf.square(z_mean[k]) - tf.square(tf.exp(z_std[k])), 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_182": {
                "input_tensor": {
                    "value": "1 + 2 * z_std[k] - tf.square(z_mean[k]) - tf.square(tf.exp(z_std[k]))",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "square_182": {
                "x": {
                    "value": "z_mean[k]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "exp_182": {
                "x": {
                    "value": "z_std[k]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "utils/dataset/DatasetDownloader.py": {
        "tensorflow": {
            "get_file_8": {
                "variable": {
                    "value": "train_dataset_fp",
                    "type": "variable",
                    "possible_values": []
                },
                "fname": {
                    "value": "os.path.basename(dataset_args['url'])",
                    "type": "Call",
                    "possible_values": []
                },
                "origin": {
                    "value": "dataset_args['url']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "extract": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "cache_subdir": {
                    "value": "currentDirectory + '/' + dataset_args['path']",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}