{
    "run_tocca.py": {
        "sklearn": {}
    },
    "tocca.py": {
        "tensorflow": {
            "eigh_74": {
                "variable": {
                    "value": "[D, V]",
                    "type": "List",
                    "possible_values": []
                },
                "tensor": {
                    "value": "C",
                    "type": "Name",
                    "possible_values": [
                        [
                            "K.dot(K.transpose(X), X) / K.cast(n - 1, 'float32')",
                            "BinOp"
                        ],
                        [
                            "C + self.r * eye_like(C)",
                            "BinOp"
                        ],
                        [
                            "0.0 * self.C + Ci",
                            "BinOp"
                        ],
                        [
                            "self.momentum * self.C + (1 - self.momentum) * Ci",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ConfigProto_253": {
                "variable": {
                    "value": "config",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "boolean_mask_83": {
                "variable": {
                    "value": "D",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "D",
                    "type": "Name",
                    "possible_values": [
                        [
                            "D[posInd]",
                            "Subscript"
                        ],
                        [
                            "tf.boolean_mask(D, posBool)",
                            "Call"
                        ]
                    ]
                },
                "mask": {
                    "value": "posBool",
                    "type": "Name",
                    "possible_values": [
                        [
                            "K.greater(D, eps)",
                            "Call"
                        ]
                    ]
                }
            },
            "boolean_mask_84": {
                "variable": {
                    "value": "V",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "V",
                    "type": "Name",
                    "possible_values": [
                        [
                            "V[:, posInd]",
                            "Subscript"
                        ],
                        [
                            "tf.boolean_mask(V, posBool, axis=1)",
                            "Call"
                        ]
                    ]
                },
                "mask": {
                    "value": "posBool",
                    "type": "Name",
                    "possible_values": [
                        [
                            "K.greater(D, eps)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Session_255": {
                "config": {
                    "value": "config",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ],
                        [
                            "{'d': self.d, 'momentum': self.momentum, 'l1': self.l1, 'l2': self.l2}",
                            "Dict"
                        ],
                        [
                            "{'axis': self.axis, 'momentum': self.momentum, 'epsilon': self.epsilon}",
                            "Dict"
                        ]
                    ]
                }
            },
            "diag_86": {
                "diagonal": {
                    "value": "reciprocal(K.sqrt(D))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reciprocal_86": {
                "x": {
                    "value": "K.sqrt(D)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "diag_part_114": {
                "input": {
                    "value": "C",
                    "type": "Name",
                    "possible_values": [
                        [
                            "K.dot(K.transpose(X), X) / K.cast(n - 1, 'float32')",
                            "BinOp"
                        ],
                        [
                            "C + self.r * eye_like(C)",
                            "BinOp"
                        ],
                        [
                            "0.0 * self.C + Ci",
                            "BinOp"
                        ],
                        [
                            "self.momentum * self.C + (1 - self.momentum) * Ci",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    }
}