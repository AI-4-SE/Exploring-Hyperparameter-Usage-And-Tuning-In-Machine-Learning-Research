{
    "analysis.py": {
        "sklearn": {
            "confusion_matrix_119": {
                "variable": {
                    "value": "cnf_matrix_volume",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mRS.reshape((37, 1))",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "oskar_isles2016_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.load('./predicted_labels/rfecv_oskar_pred_loo.npy')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "predict.py": {
        "sklearn": {
            "StandardScaler_178": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "VarianceThreshold_184": {
                "variable": {
                    "value": "sel",
                    "type": "variable",
                    "possible_values": []
                },
                "threshold": {
                    "value": "0.85 * (1 - 0.85)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeaveOneOut_217": {
                "variable": {
                    "value": "loo",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RandomForestRegressor_231": {
                "variable": {
                    "value": "estimator_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "1989",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "accuracy_score_237": {
                "variable": {
                    "value": "accuracy[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "np.round(estimator_pred.predict(X_test))",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LeaveOneOut_199": {
                "variable": {
                    "value": "loo",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RandomForestRegressor_200": {
                "variable": {
                    "value": "estimator_rfecv",
                    "type": "variable",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "1989",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "RFECV_201": {
                "variable": {
                    "value": "rfecv",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "estimator_rfecv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "RandomForestRegressor(n_estimators=300, max_depth=3, random_state=1989, n_jobs=-1)",
                            "Call"
                        ]
                    ]
                },
                "step": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "cv": {
                    "value": "loo",
                    "type": "variable",
                    "possible_values": [
                        [
                            "LeaveOneOut()",
                            "Call"
                        ],
                        [
                            "LeaveOneOut()",
                            "Call"
                        ]
                    ]
                },
                "scoring": {
                    "value": "neg_mean_absolute_error",
                    "type": "str",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "predict_40.py": {
        "sklearn": {
            "StandardScaler_179": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "VarianceThreshold_185": {
                "variable": {
                    "value": "sel",
                    "type": "variable",
                    "possible_values": []
                },
                "threshold": {
                    "value": "0.85 * (1 - 0.85)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeaveOneOut_218": {
                "variable": {
                    "value": "loo",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RandomForestRegressor_232": {
                "variable": {
                    "value": "estimator_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "1989",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "accuracy_score_238": {
                "variable": {
                    "value": "accuracy[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "np.round(estimator_pred.predict(X_test))",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LeaveOneOut_200": {
                "variable": {
                    "value": "loo",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RandomForestRegressor_201": {
                "variable": {
                    "value": "estimator_rfecv",
                    "type": "variable",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "1989",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "RFECV_202": {
                "variable": {
                    "value": "rfecv",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "estimator_rfecv",
                    "type": "variable",
                    "possible_values": [
                        [
                            "RandomForestRegressor(n_estimators=300, max_depth=3, random_state=1989, n_jobs=-1)",
                            "Call"
                        ]
                    ]
                },
                "step": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "cv": {
                    "value": "loo",
                    "type": "variable",
                    "possible_values": [
                        [
                            "LeaveOneOut()",
                            "Call"
                        ],
                        [
                            "LeaveOneOut()",
                            "Call"
                        ]
                    ]
                },
                "scoring": {
                    "value": "neg_mean_absolute_error",
                    "type": "str",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "predict_wo_rfecv.py": {
        "sklearn": {
            "StandardScaler_175": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "VarianceThreshold_181": {
                "variable": {
                    "value": "sel",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LeaveOneOut_195": {
                "variable": {
                    "value": "loo",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RandomForestRegressor_209": {
                "variable": {
                    "value": "estimator_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "n_estimators": {
                    "value": "300",
                    "type": "int",
                    "possible_values": []
                },
                "max_depth": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "random_state": {
                    "value": "1989",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "accuracy_score_215": {
                "variable": {
                    "value": "accuracy[idx]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y_true": {
                    "value": "np.round(estimator_pred.predict(X_test))",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "y_test",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}