{
    "line.py": {
        "sklearn": {},
        "tensorflow": {
            "Session_22": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "placeholder_31": {
                "variable": {
                    "value": "self.h",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_32": {
                "variable": {
                    "value": "self.t",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_33": {
                "variable": {
                    "value": "self.sign",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "get_variable_36": {
                "variable": {
                    "value": "self.embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'embeddings' + str(self.order) + str(self.hs)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.node_size, self.rep_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.contrib.layers.xavier_initializer(uniform=False, seed=cur_seed)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "get_variable_38": {
                "variable": {
                    "value": "self.context_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "'context_embeddings' + str(self.order) + str(self.hs)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "[self.node_size, self.rep_size]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "tf.contrib.layers.xavier_initializer(uniform=False, seed=cur_seed)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "embedding_lookup_43": {
                "variable": {
                    "value": "self.h_e",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.h",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_44": {
                "variable": {
                    "value": "self.t_e",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "embedding_lookup_45": {
                "variable": {
                    "value": "self.t_e_context",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.context_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ids": {
                    "value": "self.t",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_55": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "variable_scope_26": {
                "name_or_scope": {
                    "value": "model",
                    "type": "Constant",
                    "possible_values": []
                },
                "reuse": {
                    "value": "None",
                    "type": "Constant",
                    "possible_values": []
                },
                "initializer": {
                    "value": "initializer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.contrib.layers.xavier_initializer(uniform=False, seed=cur_seed)",
                            "Call"
                        ]
                    ]
                }
            },
            "global_variables_initializer_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_47": {
                "input_tensor": {
                    "value": "tf.log_sigmoid(self.sign * tf.reduce_sum(tf.multiply(self.h_e, self.t_e_context), axis=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_49": {
                "input_tensor": {
                    "value": "tf.log_sigmoid(self.sign * tf.reduce_sum(tf.multiply(self.h_e, self.t_e), axis=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "log_sigmoid_47": {
                "x": {
                    "value": "self.sign * tf.reduce_sum(tf.multiply(self.h_e, self.t_e_context), axis=1)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "log_sigmoid_49": {
                "x": {
                    "value": "self.sign * tf.reduce_sum(tf.multiply(self.h_e, self.t_e), axis=1)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reduce_sum_48": {
                "input_tensor": {
                    "value": "tf.multiply(self.h_e, self.t_e_context)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_50": {
                "input_tensor": {
                    "value": "tf.multiply(self.h_e, self.t_e)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "multiply_48": {
                "x": {
                    "value": "self.h_e",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.t_e_context",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_50": {
                "x": {
                    "value": "self.h_e",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y": {
                    "value": "self.t_e",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "lp.py": {
        "sklearn": {
            "roc_curve_36": {
                "variable": {
                    "value": "(fpr, tpr, threshold)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": []
                },
                "y_score": {
                    "value": "y_score",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "auc_37": {
                "variable": {
                    "value": "roc_auc",
                    "type": "Name",
                    "possible_values": []
                },
                "x": {
                    "value": "fpr",
                    "type": "Name",
                    "possible_values": []
                },
                "y": {
                    "value": "tpr",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cosine_similarity_17": {
                "X": {
                    "value": "[embeddings[start_entity], embeddings[end_entity]]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    }
}