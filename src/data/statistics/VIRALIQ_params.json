{
    "database_clustering/cluster_embeddings.py": {
        "sklearn": {
            "KMeans_34": {
                "variable": {
                    "value": "kmeans",
                    "type": "variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "n_clus",
                    "type": "variable",
                    "possible_values": [
                        [
                            "175",
                            "Constant"
                        ]
                    ]
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cosine_similarity_81": {
                "X": {
                    "value": "query_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "img2vec.get_vec(query_image_path).reshape(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "Y": {
                    "value": "x[1].reshape(1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cosine_similarity_89": {
                "X": {
                    "value": "query_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "img2vec.get_vec(query_image_path).reshape(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "Y": {
                    "value": "x.reshape(1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "database_clustering/create_video_embeddings.py": {
        "sklearn": {
            "KMeans_33": {
                "variable": {
                    "value": "kmeans",
                    "type": "variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "n_clus",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "Constant"
                        ]
                    ]
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "database_clustering/retrieve_videos.py": {
        "sklearn": {
            "cosine_similarity_48": {
                "X": {
                    "value": "query_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "img2vec.get_vec_single(query_image_path).reshape(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "Y": {
                    "value": "x[1].reshape(1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cosine_similarity_58": {
                "X": {
                    "value": "query_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "img2vec.get_vec_single(query_image_path).reshape(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "Y": {
                    "value": "x.reshape(1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "video_clustering/create_video_embeddings.py": {
        "sklearn": {
            "KMeans_17": {
                "variable": {
                    "value": "kmeans",
                    "type": "variable",
                    "possible_values": []
                },
                "n_clusters": {
                    "value": "n_clus",
                    "type": "variable",
                    "possible_values": [
                        [
                            "len(vex) // 5",
                            "BinOp"
                        ]
                    ]
                },
                "random_state": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "video_clustering/retrieve_videos.py": {
        "sklearn": {
            "cosine_similarity_29": {
                "variable": {
                    "value": "similarities[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "X": {
                    "value": "query_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "img2vec.get_vec(query_image_path).reshape(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "Y": {
                    "value": "vec.reshape(1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "database_clustering/image_to_vec.py": {
        "tensorflow": {
            "ResNet152_15": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "weights": {
                    "value": "imagenet",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_17": {
                "variable": {
                    "value": "self.intermediate_layer_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "model.input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "outputs": {
                    "value": "model.get_layer(layer_name).output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "preprocess_input_32": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image.img_to_array(img)",
                            "Call"
                        ],
                        [
                            "np.array(images)",
                            "Call"
                        ],
                        [
                            "resnet.preprocess_input(x)",
                            "Call"
                        ],
                        [
                            "image.img_to_array(img)",
                            "Call"
                        ],
                        [
                            "np.expand_dims(x, axis=0)",
                            "Call"
                        ],
                        [
                            "resnet.preprocess_input(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_img_39": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "image_path",
                    "type": "variable",
                    "possible_values": []
                },
                "target_size": {
                    "value": "IMAGE_NET_TARGET_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(224, 224)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "img_to_array_40": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "img": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image.load_img(i, target_size=IMAGE_NET_TARGET_SIZE)",
                            "Call"
                        ],
                        [
                            "image.load_img(image_path, target_size=IMAGE_NET_TARGET_SIZE)",
                            "Call"
                        ]
                    ]
                }
            },
            "preprocess_input_42": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image.img_to_array(img)",
                            "Call"
                        ],
                        [
                            "np.array(images)",
                            "Call"
                        ],
                        [
                            "resnet.preprocess_input(x)",
                            "Call"
                        ],
                        [
                            "image.img_to_array(img)",
                            "Call"
                        ],
                        [
                            "np.expand_dims(x, axis=0)",
                            "Call"
                        ],
                        [
                            "resnet.preprocess_input(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_img_28": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "i",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image_path",
                            "Name"
                        ]
                    ]
                },
                "target_size": {
                    "value": "IMAGE_NET_TARGET_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(224, 224)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "img_to_array_29": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "img": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image.load_img(i, target_size=IMAGE_NET_TARGET_SIZE)",
                            "Call"
                        ],
                        [
                            "image.load_img(image_path, target_size=IMAGE_NET_TARGET_SIZE)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "video_clustering/image_to_vec.py": {
        "tensorflow": {
            "ResNet50_16": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "weights": {
                    "value": "imagenet",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_18": {
                "variable": {
                    "value": "self.intermediate_layer_model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "model.input",
                    "type": "Attribute",
                    "possible_values": []
                },
                "outputs": {
                    "value": "model.get_layer(layer_name).output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_img_28": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "path": {
                    "value": "image_path",
                    "type": "variable",
                    "possible_values": []
                },
                "target_size": {
                    "value": "_IMAGE_NET_TARGET_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(224, 224)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "img_to_array_29": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "img": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image.load_img(image_path, target_size=_IMAGE_NET_TARGET_SIZE)",
                            "Call"
                        ]
                    ]
                }
            },
            "preprocess_input_31": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image.img_to_array(img)",
                            "Call"
                        ],
                        [
                            "np.expand_dims(x, axis=0)",
                            "Call"
                        ],
                        [
                            "resnet.preprocess_input(x)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "video_clustering/video_to_image_feats.py": {
        "torch": {
            "no_grad_67": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}