{
    "itsc2019/Single4WayIntersec_RealDemand_base/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_event1/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_event2/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_incident/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_incident_real/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_lower/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor1/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor1/rl_environment_custom.py": {
        "tensorflow": {}
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor2/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor2/rl_environment_custom.py": {
        "tensorflow": {}
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor3/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor3/rl_environment_custom.py": {
        "tensorflow": {}
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor4/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor4/rl_environment_custom.py": {
        "tensorflow": {}
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor5/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor5/rl_environment_custom.py": {
        "tensorflow": {}
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor6/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "itsc2019/Single4WayIntersec_RealDemand_sensor6/rl_environment_custom.py": {
        "tensorflow": {}
    },
    "results_stats.py": {
        "tensorflow": {}
    },
    "rl/agents/dqn.py": {
        "tensorflow": {
            "expand_dims_431": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.tile(K.zeros((1,)), [nb_rows])",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "scan_462": {
                "variable": {
                    "value": "tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "fn": {
                    "value": "fn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "fn",
                            "Call"
                        ],
                        [
                            "fn",
                            "Call"
                        ],
                        [
                            "fn",
                            "Call"
                        ],
                        [
                            "fn",
                            "Call"
                        ]
                    ]
                },
                "elems": {
                    "value": "L_flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x[0]",
                            "Subscript"
                        ],
                        [
                            "tf.concat(1, [zeros, L_flat])",
                            "Call"
                        ],
                        [
                            "tf.concat([zeros, L_flat], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat(1, [zeros, L_flat])",
                            "Call"
                        ],
                        [
                            "tf.concat([zeros, L_flat], 1)",
                            "Call"
                        ]
                    ]
                },
                "initializer": {
                    "value": "init",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[K.zeros((self.nb_actions, self.nb_actions)), K.zeros((self.nb_actions, self.nb_actions))]",
                            "List"
                        ]
                    ]
                }
            },
            "concat_434": {
                "variable": {
                    "value": "L_flat",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "axis": {
                    "value": "[zeros, L_flat]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gather_459": {
                "variable": {
                    "value": "L_",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "x_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(x, diag_mask)",
                            "Call"
                        ],
                        [
                            "K.zeros((self.nb_actions, self.nb_actions))",
                            "Call"
                        ],
                        [
                            "T.set_subtensor(x_[np.diag_indices(self.nb_actions)], x)",
                            "Call"
                        ],
                        [
                            "K.exp(x) + K.epsilon()",
                            "BinOp"
                        ],
                        [
                            "x_ + x * (1.0 - diag_mask)",
                            "BinOp"
                        ],
                        [
                            "K.zeros((self.nb_actions, self.nb_actions))",
                            "Call"
                        ],
                        [
                            "T.set_subtensor(x_[np.tril_indices(self.nb_actions)], x)",
                            "Call"
                        ],
                        [
                            "T.set_subtensor(x_[np.diag_indices(self.nb_actions)], diag)",
                            "Call"
                        ]
                    ]
                },
                "indices": {
                    "value": "tril_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros((self.nb_actions, self.nb_actions), dtype='int32')",
                            "Call"
                        ]
                    ]
                }
            },
            "expand_dims_500": {
                "variable": {
                    "value": "zeros",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.tile(K.zeros((1,)), [nb_rows])",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "scan_513": {
                "variable": {
                    "value": "P",
                    "type": "variable",
                    "possible_values": []
                },
                "fn": {
                    "value": "fn",
                    "type": "variable",
                    "possible_values": [
                        [
                            "fn",
                            "Call"
                        ],
                        [
                            "fn",
                            "Call"
                        ],
                        [
                            "fn",
                            "Call"
                        ],
                        [
                            "fn",
                            "Call"
                        ]
                    ]
                },
                "elems": {
                    "value": "L_flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x[0]",
                            "Subscript"
                        ],
                        [
                            "tf.concat(1, [zeros, L_flat])",
                            "Call"
                        ],
                        [
                            "tf.concat([zeros, L_flat], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat(1, [zeros, L_flat])",
                            "Call"
                        ],
                        [
                            "tf.concat([zeros, L_flat], 1)",
                            "Call"
                        ]
                    ]
                },
                "initializer": {
                    "value": "K.zeros((self.nb_actions, self.nb_actions))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "shape_430": {
                "input": {
                    "value": "L_flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x[0]",
                            "Subscript"
                        ],
                        [
                            "tf.concat(1, [zeros, L_flat])",
                            "Call"
                        ],
                        [
                            "tf.concat([zeros, L_flat], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat(1, [zeros, L_flat])",
                            "Call"
                        ],
                        [
                            "tf.concat([zeros, L_flat], 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "tile_431": {
                "input": {
                    "value": "K.zeros((1,))",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[nb_rows]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_437": {
                "variable": {
                    "value": "L_flat",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[zeros, L_flat]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "concat_503": {
                "variable": {
                    "value": "L_flat",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "axis": {
                    "value": "[zeros, L_flat]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gather_510": {
                "variable": {
                    "value": "x_",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "indices": {
                    "value": "diag_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.zeros((self.nb_actions, self.nb_actions), dtype='int32')",
                            "Call"
                        ],
                        [
                            "np.zeros(1 + nb_elems)",
                            "Call"
                        ],
                        [
                            "K.variable(diag_mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_460": {
                "a": {
                    "value": "L_",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.gather(x_, tril_mask)",
                            "Call"
                        ]
                    ]
                }
            },
            "shape_499": {
                "input": {
                    "value": "L_flat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x[0]",
                            "Subscript"
                        ],
                        [
                            "tf.concat(1, [zeros, L_flat])",
                            "Call"
                        ],
                        [
                            "tf.concat([zeros, L_flat], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat(1, [zeros, L_flat])",
                            "Call"
                        ],
                        [
                            "tf.concat([zeros, L_flat], 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "tile_500": {
                "input": {
                    "value": "K.zeros((1,))",
                    "type": "Call",
                    "possible_values": []
                },
                "multiples": {
                    "value": "[nb_rows]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "concat_506": {
                "variable": {
                    "value": "L_flat",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[zeros, L_flat]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "rl/util.py": {
        "tensorflow": {
            "select_77": {
                "condlist": {
                    "value": "condition",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.abs(x) < clip_value",
                            "Compare"
                        ]
                    ]
                },
                "choicelist": {
                    "value": "squared_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * K.square(x)",
                            "BinOp"
                        ]
                    ]
                },
                "default": {
                    "value": "linear_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "clip_value * (K.abs(x) - 0.5 * clip_value)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "where_79": {
                "condition": {
                    "value": "condition",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.abs(x) < clip_value",
                            "Compare"
                        ]
                    ]
                },
                "x": {
                    "value": "squared_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.5 * K.square(x)",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "linear_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "clip_value * (K.abs(x) - 0.5 * clip_value)",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "rl_controller.py": {
        "tensorflow": {
            "ConfigProto_22": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_24": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ],
                        [
                            "config",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "scenarios/Single4WayIntersec_RealDemand_base/rl_controller_custom.py": {
        "tensorflow": {
            "ConfigProto_23": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_25": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}