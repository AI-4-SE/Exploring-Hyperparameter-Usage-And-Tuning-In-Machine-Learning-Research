{
    "codebase/models/_pspnet_2.py": {
        "tensorflow": {}
    },
    "codebase/models/model_utils.py": {
        "tensorflow": {
            "resize_62": {
                "images": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(K.int_shape(x)[1] * s[0], K.int_shape(x)[2] * s[1])",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "codebase/models/net2.py": {
        "tensorflow": {}
    },
    "codebase/train.py": {
        "tensorflow": {
            "mean_18": {
                "a": {
                    "value": "keras.losses.mean_squared_error(y, pred_y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_sum_44": {
                "variable": {
                    "value": "denominator",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "y_true + y_pred",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "(1, 2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_55": {
                "variable": {
                    "value": "TP",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "y_pred * y_true",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "(1, 2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_56": {
                "variable": {
                    "value": "FP",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "y_pred * Gcnot",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "(1, 2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_57": {
                "variable": {
                    "value": "FN",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "Pcnot * y_true",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "(1, 2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_63": {
                "variable": {
                    "value": "lossFTI",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "lossTIc",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1 - numer / denom) ** gammaI",
                            "BinOp"
                        ]
                    ]
                },
                "axis": {
                    "value": "(1, 2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "mean_69": {
                "a": {
                    "value": "alpha1 * keras.losses.categorical_crossentropy(y_true, y_pred) + alpha2 * dice_loss(y_true, y_pred) + alpha3 * focal_tversky_loss(y_true, y_pred)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "convert_to_tensor_21": {
                "value": {
                    "value": "obj",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Variable_24": {
                "initial_value": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "reshape_46": {
                "tensor": {
                    "value": "1 - numerator / denominator",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "(-1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_65": {
                "tensor": {
                    "value": "lossFTI",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_sum(lossTIc, axis=(1, 2, 3))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reduce_sum_43": {
                "input_tensor": {
                    "value": "y_true * y_pred",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "(1, 2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Variable_257": {
                "initial_value": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "GradientTape_259": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "subtract_273": {
                "variable": {
                    "value": "model_copy.trainable_weights[j]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "x": {
                    "value": "model.trainable_weights[j]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.multiply(lr_inner, gradients[j])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GradientTape_262": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Variable_268": {
                "initial_value": {
                    "value": "model.trainable_weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "multiply_274": {
                "x": {
                    "value": "lr_inner",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "Method Argument"
                        ]
                    ]
                },
                "y": {
                    "value": "gradients[j]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "salient.py": {
        "tensorflow": {
            "ConfigProto_11": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "gpu_options": {
                    "value": "tf.compat.v1.GPUOptions(per_process_gpu_memory_fraction=0.8)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Session_16": {
                "variable": {
                    "value": "session",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.compat.v1.ConfigProto(gpu_options=tf.compat.v1.GPUOptions(per_process_gpu_memory_fraction=0.8))",
                            "Call"
                        ]
                    ]
                }
            },
            "set_session_17": {
                "session": {
                    "value": "session",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.compat.v1.Session(config=config)",
                            "Call"
                        ]
                    ]
                }
            },
            "list_physical_devices_9": {
                "device_type": {
                    "value": "GPU",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GPUOptions_12": {
                "per_process_gpu_memory_fraction": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "trainer.py": {
        "tensorflow": {
            "ConfigProto_17": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "gpu_options": {
                    "value": "tf.compat.v1.GPUOptions(per_process_gpu_memory_fraction=0.8)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Session_22": {
                "variable": {
                    "value": "session",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.compat.v1.ConfigProto(gpu_options=tf.compat.v1.GPUOptions(per_process_gpu_memory_fraction=0.8))",
                            "Call"
                        ]
                    ]
                }
            },
            "set_session_23": {
                "session": {
                    "value": "session",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.compat.v1.Session(config=config)",
                            "Call"
                        ]
                    ]
                }
            },
            "list_physical_devices_15": {
                "device_type": {
                    "value": "GPU",
                    "type": "str",
                    "possible_values": []
                }
            },
            "GPUOptions_18": {
                "per_process_gpu_memory_fraction": {
                    "value": "0.8",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    }
}