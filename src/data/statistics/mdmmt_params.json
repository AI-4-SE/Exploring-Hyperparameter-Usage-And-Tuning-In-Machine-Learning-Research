{
    "models/vggish_model.py": {
        "tensorflow": {
            "ConfigProto_17": {
                "variable": {
                    "value": "config",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Graph_19": {
                "variable": {
                    "value": "self.manager",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_21": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "data_loader/base.py": {
        "torch": {
            "zeros_19": {
                "variable": {
                    "value": "all_features[mod_name]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "len(items)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "max_tok",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "einfo['max_tok']",
                            "Subscript"
                        ],
                        [
                            "experts_info[mod_name]['max_tok']",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "einfo['dim']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_20": {
                "variable": {
                    "value": "all_features_t[mod_name]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "len(items)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "max_tok",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "einfo['max_tok']",
                            "Subscript"
                        ],
                        [
                            "experts_info[mod_name]['max_tok']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "zeros_21": {
                "variable": {
                    "value": "all_features_mask[mod_name]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "len(items)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "max_tok",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "einfo['max_tok']",
                            "Subscript"
                        ],
                        [
                            "experts_info[mod_name]['max_tok']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_37": {
                "variable": {
                    "value": "all_features[mod_name][batch_idx, :len(mod_feat)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "mod_feat[:max_tok].copy()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_38": {
                "variable": {
                    "value": "all_features_t[mod_name][batch_idx, :len(mod_feat)]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "mod_feat_t[:max_tok].copy()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "data_loader/rbmixin.py": {
        "torch": {}
    },
    "models/clip_model.py": {
        "torch": {
            "from_numpy_15": {
                "variable": {
                    "value": "frames",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "frames.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_15": {
                "variable": {
                    "value": "frames",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_9": {
                "data": {
                    "value": "[0.48145466, 0.4578275, 0.40821073]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_10": {
                "data": {
                    "value": "[0.26862954, 0.26130258, 0.27577711]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "models/mmt/__init__.py": {
        "torch": {
            "load_354": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "model_pt",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "'/ssd/ssd_srv79/dza/mmt/exps/cleaning/MSRVTT_jsfusion_trainval/orig/2/trained_model.pth'",
                            "Constant"
                        ]
                    ]
                },
                "map_location": {
                    "value": "torch.device('cpu')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_419": {
                "variable": {
                    "value": "features_ind[s3d]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "features_ind['face']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_493": {
                "variable": {
                    "value": "ce_txt_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "embd_wg.size(0)",
                            "Call"
                        ],
                        [
                            "next(iter(features.values())).size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "max_text_words",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "30",
                            "Constant"
                        ]
                    ]
                },
                "layout": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_45": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dimension",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dimension",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "BatchNorm1d_47": {
                "variable": {
                    "value": "self.batch_norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "dimension",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_53": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x, x1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_60": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_dimension",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dimension",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_75": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_dimension",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dimension",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "normalize_79": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "text_list",
                            "Name"
                        ],
                        [
                            "x.strip()",
                            "Call"
                        ],
                        [
                            "x + '.'",
                            "BinOp"
                        ],
                        [
                            "torch.cat([x, padding], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat((x, x1), 1)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "self.cg(x)",
                            "Call"
                        ],
                        [
                            "F.normalize(x, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "F.normalize(x, dim=-1)",
                            "Call"
                        ],
                        [
                            "text_list",
                            "Name"
                        ],
                        [
                            "x.strip()",
                            "Call"
                        ],
                        [
                            "self.txt_bert(**encoded_inputs)[0]",
                            "Subscript"
                        ],
                        [
                            "x + '.'",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_96": {
                "variable": {
                    "value": "padding",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "embd_wg.size(0)",
                            "Call"
                        ],
                        [
                            "next(iter(features.values())).size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "max_length - n",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "x.dtype",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_97": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, padding]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleDict_127": {
                "variable": {
                    "value": "self.text_gu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleDict_134": {
                "variable": {
                    "value": "self.moe_fc_txt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_135": {
                "variable": {
                    "value": "self.moe_txt_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dout_prob",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "txt_bert_params['hidden_dropout_prob']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_146": {
                "variable": {
                    "value": "moe_weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.moe_fc_txt[mod](embd) for mod in self.modalities]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_147": {
                "variable": {
                    "value": "moe_weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "moe_weights",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "th.cat([self.moe_fc_txt[mod](embd) for mod in self.modalities], dim=-1)",
                            "Call"
                        ],
                        [
                            "F.softmax(moe_weights, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_184": {
                "variable": {
                    "value": "text_embd",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "text_embd",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(text_embd, dim=1)",
                            "Call"
                        ],
                        [
                            "embd_wg.view(bs, -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleDict_227": {
                "variable": {
                    "value": "self.video_dim_reduce",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_319": {
                "variable": {
                    "value": "features",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "features_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_320": {
                "variable": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "input_ids_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_321": {
                "variable": {
                    "value": "token_type_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "token_type_ids_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_322": {
                "variable": {
                    "value": "position_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "position_ids_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_323": {
                "variable": {
                    "value": "attention_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "attention_mask_list",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_346": {
                "variable": {
                    "value": "experts",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "experts",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(experts, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "set_grad_enabled_350": {
                "mode": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "glu_54": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "text_list",
                            "Name"
                        ],
                        [
                            "x.strip()",
                            "Call"
                        ],
                        [
                            "x + '.'",
                            "BinOp"
                        ],
                        [
                            "torch.cat([x, padding], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat((x, x1), 1)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "self.cg(x)",
                            "Call"
                        ],
                        [
                            "F.normalize(x, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "F.normalize(x, dim=-1)",
                            "Call"
                        ],
                        [
                            "text_list",
                            "Name"
                        ],
                        [
                            "x.strip()",
                            "Call"
                        ],
                        [
                            "self.txt_bert(**encoded_inputs)[0]",
                            "Subscript"
                        ],
                        [
                            "x + '.'",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "normalize_68": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "text_list",
                            "Name"
                        ],
                        [
                            "x.strip()",
                            "Call"
                        ],
                        [
                            "x + '.'",
                            "BinOp"
                        ],
                        [
                            "torch.cat([x, padding], dim=1)",
                            "Call"
                        ],
                        [
                            "th.cat((x, x1), 1)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "self.cg(x)",
                            "Call"
                        ],
                        [
                            "F.normalize(x, dim=-1)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "F.normalize(x, dim=-1)",
                            "Call"
                        ],
                        [
                            "text_list",
                            "Name"
                        ],
                        [
                            "x.strip()",
                            "Call"
                        ],
                        [
                            "self.txt_bert(**encoded_inputs)[0]",
                            "Subscript"
                        ],
                        [
                            "x + '.'",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Linear_137": {
                "variable": {
                    "value": "self.moe_fc_txt[mod]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "in_features": {
                    "value": "text_dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.txt_bert.config.hidden_size",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ModuleDict_233": {
                "variable": {
                    "value": "self.video_dim_reduce_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "normalize_342": {
                "variable": {
                    "value": "agg_tok_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "emb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "last_layer[:, modality_to_tok_map[modality]]",
                            "Subscript"
                        ],
                        [
                            "self.video_dim_reduce_out[mod](emb)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_402": {
                "variable": {
                    "value": "features[mod]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "embd_wg.size(0)",
                            "Call"
                        ],
                        [
                            "next(iter(features.values())).size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "ntok",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "info['max_tok']",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "info['dim']",
                            "Subscript"
                        ],
                        [
                            "1024)}",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ones_403": {
                "variable": {
                    "value": "features_ind[mod]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "embd_wg.size(0)",
                            "Call"
                        ],
                        [
                            "next(iter(features.values())).size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "ntok",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "info['max_tok']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "normalize_181": {
                "variable": {
                    "value": "text_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "text_",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "layer(text)",
                            "Call"
                        ],
                        [
                            "F.normalize(text_)",
                            "Call"
                        ],
                        [
                            "text_.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "full_276": {
                "size": {
                    "value": "ids_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(bs,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "th.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_277": {
                "size": {
                    "value": "ids_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(bs,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "th.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_278": {
                "size": {
                    "value": "ids_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(bs,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "th.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_279": {
                "size": {
                    "value": "(bs, self.hidden_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "fill_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "th.float",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_280": {
                "size": {
                    "value": "ids_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(bs,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "th.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_354": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "arange_405": {
                "variable": {
                    "value": "t1",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "ntok",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "info['max_tok']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "arange_406": {
                "variable": {
                    "value": "t2",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "ntok + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_256": {
                "input": {
                    "value": "experts_feats_ind[mod]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "full_299": {
                "size": {
                    "value": "ids_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(bs,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "th.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_300": {
                "size": {
                    "value": "ids_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(bs,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "token_type",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.expert_dims[modality]['idx']",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "th.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_301": {
                "size": {
                    "value": "ids_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(bs,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "th.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_415": {
                "variable": {
                    "value": "features_t[mod]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "*size": {
                    "value": "bs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "2",
                            "Constant"
                        ],
                        [
                            "embd_wg.size(0)",
                            "Call"
                        ],
                        [
                            "next(iter(features.values())).size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "ntok",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "info['max_tok']",
                            "Subscript"
                        ]
                    ]
                }
            },
            "full_314": {
                "size": {
                    "value": "ids_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(bs,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "th.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "full_315": {
                "size": {
                    "value": "ids_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(bs,)",
                            "Tuple"
                        ]
                    ]
                },
                "fill_value": {
                    "value": "token_type",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.expert_dims[modality]['idx']",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "th.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "arange_410": {
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "ntok",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "info['max_tok']",
                            "Subscript"
                        ]
                    ]
                },
                "step": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "arange_411": {
                "start": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "end": {
                    "value": "ntok",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "info['max_tok']",
                            "Subscript"
                        ]
                    ]
                },
                "step": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "models/mmt/bert_mmt.py": {
        "torch": {
            "Embedding_79": {
                "variable": {
                    "value": "self.position_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "config.max_position_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_81": {
                "variable": {
                    "value": "self.token_type_embeddings",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "config.type_vocab_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_85": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_124": {
                "variable": {
                    "value": "self.query",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.all_head_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_125": {
                "variable": {
                    "value": "self.key",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.all_head_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_126": {
                "variable": {
                    "value": "self.value",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.all_head_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_128": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.attention_probs_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_147": {
                "variable": {
                    "value": "attention_scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "query_layer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.transpose_for_scores(mixed_query_layer)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "key_layer.transpose(-1, -2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_164": {
                "variable": {
                    "value": "context_layer",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attention_probs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "nn.Softmax(dim=-1)(attention_scores)",
                            "Call"
                        ],
                        [
                            "self.dropout(attention_probs)",
                            "Call"
                        ],
                        [
                            "attention_probs * head_mask",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "value_layer",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.transpose_for_scores(mixed_value_layer)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_180": {
                "variable": {
                    "value": "self.dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_183": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_213": {
                "variable": {
                    "value": "self.dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.intermediate_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_228": {
                "variable": {
                    "value": "self.dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.intermediate_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_231": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.hidden_dropout_prob",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_266": {
                "variable": {
                    "value": "self.layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[BertLayer(config) for _ in range(config.num_hidden_layers)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Linear_300": {
                "variable": {
                    "value": "self.dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "config.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_301": {
                "variable": {
                    "value": "self.activation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sigmoid_57": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "x.view(*new_x_shape)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_93": {
                "variable": {
                    "value": "token_type_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ones_like_378": {
                "variable": {
                    "value": "attention_mask",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_like_380": {
                "variable": {
                    "value": "token_type_ids",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_ids",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "erf_53": {
                "input": {
                    "value": "x / math.sqrt(2.0)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Softmax_154": {
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "models/pt_utils.py": {
        "torch": {}
    },
    "models/vmz/csn.py": {
        "torch": {}
    },
    "models/vmz/r2plus1d.py": {
        "torch": {}
    },
    "models/vmz/utils.py": {
        "torch": {
            "Conv3d_21": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 7, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_29": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_30": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool3d_31": {
                "kernel_size": {
                    "value": "(1, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_41": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "45",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 7, 7)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_49": {
                "num_features": {
                    "value": "45",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_50": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_51": {
                "in_channels": {
                    "value": "45",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_59": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_60": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool3d_61": {
                "kernel_size": {
                    "value": "(1, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv3d_89": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_90": {
                "num_features": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv3d_107": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "midplanes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "in_planes * out_planes * 3 * 3 * 3 // (in_planes * 3 * 3 + 3 * out_planes)",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(1, 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(1, stride, stride)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, padding, padding)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm3d_115": {
                "num_features": {
                    "value": "midplanes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "in_planes * out_planes * 3 * 3 * 3 // (in_planes * 3 * 3 + 3 * out_planes)",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_116": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv3d_117": {
                "in_channels": {
                    "value": "midplanes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "in_planes * out_planes * 3 * 3 * 3 // (in_planes * 3 * 3 + 3 * out_planes)",
                            "BinOp"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(3, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(stride, 1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "padding": {
                    "value": "(padding, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "models/vmz_model.py": {
        "torch": {
            "from_numpy_26": {
                "variable": {
                    "value": "imgs",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "batch_imgs.astype(np.float32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_16": {
                "variable": {
                    "value": "state_dict",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "ckpt_path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_21": {
                "data": {
                    "value": "[0.43216, 0.394666, 0.37645]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_22": {
                "data": {
                    "value": "[0.22803, 0.22145, 0.216989]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "torch": {
            "load_30": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.checkpoint",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "validate.py": {
        "torch": {
            "device_65": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_104": {
                "variable": {
                    "value": "embs_txt",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(texts)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "embdim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_115": {
                "variable": {
                    "value": "embs_vid",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(segms)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "embdim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_125": {
                "variable": {
                    "value": "embs_vid",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(segms)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "embdim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "DataLoader_127": {
                "variable": {
                    "value": "loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "DatasetWrapper(dataset)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "video_batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "sampler": {
                    "value": "DummySampler(access_keys)",
                    "type": "Call",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "getattr(dataset, 'collate_fn', None)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_153": {
                "variable": {
                    "value": "all_topk",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(captions)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_63": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_155": {
                "variable": {
                    "value": "all_topk_v2t",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(captions)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_168": {
                "variable": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "embs_vid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros(len(segms), embdim).cuda()",
                            "Call"
                        ],
                        [
                            "torch.zeros(len(segms), embdim).cuda()",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "temb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "embs_txt[temb_idx]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "from_numpy_14": {
                "variable": {
                    "value": "res[key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "res[key]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "matmul_177": {
                "variable": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "embs_txt",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros(len(texts), embdim).cuda()",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "vemb",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "embs_vid[vemb_idx]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    }
}