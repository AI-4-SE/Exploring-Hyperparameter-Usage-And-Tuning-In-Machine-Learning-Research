{
    "test.py": {
        "sklearn": {
            "confusion_matrix_67": {
                "variable": {
                    "value": "matrix",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "all_label",
                    "type": "Call",
                    "possible_values": [
                        [
                            "labels.float()",
                            "Call"
                        ],
                        [
                            "torch.cat((all_label, labels.float()), 0)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "torch.squeeze(predict).float()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "max_64": {
                "variable": {
                    "value": "(_, predict)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "all_output",
                    "type": "Call",
                    "possible_values": [
                        [
                            "outputs.float().cpu()",
                            "Call"
                        ],
                        [
                            "torch.cat((all_output, outputs.float().cpu()), 0)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_92": {
                "variable": {
                    "value": "net",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.test_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_102": {
                "variable": {
                    "value": "val_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "visDataset_target(args.data_path, args.label_file, train=False, transform=transform_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batchsize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_34": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_65": {
                "input": {
                    "value": "torch.squeeze(predict).float() == all_label",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "squeeze_67": {
                "input": {
                    "value": "predict",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_32": {
                "input": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_62": {
                "variable": {
                    "value": "all_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_output, outputs.float().cpu())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_63": {
                "variable": {
                    "value": "all_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(all_label, labels.float())",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_65": {
                "input": {
                    "value": "predict",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "utils.py": {
        "sklearn": {
            "confusion_matrix_220": {
                "variable": {
                    "value": "(t_open, f_narrow, f_open, t_narrow)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "y_true": {
                    "value": "gt_list",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "p_list",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "f1_score_223": {
                "variable": {
                    "value": "F1",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "gt_list",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "p_list",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "roc_auc_score_214": {
                "variable": {
                    "value": "AUROC",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "gt_list",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_score": {
                    "value": "p_list",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "mean_13": {
                "variable": {
                    "value": "domain_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_15": {
                "variable": {
                    "value": "domain_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(logits - 1) ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "softmax_24": {
                "variable": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "is_available_45": {
                "variable": {
                    "value": "self.USE_CUDA",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_59": {
                "variable": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clamp_60": {
                "variable": {
                    "value": "y_pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_pred",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.softmax(logits, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.softmax(output, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.clamp(y_pred, 0.0001, 1.0 - 0.0001)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0 - 0.0001",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Tensor_101": {
                "variable": {
                    "value": "negative_pairs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_118": {
                "variable": {
                    "value": "self.fc_infoNCE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "feature_dim",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "512",
                            "MethodArgument"
                        ],
                        [
                            "512",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "tensor_144": {
                "variable": {
                    "value": "negative_pairs",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "LogSoftmax_176": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_180": {
                "variable": {
                    "value": "targets",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "log_probs.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_29": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-y_pred * torch.log(y_pred + 1e-05)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_30": {
                "input": {
                    "value": "loss",
                    "type": "Call",
                    "possible_values": [
                        [
                            "0.0",
                            "Constant"
                        ],
                        [
                            "torch.sum(-y_pred * torch.log(y_pred + 1e-05), dim=1)",
                            "Call"
                        ],
                        [
                            "(-targets * log_probs).mean(0).sum()",
                            "Call"
                        ],
                        [
                            "(-targets * log_probs).sum(1)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_103": {
                "variable": {
                    "value": "negative_pairs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(negative_pairs, self.features[random.choice(negative_sample_idx)].unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_109": {
                "tensors": {
                    "value": "(feature_pos, features_neg)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_146": {
                "variable": {
                    "value": "negative_pairs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(negative_pairs, self.features[random.choice(negative_sample_idx)].unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_152": {
                "tensors": {
                    "value": "(feature_pos, features_neg)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_48": {
                "*size": {
                    "value": "num_examp",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_29": {
                "input": {
                    "value": "y_pred + 1e-05",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "auto_augment.py": {
        "torch": {
            "from_numpy_256": {
                "ndarray": {
                    "value": "dst",
                    "type": "Call",
                    "possible_values": [
                        [
                            "cv2.warpAffine(np.transpose(x.numpy(), [1, 2, 0]), M, (cols, rows))",
                            "Call"
                        ],
                        [
                            "np.transpose(dst, [2, 0, 1])",
                            "Call"
                        ],
                        [
                            "cv2.GaussianBlur(x.numpy(), (ksize, ksize), sigma)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_262": {
                "ndarray": {
                    "value": "dst",
                    "type": "Call",
                    "possible_values": [
                        [
                            "cv2.warpAffine(np.transpose(x.numpy(), [1, 2, 0]), M, (cols, rows))",
                            "Call"
                        ],
                        [
                            "np.transpose(dst, [2, 0, 1])",
                            "Call"
                        ],
                        [
                            "cv2.GaussianBlur(x.numpy(), (ksize, ksize), sigma)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "dataset.py": {
        "torch": {
            "stack_85": {
                "variable": {
                    "value": "img",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[img_L, img_R]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "functions.py": {
        "torch": {
            "add_26": {
                "variable": {
                    "value": "diffs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "real",
                    "type": "Variable",
                    "possible_values": []
                },
                "other": {
                    "value": "-pred",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "numel_27": {
                "variable": {
                    "value": "n",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "diffs.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "add_39": {
                "variable": {
                    "value": "diffs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "real",
                    "type": "Variable",
                    "possible_values": []
                },
                "other": {
                    "value": "-pred",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "numel_40": {
                "variable": {
                    "value": "n",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "diffs.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "norm_57": {
                "variable": {
                    "value": "input1_l2_norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "input1.view(batch_size, -1)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "norm_60": {
                "variable": {
                    "value": "input2_l2_norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "input2.view(batch_size, -1)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_63": {
                "variable": {
                    "value": "diff_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input1_l2.t().mm(input2_l2).pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_28": {
                "input": {
                    "value": "diffs.pow(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_41": {
                "input": {
                    "value": "diffs",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.add(real, -pred)",
                            "Call"
                        ],
                        [
                            "torch.add(real, -pred)",
                            "Call"
                        ]
                    ]
                }
            },
            "pow_41": {
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {}
    },
    "model_compat.py": {
        "torch": {
            "Sequential_37": {
                "variable": {
                    "value": "self.shared_encoder_pred_domain",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_68": {
                "variable": {
                    "value": "index",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "index",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.from_numpy(index).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "normalize_86": {
                "variable": {
                    "value": "self.memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.memory",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_95": {
                "variable": {
                    "value": "self.shared_encoder_pred_domain",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Embedding_120": {
                "variable": {
                    "value": "self.label_emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.class_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.input_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_122": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.input_dim, 1024)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_132": {
                "variable": {
                    "value": "self.deconv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(512, 256, kernel_size=2, stride=1, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "mul_145": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.label_emb(label)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "in_features": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_38": {
                "in_features": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_39": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_44": {
                "in_features": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "256",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "tensor_57": {
                "data": {
                    "value": "[T, momentum]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_58": {
                "*size": {
                    "value": "outputSize",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "inputSize",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "mm_64": {
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.mul(self.label_emb(label), input)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ],
                        [
                            "x.view(-1, 512, self.input_size // 32, self.input_size // 32)",
                            "Call"
                        ],
                        [
                            "self.deconv(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "self.memory.t()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_96": {
                "in_features": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_97": {
                "negative_slope": {
                    "value": "0.01",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_123": {
                "in_features": {
                    "value": "self.input_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm1d_124": {
                "num_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_125": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_128": {
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128 * (self.input_size // 16) * (self.input_size // 16)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm1d_129": {
                "num_features": {
                    "value": "128 * (self.input_size // 16) * (self.input_size // 16)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_133": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_134": {
                "num_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_135": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_136": {
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_137": {
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_138": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mul_72": {
                "input": {
                    "value": "features.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "other": {
                    "value": "1.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mul_81": {
                "input": {
                    "value": "features.data",
                    "type": "Attribute",
                    "possible_values": []
                },
                "other": {
                    "value": "1 - self.momentum",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "net/res2net.py": {
        "torch": {
            "rand_234": {
                "variable": {
                    "value": "images",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "224",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "224",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "width * scale",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_38": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "width * scale",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ModuleList_51": {
                "variable": {
                    "value": "self.convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "convs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "ModuleList_52": {
                "variable": {
                    "value": "self.bns",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "bns",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "Conv2d_54": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "width * scale",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_55": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_57": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "split_70": {
                "variable": {
                    "value": "spx",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(out)",
                            "Call"
                        ],
                        [
                            "self.relu(out)",
                            "Call"
                        ],
                        [
                            "torch.cat((out, spx[self.nums]), 1)",
                            "Call"
                        ],
                        [
                            "self.conv3(out)",
                            "Call"
                        ],
                        [
                            "self.bn3(out)",
                            "Call"
                        ],
                        [
                            "torch.cat((out, self.pool(spx[self.nums])), 1)",
                            "Call"
                        ],
                        [
                            "sp",
                            "Name"
                        ],
                        [
                            "torch.cat((out, sp), 1)",
                            "Call"
                        ],
                        [
                            "out + residual",
                            "BinOp"
                        ],
                        [
                            "self.relu(out)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_105": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_107": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_108": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_109": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_114": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_115": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "AvgPool2d_45": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_83": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(out, spx[self.nums])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_127": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_140": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_81": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(out, sp)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_85": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(out, self.pool(spx[self.nums]))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(math.floor(planes * (baseWidth / 64.0)))",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(math.floor(planes * (baseWidth / 64.0)))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_50": {
                "num_features": {
                    "value": "width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(math.floor(planes * (baseWidth / 64.0)))",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_128": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_130": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "net/res2net_diff_size.py": {
        "torch": {
            "rand_389": {
                "variable": {
                    "value": "images",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "224",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "224",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "width * scale",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_38": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "width * scale",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ModuleList_51": {
                "variable": {
                    "value": "self.convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "convs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "ModuleList_52": {
                "variable": {
                    "value": "self.bns",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "bns",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "Conv2d_54": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "width * scale",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_55": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_57": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "split_70": {
                "variable": {
                    "value": "spx",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.bn1(out)",
                            "Call"
                        ],
                        [
                            "self.relu(out)",
                            "Call"
                        ],
                        [
                            "torch.cat((out, spx[self.nums]), 1)",
                            "Call"
                        ],
                        [
                            "self.conv3(out)",
                            "Call"
                        ],
                        [
                            "self.bn3(out)",
                            "Call"
                        ],
                        [
                            "torch.cat((out, self.pool(spx[self.nums])), 1)",
                            "Call"
                        ],
                        [
                            "sp",
                            "Name"
                        ],
                        [
                            "torch.cat((out, sp), 1)",
                            "Call"
                        ],
                        [
                            "out + residual",
                            "BinOp"
                        ],
                        [
                            "self.relu(out)",
                            "Call"
                        ],
                        [
                            "self.fc(x)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "self.width",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_105": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_107": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_108": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_109": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_115": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_116": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_273": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_274": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_275": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sigmoid_280": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc3(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_308": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_310": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_311": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_312": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_318": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_368": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ],
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "AvgPool2d_45": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_83": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(out, spx[self.nums])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_128": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_141": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_331": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_344": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_81": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(out, sp)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_85": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(out, self.pool(spx[self.nums]))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(math.floor(planes * (baseWidth / 64.0)))",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(math.floor(planes * (baseWidth / 64.0)))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_50": {
                "num_features": {
                    "value": "width",
                    "type": "Name",
                    "possible_values": [
                        [
                            "int(math.floor(planes * (baseWidth / 64.0)))",
                            "Call"
                        ]
                    ]
                }
            },
            "Conv2d_129": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_131": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_332": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_334": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "net/resnet.py": {
        "torch": {
            "Conv2d_23": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "dilation",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_29": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_47": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_88": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_136": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_139": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_140": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_148": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_149": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_176": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv1x1(self.inplanes, planes * block.expansion, stride)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_190": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train_source.py": {
        "torch": {
            "max_47": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "SGD_89": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "param_group",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "param_group + [{'params': v, 'lr': args.lr * 0.1}]",
                            "BinOp"
                        ]
                    ]
                },
                "momentum": {
                    "value": "0.9",
                    "type": "Constant",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MultiStepLR_90": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "optim.SGD(param_group, momentum=0.9, weight_decay=0.0005)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.MultiStepLR",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_102": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "visDataset(path, label_file, train=True, transform=transform_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.batchsize",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2 * n_gpus if n_gpus <= 2 else 2",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_111": {
                "variable": {
                    "value": "val_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "visDataset(path, label_file, train=False, transform=transform_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.batchsize",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2 * n_gpus if n_gpus <= 2 else 2",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Linear_77": {
                "in_features": {
                    "value": "input_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "net.fc.in_features",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_139": {
                "obj": {
                    "value": "net",
                    "type": "Call",
                    "possible_values": [
                        [
                            "resnet101(pretrained=True)",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "./model_source/ + time_stamp_launch + - + dataset_name + 9_1_resnet50_best.pkl",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_142": {
                "obj": {
                    "value": "net",
                    "type": "Call",
                    "possible_values": [
                        [
                            "resnet101(pretrained=True)",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "./model_source/ + time_stamp_launch + - + dataset_name + 9_1_resnet50_last.pkl",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "train_visda.py": {
        "torch": {
            "CrossEntropyLoss_28": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "normalize_40": {
                "variable": {
                    "value": "feature",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.normalize(feature)",
                            "Call"
                        ]
                    ]
                }
            },
            "normalize_41": {
                "variable": {
                    "value": "pairs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pairs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.normalize(pairs)",
                            "Call"
                        ]
                    ]
                }
            },
            "normalize_203": {
                "variable": {
                    "value": "feat_t",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "all_fea.cuda()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "NLLLoss_229": {
                "variable": {
                    "value": "nll",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_413": {
                "variable": {
                    "value": "generator",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "generator",
                    "type": "Call",
                    "possible_values": [
                        [
                            "generator_fea_deconv(class_num=num_cls)",
                            "Call"
                        ],
                        [
                            "DataParallel(generator, device_ids=[0, 1])",
                            "Call"
                        ],
                        [
                            "generator.cuda()",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "DataParallel_414": {
                "variable": {
                    "value": "discriminator",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "discriminator",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Discriminator_fea()",
                            "Call"
                        ],
                        [
                            "DataParallel(discriminator, device_ids=[0, 1])",
                            "Call"
                        ],
                        [
                            "discriminator.cuda()",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "DataParallel_415": {
                "variable": {
                    "value": "fea_contrastor",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "fea_contrastor",
                    "type": "Call",
                    "possible_values": [
                        [
                            "contrastor()",
                            "Call"
                        ],
                        [
                            "DataParallel(fea_contrastor, device_ids=[0, 1])",
                            "Call"
                        ],
                        [
                            "fea_contrastor.cuda()",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "DataParallel_416": {
                "variable": {
                    "value": "source_net",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "source_net",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.load(self.args.source_model_path)",
                            "Call"
                        ],
                        [
                            "DataParallel(source_net, device_ids=[0, 1])",
                            "Call"
                        ],
                        [
                            "source_net.cuda()",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "DataParallel_417": {
                "variable": {
                    "value": "source_classifier",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "source_classifier",
                    "type": "Call",
                    "possible_values": [
                        [
                            "Classifier(num_classes=num_cls)",
                            "Call"
                        ],
                        [
                            "DataParallel(source_classifier, device_ids=[0, 1])",
                            "Call"
                        ],
                        [
                            "source_classifier.cuda()",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "SGD_449": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model_params + discriminator_group + contrastor_para",
                    "type": "BinOp",
                    "possible_values": []
                },
                "momentum": {
                    "value": "momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.9",
                            "Constant"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1e-06",
                            "Constant"
                        ]
                    ]
                }
            },
            "SGD_450": {
                "variable": {
                    "value": "optimizer_g",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "generator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.9",
                            "Constant"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1e-06",
                            "Constant"
                        ]
                    ]
                }
            },
            "NLLLoss_307": {
                "variable": {
                    "value": "nll",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softmax_83": {
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Softmax_142": {
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_182": {
                "input": {
                    "value": "torch.from_numpy(1 - dd) / 0.07",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "visualization/net/resnet.py": {
        "torch": {
            "Conv2d_21": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "dilation",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "Constant"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_86": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_134": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_137": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_138": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_146": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_147": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1000",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_174": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv1x1(self.inplanes, planes * block.expansion, stride)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_188": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "visualization/train_generator.py": {
        "torch": {
            "Embedding_54": {
                "variable": {
                    "value": "self.label_emb",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.class_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.input_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_56": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.input_dim, 1024)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_66": {
                "variable": {
                    "value": "self.deconv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.ConvTranspose2d(512, 256, kernel_size=2, stride=1, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_91": {
                "variable": {
                    "value": "self.MSE_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_92": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "normalize_96": {
                "variable": {
                    "value": "feature",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feature",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.normalize(feature)",
                            "Call"
                        ]
                    ]
                }
            },
            "normalize_97": {
                "variable": {
                    "value": "pairs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pairs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.normalize(pairs)",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_152": {
                "variable": {
                    "value": "generator",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "generator",
                    "type": "Call",
                    "possible_values": [
                        [
                            "generator_fea_deconv(class_num=num_cls)",
                            "Call"
                        ],
                        [
                            "DataParallel(generator, device_ids=[0, 1])",
                            "Call"
                        ],
                        [
                            "generator.cuda()",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "DataParallel_153": {
                "variable": {
                    "value": "my_net",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "my_net",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.load(self.args.source_model)",
                            "Call"
                        ],
                        [
                            "DataParallel(my_net, device_ids=[0, 1])",
                            "Call"
                        ],
                        [
                            "my_net.cuda()",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "[0, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "SGD_160": {
                "variable": {
                    "value": "optimizer_g",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "generator.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "momentum",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.9",
                            "Constant"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1e-06",
                            "Constant"
                        ]
                    ]
                }
            },
            "Linear_57": {
                "in_features": {
                    "value": "self.input_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm1d_58": {
                "num_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_62": {
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128 * (self.input_size // 16) * (self.input_size // 16)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm1d_63": {
                "num_features": {
                    "value": "128 * (self.input_size // 16) * (self.input_size // 16)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_64": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_67": {
                "in_channels": {
                    "value": "512",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_68": {
                "num_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_69": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_70": {
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_71": {
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "NLLLoss_200": {
                "variable": {
                    "value": "nll",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "visualization/train_source.py": {
        "torch": {
            "max_48": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LogSoftmax_65": {
                "variable": {
                    "value": "self.logsoftmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_69": {
                "variable": {
                    "value": "targets",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "log_probs.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MSELoss_139": {
                "variable": {
                    "value": "self.MSE_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_158": {
                "variable": {
                    "value": "(_, predicted)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "max_161": {
                "variable": {
                    "value": "(_, predicted_vis)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "pred",
                    "type": "Call",
                    "possible_values": [
                        [
                            "model.vis_fc(fe)",
                            "Call"
                        ],
                        [
                            "model.class_fc(pred)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_189": {
                "variable": {
                    "value": "net.vis_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_190": {
                "variable": {
                    "value": "net.class_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SGD_203": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "param_group",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "param_group + [{'params': v, 'lr': args.lr * 0.1}]",
                            "BinOp"
                        ]
                    ]
                },
                "momentum": {
                    "value": "0.9",
                    "type": "Constant",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MultiStepLR_204": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "optim.SGD(param_group, momentum=0.9, weight_decay=0.0005)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "args.MultiStepLR",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_216": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "visDataset(path, label_file, train=True, transform=transform_train_2)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.batchsize",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2 * n_gpus if n_gpus <= 2 else 2",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_227": {
                "variable": {
                    "value": "val_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "visDataset(path, label_file, train=False, transform=transform_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "args.batchsize",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2 * n_gpus if n_gpus <= 2 else 2",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "no_grad_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_47": {
                "input": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_186": {
                "in_features": {
                    "value": "input_dim",
                    "type": "Name",
                    "possible_values": [
                        [
                            "net.fc.in_features",
                            "Attribute"
                        ]
                    ]
                },
                "out_features": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "save_253": {
                "obj": {
                    "value": "net",
                    "type": "Call",
                    "possible_values": [
                        [
                            "resnet101(pretrained=True)",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "./model_source/ + time_stamp_launch + -visDA_9_1_resnet50_best.pkl",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_256": {
                "obj": {
                    "value": "net",
                    "type": "Call",
                    "possible_values": [
                        [
                            "resnet101(pretrained=True)",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "./model_source/ + time_stamp_launch + -visDA_9_1_resnet50_last.pkl",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}