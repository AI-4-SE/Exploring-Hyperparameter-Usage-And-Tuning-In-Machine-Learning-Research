{
    "src/features/feature_transfomers.py": {
        "sklearn": {}
    },
    "src/models/crosslingual.py": {
        "sklearn": {
            "LogisticRegression_45": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Pipeline_77": {
                "variable": {
                    "value": "feature_union",
                    "type": "Variable",
                    "possible_values": []
                },
                "steps": {
                    "value": "[('join pipelines', FeatureUnion(transformer_list=pipelines))]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "DictVectorizer_70": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FeatureUnion_78": {
                "transformer_list": {
                    "value": "pipelines",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.build_pipelines(language)",
                            "Call"
                        ]
                    ]
                }
            },
            "CountVectorizer_65": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "src/models/evaluation.py": {
        "sklearn": {
            "f1_score_26": {
                "variable": {
                    "value": "macro_F1",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "gold_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predicted_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "precision_recall_fscore_support_35": {
                "variable": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "gold_labels",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predicted_labels",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/models/monolingual.py": {
        "sklearn": {
            "LogisticRegression_30": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "random_state": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Pipeline_65": {
                "variable": {
                    "value": "feature_union",
                    "type": "Variable",
                    "possible_values": []
                },
                "steps": {
                    "value": "[('join pipelines', FeatureUnion(transformer_list=pipelines))]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "CountVectorizer_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DictVectorizer_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DictVectorizer_58": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FeatureUnion_65": {
                "transformer_list": {
                    "value": "pipelines",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.build_pipelines(language)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/models/multilingual.py": {
        "sklearn": {
            "f1_score_97": {
                "variable": {
                    "value": "macro_F1",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "gold_label",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "complex_word_predictions",
                    "type": "Name",
                    "possible_values": [
                        [
                            "complex_word_logits > 0.5",
                            "Compare"
                        ]
                    ]
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "Sequential_33": {
                "variable": {
                    "value": "self._complex_word_scorer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "complex_word_feedforward",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCEWithLogitsLoss_38": {
                "variable": {
                    "value": "self._loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_41": {
                "variable": {
                    "value": "self._lexical_dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "lexical_dropout",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "complex_word_feedforward.get_output_dim()",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/visualization/named_pipeline.py": {
        "sklearn": {}
    }
}