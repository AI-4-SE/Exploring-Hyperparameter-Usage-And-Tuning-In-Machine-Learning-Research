{
    "HIPe-Peeler/datasets.py": {
        "torch": {
            "cat_46": {
                "variable": {
                    "value": "item_edge",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[item_edge1, item_edge2, item_edge3, item_edge4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_53": {
                "variable": {
                    "value": "item_blur",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[item_blur1, item_blur2, item_blur3, item_blur4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_59": {
                "variable": {
                    "value": "item_gradient",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[item_gradient1, item_gradient2, item_gradient3, item_gradient4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "HIPe-Peeler/loss_function.py": {
        "torch": {
            "MSELoss_32": {
                "variable": {
                    "value": "self.criterionMSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SmoothL1Loss_33": {
                "variable": {
                    "value": "self.criterionL1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCELoss_34": {
                "variable": {
                    "value": "self.criterionCLS",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "unsqueeze_45": {
                "variable": {
                    "value": "self.gauss_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Parameter_50": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "self.gauss_kernel",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_62": {
                "variable": {
                    "value": "targetimgs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[targetimg, targetimg, targetimg, targetimg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pad_83": {
                "variable": {
                    "value": "gradient_genimg_h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(genimgs[:, :, 1:, :] - genimgs[:, :, :h_img - 1, :])",
                    "type": "Call",
                    "possible_values": []
                },
                "pad": {
                    "value": "(0, 0, 1, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "pad_84": {
                "variable": {
                    "value": "gradienth_genimg_w",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(genimgs[:, :, :, 1:] - genimgs[:, :, :, :w_img - 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "pad": {
                    "value": "(1, 0, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "pad_86": {
                "variable": {
                    "value": "gradient_targetimg_h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(targetimgs[:, :, 1:, :] - targetimgs[:, :, :h_img - 1, :])",
                    "type": "Call",
                    "possible_values": []
                },
                "pad": {
                    "value": "(0, 0, 1, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "pad_87": {
                "variable": {
                    "value": "gradienth_targetimg_w",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(targetimgs[:, :, :, 1:] - targetimgs[:, :, :, :w_img - 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "pad": {
                    "value": "(1, 0, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "abs_83": {
                "input": {
                    "value": "genimgs[:, :, 1:, :] - genimgs[:, :, :h_img - 1, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_84": {
                "input": {
                    "value": "genimgs[:, :, :, 1:] - genimgs[:, :, :, :w_img - 1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_86": {
                "input": {
                    "value": "targetimgs[:, :, 1:, :] - targetimgs[:, :, :h_img - 1, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_87": {
                "input": {
                    "value": "targetimgs[:, :, :, 1:] - targetimgs[:, :, :, :w_img - 1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "norm_114": {
                "input": {
                    "value": "gradient_genimg[:, 0:3, :, :] / (gradient_targetimg[:, 0:3, :, :] * masks[:, 0:3, :, :] + self.e)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "norm_116": {
                "input": {
                    "value": "gradient_genimg[:, 3:6, :, :] / (gradient_targetimg[:, 3:6, :, :] * masks[:, 3:6, :, :] + self.e)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "norm_118": {
                "input": {
                    "value": "gradient_genimg[:, 6:9, :, :] / (gradient_targetimg[:, 6:9, :, :] * masks[:, 6:9, :, :] + self.e)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "norm_120": {
                "input": {
                    "value": "gradient_genimg[:, 9:12, :, :] / (gradient_targetimg[:, 9:12, :, :] * masks[:, 9:12, :, :] + self.e)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "HIPe-Peeler/main.py": {
        "torch": {
            "RMSprop_73": {
                "variable": {
                    "value": "optimizer_G",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "filter(lambda p: p.requires_grad, G_network.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "alpha": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "LambdaLR_76": {
                "variable": {
                    "value": "lr_scheduler_G",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer_G",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.RMSprop(filter(lambda p: p.requires_grad, G_network.parameters()), lr=opt.lr, alpha=0.9)",
                            "Call"
                        ]
                    ]
                },
                "lr_lambda": {
                    "value": "LambdaLR(opt.n_epochs, opt.epoch, opt.decay_epoch).step",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_85": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset('/home/root_path', transforms_=transforms_, unaligned=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "opt.n_cpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_88": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset('/home/root_path', transforms_=transforms_, unaligned=True, mode='test')",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_54": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_111": {
                "variable": {
                    "value": "img_sample1",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, blur.data[:, 0:3, :, :], fake_B.data[:, 0:3, :, :], gradient.data[:, 0:3, :, :], edges.data[:, 0:3, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_113": {
                "variable": {
                    "value": "img_sample2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, blur.data[:, 3:6, :, :], fake_B.data[:, 3:6, :, :], gradient.data[:, 3:6, :, :], edges.data[:, 3:6, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_114": {
                "variable": {
                    "value": "img_sample3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, blur.data[:, 6:9, :, :], fake_B.data[:, 6:9, :, :], gradient.data[:, 6:9, :, :], edges.data[:, 6:9, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_115": {
                "variable": {
                    "value": "img_sample4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, blur.data[:, 9:12, :, :], fake_B.data[:, 9:12, :, :], gradient.data[:, 9:12, :, :], edges.data[:, 9:12, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_169": {
                "obj": {
                    "value": "G_network.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'saved_models/%s/G_AB_%d.pth' % (opt.dataset_name, epoch)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_116": {
                "tensors": {
                    "value": "[img_sample1, img_sample2, img_sample3, img_sample4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "HIPe-Peeler/models.py": {
        "torch": {
            "Sequential_54": {
                "variable": {
                    "value": "self.conv_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "is_available_72": {
                "variable": {
                    "value": "self.is_cuda",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_99": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*model",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "cat_125": {
                "tensors": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "in_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_29": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_33": {
                "in_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "InstanceNorm2d_51": {
                "num_features": {
                    "value": "outplane",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_52": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_97": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_31": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "in_channels": {
                    "value": "inplane",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "outplane",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_49": {
                "in_channels": {
                    "value": "inplane",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "outplane",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_111": {
                "tensors": {
                    "value": "[input_curr, edges[:, step * 3:step * 3 + 3, :, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_119": {
                "tensors": {
                    "value": "[x, edges[:, step * 3:step * 3 + 3, :, :]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "HIPe-Peeler/test_datasets.py": {
        "torch": {
            "cat_38": {
                "variable": {
                    "value": "item_edge",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[item_edge1, item_edge2, item_edge3, item_edge4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "HIPe-Peeler/test_smooth.py": {
        "torch": {
            "DataLoader_73": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset('/home/root_path', transforms_=transforms_, unaligned=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "opt.n_cpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_95": {
                "variable": {
                    "value": "img_sample1",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, fake_B.data[:, 0:3, :, :], mask.data[:, 0:3, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "img_sample2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, fake_B.data[:, 3:6, :, :], mask.data[:, 3:6, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_101": {
                "variable": {
                    "value": "img_sample3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, fake_B.data[:, 6:9, :, :], mask.data[:, 6:9, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_103": {
                "variable": {
                    "value": "img_sample4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, fake_B.data[:, 9:12, :, :], mask.data[:, 9:12, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_56": {
                "f": {
                    "value": "saved_models/smoothing/G_AB_400.pth",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "HIPe-Peeler/utils.py": {
        "torch": {
            "unsqueeze_21": {
                "variable": {
                    "value": "element",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "element",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.data",
                            "Attribute"
                        ],
                        [
                            "torch.unsqueeze(element, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_32": {
                "tensors": {
                    "value": "to_return",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        }
    },
    "HIPe_Guider/datasets.py": {
        "torch": {}
    },
    "HIPe_Guider/loss_function.py": {
        "torch": {
            "MSELoss_25": {
                "variable": {
                    "value": "self.criterionMSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "L1Loss_26": {
                "variable": {
                    "value": "self.criterionL1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCELoss_27": {
                "variable": {
                    "value": "self.criterionCLS",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Parameter_41": {
                "variable": {
                    "value": "self.weighth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "self.sobel_kernelh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_42": {
                "variable": {
                    "value": "self.weightw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "self.sobel_kernelw",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_68": {
                "variable": {
                    "value": "tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[tensor1, tensor2, tensor3, tensor4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_149": {
                "variable": {
                    "value": "targetimgs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[targetimg, targetimg, targetimg, targetimg]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pad_157": {
                "variable": {
                    "value": "gradient_targetimg_h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(targetimg[:, :, 1:, :] - targetimg[:, :, :h_img - 1, :])",
                    "type": "Call",
                    "possible_values": []
                },
                "pad": {
                    "value": "(0, 0, 1, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "pad_158": {
                "variable": {
                    "value": "gradienth_targetimg_w",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(targetimg[:, :, :, 1:] - targetimg[:, :, :, :w_img - 1])",
                    "type": "Call",
                    "possible_values": []
                },
                "pad": {
                    "value": "(1, 0, 0, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "mean_184": {
                "variable": {
                    "value": "loss4",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "masked_relative",
                    "type": "variable",
                    "possible_values": [
                        [
                            "masked_relative1 + masked_relative2 + masked_relative3 + masked_relative4",
                            "BinOp"
                        ]
                    ]
                }
            },
            "abs_157": {
                "input": {
                    "value": "targetimg[:, :, 1:, :] - targetimg[:, :, :h_img - 1, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_158": {
                "input": {
                    "value": "targetimg[:, :, :, 1:] - targetimg[:, :, :, :w_img - 1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_162": {
                "input": {
                    "value": "masks[:, 0:3, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sum_163": {
                "input": {
                    "value": "masks[:, 3:6, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sum_164": {
                "input": {
                    "value": "masks[:, 6:9, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "sum_165": {
                "input": {
                    "value": "masks[:, 9:12, :, :]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "abs_167": {
                "input": {
                    "value": "masks_gradient_1 - self.P1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_168": {
                "input": {
                    "value": "masks_gradient_2 - self.P2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_169": {
                "input": {
                    "value": "masks_gradient_3 - self.P3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_170": {
                "input": {
                    "value": "masks_gradient_4 - self.P4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_178": {
                "input": {
                    "value": "1 - masks[:, 0:3, :, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_179": {
                "input": {
                    "value": "1 - masks[:, 3:6, :, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_180": {
                "input": {
                    "value": "1 - masks[:, 6:9, :, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_181": {
                "input": {
                    "value": "1 - masks[:, 9:12, :, :]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_175": {
                "input": {
                    "value": "1 - gt_edge",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_176": {
                "input": {
                    "value": "1 - gt_edge",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_177": {
                "input": {
                    "value": "1 - gt_edge",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_89": {
                "input": {
                    "value": "gradX",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dx[i, j]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "abs_90": {
                "input": {
                    "value": "gradY",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dy[i, j]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "abs_112": {
                "input": {
                    "value": "gradX",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dx[i, j]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "HIPe_Guider/main.py": {
        "torch": {
            "RMSprop_62": {
                "variable": {
                    "value": "optimizer_G",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "filter(lambda p: p.requires_grad, G_network.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "alpha": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                }
            },
            "LambdaLR_65": {
                "variable": {
                    "value": "lr_scheduler_G",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer_G",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.RMSprop(filter(lambda p: p.requires_grad, G_network.parameters()), lr=opt.lr, alpha=0.9)",
                            "Call"
                        ]
                    ]
                },
                "lr_lambda": {
                    "value": "LambdaLR(opt.n_epochs, opt.epoch, opt.decay_epoch).step",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_74": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset('/home/root_path', transforms_=transforms_, unaligned=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "opt.n_cpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_77": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset('/home/root_path', transforms_=transforms_, unaligned=True, mode='test')",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_97": {
                "variable": {
                    "value": "img_sample1",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, edge, mask.data[:, 0:3, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "img_sample2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, edge, mask.data[:, 3:6, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_101": {
                "variable": {
                    "value": "img_sample3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, edge, mask.data[:, 6:9, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_103": {
                "variable": {
                    "value": "img_sample4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(real_A.data, edge, mask.data[:, 9:12, :, :])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_51": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_105": {
                "tensors": {
                    "value": "[img_sample1, img_sample2, img_sample3, img_sample4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_145": {
                "obj": {
                    "value": "G_network.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'saved_models/%s/G_AB_%d.pth' % (opt.dataset_name, epoch)",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "HIPe_Guider/models.py": {
        "torch": {
            "Sequential_29": {
                "variable": {
                    "value": "self.conv_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.conv_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "is_available_95": {
                "variable": {
                    "value": "self.is_cuda",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_102": {
                "variable": {
                    "value": "self.body",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_108": {
                "variable": {
                    "value": "self.tail_state1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "ResidualBlock(32, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_121": {
                "variable": {
                    "value": "self.tail_mask1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(32, 16, kernel_size=3, stride=1, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_155": {
                "variable": {
                    "value": "mask_input_curr",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "input_curr.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_165": {
                "variable": {
                    "value": "mask_output_curr1",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[mask_output_curr_1c_1, mask_output_curr_1c_1, mask_output_curr_1c_1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "mask_output_curr2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[mask_output_curr_1c_2, mask_output_curr_1c_2, mask_output_curr_1c_2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_177": {
                "variable": {
                    "value": "mask_output_curr3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[mask_output_curr_1c_3, mask_output_curr_1c_3, mask_output_curr_1c_3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_183": {
                "variable": {
                    "value": "mask_output_curr4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[mask_output_curr_1c_4, mask_output_curr_1c_4, mask_output_curr_1c_4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_653": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*discriminator_block(in_channels, 64, normalize=False)",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_52": {
                "*args": {
                    "value": "*conv_block",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "cat_427": {
                "tensors": {
                    "value": "masks",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_26": {
                "num_features": {
                    "value": "outplane",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_27": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_45": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReflectionPad2d_62": {
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_63": {
                "in_channels": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "dilation - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "InstanceNorm2d_64": {
                "num_features": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ReLU_65": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReflectionPad2d_66": {
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_67": {
                "in_channels": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_81": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_122": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "InstanceNorm2d_123": {
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_124": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_125": {
                "in_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_126": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ZeroPad2d_658": {
                "padding": {
                    "value": "(1, 0, 1, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_659": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "inplane",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "outplane",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_47": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_78": {
                "in_channels": {
                    "value": "in_channel",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_channel",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "ker_size",
                    "type": "variable",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "padd",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "InstanceNorm2d_80": {
                "num_features": {
                    "value": "out_channel",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_647": {
                "in_channels": {
                    "value": "in_filters",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_filters",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_650": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_24": {
                "in_channels": {
                    "value": "inplane",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "outplane",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "InstanceNorm2d_649": {
                "num_features": {
                    "value": "out_filters",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "HIPe_Guider/test.py": {
        "torch": {
            "DataLoader_72": {
                "variable": {
                    "value": "dataloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset('/home/root_path', transforms_=transforms_, unaligned=True)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_51": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_64": {
                "f": {
                    "value": "saved_models/BSDS500/G_AB_100.pth",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "HIPe_Guider/test_datasets.py": {
        "torch": {}
    },
    "HIPe_Guider/utils.py": {
        "torch": {
            "unsqueeze_21": {
                "variable": {
                    "value": "element",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "element",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data.data",
                            "Attribute"
                        ],
                        [
                            "torch.unsqueeze(element, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_32": {
                "tensors": {
                    "value": "to_return",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        }
    }
}