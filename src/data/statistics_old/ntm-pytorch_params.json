{
    "evaluate.py": {
        "torch": {
            "BCELoss_23": {
                "variable": {
                    "value": "criterion",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_89": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "target.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_100": {
                "variable": {
                    "value": "in_data",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.zeros(input.size()[1])",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_122": {
                "variable": {
                    "value": "error",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(binary_output - target)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_96": {
                "variable": {
                    "value": "in_data",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "input[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_81": {
                "f": {
                    "value": "PATH",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(cur_dir, args.saved_model)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_100": {
                "*size": {
                    "value": "input.size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "abs_122": {
                "input": {
                    "value": "binary_output - target",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "ntm/datasets/associative.py": {
        "torch": {
            "randint_37": {
                "variable": {
                    "value": "num_item",
                    "type": "Name",
                    "possible_values": []
                },
                "low": {
                    "value": "self.min_item",
                    "type": "Attribute",
                    "possible_values": []
                },
                "high": {
                    "value": "self.max_item",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Binomial_41": {
                "variable": {
                    "value": "seq",
                    "type": "Name",
                    "possible_values": []
                },
                "total_count": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "probs": {
                    "value": "prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 * torch.ones([self.seq_len, self.seq_width], dtype=torch.float64)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_45": {
                "variable": {
                    "value": "input_items",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[(self.seq_len + 1) * (num_item + 1) + 1, self.seq_width + 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_68": {
                "variable": {
                    "value": "target_item",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[self.seq_len, self.seq_width]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "randint_56": {
                "variable": {
                    "value": "query_item",
                    "type": "Name",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "high": {
                    "value": "num_item - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_40": {
                "*size": {
                    "value": "[self.seq_len, self.seq_width]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "ntm/datasets/copy.py": {
        "torch": {
            "randint_35": {
                "variable": {
                    "value": "seq_len",
                    "type": "Name",
                    "possible_values": []
                },
                "low": {
                    "value": "self.min_seq_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "high": {
                    "value": "self.max_seq_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Binomial_38": {
                "variable": {
                    "value": "seq",
                    "type": "Name",
                    "possible_values": []
                },
                "total_count": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "probs": {
                    "value": "prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 * torch.ones([seq_len, self.seq_width], dtype=torch.float64)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_41": {
                "variable": {
                    "value": "input_seq",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[seq_len + 2, self.seq_width + 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_46": {
                "variable": {
                    "value": "target_seq",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[seq_len, self.seq_width]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ones_37": {
                "*size": {
                    "value": "[seq_len, self.seq_width]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "ntm/datasets/ngram.py": {
        "torch": {
            "Beta_39": {
                "variable": {
                    "value": "beta_prob",
                    "type": "Name",
                    "possible_values": []
                },
                "concentration1": {
                    "value": "torch.tensor([0.5])",
                    "type": "Call",
                    "possible_values": []
                },
                "concentration0": {
                    "value": "torch.tensor([0.5])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_48": {
                "variable": {
                    "value": "input_seq",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[self.seq_len]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Bernoulli_49": {
                "variable": {
                    "value": "prob",
                    "type": "Name",
                    "possible_values": []
                },
                "probs": {
                    "value": "torch.tensor([0.5])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Bernoulli_56": {
                "variable": {
                    "value": "input_seq[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "probs": {
                    "value": "prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Bernoulli(torch.tensor([0.5]))",
                            "Call"
                        ],
                        [
                            "lookup_table[prev]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "tensor_39": {
                "data": {
                    "value": "[0.5]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_49": {
                "data": {
                    "value": "[0.5]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "ntm/datasets/prioritysort.py": {
        "torch": {
            "Binomial_38": {
                "variable": {
                    "value": "seq",
                    "type": "Name",
                    "possible_values": []
                },
                "total_count": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "probs": {
                    "value": "prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 * torch.ones([self.input_seq_len, self.seq_width], dtype=torch.float64)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_40": {
                "variable": {
                    "value": "input_seq",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[self.input_seq_len, self.seq_width + 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Uniform_47": {
                "variable": {
                    "value": "priority",
                    "type": "Name",
                    "possible_values": []
                },
                "low": {
                    "value": "torch.tensor([-1.0])",
                    "type": "Call",
                    "possible_values": []
                },
                "high": {
                    "value": "torch.tensor([1.0])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sort_51": {
                "variable": {
                    "value": "(sorted, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "input_seq",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.zeros([self.input_seq_len, self.seq_width + 1])",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "descending": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ones_36": {
                "*size": {
                    "value": "[self.input_seq_len, self.seq_width]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_47": {
                "data": {
                    "value": "[1.0]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "ntm/datasets/repeatcopy.py": {
        "torch": {
            "randint_48": {
                "variable": {
                    "value": "seq_len",
                    "type": "Name",
                    "possible_values": []
                },
                "low": {
                    "value": "self.min_seq_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "high": {
                    "value": "self.max_seq_len",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "randint_50": {
                "variable": {
                    "value": "rep",
                    "type": "Name",
                    "possible_values": []
                },
                "low": {
                    "value": "self.min_repeat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "high": {
                    "value": "self.max_repeat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Binomial_53": {
                "variable": {
                    "value": "seq",
                    "type": "Name",
                    "possible_values": []
                },
                "total_count": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "probs": {
                    "value": "prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5 * torch.ones([seq_len, self.seq_width], dtype=torch.float64)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_56": {
                "variable": {
                    "value": "input_seq",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[seq_len + 2, self.seq_width + 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_61": {
                "variable": {
                    "value": "target_seq",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[seq_len * rep + 1, self.seq_width + 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ones_52": {
                "*size": {
                    "value": "[seq_len, self.seq_width]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "ntm/modules/controller.py": {
        "torch": {
            "LSTMCell_15": {
                "variable": {
                    "value": "self.controller_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "input_size",
                    "type": "Name",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "controller_size",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_16": {
                "variable": {
                    "value": "self.out_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "read_data_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_size",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "zeros_19": {
                "variable": {
                    "value": "self.h_state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "[1, controller_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_20": {
                "variable": {
                    "value": "self.c_state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "[1, controller_size]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Linear_22": {
                "variable": {
                    "value": "self.h_bias_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "controller_size",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "variable": {
                    "value": "self.c_bias_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "controller_size",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "cat_29": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[in_data] + prev_reads",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_35": {
                "variable": {
                    "value": "complete_state",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.h_state] + read_data",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sigmoid_36": {
                "variable": {
                    "value": "output",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.out_net(complete_state)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_40": {
                "variable": {
                    "value": "in_data",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0]]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "ntm/modules/head.py": {
        "torch": {
            "Linear_14": {
                "variable": {
                    "value": "self.key_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "controller_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "key_size",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_15": {
                "variable": {
                    "value": "self.key_strength_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "controller_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.interpolation_gate_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "controller_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_20": {
                "variable": {
                    "value": "self.shift_weighting_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "controller_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_21": {
                "variable": {
                    "value": "self.sharpen_factor_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "controller_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_26": {
                "variable": {
                    "value": "self.write_data_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "controller_size",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "key_size",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "softplus_69": {
                "variable": {
                    "value": "b",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.key_strength_fc(controller_state)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_70": {
                "variable": {
                    "value": "g",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.interpolation_gate_fc(controller_state)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_71": {
                "variable": {
                    "value": "s",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.shift_weighting_fc(controller_state)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "div_86": {
                "variable": {
                    "value": "current_weights",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "current_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "shifted_weights ** y",
                            "BinOp"
                        ],
                        [
                            "torch.div(current_weights, torch.sum(current_weights, dim=1).view(-1, 1) + 1e-16)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "torch.sum(current_weights, dim=1).view(-1, 1) + 1e-16",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_103": {
                "variable": {
                    "value": "in_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[in_tensor[:, -pad:], in_tensor, in_tensor[:, :pad]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "conv1d_105": {
                "variable": {
                    "value": "out_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "in_tensor.view(batch_size, 1, -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "weight": {
                    "value": "weights.view(batch_size, 1, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softplus_74": {
                "input": {
                    "value": "self.sharpen_factor_fc(controller_state)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_86": {
                "input": {
                    "value": "current_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "shifted_weights ** y",
                            "BinOp"
                        ],
                        [
                            "torch.div(current_weights, torch.sum(current_weights, dim=1).view(-1, 1) + 1e-16)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "ntm/modules/memory.py": {
        "torch": {
            "zeros_12": {
                "variable": {
                    "value": "self.memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "[1, self.n, self.m]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Linear_15": {
                "variable": {
                    "value": "self.memory_bias_fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n * self.m",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cosine_similarity_53": {
                "variable": {
                    "value": "similarity",
                    "type": "Name",
                    "possible_values": []
                },
                "x1": {
                    "value": "key",
                    "type": "Name",
                    "possible_values": [
                        [
                            "key.view(-1, 1, self.m)",
                            "Call"
                        ]
                    ]
                },
                "x2": {
                    "value": "self.memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "softmax_54": {
                "variable": {
                    "value": "content_weights",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "key_strength * similarity",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "bmm_77": {
                "variable": {
                    "value": "data",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "weights.view(-1, 1, self.n)",
                            "Call"
                        ],
                        [
                            "weights.view(-1, self.n, 1).expand(self.memory.size())",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "self.memory",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_116": {
                "variable": {
                    "value": "in_data",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "sigmoid_117": {
                "variable": {
                    "value": "memory_bias",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.memory_bias_fc(in_data)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "ntm/ntm.py": {
        "torch": {
            "ModuleList_27": {
                "variable": {
                    "value": "self.heads",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_43": {
                "variable": {
                    "value": "prev_weight",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[batch_size, self.memory.n]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_47": {
                "variable": {
                    "value": "prev_read",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "[batch_size, self.memory.m]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "BCELoss_55": {
                "variable": {
                    "value": "criterion",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RMSprop_57": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "ntm.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "alpha": {
                    "value": "args.alpha",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "args.momentum",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_88": {
                "variable": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "target.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_99": {
                "variable": {
                    "value": "in_data",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.zeros(input.size()[1])",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_127": {
                "variable": {
                    "value": "error",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.abs(binary_output - target)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_140": {
                "obj": {
                    "value": "ntm.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "PATH",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(cur_dir, args.saved_model)",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_95": {
                "variable": {
                    "value": "in_data",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "input[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "clip_grad_value__120": {
                "parameters": {
                    "value": "ntm.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "clip_value": {
                    "value": "10",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_99": {
                "*size": {
                    "value": "input.size()[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "abs_127": {
                "input": {
                    "value": "binary_output - target",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}