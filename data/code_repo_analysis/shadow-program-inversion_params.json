{
    "shadow_program_inversion/common/trajectory.py": {
        "torch": {
            "tensor_80": {
                "variable": {
                    "value": "base_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.to_list()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_82": {
                "variable": {
                    "value": "eos",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "base_tensor.size(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_82": {
                "variable": {
                    "value": "eos",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "tensor_84": {
                "variable": {
                    "value": "success",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "self.success_label",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_85": {
                "variable": {
                    "value": "traj_unpadded",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(eos, success, base_tensor)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/data/dataset.py": {
        "torch": {
            "from_numpy_40": {
                "ndarray": {
                    "value": "start_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(inputs_arr, start_states_arr, sim_arr, real_arr)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_41": {
                "ndarray": {
                    "value": "real",
                    "type": "variable",
                    "possible_values": [
                        [
                            "zip(inputs_arr, start_states_arr, sim_arr, real_arr)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "shadow_program_inversion/experiments/contact/analyze_results.py": {
        "torch": {
            "abs_33": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "goal_force - unpadded[-3:, force_z_dim].median()",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_35": {
                "tensors": {
                    "value": "losses",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "median_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_32": {
                "ndarray": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": [
                        [
                            "results_arr",
                            "variable"
                        ]
                    ]
                }
            },
            "from_numpy_43": {
                "ndarray": {
                    "value": "traj_before",
                    "type": "variable",
                    "possible_values": [
                        [
                            "trajectories_before",
                            "variable"
                        ]
                    ]
                }
            },
            "from_numpy_46": {
                "ndarray": {
                    "value": "traj_after",
                    "type": "variable",
                    "possible_values": [
                        [
                            "trajectories_after",
                            "variable"
                        ]
                    ]
                }
            }
        }
    },
    "shadow_program_inversion/experiments/contact/dmp/collect_real_data.py": {
        "torch": {
            "cat_68": {
                "variable": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.as_tensor(goal_pose.parameters()), torch.as_tensor([tau]))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "as_tensor_70": {
                "variable": {
                    "value": "point_from_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "start_pose.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_76": {
                "tensors": {
                    "value": "points_from",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "stack_77": {
                "tensors": {
                    "value": "trajectories",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "as_tensor_68": {
                "data": {
                    "value": "[tau]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/experiments/contact/dmp/generate_sim_data.py": {
        "torch": {
            "as_tensor_34": {
                "variable": {
                    "value": "fixed_orientations",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "approach_pose.orientation.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "unsqueeze_34": {
                "variable": {
                    "value": "fixed_orientations",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_36": {
                "variable": {
                    "value": "forces",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(cartesian_positions.size(0), 6)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_37": {
                "variable": {
                    "value": "traj_without_meta",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(cartesian_positions, fixed_orientations, forces)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_63": {
                "variable": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.as_tensor(goal_pose.parameters()), torch.as_tensor([tau]))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "as_tensor_65": {
                "variable": {
                    "value": "point_from_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "approach_pose.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_69": {
                "tensors": {
                    "value": "points_from",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "stack_70": {
                "tensors": {
                    "value": "simulations",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pool.starmap(_generate_sim_data_concurrent, args)",
                            "Call"
                        ]
                    ]
                }
            },
            "as_tensor_63": {
                "data": {
                    "value": "[tau]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/experiments/contact/dmp/optimize_parameters.py": {
        "torch": {
            "tensor_23": {
                "data": {
                    "value": "target_force",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "stack_35": {
                "tensors": {
                    "value": "optimized_param_history[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "stack_80": {
                "tensors": {
                    "value": "results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "zip(*result_tuples)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "shadow_program_inversion/experiments/contact/dmp/test_optimized_parameters.py": {
        "torch": {
            "stack_55": {
                "variable": {
                    "value": "result_trajectories",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[traj.to_tensor(pad_to=MAX_TRAJECTORY_LEN) for traj in result_trajectories]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "from_numpy_41": {
                "variable": {
                    "value": "param_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "optimized_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optimized_params in enumerate(optimized_parameters)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "shadow_program_inversion/experiments/contact/urscript/collect_real_data.py": {
        "torch": {
            "cat_57": {
                "variable": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.as_tensor(goal_pose.parameters()), torch.as_tensor([vel, acc]))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "as_tensor_59": {
                "variable": {
                    "value": "point_from_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "approach_pose.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_65": {
                "tensors": {
                    "value": "points_from",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "stack_66": {
                "tensors": {
                    "value": "trajectories",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "as_tensor_57": {
                "data": {
                    "value": "[vel, acc]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/experiments/contact/urscript/generate_sim_data.py": {
        "torch": {
            "stack_48": {
                "variable": {
                    "value": "input_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "stack_49": {
                "variable": {
                    "value": "points_from_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "points_from",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "cat_44": {
                "variable": {
                    "value": "input_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.as_tensor(goal_pose.parameters()), torch.as_tensor([vel, acc]))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "as_tensor_46": {
                "variable": {
                    "value": "point_from_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "approach_pose.parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "as_tensor_44": {
                "data": {
                    "value": "[vel, acc]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/experiments/contact/urscript/optimize_parameters.py": {
        "torch": {
            "tensor_23": {
                "data": {
                    "value": "target_force",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "stack_35": {
                "tensors": {
                    "value": "optimized_param_history[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "stack_80": {
                "tensors": {
                    "value": "results",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "zip(*result_tuples)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "shadow_program_inversion/experiments/contact/urscript/test_optimized_parameters.py": {
        "torch": {
            "stack_49": {
                "variable": {
                    "value": "result_trajectories",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[traj.to_tensor(pad_to=TRAJECTORY_LENGTH) for traj in result_trajectories]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "from_numpy_35": {
                "variable": {
                    "value": "param_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "optimized_params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "optimized_params in enumerate(optimized_parameters)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "shadow_program_inversion/model/autoregressive.py": {
        "torch": {
            "Sequential_18": {
                "variable": {
                    "value": "self.hidden_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(static_input_size, 32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.cell_state_net",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(static_input_size, 32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LSTM_37": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.lstm_input_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "lstm_hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lstm_hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_38": {
                "variable": {
                    "value": "self.dropout1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_39": {
                "variable": {
                    "value": "self.lstm2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "lstm_hidden_size + self.lstm_input_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "lstm_hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lstm_hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_40": {
                "variable": {
                    "value": "self.dropout2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_41": {
                "variable": {
                    "value": "self.lstm3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "lstm_hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "lstm_hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lstm_hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_42": {
                "variable": {
                    "value": "self.dropout3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_43": {
                "variable": {
                    "value": "self.lstm4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "lstm_hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "lstm_hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lstm_hidden_size",
                            "Method Argument"
                        ]
                    ]
                },
                "num_layers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_44": {
                "variable": {
                    "value": "self.dropout4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_45": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "lstm_hidden_size * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "recurrent_input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "recurrent_input_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_54": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(static_inputs.unsqueeze(1).repeat(1, recurrent_inputs.size(1), 1), recurrent_inputs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_58": {
                "variable": {
                    "value": "x2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[h1, x]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_62": {
                "variable": {
                    "value": "x3",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[h1, h2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_66": {
                "variable": {
                    "value": "x4",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[h2, h3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_70": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[h3, h4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "load_87": {
                "variable": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filepath",
                    "type": "variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "save_78": {
                "obj": {
                    "value": "{'state_dict': self.state_dict(), 'static_input_size': self.static_input_size, 'recurrent_input_size': self.recurrent_input_size, 'lstm_hidden_size': self.lstm_hidden_size}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "filepath",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_18": {
                "in_features": {
                    "value": "static_input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "static_input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SELU_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_20": {
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SELU_21": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_22": {
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "lstm_hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lstm_hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "SELU_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_25": {
                "in_features": {
                    "value": "static_input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "static_input_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SELU_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_27": {
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SELU_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_29": {
                "in_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "lstm_hidden_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "lstm_hidden_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "SELU_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/model/residual_gru.py": {
        "torch": {
            "Linear_18": {
                "variable": {
                    "value": "self.input_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.input_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_19": {
                "variable": {
                    "value": "self.grus",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[nn.GRU(2 * hidden_size, hidden_size, batch_first=True) for _ in range(self.num_layers)]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "Linear_21": {
                "variable": {
                    "value": "self.output_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "output_size",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "load_53": {
                "variable": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filepath",
                    "type": "variable",
                    "possible_values": []
                },
                "map_location": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_26": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "device",
                            "Method Argument"
                        ],
                        [
                            "device",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cat_32": {
                "variable": {
                    "value": "gru_input",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(x_prev, x)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "save_42": {
                "obj": {
                    "value": "{'state_dict': self.state_dict(), 'input_size': self.input_size, 'output_size': self.output_size, 'hidden_size': self.hidden_size, 'num_layers': self.num_layers, 'dropout_p': self.dropout_p}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "filepath",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "SELU_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GRU_19": {
                "*args": {
                    "value": "2 * hidden_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "SELU_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_36": {
                "p": {
                    "value": "self.dropout_p",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/objectives/contact_objective.py": {
        "torch": {
            "median_17": {
                "variable": {
                    "value": "median_force",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "trajectory[:, -self.duration:, self.dimension]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "L1Loss_18": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/priors/differentiable_prior.py": {
        "torch": {}
    },
    "shadow_program_inversion/priors/dummy_prior.py": {
        "torch": {
            "zeros_20": {
                "variable": {
                    "value": "eos_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs_world.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "max_trajectory_len",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "inputs_world.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_22": {
                "variable": {
                    "value": "success_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs_world.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "max_trajectory_len",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "inputs_world.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_23": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(eos_labels, success_probs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_25": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, point_start_world[:, :7].unsqueeze(1).repeat(1, max_trajectory_len, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_27": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, torch.zeros(batch_size, max_trajectory_len, 6, device=inputs_world.device))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_29": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, point_start_world[:, 7].unsqueeze(1).repeat(1, max_trajectory_len, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_27": {
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs_world.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "max_trajectory_len",
                    "type": "variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "inputs_world.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/priors/neural_prior.py": {
        "torch": {
            "is_available_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_22": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "DataLoader_105": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "training_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DirectoryDataset(data_dir, end=split_idx)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.model_config['batch_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_107": {
                "variable": {
                    "value": "validate_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "validation_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DirectoryDataset(data_dir, start=split_idx)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.model_config['batch_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_117": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.model_config['learning_rate']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_202": {
                "variable": {
                    "value": "all_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(static_inputs, points_from)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_233": {
                "variable": {
                    "value": "normalized_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(normalized_template_inputs, normalized_start_state)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_234": {
                "variable": {
                    "value": "recurrent_inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, 1, self.output_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')",
                            "IfExp"
                        ]
                    ]
                }
            },
            "cat_349": {
                "variable": {
                    "value": "scaled_total",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(meta_inf, scaled_trajectory)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_351": {
                "tensors": {
                    "value": "output_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_363": {
                "variable": {
                    "value": "scaled_total",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(meta_inf, scaled_trajectory)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_365": {
                "tensors": {
                    "value": "output_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_57": {
                "variable": {
                    "value": "simulator.input_limits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "limits['inputs']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tensor_58": {
                "variable": {
                    "value": "simulator.state_limits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "limits['states']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tensor_59": {
                "variable": {
                    "value": "simulator.output_limits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "limits['outputs']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "cat_262": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, torch.zeros(batch_size, traj_len, 6, device=inputs_world.device))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_264": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, trajectory_world[:, :, -1].unsqueeze(-1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "DataLoader_275": {
                "variable": {
                    "value": "loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BCELoss_120": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCELoss_121": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_122": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_239": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_258": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(trajectory_world[:, :, :2], point_start_world[:, :7].unsqueeze(0).repeat(1, traj_len, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_266": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, point_start_world[:, 7].view(batch_size, 1, 1).repeat(1, traj_len, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_284": {
                "variable": {
                    "value": "output_delta",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sim_delta, real_delta)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_285": {
                "variable": {
                    "value": "batch_output_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(output_delta.view(-1, output_delta.size(-1)), dim=0)[0], torch.max(output_delta.view(-1, output_delta.size(-1)), dim=0)[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_287": {
                "variable": {
                    "value": "batch_input_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(inputs, dim=0)[0], torch.max(inputs, dim=0)[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_288": {
                "variable": {
                    "value": "batch_state_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(start_state, dim=0)[0], torch.max(start_state, dim=0)[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "isnan_347": {
                "input": {
                    "value": "scaled_trajectory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "transformations.scale(unscaled_trajectory, label_limits[0, 2:], label_limits[1, 2:], -1, 1)",
                            "Call"
                        ],
                        [
                            "transformations.scale(unscaled_trajectory, -1, 1, output_limits[0, 2:], output_limits[1, 2:])",
                            "Call"
                        ]
                    ]
                }
            },
            "any_347": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_347": {
                "input": {
                    "value": "scaled_trajectory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "transformations.scale(unscaled_trajectory, label_limits[0, 2:], label_limits[1, 2:], -1, 1)",
                            "Call"
                        ],
                        [
                            "transformations.scale(unscaled_trajectory, -1, 1, output_limits[0, 2:], output_limits[1, 2:])",
                            "Call"
                        ]
                    ]
                }
            },
            "isnan_361": {
                "input": {
                    "value": "unscaled_trajectory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "trajectory[:, 2:]",
                            "Subscript"
                        ],
                        [
                            "trajectory[:, 2:]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "any_361": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_361": {
                "input": {
                    "value": "unscaled_trajectory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "trajectory[:, 2:]",
                            "Subscript"
                        ],
                        [
                            "trajectory[:, 2:]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_246": {
                "variable": {
                    "value": "predicted_deltas_normalized",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(predicted_deltas_normalized, outputs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_294": {
                "variable": {
                    "value": "computed_output_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(batch_output_limits[0], computed_output_limits[0]), torch.max(batch_output_limits[1], computed_output_limits[1]))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_296": {
                "variable": {
                    "value": "computed_input_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(batch_input_limits[0], computed_input_limits[0]), torch.max(batch_input_limits[1], computed_input_limits[1]))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_298": {
                "variable": {
                    "value": "computed_state_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(batch_state_limits[0], computed_state_limits[0]), torch.max(batch_state_limits[1], computed_state_limits[1]))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_146": {
                "tensors": {
                    "value": "(delta_labels[:, :, :2], delta_labels[:, :, -1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "no_grad_157": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "all_240": {
                "input": {
                    "value": "recurrent_inputs[:, 0, 0] < 0.5",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "zeros_262": {
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inputs_world.size(0)",
                            "Call"
                        ],
                        [
                            "trajectory_world.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "traj_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "trajectory_world.size(1)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "inputs_world.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_281": {
                "tensors": {
                    "value": "(sim_delta[:, :, :2], sim_delta[:, :, -1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_283": {
                "tensors": {
                    "value": "(real_delta[:, :, :2], real_delta[:, :, -1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_165": {
                "tensors": {
                    "value": "(delta_labels[:, :, :2], delta_labels[:, :, -1])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "min_285": {
                "input": {
                    "value": "output_delta.view(-1, output_delta.size(-1))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_286": {
                "input": {
                    "value": "output_delta.view(-1, output_delta.size(-1))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "min_287": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tqdm(loader)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_287": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tqdm(loader)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "min_288": {
                "input": {
                    "value": "start_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tqdm(loader)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_288": {
                "input": {
                    "value": "start_state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tqdm(loader)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "min_294": {
                "input": {
                    "value": "batch_output_limits[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_295": {
                "input": {
                    "value": "batch_output_limits[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_296": {
                "input": {
                    "value": "batch_input_limits[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_297": {
                "input": {
                    "value": "batch_input_limits[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_298": {
                "input": {
                    "value": "batch_state_limits[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_299": {
                "input": {
                    "value": "batch_state_limits[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/priors/path_generator.py": {
        "torch": {
            "stack_35": {
                "variable": {
                    "value": "points",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.tensor([0, 0, 0, 1, 0, 0, 0], dtype=point_to_relative.dtype, device=point_to_relative.device), point_to_relative[:7])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sign_77": {
                "variable": {
                    "value": "s",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.end_pos - self.start_pos",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cat_160": {
                "variable": {
                    "value": "top_block",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(ori, pos.view(3, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "norm_191": {
                "variable": {
                    "value": "dist",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "diff",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.v_base_end - self.v_base_start",
                            "BinOp"
                        ]
                    ]
                }
            },
            "round_253": {
                "variable": {
                    "value": "steps_rounded",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "steps",
                    "type": "variable",
                    "possible_values": [
                        [
                            "dur / self.sampling_interval + 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_84": {
                "variable": {
                    "value": "self.t1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "(self.end_pos - self.start_pos) / s / self.max_acc",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "matmul_178": {
                "input": {
                    "value": "self.r_base_start",
                    "type": "Attribute",
                    "possible_values": []
                },
                "other": {
                    "value": "rotation_from_axis_angle(self.r_start_end_axis, theta)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_49": {
                "tensors": {
                    "value": "(point_to_relative, inputs[7:])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_161": {
                "tensors": {
                    "value": "(top_block, torch.tensor([[0.0, 0.0, 0.0, 1.0]], device=ori.device))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_209": {
                "variable": {
                    "value": "self.path_length",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "dist.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "dist.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_263": {
                "tensors": {
                    "value": "path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.generate_path(inputs)",
                            "Call"
                        ],
                        [
                            "MotionTrajectoryOptimizerTimeCartesian(vel, acc).optimize(points)",
                            "Call"
                        ],
                        [
                            "self.generate_path(torch.cat((point_to_relative, inputs[7:]), dim=-1))",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "path",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "tensor_35": {
                "data": {
                    "value": "[0, 0, 0, 1, 0, 0, 0]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "point_to_relative.dtype",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "point_to_relative.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_161": {
                "data": {
                    "value": "[[0.0, 0.0, 0.0, 1.0]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "ori.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/priors/static_prior.py": {
        "torch": {
            "zeros_58": {
                "variable": {
                    "value": "eos_labels",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "traj_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "path.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "inputs_world.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_60": {
                "variable": {
                    "value": "success_probs",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "traj_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "path.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "inputs_world.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_61": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(eos_labels, success_probs)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "load_130": {
                "variable": {
                    "value": "self.outputs_cached",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "filepath",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_63": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, path)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_67": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, torch.zeros(traj_len, 6, device=inputs_world.device))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_69": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, path)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_122": {
                "tensors": {
                    "value": "output_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "save_126": {
                "obj": {
                    "value": "self.outputs_cached",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "filepath",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "cat_65": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, start_state_world[:7].unsqueeze(0).repeat(traj_len, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_71": {
                "variable": {
                    "value": "traj",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(traj, start_state_world[7].view(1, 1).repeat(traj_len, 1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_91": {
                "tensors": {
                    "value": "(inputs_world[i], start_state_world[i])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_91": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_106": {
                "tensors": {
                    "value": "not_cached[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_106": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_112": {
                "tensors": {
                    "value": "(input_world, start_state_world[batch_idx])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_112": {
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_67": {
                "*size": {
                    "value": "traj_len",
                    "type": "variable",
                    "possible_values": [
                        [
                            "path.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "inputs_world.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/shadow_program.py": {
        "torch": {
            "device_10": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cat_46": {
                "variable": {
                    "value": "combined_trajectory",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "partial_trajectories",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_45": {
                "variable": {
                    "value": "state_from",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(state_from, partial_trajectory[0, -1, 15].unsqueeze(0))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Adam_70": {
                "params": {
                    "value": "inputs_world",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rates[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Adam_72": {
                "params": {
                    "value": "[inputs_world[i]]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rates[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "empty_104": {
                "variable": {
                    "value": "inputs_clipped",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(param_tensor)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/shadow_skill.py": {
        "torch": {
            "set_printoptions_21": {
                "precision": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "device_22": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "ones_35": {
                "variable": {
                    "value": "self.learnable_parameter_gradient_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "static_input_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "misc['static_input_size']",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')",
                            "IfExp"
                        ]
                    ]
                }
            },
            "DataLoader_114": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "training_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DirectoryDataset(data_dir, end=split_idx)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.model_config['batch_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_116": {
                "variable": {
                    "value": "validate_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "validation_data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DirectoryDataset(data_dir, start=split_idx)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.model_config['batch_size']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_128": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.model_config['learning_rate']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_232": {
                "variable": {
                    "value": "combined_input_seq",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(input_seq, normalized_sim)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_343": {
                "tensors": {
                    "value": "(meta_inf, residual_trajectory)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_349": {
                "tensors": {
                    "value": "(meta_inf, complete_trajectory)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_368": {
                "variable": {
                    "value": "scaled_total",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(meta_inf, scaled_trajectory)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_370": {
                "tensors": {
                    "value": "output_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_382": {
                "variable": {
                    "value": "scaled_total",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(meta_inf, scaled_trajectory)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_384": {
                "tensors": {
                    "value": "output_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_51": {
                "variable": {
                    "value": "template.input_limits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "limits['inputs']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "tensor_52": {
                "variable": {
                    "value": "template.output_limits",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "limits['outputs']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "mean_278": {
                "input": {
                    "value": "trajectory[:, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "DataLoader_303": {
                "variable": {
                    "value": "loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tqdm(train_loader)",
                            "Call"
                        ],
                        [
                            "tqdm(validate_loader)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_94": {
                "tensors": {
                    "value": "all_inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(all_inputs, dim=0)[:num_data]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_95": {
                "tensors": {
                    "value": "all_points_from",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(all_points_from, dim=0)[:num_data]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_308": {
                "variable": {
                    "value": "outputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(sim, real)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_309": {
                "variable": {
                    "value": "batch_output_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(outputs.view(-1, outputs.size(-1)), dim=0)[0], torch.max(outputs.view(-1, outputs.size(-1)), dim=0)[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_311": {
                "variable": {
                    "value": "batch_input_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(inputs, dim=0)[0], torch.max(inputs, dim=0)[0])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "isnan_366": {
                "input": {
                    "value": "scaled_trajectory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "transformations.scale(unscaled_trajectory, label_limits[0, 2:], label_limits[1, 2:], -1, 1)",
                            "Call"
                        ],
                        [
                            "transformations.scale(unscaled_trajectory, -1, 1, output_limits[0, 2:], output_limits[1, 2:])",
                            "Call"
                        ]
                    ]
                }
            },
            "any_366": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_366": {
                "input": {
                    "value": "scaled_trajectory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "transformations.scale(unscaled_trajectory, label_limits[0, 2:], label_limits[1, 2:], -1, 1)",
                            "Call"
                        ],
                        [
                            "transformations.scale(unscaled_trajectory, -1, 1, output_limits[0, 2:], output_limits[1, 2:])",
                            "Call"
                        ]
                    ]
                }
            },
            "isnan_380": {
                "input": {
                    "value": "unscaled_trajectory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "trajectory[:, 2:]",
                            "Subscript"
                        ],
                        [
                            "trajectory[:, 2:]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "any_380": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "isinf_380": {
                "input": {
                    "value": "unscaled_trajectory",
                    "type": "variable",
                    "possible_values": [
                        [
                            "trajectory[:, 2:]",
                            "Subscript"
                        ],
                        [
                            "trajectory[:, 2:]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_96": {
                "tensors": {
                    "value": "all_sim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(all_sim, dim=0)[:num_data] if len(all_sim) > 0 else None",
                            "IfExp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_97": {
                "tensors": {
                    "value": "all_real",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(all_real, dim=0)[:num_data] if len(all_real) > 0 else None",
                            "IfExp"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BCELoss_130": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BCELoss_131": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MSELoss_132": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_166": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_255": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_316": {
                "variable": {
                    "value": "computed_output_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(batch_output_limits[0], computed_output_limits[0]), torch.max(batch_output_limits[1], computed_output_limits[1]))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "stack_318": {
                "variable": {
                    "value": "computed_input_limits",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(torch.min(batch_input_limits[0], computed_input_limits[0]), torch.max(batch_input_limits[1], computed_input_limits[1]))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "min_309": {
                "input": {
                    "value": "outputs.view(-1, outputs.size(-1))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_310": {
                "input": {
                    "value": "outputs.view(-1, outputs.size(-1))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "min_311": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_file(os.path.join(data_dir, data_filename))",
                            "Call"
                        ],
                        [
                            "tqdm(loader)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_311": {
                "input": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "load_data_file(os.path.join(data_dir, data_filename))",
                            "Call"
                        ],
                        [
                            "tqdm(loader)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "min_316": {
                "input": {
                    "value": "batch_output_limits[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_317": {
                "input": {
                    "value": "batch_output_limits[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_318": {
                "input": {
                    "value": "batch_input_limits[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_319": {
                "input": {
                    "value": "batch_input_limits[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/utils/io.py": {
        "torch": {
            "cat_65": {
                "variable": {
                    "value": "inputs_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "list(inputs)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_66": {
                "variable": {
                    "value": "points_from_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "list(points_from)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_67": {
                "tensors": {
                    "value": "list(sim)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_68": {
                "tensors": {
                    "value": "list(real)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_41": {
                "ndarray": {
                    "value": "batch.read()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/utils/sequence_utils.py": {
        "torch": {
            "cat_40": {
                "variable": {
                    "value": "start_and_deltas",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(point_start.unsqueeze(1), deltas)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_22": {
                "variable": {
                    "value": "padded_seq",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(seq, padding)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_34": {
                "tensors": {
                    "value": "(metadata[:, :-1], deltas)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_41": {
                "tensors": {
                    "value": "(metadata, start_and_deltas.cumsum(dim=1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cumsum_11": {
                "input": {
                    "value": "seq[:, 0] < 0.5",
                    "type": "Compare",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "shadow_program_inversion/utils/ur/ur_dmp_program.py": {
        "torch": {
            "as_tensor_78": {
                "variable": {
                    "value": "point_to",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "goal_pose.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_79": {
                "variable": {
                    "value": "point_start",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "start_pose.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_80": {
                "variable": {
                    "value": "vel",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_81": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "0.05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "cat_82": {
                "tensors": {
                    "value": "(point_to, torch.stack((vel, acc)))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_82": {
                "tensors": {
                    "value": "(vel, acc)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    }
}