{
    "DDPG/tensorflow/Actor_network.py": {
        "tensorflow": {
            "dense_45": {
                "variable": {
                    "value": "h[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "inputs": {
                    "value": "self.input_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "self.units_number[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.random_uniform_initializer(minval=-1 / sqrt(self.units_number[0]), maxval=1 / sqrt(self.units_number[0]))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_regularizer": {
                    "value": "tf.contrib.layers.l2_regularizer(self.l2_reg)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "h0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "dense_53": {
                "variable": {
                    "value": "h[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "inputs": {
                    "value": "h[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "units": {
                    "value": "self.units_number[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.random_uniform_initializer(minval=-1 / sqrt(self.units_number[1]), maxval=1 / sqrt(self.units_number[1]))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_regularizer": {
                    "value": "tf.contrib.layers.l2_regularizer(self.l2_reg)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "h1",
                    "type": "str",
                    "possible_values": []
                }
            },
            "dense_62": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "h[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "units": {
                    "value": "self.action_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.random_uniform_initializer(minval=-0.003, maxval=0.003)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_regularizer": {
                    "value": "tf.contrib.layers.l2_regularizer(self.l2_reg)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "output",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_74": {
                "variable": {
                    "value": "source_vars_list",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "A/source",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_78": {
                "variable": {
                    "value": "target_vars_list",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "A/target",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_104": {
                "variable": {
                    "value": "source_train_vars_list",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.GLOBAL_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "A/source_train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_111": {
                "variable": {
                    "value": "self.target_vars_list",
                    "type": "Attribute",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "A/target",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_112": {
                "variable": {
                    "value": "self.source_vars_list",
                    "type": "Attribute",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "A/source",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_28": {
                "variable": {
                    "value": "self.input_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.state_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_state2",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_29": {
                "variable": {
                    "value": "self.input_gradient",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.action_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_gradient",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_97": {
                "variable": {
                    "value": "source_vars_list",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "A/source",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gradients_98": {
                "variable": {
                    "value": "gradient",
                    "type": "variable",
                    "possible_values": []
                },
                "ys": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "source_vars_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='A/source')",
                            "Call"
                        ],
                        [
                            "tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='A/source')",
                            "Call"
                        ]
                    ]
                },
                "grad_ys": {
                    "value": "-self.input_gradient",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "AdamOptimizer_102": {
                "variable": {
                    "value": "self.train_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_27": {
                "name": {
                    "value": "input",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_31": {
                "name_or_scope": {
                    "value": "A/source",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_33": {
                "name_or_scope": {
                    "value": "A/source_train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_35": {
                "name_or_scope": {
                    "value": "A/target",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_37": {
                "name_or_scope": {
                    "value": "A/target_train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variables_initializer_75": {
                "var_list": {
                    "value": "source_vars_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='A/source')",
                            "Call"
                        ],
                        [
                            "tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='A/source')",
                            "Call"
                        ]
                    ]
                }
            },
            "name_scope_95": {
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_100": {
                "name": {
                    "value": "train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_105": {
                "key": {
                    "value": "tf.GraphKeys.GLOBAL_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "self.scope + '/A/source_train'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "variables_initializer_107": {
                "var_list": {
                    "value": "source_train_vars_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='A/source_train')",
                            "Call"
                        ]
                    ]
                }
            },
            "random_uniform_initializer_48": {
                "minval": {
                    "value": "-1 / sqrt(self.units_number[0])",
                    "type": "BinOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1 / sqrt(self.units_number[0])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_uniform_initializer_56": {
                "minval": {
                    "value": "-1 / sqrt(self.units_number[1])",
                    "type": "BinOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1 / sqrt(self.units_number[1])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_uniform_initializer_65": {
                "minval": {
                    "value": "-0.003",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "0.003",
                    "type": "float",
                    "possible_values": []
                }
            },
            "get_global_step_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "DDPG/tensorflow/Car.py": {
        "tensorflow": {}
    },
    "DDPG/tensorflow/Critic_network.py": {
        "tensorflow": {
            "dense_45": {
                "variable": {
                    "value": "h[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "inputs": {
                    "value": "self.input_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "self.units_number[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.random_uniform_initializer(minval=-1 / sqrt(self.units_number[0]), maxval=1 / sqrt(self.units_number[0]))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_regularizer": {
                    "value": "tf.contrib.layers.l2_regularizer(self.l2_reg)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "h0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "dense_58": {
                "variable": {
                    "value": "h[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "inputs": {
                    "value": "self.input_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "self.units_number[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.random_uniform_initializer(minval=-1 / sqrt(self.units_number[1]), maxval=1 / sqrt(self.units_number[1]))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_regularizer": {
                    "value": "tf.contrib.layers.l2_regularizer(self.l2_reg)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "h1",
                    "type": "str",
                    "possible_values": []
                }
            },
            "concat_65": {
                "variable": {
                    "value": "h_concat",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[h[0], h[1]]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "h_concat",
                    "type": "str",
                    "possible_values": []
                }
            },
            "dense_67": {
                "variable": {
                    "value": "h[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "inputs": {
                    "value": "h_concat",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.concat([h[0], h[1]], 1, name='h_concat')",
                            "Call"
                        ]
                    ]
                },
                "units": {
                    "value": "self.units_number[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.nn.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.random_uniform_initializer(minval=-1 / sqrt(self.units_number[2]), maxval=1 / sqrt(self.units_number[2]))",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_regularizer": {
                    "value": "tf.contrib.layers.l2_regularizer(self.l2_reg)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "h2",
                    "type": "str",
                    "possible_values": []
                }
            },
            "dense_74": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "h[2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "tf.random_uniform_initializer(minval=-0.003, maxval=0.003)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_regularizer": {
                    "value": "tf.contrib.layers.l2_regularizer(self.l2_reg)",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "output",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_96": {
                "variable": {
                    "value": "source_train_vars_list",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.GLOBAL_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "C/source_train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_103": {
                "variable": {
                    "value": "self.target_vars_list",
                    "type": "Attribute",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "C/target",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_104": {
                "variable": {
                    "value": "self.source_vars_list",
                    "type": "Attribute",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "C/source",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gradients_108": {
                "variable": {
                    "value": "self.a_gradient",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ys": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "self.input_actions",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_collection_113": {
                "variable": {
                    "value": "source_vars_list",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "C/source",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_116": {
                "variable": {
                    "value": "target_vars_list",
                    "type": "variable",
                    "possible_values": []
                },
                "key": {
                    "value": "tf.GraphKeys.TRAINABLE_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "C/target",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_29": {
                "variable": {
                    "value": "self.input_states",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.state_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_state",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_30": {
                "variable": {
                    "value": "self.input_actions",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.action_size]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "input_actions",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_31": {
                "variable": {
                    "value": "self.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "y",
                    "type": "str",
                    "possible_values": []
                }
            },
            "mean_squared_error_88": {
                "variable": {
                    "value": "loss_function",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "self.y",
                    "type": "Attribute",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "self.output",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdamOptimizer_94": {
                "variable": {
                    "value": "self.train_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_28": {
                "name": {
                    "value": "input",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_33": {
                "name_or_scope": {
                    "value": "C/source",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_35": {
                "name_or_scope": {
                    "value": "C/source_train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_37": {
                "name_or_scope": {
                    "value": "C/target",
                    "type": "str",
                    "possible_values": []
                }
            },
            "variable_scope_39": {
                "name_or_scope": {
                    "value": "C/target_train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_86": {
                "name": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                }
            },
            "name_scope_92": {
                "name": {
                    "value": "train",
                    "type": "str",
                    "possible_values": []
                }
            },
            "get_collection_97": {
                "key": {
                    "value": "tf.GraphKeys.GLOBAL_VARIABLES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "scope": {
                    "value": "self.scope + '/C/source_train'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "variables_initializer_99": {
                "var_list": {
                    "value": "source_train_vars_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_collection(tf.GraphKeys.GLOBAL_VARIABLES, scope='C/source_train')",
                            "Call"
                        ]
                    ]
                }
            },
            "variables_initializer_114": {
                "var_list": {
                    "value": "source_vars_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES, scope='C/source')",
                            "Call"
                        ]
                    ]
                }
            },
            "random_uniform_initializer_50": {
                "minval": {
                    "value": "-1 / sqrt(self.units_number[0])",
                    "type": "BinOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1 / sqrt(self.units_number[0])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_uniform_initializer_61": {
                "minval": {
                    "value": "-1 / sqrt(self.units_number[1])",
                    "type": "BinOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1 / sqrt(self.units_number[1])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_uniform_initializer_70": {
                "minval": {
                    "value": "-1 / sqrt(self.units_number[2])",
                    "type": "BinOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "1 / sqrt(self.units_number[2])",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "random_uniform_initializer_77": {
                "minval": {
                    "value": "-0.003",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "maxval": {
                    "value": "0.003",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "DDPG/tensorflow/DDPG.py": {
        "tensorflow": {
            "Session_28": {
                "variable": {
                    "value": "self.sess",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "name_scope_30": {
                "name": {
                    "value": "self.A_net_scope",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_40": {
                "name": {
                    "value": "self.C_net_scope",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "name_scope_53": {
                "name": {
                    "value": "self.A_net_scope",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "DDPG/pytorch/ddpg.py": {
        "torch": {
            "device_10": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "MSELoss_11": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_28": {
                "variable": {
                    "value": "self.actor_optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.actor.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.actor_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_32": {
                "variable": {
                    "value": "self.critic_optim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.critic.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.critic_lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_131": {
                "obj": {
                    "value": "self.actor.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/actor{}.pkl'.format(output, num)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_132": {
                "obj": {
                    "value": "self.critic.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'{}/critic{}.pkl'.format(output, num)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "set_grad_enabled_109": {
                "mode": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "set_grad_enabled_116": {
                "mode": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_138": {
                "f": {
                    "value": "'{}/actor{}.pkl'.format(output, num)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_139": {
                "f": {
                    "value": "'{}/actor{}.pkl'.format(output, num)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_140": {
                "f": {
                    "value": "'{}/critic{}.pkl'.format(output, num)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_141": {
                "f": {
                    "value": "'{}/critic{}.pkl'.format(output, num)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_129": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_130": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "DDPG/pytorch/main.py": {
        "torch": {
            "manual_seed_64": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_67": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "DDPG/pytorch/model.py": {
        "torch": {
            "Linear_16": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nb_states",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nb_states",
                            "Method Argument"
                        ],
                        [
                            "nb_states",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "400",
                            "Method Argument"
                        ],
                        [
                            "400",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_17": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "hidden1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "400",
                            "Method Argument"
                        ],
                        [
                            "400",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_18": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "400",
                            "Method Argument"
                        ],
                        [
                            "400",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "300",
                            "Method Argument"
                        ],
                        [
                            "300",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_19": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "300",
                            "Method Argument"
                        ],
                        [
                            "300",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_20": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "300",
                            "Method Argument"
                        ],
                        [
                            "300",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "nb_actions",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nb_actions",
                            "Method Argument"
                        ],
                        [
                            "nb_actions",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_21": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Tanh_22": {
                "variable": {
                    "value": "self.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_49": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "nb_states",
                    "type": "variable",
                    "possible_values": [
                        [
                            "nb_states",
                            "Method Argument"
                        ],
                        [
                            "nb_states",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "400",
                            "Method Argument"
                        ],
                        [
                            "400",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm1d_50": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "hidden1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "400",
                            "Method Argument"
                        ],
                        [
                            "400",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden1 + nb_actions",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "300",
                            "Method Argument"
                        ],
                        [
                            "300",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.fc3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "300",
                            "Method Argument"
                        ],
                        [
                            "300",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_67": {
                "tensors": {
                    "value": "[out, action]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "DDPG/pytorch/utils.py": {
        "torch": {
            "device_36": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tensor_37": {
                "data": {
                    "value": "ndarray",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ndarray",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dtype",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.float",
                            "Method Argument"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.device('cpu')",
                            "Method Argument"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "requires_grad",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "device_33": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    }
}