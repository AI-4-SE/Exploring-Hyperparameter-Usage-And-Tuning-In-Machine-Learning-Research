{
    "external_attention_block/A2-Nets.py": {
        "torch": {
            "randn_59": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_16": {
                "variable": {
                    "value": "self.convA",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "c_m",
                    "type": "variable",
                    "possible_values": [
                        [
                            "c_m",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "variable": {
                    "value": "self.convB",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "c_n",
                    "type": "variable",
                    "possible_values": [
                        [
                            "c_n",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "variable": {
                    "value": "self.convV",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "c_n",
                    "type": "variable",
                    "possible_values": [
                        [
                            "c_n",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_45": {
                "variable": {
                    "value": "attention_maps",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "B.view(b, self.c_n, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_46": {
                "variable": {
                    "value": "attention_vectors",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "V.view(b, self.c_n, -1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "bmm_48": {
                "variable": {
                    "value": "global_descriptors",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tmpA",
                    "type": "variable",
                    "possible_values": [
                        [
                            "A.view(b, self.c_m, -1)",
                            "Call"
                        ]
                    ]
                },
                "mat2": {
                    "value": "attention_maps.permute(0, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "variable": {
                    "value": "self.conv_reconstruct",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "c_m",
                    "type": "variable",
                    "possible_values": [
                        [
                            "c_m",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "external_attention_block/BAM.py": {
        "torch": {
            "randn_89": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_16": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_21": {
                "variable": {
                    "value": "self.ca",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_39": {
                "variable": {
                    "value": "self.sa",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sigmoid_63": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_27": {
                "in_features": {
                    "value": "gate_channels[-2]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "gate_channels[-1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Conv2d_41": {
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "Method Argument"
                        ],
                        [
                            "channel",
                            "Method Argument"
                        ],
                        [
                            "512",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_42": {
                "num_features": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "in_features": {
                    "value": "gate_channels[i]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out_features": {
                    "value": "gate_channels[i + 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "BatchNorm1d_25": {
                "num_features": {
                    "value": "gate_channels[i + 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "ReLU_26": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_45": {
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "dia_val",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "2",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_47": {
                "num_features": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "external_attention_block/CBAM.py": {
        "torch": {
            "max_65": {
                "variable": {
                    "value": "(s, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "tensor_flatten",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tensor.view(tensor.size(0), tensor.size(1), -1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_11": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "7",
                            "int"
                        ],
                        [
                            "kernel_size",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "groups": {
                    "value": "groups",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "False",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_31": {
                "variable": {
                    "value": "self.mlp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "Flatten()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sigmoid_60": {
                "variable": {
                    "value": "scale",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "channel_att_sum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "NoneType"
                        ],
                        [
                            "channel_att_raw",
                            "variable"
                        ],
                        [
                            "channel_att_sum + channel_att_raw",
                            "BinOp"
                        ]
                    ]
                }
            },
            "unsqueeze_60": {
                "variable": {
                    "value": "scale",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_82": {
                "variable": {
                    "value": "scale",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x_out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.spatial(x_compress)",
                            "Call"
                        ],
                        [
                            "self.ChannelGate(x)",
                            "Call"
                        ],
                        [
                            "self.SpatialGate(x_out)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_71": {
                "tensors": {
                    "value": "(torch.max(x, 1)[0].unsqueeze(1), torch.mean(x, 1).unsqueeze(1))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_12": {
                "num_features": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "eps": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "affine": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_33": {
                "in_features": {
                    "value": "gate_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gate_channels",
                            "Method Argument"
                        ],
                        [
                            "gate_channels",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "gate_channels // reduction_ratio",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_34": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_35": {
                "in_features": {
                    "value": "gate_channels // reduction_ratio",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "gate_channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "gate_channels",
                            "Method Argument"
                        ],
                        [
                            "gate_channels",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "avg_pool2d_42": {
                "variable": {
                    "value": "avg_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(x.size(2), x.size(3))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(x.size(2), x.size(3))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "max_pool2d_45": {
                "variable": {
                    "value": "max_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(x.size(2), x.size(3))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(x.size(2), x.size(3))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "unsqueeze_71": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_71": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "lp_pool2d_48": {
                "variable": {
                    "value": "lp_pool",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "norm_type": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(x.size(2), x.size(3))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(x.size(2), x.size(3))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "max_71": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "external_attention_block/ECA-Net.py": {
        "torch": {
            "AdaptiveAvgPool2d_12": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1d_13": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "k_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "(k_size - 1) // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_14": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "external_attention_block/GE_Net.py": {
        "torch": {
            "randn_111": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "device_113": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channels",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channels",
                            "Method Argument"
                        ]
                    ]
                },
                "groups": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channels",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "stride",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "kernel_size",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_20": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "channels",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channels",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_34": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_planes",
                            "Method Argument"
                        ],
                        [
                            "in_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Method Argument"
                        ],
                        [
                            "out_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "Method Argument"
                        ],
                        [
                            "kernel_size",
                            "Method Argument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "stride",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_35": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Method Argument"
                        ],
                        [
                            "out_planes",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_36": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "interpolate_103": {
                "variable": {
                    "value": "map",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "map",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.downop(out)",
                            "Call"
                        ],
                        [
                            "self.mlp(map)",
                            "Call"
                        ],
                        [
                            "F.interpolate(map, shape_in)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(map)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "shape_in",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out.shape[-1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "sigmoid_104": {
                "variable": {
                    "value": "map",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "map",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.downop(out)",
                            "Call"
                        ],
                        [
                            "self.mlp(map)",
                            "Call"
                        ],
                        [
                            "F.interpolate(map, shape_in)",
                            "Call"
                        ],
                        [
                            "torch.sigmoid(map)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_27": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "F.relu(x)",
                            "Call"
                        ],
                        [
                            "self.conv(x)",
                            "Call"
                        ],
                        [
                            "self.bn(x)",
                            "Call"
                        ],
                        [
                            "self.relu(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_88": {
                "variable": {
                    "value": "self.mlp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(out_planes, out_planes // 16, kernel_size=1, padding=0, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_107": {
                "input": {
                    "value": "x if self.equalInOut else self.convShortcut(x)",
                    "type": "IfExp",
                    "possible_values": []
                },
                "other": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "net(input)",
                            "Call"
                        ],
                        [
                            "self.conv1(x)",
                            "Call"
                        ],
                        [
                            "self.conv2(out)",
                            "Call"
                        ],
                        [
                            "self.conv3(out)",
                            "Call"
                        ],
                        [
                            "out * map",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Conv2d_58": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_planes",
                            "Method Argument"
                        ],
                        [
                            "in_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Method Argument"
                        ],
                        [
                            "out_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "stride",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_82": {
                "variable": {
                    "value": "self.downop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_85": {
                "variable": {
                    "value": "self.downop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "spatial // extent",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_88": {
                "in_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Method Argument"
                        ],
                        [
                            "out_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_89": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_90": {
                "in_channels": {
                    "value": "out_planes // 16",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Method Argument"
                        ],
                        [
                            "out_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_69": {
                "variable": {
                    "value": "self.downop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "Downblock(out_planes, relu=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "self.downop",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "Downblock(out_planes, relu=True)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "external_attention_block/SENet.py": {
        "torch": {
            "AdaptiveAvgPool2d_7": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_8": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(channel, channel // reduction, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_9": {
                "in_features": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_10": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_11": {
                "in_features": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "external_attention_block/SK-Net.py": {
        "torch": {
            "ModuleList_19": {
                "variable": {
                    "value": "self.convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_27": {
                "variable": {
                    "value": "self.gap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_28": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(features, d, kernel_size=1, stride=1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ModuleList_31": {
                "variable": {
                    "value": "self.fcs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Softmax_36": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_43": {
                "variable": {
                    "value": "feats",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "feats",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[conv(x) for conv in self.convs]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(feats, dim=1)",
                            "Call"
                        ],
                        [
                            "feats.view(batch_size, self.M, self.features, feats.shape[2], feats.shape[3])",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_46": {
                "variable": {
                    "value": "feats_U",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feats",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[conv(x) for conv in self.convs]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(feats, dim=1)",
                            "Call"
                        ],
                        [
                            "feats.view(batch_size, self.M, self.features, feats.shape[2], feats.shape[3])",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_51": {
                "variable": {
                    "value": "attention_vectors",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "attention_vectors",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[fc(feats_Z) for fc in self.fcs]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(attention_vectors, dim=1)",
                            "Call"
                        ],
                        [
                            "attention_vectors.view(batch_size, self.M, self.features, 1, 1)",
                            "Call"
                        ],
                        [
                            "self.softmax(attention_vectors)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_55": {
                "variable": {
                    "value": "feats_V",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "feats * attention_vectors",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_28": {
                "in_channels": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "max(int(features / r), L)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_29": {
                "num_features": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "max(int(features / r), L)",
                            "Call"
                        ]
                    ]
                }
            },
            "ReLU_30": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sequential_21": {
                "*args": {
                    "value": "nn.Conv2d(features, features, kernel_size=3, stride=stride, padding=1 + i, dilation=1 + i, groups=G, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_34": {
                "in_channels": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "max(int(features / r), L)",
                            "Call"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1 + i",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dilation": {
                    "value": "1 + i",
                    "type": "BinOp",
                    "possible_values": []
                },
                "groups": {
                    "value": "G",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_24": {
                "num_features": {
                    "value": "features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "features",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_25": {
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "external_attention_block/SPA-Net.py": {
        "torch": {
            "AdaptiveAvgPool2d_13": {
                "variable": {
                    "value": "self.avg_pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_14": {
                "variable": {
                    "value": "self.avg_pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_15": {
                "variable": {
                    "value": "self.avg_pool4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_16": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(channel * 21, channel * 21 // reduction, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_29": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(y1, y2, y3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_8": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channel, channel, kernel_size=1, stride=1, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_17": {
                "in_features": {
                    "value": "channel * 21",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "channel * 21 // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "in_features": {
                    "value": "channel * 21 // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_9": {
                "in_channels": {
                    "value": "in_channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_channel",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_10": {
                "num_features": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_11": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "external_attention_block/scSE.py": {
        "torch": {
            "Sequential_6": {
                "variable": {
                    "value": "self.cSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.AdaptiveAvgPool2d(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_11": {
                "variable": {
                    "value": "self.sSE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(ch, ch, 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_6": {
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_7": {
                "in_channels": {
                    "value": "ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ch",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ch // redu",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_8": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_9": {
                "in_channels": {
                    "value": "ch // redu",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ch",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_11": {
                "in_channels": {
                    "value": "ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ch",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "ch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ch",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sigmoid_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/FcaNet/facnet.py": {
        "torch": {
            "AdaptiveAvgPool2d_105": {
                "variable": {
                    "value": "model.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_115": {
                "variable": {
                    "value": "model.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_125": {
                "variable": {
                    "value": "model.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_135": {
                "variable": {
                    "value": "model.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_7": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inplanes",
                            "Method Argument"
                        ],
                        [
                            "inplanes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_22": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_23": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_25": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_26": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_27": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_70": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inplanes",
                            "Method Argument"
                        ],
                        [
                            "inplanes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_71": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_72": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_73": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_74": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/FcaNet/layer.py": {
        "torch": {
            "Sequential_52": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(channel, channel // reduction, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_106": {
                "variable": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * self.weight",
                            "BinOp"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "dim": {
                    "value": "[2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_117": {
                "variable": {
                    "value": "dct_filter",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "Method Argument"
                        ],
                        [
                            "channel",
                            "Method Argument"
                        ],
                        [
                            "channel",
                            "Method Argument"
                        ]
                    ]
                },
                "out": {
                    "value": "tile_size_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tile_size_x",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tile_size_y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tile_size_y",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "adaptive_avg_pool2d_63": {
                "variable": {
                    "value": "x_pooled",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x * self.weight",
                            "BinOp"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "output_size": {
                    "value": "(self.dct_h, self.dct_w)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_53": {
                "in_features": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "Method Argument"
                        ],
                        [
                            "channel",
                            "Method Argument"
                        ],
                        [
                            "channel",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "in_features": {
                    "value": "channel // reduction",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "channel",
                    "type": "variable",
                    "possible_values": [
                        [
                            "channel",
                            "Method Argument"
                        ],
                        [
                            "channel",
                            "Method Argument"
                        ],
                        [
                            "channel",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_56": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/GC_Net.py": {
        "torch": {
            "randn_129": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "50",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_55": {
                "variable": {
                    "value": "self.conv_mask",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inplanes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax_56": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_58": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_60": {
                "variable": {
                    "value": "self.channel_add_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, self.planes, kernel_size=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_68": {
                "variable": {
                    "value": "self.channel_mul_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, self.planes, kernel_size=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_104": {
                "variable": {
                    "value": "context",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "variable"
                        ],
                        [
                            "input_x.view(batch, channel, height * width)",
                            "Call"
                        ],
                        [
                            "input_x.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "context_mask",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.conv_mask(x)",
                            "Call"
                        ],
                        [
                            "context_mask.view(batch, 1, height * width)",
                            "Call"
                        ],
                        [
                            "self.softmax(context_mask)",
                            "Call"
                        ],
                        [
                            "context_mask.unsqueeze(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sigmoid_120": {
                "variable": {
                    "value": "channel_mul_term",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.channel_mul_conv(context)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_61": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.planes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LayerNorm_62": {
                "normalized_shape": {
                    "value": "[self.planes, 1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "in_channels": {
                    "value": "self.planes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_69": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.planes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LayerNorm_70": {
                "normalized_shape": {
                    "value": "[self.planes, 1, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "ReLU_71": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_72": {
                "in_channels": {
                    "value": "self.planes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/GSoP/MPNCOV.py": {
        "torch": {
            "zeros_45": {
                "variable": {
                    "value": "Y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batchSize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "iterN",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ctx.iterN",
                            "Attribute"
                        ],
                        [
                            "iterN",
                            "Method Argument"
                        ],
                        [
                            "iterN",
                            "Method Argument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "layout": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_46": {
                "variable": {
                    "value": "Z",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "m": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_108": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "triu_108": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "t_108": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reshape_108": {
                "variable": {
                    "value": "I",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dim * dim",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_110": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batchSize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "int(dim * (dim + 1) / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_122": {
                "variable": {
                    "value": "grad_input",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batchSize",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "dtype": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "eye_42": {
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "m": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_59": {
                "input": {
                    "value": "normA",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / 3.0 * x.mul(I3).sum(dim=1).sum(dim=1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "sqrt_71": {
                "input": {
                    "value": "normA",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / 3.0 * x.mul(I3).sum(dim=1).sum(dim=1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "eye_73": {
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "m": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_15": {
                "*size": {
                    "value": "M",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h * w",
                            "BinOp"
                        ],
                        [
                            "h * w",
                            "BinOp"
                        ]
                    ]
                },
                "out": {
                    "value": "M",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h * w",
                            "BinOp"
                        ],
                        [
                            "h * w",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_15": {
                "n": {
                    "value": "M",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h * w",
                            "BinOp"
                        ],
                        [
                            "h * w",
                            "BinOp"
                        ]
                    ]
                },
                "m": {
                    "value": "M",
                    "type": "variable",
                    "possible_values": [
                        [
                            "h * w",
                            "BinOp"
                        ],
                        [
                            "h * w",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sqrt_72": {
                "input": {
                    "value": "normA",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1.0 / 3.0 * x.mul(I3).sum(dim=1).sum(dim=1)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "ones_97": {
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ],
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "diag_97": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/GSoP/resnet.py": {
        "torch": {
            "Conv2d_39": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_49": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_50": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_52": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_81": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "inplanes",
                            "Method Argument"
                        ],
                        [
                            "inplanes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_82": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_83": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_85": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_86": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ],
                        [
                            "planes",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_87": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_88": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_89": {
                "variable": {
                    "value": "self.relu_normal",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_254": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_256": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_257": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_258": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_97": {
                "variable": {
                    "value": "self.conv_for_DR",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.ch_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "DR_stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ],
                        [
                            "2",
                            "int"
                        ]
                    ]
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_100": {
                "variable": {
                    "value": "self.bn_for_DR",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.ch_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNorm2d_101": {
                "variable": {
                    "value": "self.row_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.ch_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_103": {
                "variable": {
                    "value": "self.row_conv_group",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.ch_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "4 * self.ch_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(self.ch_dim, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "groups": {
                    "value": "self.ch_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_107": {
                "variable": {
                    "value": "self.fc_adapt_channels",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "4 * self.ch_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "groups": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_110": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_117": {
                "variable": {
                    "value": "self.conv_for_DR_spatial",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.sp_d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_120": {
                "variable": {
                    "value": "self.bn_for_DR_spatial",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.sp_d",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_122": {
                "variable": {
                    "value": "self.adppool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(self.sp_h, self.sp_w)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "BatchNorm2d_123": {
                "variable": {
                    "value": "self.row_bn_for_spatial",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.sp_reso",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_125": {
                "variable": {
                    "value": "self.row_conv_group_for_spatial",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.sp_reso",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.sp_reso * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(self.sp_reso, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "groups": {
                    "value": "self.sp_reso",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_128": {
                "variable": {
                    "value": "self.fc_adapt_channels_for_spatial",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "self.sp_reso * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.sp_reso",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "groups": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Sigmoid_130": {
                "variable": {
                    "value": "self.sigmoid",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_139": {
                "variable": {
                    "value": "self.dilate_conv_for_concat1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(self.conv_kernel_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(self.padding_num, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "groups": {
                    "value": "self.groups",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_144": {
                "variable": {
                    "value": "self.dilate_conv_for_concat2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(self.conv_kernel_size, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "(self.padding_num, 0)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "groups": {
                    "value": "self.groups",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_149": {
                "variable": {
                    "value": "self.bn_for_concat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * self.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "AvgPool2d_264": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "14",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_265": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Conv2d_269": {
                "variable": {
                    "value": "self.layer_reduce",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "512 * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.isqrt_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_271": {
                "variable": {
                    "value": "self.layer_reduce_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.isqrt_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_272": {
                "variable": {
                    "value": "self.layer_reduce_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_273": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int(self.isqrt_dim * (self.isqrt_dim + 1) / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1000",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_286": {
                "variable": {
                    "value": "downsample",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_297": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "ones_31": {
                "*size": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "out": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "eye_31": {
                "n": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "m": {
                    "value": "dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.data.shape[1]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2d_287": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_289": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "max_231": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pre_att * chan_att",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/non_local/network.py": {
        "torch": {
            "randn_76": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "28",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "28",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_13": {
                "variable": {
                    "value": "self.conv_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=1, out_channels=32, kernel_size=3, stride=1, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_21": {
                "variable": {
                    "value": "self.conv_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=32, out_channels=64, kernel_size=3, stride=1, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_29": {
                "variable": {
                    "value": "self.conv_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(in_channels=64, out_channels=128, kernel_size=3, stride=1, padding=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_36": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=128 * 3 * 3, out_features=256)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv2d_14": {
                "in_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_15": {
                "num_features": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_17": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_23": {
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_24": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_25": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_30": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "num_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_32": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_33": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_37": {
                "in_features": {
                    "value": "128 * 3 * 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_38": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_39": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_41": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/non_local/non_local_concatenation.py": {
        "torch": {
            "Sequential_59": {
                "variable": {
                    "value": "self.concat_project",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inter_channels * 2, 1, 1, 1, 0, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_90": {
                "variable": {
                    "value": "concat_feature",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[theta_x, phi_x]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "matmul_98": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f_div_C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "f / N",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "g_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.g(x).view(batch_size, self.inter_channels, -1)",
                            "Call"
                        ],
                        [
                            "g_x.permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_137": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_142": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_147": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool3d_25": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_40": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv_nd(in_channels=self.inter_channels, out_channels=self.in_channels, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_65": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_66": {
                "variable": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MaxPool2d_29": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "MaxPool1d_33": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_60": {
                "in_channels": {
                    "value": "self.inter_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_61": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/non_local/non_local_dot_product.py": {
        "torch": {
            "matmul_78": {
                "variable": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "theta_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.theta(x).view(batch_size, self.inter_channels, -1)",
                            "Call"
                        ],
                        [
                            "theta_x.permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "phi_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.phi(x).view(batch_size, self.inter_channels, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_82": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f_div_C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "f / N",
                            "BinOp"
                        ]
                    ]
                },
                "other": {
                    "value": "g_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.g(x).view(batch_size, self.inter_channels, -1)",
                            "Call"
                        ],
                        [
                            "g_x.permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_121": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_126": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_131": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool3d_25": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_40": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv_nd(in_channels=self.inter_channels, out_channels=self.in_channels, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_60": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_61": {
                "variable": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MaxPool2d_29": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "MaxPool1d_33": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/non_local/non_local_embedded_gaussian.py": {
        "torch": {
            "matmul_85": {
                "variable": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "theta_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.theta(x).view(batch_size, self.inter_channels, -1)",
                            "Call"
                        ],
                        [
                            "theta_x.permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "phi_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.phi(x).view(batch_size, self.inter_channels, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_86": {
                "variable": {
                    "value": "f_div_C",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.matmul(theta_x, phi_x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_88": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f_div_C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.softmax(f, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "g_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.g(x).view(batch_size, self.inter_channels, -1)",
                            "Call"
                        ],
                        [
                            "g_x.permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_127": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_132": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_137": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool3d_33": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_48": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv_nd(in_channels=self.inter_channels, out_channels=self.in_channels, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_68": {
                "variable": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.phi",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MaxPool2d_37": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "MaxPool1d_41": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "internal_attention_block/non_local/non_local_gaussian.py": {
        "torch": {
            "matmul_78": {
                "variable": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "theta_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x.view(batch_size, self.in_channels, -1)",
                            "Call"
                        ],
                        [
                            "theta_x.permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "phi_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.phi(x).view(batch_size, self.in_channels, -1)",
                            "Call"
                        ],
                        [
                            "x.view(batch_size, self.in_channels, -1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_79": {
                "variable": {
                    "value": "f_div_C",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.matmul(theta_x, phi_x)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "matmul_84": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "f_div_C",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.softmax(f, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "g_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.g(x).view(batch_size, self.inter_channels, -1)",
                            "Call"
                        ],
                        [
                            "g_x.permute(0, 2, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_123": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_128": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randn_133": {
                "variable": {
                    "value": "img",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "layout": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "20",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool3d_25": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(1, 2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Sequential_40": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "conv_nd(in_channels=self.inter_channels, out_channels=self.in_channels, kernel_size=1, stride=1, padding=0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_54": {
                "variable": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.g",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MaxPool2d_29": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "MaxPool1d_33": {
                "variable": {
                    "value": "max_pool_layer",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}