{
    "create_one_view_scores.py": {
        "torch": {
            "load_264": {
                "variable": {
                    "value": "loaded_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opts.load_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_300": {
                "variable": {
                    "value": "concatenated",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "create_utility_based_rewards.py": {
        "torch": {
            "load_138": {
                "variable": {
                    "value": "loaded_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opts.load_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "eval.py": {
        "torch": {
            "load_104": {
                "variable": {
                    "value": "loaded_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opts.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_75": {
                "seed": {
                    "value": "opts.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_76": {
                "seed": {
                    "value": "opts.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "gather_expert_trajectories.py": {
        "torch": {
            "load_99": {
                "variable": {
                    "value": "loaded_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opts.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_75": {
                "seed": {
                    "value": "opts.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_all_76": {
                "seed": {
                    "value": "opts.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_104": {
                "obj": {
                    "value": "{'train': train_trajectories, 'val': val_trajectories}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "open(os.path.join(opts.save_path, 'expert_trajectories.t7'), 'w')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {
            "load_84": {
                "variable": {
                    "value": "loaded_model",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join(opts.save_path, 'model_latest.net')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_188": {
                "obj": {
                    "value": "save_state",
                    "type": "Dict",
                    "possible_values": [
                        [
                            "{'epoch': epoch, 'state_dict': agent.policy.state_dict(), 'optimizer': agent.optimizer.state_dict(), 'opts': opts, 'best_val_error': best_val_error, 'train_history': train_history, 'val_history': val_history}",
                            "Dict"
                        ],
                        [
                            "{'epoch': epoch, 'state_dict': agent.policy.state_dict(), 'optimizer': agent.optimizer.state_dict(), 'opts': opts, 'best_val_error': best_val_error, 'train_history': train_history, 'val_history': val_history}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(opts.save_path, 'model_latest.net')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_175": {
                "obj": {
                    "value": "save_state",
                    "type": "Dict",
                    "possible_values": [
                        [
                            "{'epoch': epoch, 'state_dict': agent.policy.state_dict(), 'optimizer': agent.optimizer.state_dict(), 'opts': opts, 'best_val_error': best_val_error, 'train_history': train_history, 'val_history': val_history}",
                            "Dict"
                        ],
                        [
                            "{'epoch': epoch, 'state_dict': agent.policy.state_dict(), 'optimizer': agent.optimizer.state_dict(), 'opts': opts, 'best_val_error': best_val_error, 'train_history': train_history, 'val_history': val_history}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(opts.save_path, 'model_best.net')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_198": {
                "obj": {
                    "value": "save_state",
                    "type": "Dict",
                    "possible_values": [
                        [
                            "{'epoch': epoch, 'state_dict': agent.policy.state_dict(), 'optimizer': agent.optimizer.state_dict(), 'opts': opts, 'best_val_error': best_val_error, 'train_history': train_history, 'val_history': val_history}",
                            "Dict"
                        ],
                        [
                            "{'epoch': epoch, 'state_dict': agent.policy.state_dict(), 'optimizer': agent.optimizer.state_dict(), 'opts': opts, 'best_val_error': best_val_error, 'train_history': train_history, 'val_history': val_history}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "os.path.join(opts.save_path, 'model_after_one_schedule.net')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "misc/DataLoader.py": {
        "torch": {
            "load_287": {
                "variable": {
                    "value": "self.trajectories",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "opts.utility_h5_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "misc/State.py": {
        "torch": {
            "sum_83": {
                "variable": {
                    "value": "self.masks_sum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.masks.view(views.shape[0], -1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "misc/models.py": {
        "torch": {}
    },
    "misc/utils.py": {
        "torch": {
            "load_34": {
                "variable": {
                    "value": "load_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opts.load_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_25": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "manual_seed_all_26": {
                "seed": {
                    "value": "seed",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_703": {
                "variable": {
                    "value": "trajectories[i, j]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "tensors": {
                    "value": "trajectories[i, j]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}