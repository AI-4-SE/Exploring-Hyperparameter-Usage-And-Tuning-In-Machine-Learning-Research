{
    "AttributeFeature.py": {
        "torch": {
            "Linear_15": {
                "variable": {
                    "value": "self.Linear_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.embedding_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "int(self.embedding_size / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_17": {
                "variable": {
                    "value": "self.Linear_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int(self.embedding_size / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_30": {
                "variable": {
                    "value": "attn_weights",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_weights",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.Linear_1(self.embedded.view(-1, self.embedding_size))",
                            "Call"
                        ],
                        [
                            "torch.nn.functional.relu(attn_weights)",
                            "Call"
                        ],
                        [
                            "self.Linear_2(attn_weights)",
                            "Call"
                        ],
                        [
                            "torch.nn.functional.softmax(attn_weights.view(-1, 5), dim=1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_35": {
                "variable": {
                    "value": "attn_weights",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_weights.view(-1, 5)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "bmm_36": {
                "variable": {
                    "value": "finalState",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_weights.unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "self.embedded",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_40": {
                "ndarray": {
                    "value": "np.loadtxt('multilabel_database_embedding/vector.txt', delimiter=' ', dtype='float32')",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "FinalClassifier.py": {
        "torch": {
            "Linear_15": {
                "variable": {
                    "value": "self.Linear_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_16": {
                "variable": {
                    "value": "self.Linear_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_17": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sigmoid_23": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.Linear_2(hidden)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "round_38": {
                "variable": {
                    "value": "predict",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "result",
                    "type": "variable",
                    "possible_values": [
                        [
                            "final_classifier(output)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "FuseAllFeature.py": {
        "torch": {
            "Linear_10": {
                "variable": {
                    "value": "self.linear1_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "att1_feature_size + att1_feature_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "int((att1_feature_size + att1_feature_size) / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_11": {
                "variable": {
                    "value": "self.linear1_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "att1_feature_size + att2_feature_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "int((att1_feature_size + att2_feature_size) / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_12": {
                "variable": {
                    "value": "self.linear1_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "att1_feature_size + att3_feature_size",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "int((att1_feature_size + att3_feature_size) / 2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_13": {
                "variable": {
                    "value": "self.linear2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int((att1_feature_size + att1_feature_size) / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_14": {
                "variable": {
                    "value": "self.linear2_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int((att1_feature_size + att2_feature_size) / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_15": {
                "variable": {
                    "value": "self.linear2_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "int((att1_feature_size + att3_feature_size) / 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_29": {
                "variable": {
                    "value": "weight_1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.torch.stack(output_list_1)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_30": {
                "variable": {
                    "value": "weight_2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.torch.stack(output_list_2)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_31": {
                "variable": {
                    "value": "weight_3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.torch.stack(output_list_3)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_32": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "(weight_1 + weight_2 + weight_3) * feature1_seq / 3",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "variable": {
                    "value": "self.image_linear_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "image_feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1024",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_45": {
                "variable": {
                    "value": "self.text_linear_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "text_feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_46": {
                "variable": {
                    "value": "self.attribute_linear_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "attribute_feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "200",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_47": {
                "variable": {
                    "value": "self.image_linear_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_48": {
                "variable": {
                    "value": "self.text_linear_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_49": {
                "variable": {
                    "value": "self.attribute_linear_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "variable": {
                    "value": "self.image_linear_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "image_feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1024",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_51": {
                "variable": {
                    "value": "self.text_linear_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "text_feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "512",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "variable": {
                    "value": "self.attribute_linear_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "attribute_feature_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "200",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_60": {
                "variable": {
                    "value": "image_hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.image_linear_1(image_vector)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_61": {
                "variable": {
                    "value": "text_hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.text_linear_1(text_vector)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_62": {
                "variable": {
                    "value": "attribute_hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.attribute_linear_1(attribute_vector)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_66": {
                "variable": {
                    "value": "score",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.stack([image_score, text_score, attribute_score])",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tanh_67": {
                "variable": {
                    "value": "image_vector",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.image_linear_3(image_vector)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_68": {
                "variable": {
                    "value": "text_vector",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.text_linear_3(text_vector)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_69": {
                "variable": {
                    "value": "attribute_vector",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.attribute_linear_3(attribute_vector)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_23": {
                "variable": {
                    "value": "output1",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1_1(torch.cat([feature1_seq[i], feature1], dim=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_24": {
                "variable": {
                    "value": "output2",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1_2(torch.cat([feature1_seq[i], feature2], dim=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_25": {
                "variable": {
                    "value": "output3",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.linear1_3(torch.cat([feature1_seq[i], feature3], dim=1))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "stack_29": {
                "tensors": {
                    "value": "output_list_1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list()",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_30": {
                "tensors": {
                    "value": "output_list_2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list()",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_31": {
                "tensors": {
                    "value": "output_list_3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list()",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_66": {
                "tensors": {
                    "value": "[image_score, text_score, attribute_score]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "cat_23": {
                "tensors": {
                    "value": "[feature1_seq[i], feature1]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_24": {
                "tensors": {
                    "value": "[feature1_seq[i], feature2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_25": {
                "tensors": {
                    "value": "[feature1_seq[i], feature3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "ImageFeature.py": {
        "torch": {
            "Linear_12": {
                "variable": {
                    "value": "self.Linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_20": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list()",
                            "Call"
                        ],
                        [
                            "torch.stack(output)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_21": {
                "variable": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list()",
                            "Call"
                        ],
                        [
                            "torch.stack(output)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "relu_18": {
                "variable": {
                    "value": "sub_output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.Linear(input[i])",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "ImageFeatureDataGenerator.py": {
        "torch": {
            "device_14": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_131": {
                "variable": {
                    "value": "all_pretrain_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "all_pretrain_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pretrain_data_set(data_set)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_14": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "stack_117": {
                "variable": {
                    "value": "sub_image_normalized",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "list(map(lambda image: sub_graph_preprocess(image), sub_image_original))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "LoadData.py": {
        "torch": {
            "device_14": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_156": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_set",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_157": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_set",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_158": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "32",
                            "int"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_159": {
                "variable": {
                    "value": "play_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_set",
                    "type": "variable",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "is_available_14": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_78": {
                "variable": {
                    "value": "text_index",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "TEXT_LENGTH",
                    "type": "variable",
                    "possible_values": [
                        [
                            "75",
                            "int"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.long",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_92": {
                "ndarray": {
                    "value": "attribute_feature",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.load(os.path.join(WORKING_PATH, 'image_feature_data', str(id) + '.npy'))",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_98": {
                "data": {
                    "value": "label_index",
                    "type": "variable",
                    "possible_values": [
                        [
                            "list(map(lambda label: label2index[label], labels))",
                            "Call"
                        ]
                    ]
                }
            },
            "Generator_147": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_147": {
                "seed": {
                    "value": "42",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "TextFeature.py": {
        "torch": {
            "LSTM_13": {
                "variable": {
                    "value": "self.biLSTM",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_16": {
                "variable": {
                    "value": "self.Linear_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_17": {
                "variable": {
                    "value": "self.Linear_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_18": {
                "variable": {
                    "value": "self.Linear_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Linear_19": {
                "variable": {
                    "value": "self.Linear_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "hidden_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dropout_22": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_rate",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "mean_38": {
                "variable": {
                    "value": "RNN_state",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dropout(output)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_29": {
                "variable": {
                    "value": "hidden_init",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.relu(self.Linear_1(guidence)), torch.relu(self.Linear_2(guidence))]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_30": {
                "variable": {
                    "value": "cell_init",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.relu(self.Linear_3(guidence)), torch.relu(self.Linear_4(guidence))]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "from_numpy_42": {
                "ndarray": {
                    "value": "np.loadtxt('text_embedding/vector.txt', delimiter=' ', dtype='float32')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_29": {
                "input": {
                    "value": "self.Linear_2(guidence)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_30": {
                "input": {
                    "value": "self.Linear_4(guidence)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}