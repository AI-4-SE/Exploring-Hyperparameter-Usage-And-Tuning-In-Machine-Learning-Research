{
    "experiment/algorithm/space.py": {
        "sklearn": {}
    },
    "experiment/objective.py": {
        "sklearn": {
            "cross_validate_123": {
                "variable": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "pipeline",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "cv": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "return_estimator": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "return_train_score": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "verbose": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cross_validate_43": {
                "variable": {
                    "value": "scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "pipeline",
                    "type": "Variable",
                    "possible_values": []
                },
                "X": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "cv": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "return_estimator": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "return_train_score": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "verbose": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "experiment/pipeline/prototype.py": {
        "sklearn": {
            "StandardScaler_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PowerTransformer_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MinMaxScaler_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "RobustScaler_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "PCA_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SelectKBest_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FeatureUnion_16": {
                "transformer_list": {
                    "value": "[('pca', PCA()), ('selectkbest', SelectKBest())]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "FeatureUnion_50": {
                "variable": {
                    "value": "operator",
                    "type": "Variable",
                    "possible_values": []
                },
                "transformer_list": {
                    "value": "oparams",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        }
    },
    "experiment/pipeline/utils.py": {
        "sklearn": {}
    },
    "experiment/utils/datasets.py": {
        "sklearn": {
            "load_breast_cancer_22": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_iris_26": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_wine_30": {
                "variable": {
                    "value": "data",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_digits_34": {
                "variable": {
                    "value": "digits",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "sklearn": {
            "train_test_split_18": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "Variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.4",
                    "type": "float",
                    "possible_values": []
                },
                "stratify": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "random_state": {
                    "value": "scenario['control']['seed']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "scenarios.load(args.scenario)",
                            "Call"
                        ],
                        [
                            "cli.apply_scenario_customization(scenario, args.customize)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    }
}