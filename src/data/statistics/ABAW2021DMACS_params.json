{
    "algorithm/noisyfer_extended_affwild2.py": {
        "sklearn": {
            "precision_score_16": {
                "variable": {
                    "value": "precision",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predict",
                    "type": "Variable",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                },
                "zero_division": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "recall_score_17": {
                "variable": {
                    "value": "recall",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predict",
                    "type": "Variable",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                },
                "zero_division": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "f1_score_18": {
                "variable": {
                    "value": "F1_score",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predict",
                    "type": "Variable",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "str",
                    "possible_values": []
                },
                "zero_division": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "Adam_123": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "[{'params': base_parameters_model1}, {'params': list(self.model1.module.classifier.parameters()), 'lr': learning_rate}]",
                    "type": "List",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "load_134": {
                "variable": {
                    "value": "pretrained",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_286": {
                "obj": {
                    "value": "{' epoch': epoch, 'model_1': self.m1_statedict, 'model_2': self.m2_statedict, 'model_3': self.m3_statedict, 'optimizer': self.o_statedict}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "os.path.join('checkpoints/affwild2/', 'epoch_' + str(epoch) + '_prec_f1_' + str(prec1) + '_' + str(f1) + '_avg_' + str(avg) + '.pth')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "no_grad_195": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_199": {
                "variable": {
                    "value": "outputs1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model1(images)",
                            "Call"
                        ],
                        [
                            "self.model1(images)",
                            "Call"
                        ],
                        [
                            "self.model1(images)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_200": {
                "variable": {
                    "value": "(_, pred1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs1.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_208": {
                "variable": {
                    "value": "outputs2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model2(images)",
                            "Call"
                        ],
                        [
                            "self.model2(images)",
                            "Call"
                        ],
                        [
                            "self.model2.forward(images)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_209": {
                "variable": {
                    "value": "(_, pred2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs2.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_214": {
                "variable": {
                    "value": "outputs3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model3(images)",
                            "Call"
                        ],
                        [
                            "self.model3(images)",
                            "Call"
                        ],
                        [
                            "self.model3(images)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_215": {
                "variable": {
                    "value": "(_, pred3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs3.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_220": {
                "variable": {
                    "value": "(_, avg_pred)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "avg_output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.33 * (outputs1.data + outputs2.data + outputs3.data)",
                            "BinOp"
                        ],
                        [
                            "0.33 * (outputs1.data + outputs2.data + outputs3.data)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_256": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "softmax_260": {
                "variable": {
                    "value": "outputs1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits1",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model1(images)",
                            "Call"
                        ],
                        [
                            "self.model1(images)",
                            "Call"
                        ],
                        [
                            "self.model1(images)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_261": {
                "variable": {
                    "value": "(_, pred1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs1.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_264": {
                "variable": {
                    "value": "outputs2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits2",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model2(images)",
                            "Call"
                        ],
                        [
                            "self.model2(images)",
                            "Call"
                        ],
                        [
                            "self.model2.forward(images)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_265": {
                "variable": {
                    "value": "(_, pred2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs2.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_268": {
                "variable": {
                    "value": "outputs3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits3",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model3(images)",
                            "Call"
                        ],
                        [
                            "self.model3(images)",
                            "Call"
                        ],
                        [
                            "self.model3(images)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "max_269": {
                "variable": {
                    "value": "(_, pred3)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "outputs3.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_274": {
                "variable": {
                    "value": "(_, pred)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "avg_output",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "0.33 * (outputs1.data + outputs2.data + outputs3.data)",
                            "BinOp"
                        ],
                        [
                            "0.33 * (outputs1.data + outputs2.data + outputs3.data)",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "algorithm/loss.py": {
        "torch": {
            "kl_div_23": {
                "variable": {
                    "value": "kl",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "F.log_softmax(pred, dim=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "target": {
                    "value": "F.softmax(soft_targets, dim=1)",
                    "type": "Call",
                    "possible_values": []
                },
                "reduce": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cross_entropy_42": {
                "variable": {
                    "value": "loss_ce_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cross_entropy_44": {
                "variable": {
                    "value": "loss_ce_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cross_entropy_46": {
                "variable": {
                    "value": "loss_ce_3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_3",
                    "type": "Variable",
                    "possible_values": []
                },
                "target": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "log_softmax_23": {
                "input": {
                    "value": "pred",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_23": {
                "input": {
                    "value": "soft_targets",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_26": {
                "input": {
                    "value": "torch.sum(kl, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "sum_28": {
                "input": {
                    "value": "kl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.kl_div(F.log_softmax(pred, dim=1), F.softmax(soft_targets, dim=1), reduce=False)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_26": {
                "input": {
                    "value": "kl",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "F.kl_div(F.log_softmax(pred, dim=1), F.softmax(soft_targets, dim=1), reduce=False)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "common/utils.py": {
        "torch": {
            "softmax_18": {
                "variable": {
                    "value": "output",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logit",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "main_affwild2.py": {
        "torch": {
            "manual_seed_101": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_103": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "'cuda:{}'.format(args.gpu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_107": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "manual_seed_104": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "manual_seed_108": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_463": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ImageList(root=args.affwild2_path, fileList=args.metafile, train_mode='Train', transform=data_transforms)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.batch_size",
                            "Attribute"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "train_sampler is None",
                    "type": "Compare",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ]
                    ]
                }
            },
            "DataLoader_467": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ImageList(root=args.affwild2_path, fileList=args.metafile, train_mode='Validation', transform=data_transforms_val)",
                            "Call"
                        ],
                        [
                            "ImageList(root=args.affwild2_path, fileList=args.testmetafile, train_mode='Test', transform=data_transforms_val)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.batch_size",
                            "Attribute"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_491": {
                "variable": {
                    "value": "test_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "ImageList(root=args.affwild2_path, fileList=args.metafile, train_mode='Validation', transform=data_transforms_val)",
                            "Call"
                        ],
                        [
                            "ImageList(root=args.affwild2_path, fileList=args.testmetafile, train_mode='Test', transform=data_transforms_val)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "args.batch_size",
                            "Attribute"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "args.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "multinomial_365": {
                "input": {
                    "value": "self.weights",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_samples": {
                    "value": "self.num_samples",
                    "type": "Attribute",
                    "possible_values": []
                },
                "replacement": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "models/cnn.py": {
        "torch": {
            "device_25": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataParallel_29": {
                "variable": {
                    "value": "model",
                    "type": "Variable",
                    "possible_values": []
                },
                "module": {
                    "value": "resnet18(end2end=False, pretrained=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_33": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "pretrained/res18_naive.pth_MSceleb.tar",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/resnet.py": {
        "torch": {
            "Conv2d_37": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_50": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_78": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_79": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_80": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_82": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_83": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_84": {
                "variable": {
                    "value": "self.bn3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_85": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_120": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_121": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_122": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_127": {
                "variable": {
                    "value": "self.avgpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_129": {
                "variable": {
                    "value": "self.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "7",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_143": {
                "variable": {
                    "value": "downsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(self.inplanes, planes * block.expansion, kernel_size=1, stride=stride, bias=False)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_155": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Conv2d_144": {
                "in_channels": {
                    "value": "self.inplanes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_146": {
                "num_features": {
                    "value": "planes * block.expansion",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}