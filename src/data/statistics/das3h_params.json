{
    "das3h.py": {
        "sklearn": {
            "accuracy_score_172": {
                "variable": {
                    "value": "ACC",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y[test_ids]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "np.round(y_pred_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "roc_auc_score_173": {
                "variable": {
                    "value": "AUC",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y[test_ids]",
                            "Subscript"
                        ]
                    ]
                },
                "y_score": {
                    "value": "y_pred_test",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_loss_175": {
                "variable": {
                    "value": "NLL",
                    "type": "Variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y[test_ids]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred_test",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ]
                    ]
                }
            },
            "roc_auc_score_126": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y[test_ids]",
                            "Subscript"
                        ]
                    ]
                },
                "y_score": {
                    "value": "y_pred_test",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_loss_128": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y[test_ids]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred_test",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ]
                    ]
                }
            },
            "accuracy_score_129": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y[test_ids]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "np.round(y_pred_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "roc_auc_score_143": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y[test_ids]",
                            "Subscript"
                        ]
                    ]
                },
                "y_score": {
                    "value": "y_pred_test",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_loss_145": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y[test_ids]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred_test",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "pipe.predict_proba(X_test)[:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ],
                        [
                            "np.array(model.predictions)",
                            "Call"
                        ]
                    ]
                }
            },
            "accuracy_score_146": {
                "y_true": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "y[test_ids]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "np.round(y_pred_test)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "LogisticRegression_153": {
                "solver": {
                    "value": "saga",
                    "type": "Constant",
                    "possible_values": []
                },
                "max_iter": {
                    "value": "options.iter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "C": {
                    "value": "options.C",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LogisticRegression_121": {
                "solver": {
                    "value": "saga",
                    "type": "Constant",
                    "possible_values": []
                },
                "max_iter": {
                    "value": "options.iter",
                    "type": "Attribute",
                    "possible_values": []
                },
                "C": {
                    "value": "c",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[1e-05, 0.0001, 0.001, 0.01, 0.1, 1, 10]",
                            "List"
                        ]
                    ]
                }
            }
        }
    },
    "dataio.py": {
        "sklearn": {
            "KFold_65": {
                "variable": {
                    "value": "kfold",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "nb_folds",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "5",
                            "MethodArgument"
                        ],
                        [
                            "5",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "KFold_76": {
                "variable": {
                    "value": "kfold",
                    "type": "Variable",
                    "possible_values": []
                },
                "n_splits": {
                    "value": "nb_folds",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "5",
                            "MethodArgument"
                        ],
                        [
                            "5",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "encode.py": {
        "sklearn": {
            "OneHotEncoder_163": {
                "variable": {
                    "value": "onehot",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "encode_parallel.py": {
        "sklearn": {
            "OneHotEncoder_235": {
                "variable": {
                    "value": "onehot",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}