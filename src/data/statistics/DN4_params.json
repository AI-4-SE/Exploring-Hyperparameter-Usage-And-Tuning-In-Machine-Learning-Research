{
    "DN4_Test_5way1shot.py": {
        "torch": {
            "CrossEntropyLoss_236": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_237": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "DataParallel_256": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DN4Net.define_DN4Net(which_model=opt.basemodel, num_classes=opt.way_num, neighbor_k=opt.neighbor_k, norm='batch', init_type='normal', use_gpu=opt.cuda)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model, range(opt.ngpu))",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "range(opt.ngpu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_296": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode=opt.mode, image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_test_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_108": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_121": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_215": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_244": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_115": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_184": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "DN4_Test_5way5shot.py": {
        "torch": {
            "CrossEntropyLoss_236": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_237": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "DataParallel_256": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DN4Net.define_DN4Net(which_model=opt.basemodel, num_classes=opt.way_num, neighbor_k=opt.neighbor_k, norm='batch', init_type='normal', use_gpu=opt.cuda)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model, range(opt.ngpu))",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "range(opt.ngpu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_296": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode=opt.mode, image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_test_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_108": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_121": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "is_available_215": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_244": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_115": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_184": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "DN4_Train_5way1shot.py": {
        "torch": {
            "CrossEntropyLoss_304": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_305": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "DataParallel_324": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DN4Net.define_DN4Net(which_model=opt.basemodel, num_classes=opt.way_num, neighbor_k=opt.neighbor_k, norm='batch', init_type='normal', use_gpu=opt.cuda)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model, range(opt.ngpu))",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "range(opt.ngpu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_375": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode=opt.mode, image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_train_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.episodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_379": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='val', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_val_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_383": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='test', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_test_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_111": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_122": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_180": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_193": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_237": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(opt.outf, 'epoch_%d.pth.tar' % epoch_item)",
                            "Call"
                        ],
                        [
                            "'checkpoint.pth.tar'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "is_available_283": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_312": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_117": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_187": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "DN4_Train_5way1shot_DA.py": {
        "torch": {
            "CrossEntropyLoss_304": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_305": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "DataParallel_324": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DN4Net.define_DN4Net(which_model=opt.basemodel, num_classes=opt.way_num, neighbor_k=opt.neighbor_k, norm='batch', init_type='normal', use_gpu=opt.cuda)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model, range(opt.ngpu))",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "range(opt.ngpu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_384": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode=opt.mode, image_size=opt.imageSize, transform=ImgTransform_DA, episode_num=opt.episode_train_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.episodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_388": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='val', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_val_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_392": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='test', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_test_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_111": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_122": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_180": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_193": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_237": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(opt.outf, 'epoch_%d.pth.tar' % epoch_item)",
                            "Call"
                        ],
                        [
                            "'checkpoint.pth.tar'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "is_available_283": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_312": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_117": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_187": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "DN4_Train_5way1shot_Resnet.py": {
        "torch": {
            "CrossEntropyLoss_304": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_305": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "DataParallel_324": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DN4Net.define_DN4Net(which_model=opt.basemodel, num_classes=opt.way_num, neighbor_k=opt.neighbor_k, norm='batch', init_type='normal', use_gpu=opt.cuda)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model, range(opt.ngpu))",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "range(opt.ngpu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_375": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode=opt.mode, image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_train_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.episodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_379": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='val', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_val_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_383": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='test', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_test_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_111": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_122": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_180": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_193": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_237": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(opt.outf, 'epoch_%d.pth.tar' % epoch_item)",
                            "Call"
                        ],
                        [
                            "'checkpoint.pth.tar'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "is_available_283": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_312": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_117": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_187": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "DN4_Train_5way5shot.py": {
        "torch": {
            "CrossEntropyLoss_304": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_305": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "DataParallel_324": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DN4Net.define_DN4Net(which_model=opt.basemodel, num_classes=opt.way_num, neighbor_k=opt.neighbor_k, norm='batch', init_type='normal', use_gpu=opt.cuda)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model, range(opt.ngpu))",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "range(opt.ngpu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_375": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode=opt.mode, image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_train_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.episodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_379": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='val', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_val_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_383": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='test', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_test_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_111": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_122": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_180": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_193": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_237": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(opt.outf, 'epoch_%d.pth.tar' % epoch_item)",
                            "Call"
                        ],
                        [
                            "'checkpoint.pth.tar'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "is_available_283": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_312": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_117": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_187": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "DN4_Train_5way5shot_DA.py": {
        "torch": {
            "CrossEntropyLoss_304": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_305": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "DataParallel_324": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DN4Net.define_DN4Net(which_model=opt.basemodel, num_classes=opt.way_num, neighbor_k=opt.neighbor_k, norm='batch', init_type='normal', use_gpu=opt.cuda)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model, range(opt.ngpu))",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "range(opt.ngpu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_384": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode=opt.mode, image_size=opt.imageSize, transform=ImgTransform_DA, episode_num=opt.episode_train_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.episodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_388": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='val', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_val_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_392": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='test', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_test_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_111": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_122": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_180": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_193": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_237": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(opt.outf, 'epoch_%d.pth.tar' % epoch_item)",
                            "Call"
                        ],
                        [
                            "'checkpoint.pth.tar'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "is_available_283": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_312": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_117": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_187": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "DN4_Train_5way5shot_Resnet.py": {
        "torch": {
            "CrossEntropyLoss_304": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Adam_305": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(opt.beta1, 0.9)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "DataParallel_324": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "DN4Net.define_DN4Net(which_model=opt.basemodel, num_classes=opt.way_num, neighbor_k=opt.neighbor_k, norm='batch', init_type='normal', use_gpu=opt.cuda)",
                            "Call"
                        ],
                        [
                            "nn.DataParallel(model, range(opt.ngpu))",
                            "Call"
                        ]
                    ]
                },
                "device_ids": {
                    "value": "range(opt.ngpu)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_375": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode=opt.mode, image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_train_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.episodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_379": {
                "variable": {
                    "value": "val_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "valset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='val', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_val_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_383": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Imagefolder_csv(data_dir=opt.dataset_dir, mode='test', image_size=opt.imageSize, transform=ImgTransform, episode_num=opt.episode_test_num, way_num=opt.way_num, shot_num=opt.shot_num, query_num=opt.query_num)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "opt.testepisodeSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "int(opt.workers)",
                    "type": "Call",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_111": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_122": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_180": {
                "variable": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_images",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ],
                        [
                            "torch.cat(query_images, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_193": {
                "variable": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "query_targets",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_237": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join(opt.outf, 'epoch_%d.pth.tar' % epoch_item)",
                            "Call"
                        ],
                        [
                            "'checkpoint.pth.tar'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "is_available_283": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_312": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "opt.resume",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_117": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_187": {
                "variable": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "temp_support",
                    "type": "variable",
                    "possible_values": [
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ],
                        [
                            "support_images[i]",
                            "Subscript"
                        ],
                        [
                            "torch.cat(temp_support, 0)",
                            "Call"
                        ],
                        [
                            "temp_support.cuda()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_260": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "dataset/datasets_csv.py": {
        "torch": {}
    },
    "models/network.py": {
        "torch": {
            "Sequential_152": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(3, 64, kernel_size=3, stride=1, padding=1, bias=use_bias)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_234": {
                "variable": {
                    "value": "Similarity_list",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "Similarity_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(Similarity_list, 0)",
                            "Call"
                        ],
                        [
                            "self.cal_cosinesimilarity(x1, x2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_265": {
                "variable": {
                    "value": "self.conv_block",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_276": {
                "variable": {
                    "value": "self.skip_layer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "nFin",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nFout",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_307": {
                "variable": {
                    "value": "self.feat_extractor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_102": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "transpose_213": {
                "variable": {
                    "value": "query_sam",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "query_sam",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input1[i]",
                            "Subscript"
                        ],
                        [
                            "query_sam.view(C, -1)",
                            "Call"
                        ],
                        [
                            "torch.transpose(query_sam, 0, 1)",
                            "Call"
                        ],
                        [
                            "query_sam / query_sam_norm",
                            "BinOp"
                        ]
                    ]
                },
                "dim0": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dim1": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "norm_214": {
                "variable": {
                    "value": "query_sam_norm",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "query_sam",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input1[i]",
                            "Subscript"
                        ],
                        [
                            "query_sam.view(C, -1)",
                            "Call"
                        ],
                        [
                            "torch.transpose(query_sam, 0, 1)",
                            "Call"
                        ],
                        [
                            "query_sam / query_sam_norm",
                            "BinOp"
                        ]
                    ]
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_153": {
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "norm_layer.func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "norm_layer == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "opt['norm_layer'].func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "opt['norm_layer'] == nn.InstanceNorm2d",
                            "Compare"
                        ]
                    ]
                }
            },
            "LeakyReLU_155": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_156": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_158": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "norm_layer.func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "norm_layer == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "opt['norm_layer'].func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "opt['norm_layer'] == nn.InstanceNorm2d",
                            "Compare"
                        ]
                    ]
                }
            },
            "LeakyReLU_160": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_161": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_163": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "norm_layer.func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "norm_layer == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "opt['norm_layer'].func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "opt['norm_layer'] == nn.InstanceNorm2d",
                            "Compare"
                        ]
                    ]
                }
            },
            "LeakyReLU_165": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_167": {
                "in_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "use_bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "norm_layer.func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "norm_layer == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "opt['norm_layer'].func == nn.InstanceNorm2d",
                            "Compare"
                        ],
                        [
                            "opt['norm_layer'] == nn.InstanceNorm2d",
                            "Compare"
                        ]
                    ]
                }
            },
            "LeakyReLU_169": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "is_available_217": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_218": {
                "variable": {
                    "value": "inner_sim",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "len(input2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "norm_222": {
                "variable": {
                    "value": "support_set_sam_norm",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "support_set_sam",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.features(input2[i])",
                            "Call"
                        ],
                        [
                            "support_set_sam.permute(1, 0, 2, 3)",
                            "Call"
                        ],
                        [
                            "support_set_sam.contiguous().view(C, -1)",
                            "Call"
                        ],
                        [
                            "input2[j]",
                            "Subscript"
                        ],
                        [
                            "support_set_sam / support_set_sam_norm",
                            "BinOp"
                        ],
                        [
                            "self.feat_extractor(input2[i])",
                            "Call"
                        ],
                        [
                            "support_set_sam.permute(1, 0, 2, 3)",
                            "Call"
                        ],
                        [
                            "support_set_sam.contiguous().view(C, -1)",
                            "Call"
                        ]
                    ]
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "topk_229": {
                "variable": {
                    "value": "(topk_value, topk_index)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "innerproduct_matrix",
                    "type": "variable",
                    "possible_values": [
                        [
                            "query_sam @ support_set_sam",
                            "BinOp"
                        ]
                    ]
                },
                "k": {
                    "value": "self.neighbor_k",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_230": {
                "variable": {
                    "value": "inner_sim[0, j]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "input": {
                    "value": "topk_value",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNorm2d_266": {
                "num_features": {
                    "value": "nFin",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LeakyReLU_267": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_268": {
                "in_channels": {
                    "value": "nFin",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nFout",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_269": {
                "num_features": {
                    "value": "nFout",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LeakyReLU_270": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_271": {
                "in_channels": {
                    "value": "nFout",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nFout",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_272": {
                "num_features": {
                    "value": "nFout",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LeakyReLU_273": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_274": {
                "in_channels": {
                    "value": "nFout",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nFout",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_308": {
                "in_channels": {
                    "value": "self.in_planes",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_planes[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_315": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "MaxPool2d_313": {
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}