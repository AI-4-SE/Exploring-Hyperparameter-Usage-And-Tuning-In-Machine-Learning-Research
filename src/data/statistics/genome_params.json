{
    "learn_model.py": {
        "torch": {
            "MSELoss_47": {
                "variable": {
                    "value": "loss_fn",
                    "type": "Name",
                    "possible_values": []
                },
                "reduction": {
                    "value": "mean",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_48": {
                "variable": {
                    "value": "optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "discrim_model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3e-05",
                            "Constant"
                        ]
                    ]
                }
            },
            "transpose_43": {
                "variable": {
                    "value": "embedding",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "embedding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "emb_model(feat_emb)",
                            "Call"
                        ],
                        [
                            "torch.transpose(embedding, 1, 0)",
                            "Call"
                        ]
                    ]
                },
                "dim0": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim1": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_171": {
                "variable": {
                    "value": "(_, pred)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "yhat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "discrim_model(x_test)",
                            "Call"
                        ],
                        [
                            "discrim_model(x_val)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_194": {
                "obj": {
                    "value": "discrim_model",
                    "type": "Name",
                    "possible_values": [
                        [
                            "mh.discrim_net(embedding, n_feats, n_hidden_1, n_hidden_2, n_targets, dropout_sizes)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "discrim_model.pt",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_151": {
                "f": {
                    "value": "checkpoint.pt",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "from_numpy_37": {
                "ndarray": {
                    "value": "x_unsup",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "no_grad_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "max_111": {
                "variable": {
                    "value": "(_, pred)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "yhat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "discrim_model(x_test)",
                            "Call"
                        ],
                        [
                            "discrim_model(x_val)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_162": {
                "ndarray": {
                    "value": "x_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Variable(torch.from_numpy(x_test))",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_163": {
                "ndarray": {
                    "value": "y_test",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Variable(torch.from_numpy(y_test))",
                            "Call"
                        ],
                        [
                            "np.argmax(y_test.data, axis=1)",
                            "Call"
                        ],
                        [
                            "y_test.tolist()",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_79": {
                "ndarray": {
                    "value": "x_batch",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "from_numpy_80": {
                "ndarray": {
                    "value": "y_batch",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "from_numpy_102": {
                "ndarray": {
                    "value": "x_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Variable(torch.from_numpy(x_val))",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_103": {
                "ndarray": {
                    "value": "y_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Variable(torch.from_numpy(y_val))",
                            "Call"
                        ],
                        [
                            "np.argmax(y_val.data, axis=1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "mainloop_helpers.py": {
        "torch": {
            "max_41": {
                "variable": {
                    "value": "(_, pred)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "input": {
                    "value": "yhat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model(x)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "model_helpers.py": {
        "torch": {
            "Linear_9": {
                "variable": {
                    "value": "self.hidden_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_feats",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "n_hidden_u",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_10": {
                "variable": {
                    "value": "self.hidden_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hidden_u",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "n_hidden_t_enc",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "tanh_13": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden_1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tanh_14": {
                "variable": {
                    "value": "y_pred",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden_2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "BatchNorm1d_22": {
                "variable": {
                    "value": "self.batchNorm1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "n_hidden_u",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "BatchNorm1d_23": {
                "variable": {
                    "value": "self.batchNorm2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "n_hidden_t_enc",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Dropout_25": {
                "variable": {
                    "value": "self.dropOut1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_sizes[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Dropout_26": {
                "variable": {
                    "value": "self.dropOut2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_sizes[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Linear_28": {
                "variable": {
                    "value": "self.hidden_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_feats",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "n_hidden_u",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_32": {
                "variable": {
                    "value": "self.hidden_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hidden_u",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "n_hidden_t_enc",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_33": {
                "variable": {
                    "value": "self.hidden_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hidden_t_enc",
                    "type": "Name",
                    "possible_values": []
                },
                "out_features": {
                    "value": "n_targets",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "relu_37": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden_1(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_40": {
                "variable": {
                    "value": "y",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden_3(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "pytorchtools.py": {
        "torch": {
            "save_46": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint.pt",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}