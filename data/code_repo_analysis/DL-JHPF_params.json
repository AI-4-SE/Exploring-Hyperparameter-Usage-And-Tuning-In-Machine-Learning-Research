{
    "Narrow band/DL_JHPF_test.py": {
        "tensorflow": {
            "ConfigProto_11": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cos_40": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sin_41": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cast_42": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(y_real, y_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_49": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_51": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_52": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_55": {
                "variable": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "Heq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(Heq_left, FRF)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF * Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "real_56": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "imag_57": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "concat_58": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cast_64": {
                "variable": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(fBB_real, fBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_65": {
                "variable": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(fBB_real, fBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1, Nt_RF * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_66": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(fBB1, (-1, 1, Nt_RF * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_68": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_72": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(norm_factor, fBB2)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cast_73": {
                "variable": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(wBB_real, wBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_74": {
                "variable": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(wBB_real, wBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_76": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_80": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conj_82": {
                "variable": {
                    "value": "WBBH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "real_84": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "imag_85": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "concat_86": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_87": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(y_real, y_imag), tf.complex64)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 2)",
                            "Call"
                        ],
                        [
                            "tf.reshape(y, (-1, 2 * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 2 * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "device_125": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_168": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "complex_42": {
                "real": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cos(x)",
                            "Call"
                        ],
                        [
                            "tf.real(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.real(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                },
                "imag": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.sin(x)",
                            "Call"
                        ],
                        [
                            "tf.imag(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.imag(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_52": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_64": {
                "real": {
                    "value": "fBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "fBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "divide_70": {
                "x": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.norm(FRF_BB, axis=[-2, -1], keepdims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "complex_73": {
                "real": {
                    "value": "wBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "wBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "transpose_80": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_82": {
                "a": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wBB2, (-1, Nr_RF, Ns))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_84": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_85": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "norm_70": {
                "tensor": {
                    "value": "FRF_BB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(FRF, FBB)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[-2, -1]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "Narrow band/DL_JHPF_train.py": {
        "tensorflow": {
            "ConfigProto_11": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Session_13": {
                "variable": {
                    "value": "sess",
                    "type": "variable",
                    "possible_values": []
                },
                "config": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.ConfigProto()",
                            "Call"
                        ]
                    ]
                }
            },
            "cos_46": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sin_47": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cast_48": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(y_real, y_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_55": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_57": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_58": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_61": {
                "variable": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "Heq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(Heq_left, FRF)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF * Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "real_62": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "imag_63": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "concat_64": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cast_71": {
                "variable": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(fBB_real, fBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_72": {
                "variable": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(fBB_real, fBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1, Nt_RF * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_73": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(fBB1, (-1, 1, Nt_RF * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_75": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_79": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(norm_factor, fBB2)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cast_80": {
                "variable": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(wBB_real, wBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_81": {
                "variable": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(wBB_real, wBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_83": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_87": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conj_89": {
                "variable": {
                    "value": "WBBH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "real_91": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "imag_92": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "concat_93": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_94": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(x, A)",
                            "Call"
                        ],
                        [
                            "tf.cast(tf.complex(y_real, y_imag), tf.complex64)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 2)",
                            "Call"
                        ],
                        [
                            "tf.reshape(y, (-1, 2 * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 2 * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "device_170": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_213": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "complex_48": {
                "real": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cos(x)",
                            "Call"
                        ],
                        [
                            "tf.real(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.real(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                },
                "imag": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.sin(x)",
                            "Call"
                        ],
                        [
                            "tf.imag(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.imag(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_58": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_71": {
                "real": {
                    "value": "fBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "fBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "divide_77": {
                "x": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.norm(FRF_BB, axis=[-2, -1], keepdims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "complex_80": {
                "real": {
                    "value": "wBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "wBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "transpose_87": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_89": {
                "a": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wBB2, (-1, Nr_RF, Ns))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_91": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_92": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "norm_77": {
                "tensor": {
                    "value": "FRF_BB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(FRF, FBB)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[-2, -1]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "Narrow band/DL_JHPF_train_further.py": {
        "tensorflow": {
            "ConfigProto_11": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cos_45": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sin_46": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cast_47": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(y_real, y_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_54": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_56": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_57": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_60": {
                "variable": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "Heq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(Heq_left, FRF)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF * Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "real_61": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "imag_62": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "concat_63": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(fBB_real, fBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_71": {
                "variable": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(fBB_real, fBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1, Nt_RF * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_72": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(fBB1, (-1, 1, Nt_RF * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_74": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_78": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(norm_factor, fBB2)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cast_79": {
                "variable": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(wBB_real, wBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_80": {
                "variable": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(wBB_real, wBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_82": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_86": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conj_88": {
                "variable": {
                    "value": "WBBH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "real_90": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "imag_91": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "concat_92": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_93": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(x, A)",
                            "Call"
                        ],
                        [
                            "tf.cast(tf.complex(y_real, y_imag), tf.complex64)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 2)",
                            "Call"
                        ],
                        [
                            "tf.reshape(y, (-1, 2 * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 2 * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "device_169": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_212": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "complex_47": {
                "real": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cos(x)",
                            "Call"
                        ],
                        [
                            "tf.real(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.real(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                },
                "imag": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.sin(x)",
                            "Call"
                        ],
                        [
                            "tf.imag(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.imag(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_57": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_70": {
                "real": {
                    "value": "fBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "fBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "divide_76": {
                "x": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.norm(FRF_BB, axis=[-2, -1], keepdims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "complex_79": {
                "real": {
                    "value": "wBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "wBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "transpose_86": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_88": {
                "a": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wBB2, (-1, Nr_RF, Ns))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_90": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_91": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "norm_76": {
                "tensor": {
                    "value": "FRF_BB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(FRF, FBB)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[-2, -1]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "OFDM/DL_JHPF_ofdm_test.py": {
        "tensorflow": {
            "ConfigProto_11": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cos_45": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sin_46": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cast_47": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(y_real, y_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_54": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_56": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_57": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_60": {
                "variable": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "Heq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(Heq_left, FRF)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF * Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "real_61": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "imag_62": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "concat_63": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(fBB_real, fBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_71": {
                "variable": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(fBB_real, fBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1, Nt_RF * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_72": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(fBB1, (-1, 1, Nt_RF * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_74": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_78": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(norm_factor, fBB2)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cast_79": {
                "variable": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(wBB_real, wBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_80": {
                "variable": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(wBB_real, wBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_82": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_86": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conj_88": {
                "variable": {
                    "value": "WBBH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "real_90": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "imag_91": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "concat_92": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_93": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(x, A)",
                            "Call"
                        ],
                        [
                            "tf.cast(tf.complex(y_real, y_imag), tf.complex64)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 2)",
                            "Call"
                        ],
                        [
                            "tf.reshape(y, (-1, 2 * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 2 * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "device_131": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_174": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "complex_47": {
                "real": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cos(x)",
                            "Call"
                        ],
                        [
                            "tf.real(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.real(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                },
                "imag": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.sin(x)",
                            "Call"
                        ],
                        [
                            "tf.imag(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.imag(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_57": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_70": {
                "real": {
                    "value": "fBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "fBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "divide_76": {
                "x": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.norm(FRF_BB, axis=[-2, -1], keepdims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "complex_79": {
                "real": {
                    "value": "wBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "wBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "transpose_86": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_88": {
                "a": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wBB2, (-1, Nr_RF, Ns))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_90": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_91": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "norm_76": {
                "tensor": {
                    "value": "FRF_BB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(FRF, FBB)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[-2, -1]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "OFDM/DL_JHPF_ofdm_train.py": {
        "tensorflow": {
            "ConfigProto_11": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cos_45": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sin_46": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cast_47": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(y_real, y_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_54": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_56": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_57": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_60": {
                "variable": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "Heq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(Heq_left, FRF)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF * Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "real_61": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "imag_62": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "concat_63": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cast_69": {
                "variable": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(fBB_real, fBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_70": {
                "variable": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(fBB_real, fBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1, Nt_RF * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_71": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(fBB1, (-1, 1, Nt_RF * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_73": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_77": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(norm_factor, fBB2)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cast_78": {
                "variable": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(wBB_real, wBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_79": {
                "variable": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(wBB_real, wBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_81": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_85": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conj_87": {
                "variable": {
                    "value": "WBBH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "real_89": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "imag_90": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "concat_91": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_92": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(x, A)",
                            "Call"
                        ],
                        [
                            "tf.cast(tf.complex(y_real, y_imag), tf.complex64)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 2)",
                            "Call"
                        ],
                        [
                            "tf.reshape(y, (-1, 2 * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 2 * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "device_181": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_224": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "complex_47": {
                "real": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cos(x)",
                            "Call"
                        ],
                        [
                            "tf.real(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.real(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                },
                "imag": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.sin(x)",
                            "Call"
                        ],
                        [
                            "tf.imag(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.imag(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_57": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_69": {
                "real": {
                    "value": "fBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "fBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "divide_75": {
                "x": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.norm(FRF_BB, axis=[-2, -1], keepdims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "complex_78": {
                "real": {
                    "value": "wBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "wBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "transpose_85": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_87": {
                "a": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wBB2, (-1, Nr_RF, Ns))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_89": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_90": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "norm_75": {
                "tensor": {
                    "value": "FRF_BB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(FRF, FBB)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[-2, -1]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "OFDM/DL_JHPF_ofdm_train_further.py": {
        "tensorflow": {
            "ConfigProto_11": {
                "variable": {
                    "value": "config",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cos_45": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sin_46": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(512, activation='relu')(inp1)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(256, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(128, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(64, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(h_eq)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(40, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(detected_symb)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(50, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(20, activation='relu')(x)",
                            "Call"
                        ],
                        [
                            "normalization.BatchNormalization()(x)",
                            "Call"
                        ],
                        [
                            "Dense(2 * Ns, activation='sigmoid')(x)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "cast_47": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(y_real, y_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_54": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_56": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_57": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reshape_60": {
                "variable": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "Heq",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(Heq_left, FRF)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF * Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "real_61": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "imag_62": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "Heq_vec",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(Heq, (-1, Nr_RF * Nt_RF))",
                            "Call"
                        ]
                    ]
                }
            },
            "concat_63": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cast_70": {
                "variable": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(fBB_real, fBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_71": {
                "variable": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB1",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(fBB_real, fBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 1, Nt_RF * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_72": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(fBB1, (-1, 1, Nt_RF * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_74": {
                "variable": {
                    "value": "FRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(fRF) / np.sqrt(Nt)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt, Nt_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_78": {
                "variable": {
                    "value": "FBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "fBB3",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(norm_factor, fBB2)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nt_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cast_79": {
                "variable": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.complex(wBB_real, wBB_imag)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.complex64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_80": {
                "variable": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wBB2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cast(tf.complex(wBB_real, wBB_imag), dtype=tf.complex64)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr_RF, Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_82": {
                "variable": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "wRF2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ],
                        [
                            "exp_pha(wRF) / np.sqrt(Nr)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, Nr, Nr_RF)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "conj_86": {
                "variable": {
                    "value": "WRFH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WRF, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "conj_88": {
                "variable": {
                    "value": "WBBH",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.transpose(WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "real_90": {
                "variable": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "imag_91": {
                "variable": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "tf.transpose(process_WBB, [0, 2, 1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "concat_92": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[y_real, y_imag]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reshape_93": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(x, A)",
                            "Call"
                        ],
                        [
                            "tf.cast(tf.complex(y_real, y_imag), tf.complex64)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 1)",
                            "Call"
                        ],
                        [
                            "tf.concat([y_real, y_imag], 2)",
                            "Call"
                        ],
                        [
                            "tf.reshape(y, (-1, 2 * Ns))",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "(-1, 2 * Ns)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "device_182": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "device_225": {
                "device_name": {
                    "value": "/cpu:0",
                    "type": "str",
                    "possible_values": []
                }
            },
            "complex_47": {
                "real": {
                    "value": "y_real",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.cos(x)",
                            "Call"
                        ],
                        [
                            "tf.real(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.real(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                },
                "imag": {
                    "value": "y_imag",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.sin(x)",
                            "Call"
                        ],
                        [
                            "tf.imag(Heq_vec)",
                            "Call"
                        ],
                        [
                            "tf.imag(tf.transpose(process_WBB, [0, 2, 1]))",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_57": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "complex_70": {
                "real": {
                    "value": "fBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "fBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "divide_76": {
                "x": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.norm(FRF_BB, axis=[-2, -1], keepdims=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "complex_79": {
                "real": {
                    "value": "wBB_real",
                    "type": "variable",
                    "possible_values": []
                },
                "imag": {
                    "value": "wBB_imag",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "transpose_86": {
                "a": {
                    "value": "WRF",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ],
                        [
                            "tf.reshape(wRF2, (-1, Nr, Nr_RF))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_88": {
                "a": {
                    "value": "WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reshape(wBB2, (-1, Nr_RF, Ns))",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_90": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "transpose_91": {
                "a": {
                    "value": "process_WBB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(WBBH, process_WRF)",
                            "Call"
                        ]
                    ]
                },
                "perm": {
                    "value": "[0, 2, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "norm_76": {
                "tensor": {
                    "value": "FRF_BB",
                    "type": "variable",
                    "possible_values": [
                        [
                            "K.batch_dot(FRF, FBB)",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "[-2, -1]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    }
}