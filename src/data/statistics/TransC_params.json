{
    "py_version/transc.py": {
        "torch": {
            "clamp_24": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "min": {
                    "value": "-1.0",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "max": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Embedding_143": {
                "variable": {
                    "value": "self.entity_vec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.D.entity_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "args.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Embedding_144": {
                "variable": {
                    "value": "self.concept_vec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.D.concept_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "args.emb_dim + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Embedding_145": {
                "variable": {
                    "value": "self.relation_vec",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.D.relation_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "args.emb_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_146": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "relu_363": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dis_a + self.args.margin_hrt - dis_b",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_363": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_377": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dis[0] + self.args.margin_ins - dis[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_377": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_394": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dis[0] + self.args.margin_sub - dis[1]",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_394": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_13": {
                "input": {
                    "value": "torch.abs(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_15": {
                "input": {
                    "value": "x ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "norm_19": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "p": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "keepdim": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_373": {
                "variable": {
                    "value": "dis",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "norm(entity_embs - concept_embs, pnorm=self.args.pnorm) - torch.abs(radius)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_375": {
                "variable": {
                    "value": "dis",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "norm(entity_embs - concept_embs, pnorm=self.args.pnorm) - radius ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_390": {
                "variable": {
                    "value": "dis",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "norm(concept_embs_a - concept_embs_b, pnorm=self.args.pnorm) + torch.abs(radius_a) - torch.abs(radius_b)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_392": {
                "variable": {
                    "value": "dis",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "norm(concept_embs_a - concept_embs_b, pnorm=self.args.pnorm) + radius_a ** 2 - radius_b ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_13": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "abs_373": {
                "input": {
                    "value": "radius",
                    "type": "variable",
                    "possible_values": [
                        [
                            "concept_embs[:, :, -1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "abs_390": {
                "input": {
                    "value": "radius_a",
                    "type": "variable",
                    "possible_values": [
                        [
                            "concept_embs_a[:, :, -1]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "stack_210": {
                "tensors": {
                    "value": "[torch.tensor(x) for x in list(zip(*pairs[i]))]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "sqrt_217": {
                "input": {
                    "value": "dis_b",
                    "type": "variable",
                    "possible_values": [
                        [
                            "norm(entity_embs[2] + relation_embs[1] - entity_embs[3], pnorm=self.args.pnorm)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_217": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_210": {
                "data": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}