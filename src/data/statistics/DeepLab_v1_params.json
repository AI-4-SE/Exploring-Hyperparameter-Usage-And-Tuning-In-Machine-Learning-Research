{
    "Implementation/augmentation.py": {
        "torch": {
            "randint_137": {
                "variable": {
                    "value": "i",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "h - th + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_138": {
                "variable": {
                    "value": "j",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "w - tw + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randperm_319": {
                "variable": {
                    "value": "fn_idx",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_247": {
                "variable": {
                    "value": "log_ratio",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.tensor(ratio)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_248": {
                "variable": {
                    "value": "aspect_ratio",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.empty(1).uniform_(log_ratio[0], log_ratio[1])",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "empty_455": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_182": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_196": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_229": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randint_254": {
                "variable": {
                    "value": "i",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "height - h + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_255": {
                "variable": {
                    "value": "j",
                    "type": "variable",
                    "possible_values": []
                },
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "width - w + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "tensor_323": {
                "variable": {
                    "value": "brightness_factor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_328": {
                "variable": {
                    "value": "contrast_factor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_333": {
                "variable": {
                    "value": "saturation_factor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "tensor_338": {
                "variable": {
                    "value": "hue_factor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "empty_350": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_376": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_443": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "randint_209": {
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "int(distortion_scale * half_width) + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_210": {
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "int(distortion_scale * half_height) + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_211": {
                "low": {
                    "value": "width - int(distortion_scale * half_width) - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "high": {
                    "value": "width",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_212": {
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "int(distortion_scale * half_height) + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_213": {
                "low": {
                    "value": "width - int(distortion_scale * half_width) - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "high": {
                    "value": "width",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_214": {
                "low": {
                    "value": "height - int(distortion_scale * half_height) - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "high": {
                    "value": "height",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_215": {
                "low": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "high": {
                    "value": "int(distortion_scale * half_width) + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "randint_216": {
                "low": {
                    "value": "height - int(distortion_scale * half_height) - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "high": {
                    "value": "height",
                    "type": "variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "empty_246": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_247": {
                "data": {
                    "value": "ratio",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(3.0 / 4.0",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "empty_387": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_393": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_380": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_381": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_395": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "empty_248": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "Implementation/model.py": {
        "torch": {
            "Sequential_118": {
                "variable": {
                    "value": "conv1",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*features[:4]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_119": {
                "variable": {
                    "value": "conv2",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*features[5:9]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_120": {
                "variable": {
                    "value": "conv3",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*features[10:16]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_121": {
                "variable": {
                    "value": "conv4",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*features[17:23]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_122": {
                "variable": {
                    "value": "conv5",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "*features[24:30]",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Tensor_26": {
                "variable": {
                    "value": "self.mean",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_27": {
                "variable": {
                    "value": "self.std",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MaxPool2d_139": {
                "variable": {
                    "value": "self.pool1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_142": {
                "variable": {
                    "value": "self.pool2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_145": {
                "variable": {
                    "value": "self.pool3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_148": {
                "variable": {
                    "value": "self.pool4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPool2d_151": {
                "variable": {
                    "value": "self.pool5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "AvgPool2d_152": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_154": {
                "variable": {
                    "value": "self.conv67",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Conv2d(512, 1024, kernel_size=3, stride=1, padding=12, dilation=12)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "set_device_21": {
                "device": {
                    "value": "self.gpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "as_tensor_93": {
                "variable": {
                    "value": "image_tensor",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "np.asarray(image)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_24": {
                "f": {
                    "value": "weight_file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "no_grad_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_38": {
                "variable": {
                    "value": "tps",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_39": {
                "variable": {
                    "value": "fps",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_40": {
                "variable": {
                    "value": "fns",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_90": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_155": {
                "in_channels": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "12",
                    "type": "int",
                    "possible_values": []
                },
                "dilation": {
                    "value": "12",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_155": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout2d_155": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_156": {
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_156": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout2d_156": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_157": {
                "in_channels": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Softmax2d_104": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_63": {
                "variable": {
                    "value": "predict",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "predict",
                    "type": "variable",
                    "possible_values": [
                        [
                            "crf(image[j], output[j])",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(predict).float().cuda(self.gpu, non_blocking=True)",
                            "Call"
                        ],
                        [
                            "torch.argmax(predict, dim=0)",
                            "Call"
                        ],
                        [
                            "crf(image_tensor, output)",
                            "Call"
                        ],
                        [
                            "np.argmax(predict, axis=0)",
                            "Call"
                        ]
                    ]
                }
            },
            "argmax_64": {
                "variable": {
                    "value": "predict",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predict",
                    "type": "variable",
                    "possible_values": [
                        [
                            "crf(image[j], output[j])",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(predict).float().cuda(self.gpu, non_blocking=True)",
                            "Call"
                        ],
                        [
                            "torch.argmax(predict, dim=0)",
                            "Call"
                        ],
                        [
                            "crf(image_tensor, output)",
                            "Call"
                        ],
                        [
                            "np.argmax(predict, axis=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_75": {
                "input": {
                    "value": "tps / (self.eps + tps + fps + fns)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Softmax2d_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_71": {
                "input": {
                    "value": "positive_i & true_i",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_72": {
                "input": {
                    "value": "positive_i & ~true_i & filter_255",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_73": {
                "input": {
                    "value": "~positive_i & true_i",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "Implementation/train.py": {
        "torch": {
            "CrossEntropyLoss_23": {
                "variable": {
                    "value": "self.loss_function",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "self.ignore_index",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_33": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.01",
                            "MethodArgument"
                        ]
                    ]
                },
                "momentum": {
                    "value": "momentum",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.9",
                            "MethodArgument"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.0005",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "zeros_72": {
                "variable": {
                    "value": "tps",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_73": {
                "variable": {
                    "value": "fps",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_74": {
                "variable": {
                    "value": "fns",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "set_device_21": {
                "device": {
                    "value": "self.gpu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_78": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_95": {
                "input": {
                    "value": "tps / (self.eps + tps + fps + fns)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "save_64": {
                "obj": {
                    "value": "self.model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "./best.pt",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "Implementation/utils.py": {
        "torch": {
            "argmax_5": {
                "variable": {
                    "value": "predict",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_6": {
                "variable": {
                    "value": "true_positive",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_7": {
                "variable": {
                    "value": "false_positive",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_8": {
                "variable": {
                    "value": "false_negative",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_15": {
                "input": {
                    "value": "positive_i & true_i",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_16": {
                "input": {
                    "value": "positive_i & ~true_i & filter_255",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_17": {
                "input": {
                    "value": "~positive_i & true_i",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}