{
    "ovr_encoder_git.py": {
        "sklearn": {
            "PCA_71": {
                "variable": {
                    "value": "pca",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "cifar_train_data.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "random_state": {
                    "value": "496",
                    "type": "int",
                    "possible_values": []
                },
                "svd_solver": {
                    "value": "full",
                    "type": "str",
                    "possible_values": []
                },
                "whiten": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "StandardScaler_63": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "with_mean": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "with_std": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            }
        },
        "tensorflow": {
            "divide_110": {
                "variable": {
                    "value": "hiddens_n",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "hiddens",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hiddens",
                            "Method Argument"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.expand_dims(tf.norm(hiddens, 2, 1), axis=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "abs_113": {
                "variable": {
                    "value": "loss2",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.reduce_mean(hiddens) - 0.5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reset_default_graph_271": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "expand_dims_110": {
                "input": {
                    "value": "tf.norm(hiddens, 2, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Session_272": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "norm_110": {
                "tensor": {
                    "value": "hiddens",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hiddens",
                            "Method Argument"
                        ]
                    ]
                },
                "ord": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_sum_112": {
                "input_tensor": {
                    "value": "tf.matmul(hiddens_n, hiddens_n, transpose_b=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_112": {
                "a": {
                    "value": "hiddens_n",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.divide(hiddens, tf.expand_dims(tf.norm(hiddens, 2, 1), axis=1))",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "hiddens_n",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.divide(hiddens, tf.expand_dims(tf.norm(hiddens, 2, 1), axis=1))",
                            "Call"
                        ]
                    ]
                },
                "transpose_b": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "reduce_mean_113": {
                "input_tensor": {
                    "value": "hiddens",
                    "type": "variable",
                    "possible_values": [
                        [
                            "hiddens",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    }
}