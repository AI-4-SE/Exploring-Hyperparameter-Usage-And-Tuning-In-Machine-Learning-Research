{
    "muscaps/datasets/audiocaption.py": {
        "torch": {
            "Tensor_55": {
                "variable": {
                    "value": "audio",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/datasets/base_dataset.py": {
        "torch": {
            "zeros_51": {
                "variable": {
                    "value": "padded_audio",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(audio_tracks)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max(audio_lengths)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_55": {
                "variable": {
                    "value": "padded_captions",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "len(captions)",
                    "type": "Call",
                    "possible_values": []
                },
                "out": {
                    "value": "max(cap_lengths)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Tensor_64": {
                "variable": {
                    "value": "audio_lengths",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/models/cnn_attention_lstm.py": {
        "torch": {
            "Linear_25": {
                "variable": {
                    "value": "self.audio_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.audio_encoder.audio_feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.hidden_dim_encoder",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNorm1d_27": {
                "variable": {
                    "value": "self.batch_norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.hidden_dim_encoder",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_28": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTMCell_29": {
                "variable": {
                    "value": "self.encoder",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.word_embed_dim + 2 * self.hidden_dim_encoder",
                    "type": "BinOp",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.hidden_dim_encoder",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "LogSoftmax_35": {
                "variable": {
                    "value": "self.log_softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_70": {
                "variable": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "seq_len",
                    "type": "Name",
                    "possible_values": [
                        [
                            "seq_len - 1",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.vocab.size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_78": {
                "variable": {
                    "value": "encoder_lstm_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[word_embed, pooled_audio_embeds, states['h2']]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_86": {
                "variable": {
                    "value": "attended_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attention_weights.unsqueeze(-1) * audio_features",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_91": {
                "variable": {
                    "value": "decoder_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[attended_features, states['h1']]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "arange_61": {
                "start": {
                    "value": "max_len",
                    "type": "Name",
                    "possible_values": [
                        [
                            "audio_features.size(1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "muscaps/models/cnn_lstm_caption.py": {
        "torch": {
            "Linear_20": {
                "variable": {
                    "value": "self.audio_linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.audio_encoder.audio_feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.hidden_dim_encoder",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "BatchNorm1d_22": {
                "variable": {
                    "value": "self.batch_norm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "self.hidden_dim_encoder",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ReLU_23": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_52": {
                "variable": {
                    "value": "outputs",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "seq_len",
                    "type": "Name",
                    "possible_values": [
                        [
                            "seq_len + 1",
                            "BinOp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.vocab.size",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/modules/attention.py": {
        "torch": {
            "Linear_14": {
                "variable": {
                    "value": "self.audio_projection",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.audio_feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.attention_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_16": {
                "variable": {
                    "value": "self.query_projection",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.attention_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dropout_17": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "config.attention_dropout",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_18": {
                "variable": {
                    "value": "self.linear",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.attention_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tanh_20": {
                "variable": {
                    "value": "self.tanh",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Softmax_21": {
                "variable": {
                    "value": "self.softmax",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/modules/audio_feature_extractors.py": {
        "torch": {
            "tensor_74": {
                "variable": {
                    "value": "self.f0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "harmonic_hz.astype('float32')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_92": {
                "variable": {
                    "value": "fb",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.zero",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linspace_99": {
                "variable": {
                    "value": "self.fft_bins",
                    "type": "Attribute",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "end": {
                    "value": "self.sample_rate // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "steps": {
                    "value": "n_bins",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_101": {
                "variable": {
                    "value": "self.zero",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "matmul_113": {
                "variable": {
                    "value": "harmonic_spec",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "spectrogram.transpose(1, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "other": {
                    "value": "harmonic_fb",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.get_harmonic_fb()",
                            "Call"
                        ]
                    ]
                }
            },
            "transpose_113": {
                "variable": {
                    "value": "harmonic_spec",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim0": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_151": {
                "variable": {
                    "value": "self.hstft_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "n_harmonic",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "6",
                            "MethodArgument"
                        ],
                        [
                            "6",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_163": {
                "variable": {
                    "value": "self.dense1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "n_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm1d_164": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "n_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Linear_165": {
                "variable": {
                    "value": "self.dense2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_channels * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "n_class",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "50",
                            "MethodArgument"
                        ],
                        [
                            "50",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_166": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_167": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "BatchNorm2d_217": {
                "variable": {
                    "value": "self.spec_bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModuleList_225": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "modules": {
                    "value": "[m1, m2, m3, m4, m5]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Linear_235": {
                "variable": {
                    "value": "self.dense1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "(561 + backend_channel * 3) * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "dense_channel",
                    "type": "Name",
                    "possible_values": [
                        [
                            "500 if dataset == 'msd' else 200",
                            "IfExp"
                        ]
                    ]
                }
            },
            "BatchNorm1d_237": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "dense_channel",
                    "type": "Name",
                    "possible_values": [
                        [
                            "500 if dataset == 'msd' else 200",
                            "IfExp"
                        ]
                    ]
                }
            },
            "ReLU_238": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dropout_239": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_240": {
                "variable": {
                    "value": "self.dense2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "dense_channel",
                    "type": "Name",
                    "possible_values": [
                        [
                            "500 if dataset == 'msd' else 200",
                            "IfExp"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_class",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "50",
                            "MethodArgument"
                        ],
                        [
                            "50",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cat_253": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(out, dim=1)",
                            "Call"
                        ],
                        [
                            "torch.cat([out, res1, res2, res3], 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_259": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[out, res1, res2, res3]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_78": {
                "variable": {
                    "value": "self.bw_Q",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.tensor(np.array([bw_Q]).astype('float32'))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "tensor_81": {
                "variable": {
                    "value": "self.bw_Q",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "np.array([bw_Q]).astype('float32')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "min_92": {
                "input": {
                    "value": "down_slope",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.matmul(fft_bins, -2 / bw) + 1 + 2 * f0 / bw",
                            "BinOp"
                        ]
                    ]
                }
            },
            "tensor_79": {
                "data": {
                    "value": "np.array([bw_Q]).astype('float32')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_90": {
                "input": {
                    "value": "fft_bins",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.fft_bins.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "2 / bw",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "matmul_91": {
                "input": {
                    "value": "fft_bins",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.fft_bins.unsqueeze(1)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "-2 / bw",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "MaxPool1d_185": {
                "kernel_size": {
                    "value": "x.size(-1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/modules/conv_layers.py": {
        "torch": {
            "Conv1d_41": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "shape",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "shape // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm1d_46": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_47": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool1d_48": {
                "variable": {
                    "value": "self.mp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "pooling",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_63": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "shape",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "shape // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm2d_68": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_69": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_70": {
                "variable": {
                    "value": "self.mp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "pooling",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Conv2d_81": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "filter_shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "(0, filter_shape[1] // 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "BatchNorm2d_85": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_86": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1d_100": {
                "variable": {
                    "value": "self.conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "filter_length",
                    "type": "Variable",
                    "possible_values": []
                },
                "padding": {
                    "value": "filter_length // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "BatchNorm1d_104": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_105": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_118": {
                "variable": {
                    "value": "self.conv_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "input_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_119": {
                "variable": {
                    "value": "self.bn_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_120": {
                "variable": {
                    "value": "self.conv_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_121": {
                "variable": {
                    "value": "self.bn_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "output_channels",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_122": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_123": {
                "variable": {
                    "value": "self.mp",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "pooling",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ],
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "MaxPool2d_91": {
                "kernel_size": {
                    "value": "(freq, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(freq, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "AvgPool2d_109": {
                "kernel_size": {
                    "value": "(freq, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(freq, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "log2_134": {
                "input": {
                    "value": "hz",
                    "type": "Name",
                    "possible_values": [
                        [
                            "midi_to_hz(midi[:-1])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "muscaps/modules/decoders.py": {
        "torch": {
            "LSTMCell_25": {
                "variable": {
                    "value": "self.lstm_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.input_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "weight_norm_27": {
                "variable": {
                    "value": "self.dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "module": {
                    "value": "nn.Linear(self.hidden_dim, self.n_classes)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dropout_28": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "self.dropout_p",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_27": {
                "in_features": {
                    "value": "self.hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.n_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/modules/encoders.py": {
        "torch": {
            "split_52": {
                "variable": {
                    "value": "audio_chunks",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "audio",
                    "type": "Variable",
                    "possible_values": []
                },
                "split_size_or_sections": {
                    "value": "self.input_length",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "stack_53": {
                "variable": {
                    "value": "audio_chunks",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[i for i in audio_chunks if i.size(1) == self.input_length]",
                    "type": "ListComp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_65": {
                "variable": {
                    "value": "audio_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "num_chunks",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.audio_feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_164": {
                "variable": {
                    "value": "c_init",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, batch_size, self.hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "as_tensor_181": {
                "variable": {
                    "value": "x_len",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "x_len",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.as_tensor(x_len, dtype=torch.int64, device='cpu')",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.int64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pack_padded_sequence_182": {
                "variable": {
                    "value": "lstm_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "lstm_input",
                    "type": "Name",
                    "possible_values": [
                        [
                            "word_embeds",
                            "Name"
                        ],
                        [
                            "nn.utils.rnn.pack_padded_sequence(lstm_input, x_len, enforce_sorted=False, batch_first=True)",
                            "Call"
                        ],
                        [
                            "torch.cat((audio_embeds, word_embeds), dim=2)",
                            "Call"
                        ],
                        [
                            "word_embeds",
                            "Name"
                        ]
                    ]
                },
                "lengths": {
                    "value": "x_len",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.as_tensor(x_len, dtype=torch.int64, device='cpu')",
                            "Call"
                        ]
                    ]
                },
                "enforce_sorted": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "pad_packed_sequence_187": {
                "variable": {
                    "value": "(lstm_out, _)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "sequence": {
                    "value": "lstm_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.cat((lstm_out, audio_embeds), dim=2)",
                            "Call"
                        ]
                    ]
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_45": {
                "variable": {
                    "value": "state_dict",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "self.feature_extractor_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_49": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, self.audio_feature_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "LSTM_146": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.word_embed_dim",
                    "type": null,
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_190": {
                "variable": {
                    "value": "lstm_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(lstm_out, audio_embeds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LSTM_150": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.word_embed_dim + self.hidden_dim",
                    "type": null,
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_170": {
                "variable": {
                    "value": "h_init",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, batch_size, self.hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_172": {
                "variable": {
                    "value": "audio_embeds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "word_embeds.size(1) * [audio_embeds]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_174": {
                "variable": {
                    "value": "lstm_input",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(audio_embeds, word_embeds)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "nonzero_69": {
                "input": {
                    "value": "chunk",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "LSTM_154": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "self.word_embed_dim",
                    "type": null,
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_176": {
                "variable": {
                    "value": "audio_embeds",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "word_embeds.size(1) * [audio_embeds]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_179": {
                "variable": {
                    "value": "h_init",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(1, batch_size, self.hidden_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "MaxPool1d_74": {
                "kernel_size": {
                    "value": "feature.size(-1)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/scripts/caption.py": {
        "torch": {
            "no_grad_48": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/scripts/eval.py": {
        "torch": {
            "device_19": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "self.config.training.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_41": {
                "variable": {
                    "value": "self.test_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "AudioCaptionDataset(self.config.dataset_config, dataset_type='test')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "custom_collate_fn",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "load_55": {
                "variable": {
                    "value": "self.checkpoint",
                    "type": "Attribute",
                    "possible_values": []
                },
                "f": {
                    "value": "self.path_to_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/scripts/train.py": {
        "torch": {}
    },
    "muscaps/trainers/muscaps_trainer.py": {
        "torch": {
            "device_24": {
                "variable": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "self.config.training.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_47": {
                "variable": {
                    "value": "self.train_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "AudioCaptionDataset(self.config.dataset_config)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.config.training.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "self.config.training.shuffle",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "self.config.training.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.config.training.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "custom_collate_fn",
                    "type": "Variable",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_55": {
                "variable": {
                    "value": "self.val_loader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "type": "Name",
                    "possible_values": [
                        [
                            "AudioCaptionDataset(self.config.dataset_config, 'val')",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "self.config.training.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "self.config.training.shuffle",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "self.config.training.num_workers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "self.config.training.pin_memory",
                    "type": "Attribute",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "custom_collate_fn",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReduceLROnPlateau_116": {
                "variable": {
                    "value": "scheduler",
                    "type": "Variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "mode": {
                    "value": "min",
                    "type": "Constant",
                    "possible_values": []
                },
                "factor": {
                    "value": "0.5",
                    "type": "Constant",
                    "possible_values": []
                },
                "patience": {
                    "value": "self.patience",
                    "type": "Attribute",
                    "possible_values": []
                },
                "verbose": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_165": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint_path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_89": {
                "variable": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "self.vocab.PAD_INDEX",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_98": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adadelta_100": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_213": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "clip_grad_norm__203": {
                "parameters": {
                    "value": "self.model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/utils/logger.py": {
        "torch": {
            "save_71": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "self.checkpoint_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_76": {
                "obj": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "best_model_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(self.experiment_dir, 'best_model.pth.tar')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "muscaps/utils/text_decoder.py": {
        "torch": {
            "device_9": {
                "variable": {
                    "value": "self._device",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "config.training.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_59": {
                "variable": {
                    "value": "self.top_k_scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*size": {
                    "value": "self._beam_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tensor_62": {
                "variable": {
                    "value": "cap_lens",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "cat_64": {
                "variable": {
                    "value": "audio",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "self._beam_size * [audio]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_65": {
                "variable": {
                    "value": "audio_len",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "self._beam_size * [audio_len]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_70": {
                "variable": {
                    "value": "seqs",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.seqs[prev_word_inds], next_word_inds.unsqueeze(1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Tensor_31": {
                "variable": {
                    "value": "cap_lens",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "log_softmax_35": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model(audio, audio_len, predicted_caption.unsqueeze(0), cap_lens)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "argmax_36": {
                "variable": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.log_softmax(out, dim=2)",
                            "Call"
                        ],
                        [
                            "torch.argmax(prediction, dim=2)",
                            "Call"
                        ],
                        [
                            "prediction[:, -1]",
                            "Subscript"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_38": {
                "variable": {
                    "value": "predicted_caption",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[predicted_caption, prediction]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "log_softmax_80": {
                "input": {
                    "value": "scores",
                    "type": "Name",
                    "possible_values": [
                        [
                            "model(audio, audio_len, self.seqs, cap_lens)",
                            "Call"
                        ],
                        [
                            "torch.log_softmax(scores, dim=2)[:, -1, :]",
                            "Subscript"
                        ],
                        [
                            "self.top_k_scores.expand_as(scores) + scores",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/utils/utils.py": {
        "torch": {
            "softmax_63": {
                "variable": {
                    "value": "result",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vector",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_71": {
                "variable": {
                    "value": "result",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vector * mask",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "softmax_79": {
                "variable": {
                    "value": "result",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "masked_vector",
                    "type": "Name",
                    "possible_values": [
                        [
                            "vector.masked_fill((1 - mask).byte(), mask_fill_value)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "dim",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "muscaps/utils/vocab.py": {
        "torch": {
            "ones_like_83": {
                "input": {
                    "value": "self.vectors[i]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}