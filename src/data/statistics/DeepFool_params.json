{
    "Python/deepfool.py": {
        "torch": {
            "is_available_18": {
                "variable": {
                    "value": "is_cuda",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "from_numpy_75": {
                "ndarray": {
                    "value": "r_tot",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.zeros(input_shape)",
                            "Call"
                        ],
                        [
                            "(1 + overshoot) * r_tot",
                            "BinOp"
                        ],
                        [
                            "np.float32(r_tot + r_i)",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_77": {
                "ndarray": {
                    "value": "r_tot",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.zeros(input_shape)",
                            "Call"
                        ],
                        [
                            "(1 + overshoot) * r_tot",
                            "BinOp"
                        ],
                        [
                            "np.float32(r_tot + r_i)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "Python/test_deepfool.py": {
        "torch": {
            "max_47": {
                "variable": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.max(A, minv * torch.ones(A.shape))",
                            "Call"
                        ],
                        [
                            "torch.min(A, maxv * torch.ones(A.shape))",
                            "Call"
                        ]
                    ]
                }
            },
            "min_48": {
                "variable": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "A",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.max(A, minv * torch.ones(A.shape))",
                            "Call"
                        ],
                        [
                            "torch.min(A, maxv * torch.ones(A.shape))",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_47": {
                "*size": {
                    "value": "A.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_48": {
                "*size": {
                    "value": "A.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}