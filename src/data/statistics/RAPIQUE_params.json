{
    "evaluate_bvqa_features_binary_classification.py": {
        "sklearn": {
            "accuracy_score_87": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "gmm.predict(y_mos.reshape(-1, 1))",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "array[1:, 4]",
                            "Subscript"
                        ],
                        [
                            "y_new",
                            "variable"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.delete(y, gray_indices, axis=0)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_pred",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "balanced_accuracy_score_90": {
                "variable": {
                    "value": "bal_acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "gmm.predict(y_mos.reshape(-1, 1))",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "array[1:, 4]",
                            "Subscript"
                        ],
                        [
                            "y_new",
                            "variable"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.delete(y, gray_indices, axis=0)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_pred",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "f1_score_93": {
                "variable": {
                    "value": "f1",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "gmm.predict(y_mos.reshape(-1, 1))",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "array[1:, 4]",
                            "Subscript"
                        ],
                        [
                            "y_new",
                            "variable"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.delete(y, gray_indices, axis=0)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_pred",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "train_test_split_135": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "math.ceil(8.8 * i)",
                    "type": "Call",
                    "possible_values": []
                },
                "stratify": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "gmm.predict(y_mos.reshape(-1, 1))",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "array[1:, 4]",
                            "Subscript"
                        ],
                        [
                            "y_new",
                            "variable"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.delete(y, gray_indices, axis=0)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxScaler_151": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GaussianMixture_201": {
                "variable": {
                    "value": "gmm",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SimpleImputer_227": {
                "variable": {
                    "value": "imp",
                    "type": "variable",
                    "possible_values": []
                },
                "missing_values": {
                    "value": "np.nan",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strategy": {
                    "value": "mean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "RandomizedSearchCV_143": {
                "variable": {
                    "value": "grid",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "SVC()",
                    "type": "Call",
                    "possible_values": []
                },
                "param_distributions": {
                    "value": "param_grid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'C': np.logspace(1, 10, 10, base=2), 'gamma': np.logspace(-8, 1, 10, base=2)}",
                            "Dict"
                        ],
                        [
                            "{'C': [0.001, 0.01, 0.1, 1.0, 2.5, 5.0, 10.0]}",
                            "Dict"
                        ]
                    ]
                },
                "cv": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "RandomizedSearchCV_149": {
                "variable": {
                    "value": "grid",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "LinearSVC()",
                    "type": "Call",
                    "possible_values": []
                },
                "param_distributions": {
                    "value": "param_grid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'C': np.logspace(1, 10, 10, base=2), 'gamma': np.logspace(-8, 1, 10, base=2)}",
                            "Dict"
                        ],
                        [
                            "{'C': [0.001, 0.01, 0.1, 1.0, 2.5, 5.0, 10.0]}",
                            "Dict"
                        ]
                    ]
                },
                "cv": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SVC_158": {
                "variable": {
                    "value": "regressor",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "best_params['C']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                },
                "gamma": {
                    "value": "best_params['gamma']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                }
            },
            "LinearSVC_160": {
                "variable": {
                    "value": "regressor",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "best_params['C']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                }
            },
            "SVC_143": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LinearSVC_149": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "evaluate_bvqa_features_ordinal_classification.py": {
        "sklearn": {
            "accuracy_score_89": {
                "variable": {
                    "value": "acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "gmm.predict(y_mos.reshape(-1, 1))",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "array[1:, 4]",
                            "Subscript"
                        ],
                        [
                            "y_new",
                            "variable"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ],
                        [
                            "np.delete(y, gray_indices, axis=0)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_pred",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "balanced_accuracy_score_93": {
                "variable": {
                    "value": "bal_acc",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "gmm.predict(y_mos.reshape(-1, 1))",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "array[1:, 4]",
                            "Subscript"
                        ],
                        [
                            "y_new",
                            "variable"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ],
                        [
                            "np.delete(y, gray_indices, axis=0)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_pred",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "mean_absolute_error_96": {
                "variable": {
                    "value": "mae",
                    "type": "variable",
                    "possible_values": []
                },
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "gmm.predict(y_mos.reshape(-1, 1))",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "array[1:, 4]",
                            "Subscript"
                        ],
                        [
                            "y_new",
                            "variable"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ],
                        [
                            "np.delete(y, gray_indices, axis=0)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "y_pred",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "train_test_split_145": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "math.ceil(8.8 * i)",
                    "type": "Call",
                    "possible_values": []
                },
                "stratify": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "gmm.predict(y_mos.reshape(-1, 1))",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "array[1:, 4]",
                            "Subscript"
                        ],
                        [
                            "y_new",
                            "variable"
                        ],
                        [
                            "y.astype(int)",
                            "Call"
                        ],
                        [
                            "np.delete(y, gray_indices, axis=0)",
                            "Call"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "MinMaxScaler_164": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "GaussianMixture_209": {
                "variable": {
                    "value": "gmm",
                    "type": "variable",
                    "possible_values": []
                },
                "n_components": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SimpleImputer_237": {
                "variable": {
                    "value": "imp",
                    "type": "variable",
                    "possible_values": []
                },
                "missing_values": {
                    "value": "np.nan",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strategy": {
                    "value": "mean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "RandomizedSearchCV_153": {
                "variable": {
                    "value": "grid",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "SVC()",
                    "type": "Call",
                    "possible_values": []
                },
                "param_distributions": {
                    "value": "param_grid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'C': np.logspace(1, 10, 10, base=2), 'gamma': np.logspace(-8, 1, 10, base=2)}",
                            "Dict"
                        ],
                        [
                            "{'C': [0.001, 0.01, 0.1, 1.0, 2.5, 5.0, 10.0]}",
                            "Dict"
                        ]
                    ]
                },
                "cv": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "RandomizedSearchCV_162": {
                "variable": {
                    "value": "grid",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "LinearSVC()",
                    "type": "Call",
                    "possible_values": []
                },
                "param_distributions": {
                    "value": "param_grid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'C': np.logspace(1, 10, 10, base=2), 'gamma': np.logspace(-8, 1, 10, base=2)}",
                            "Dict"
                        ],
                        [
                            "{'C': [0.001, 0.01, 0.1, 1.0, 2.5, 5.0, 10.0]}",
                            "Dict"
                        ]
                    ]
                },
                "cv": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SVC_171": {
                "variable": {
                    "value": "regressor",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "best_params['C']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                },
                "gamma": {
                    "value": "best_params['gamma']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                }
            },
            "LinearSVC_174": {
                "variable": {
                    "value": "regressor",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "best_params['C']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                }
            },
            "SVC_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LinearSVC_162": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "evaluate_bvqa_features_regression.py": {
        "sklearn": {
            "train_test_split_145": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "math.ceil(8.8 * i)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "MinMaxScaler_160": {
                "variable": {
                    "value": "scaler",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SimpleImputer_208": {
                "variable": {
                    "value": "imp",
                    "type": "variable",
                    "possible_values": []
                },
                "missing_values": {
                    "value": "np.nan",
                    "type": "Attribute",
                    "possible_values": []
                },
                "strategy": {
                    "value": "mean",
                    "type": "str",
                    "possible_values": []
                }
            },
            "RandomizedSearchCV_153": {
                "variable": {
                    "value": "grid",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "SVR()",
                    "type": "Call",
                    "possible_values": []
                },
                "param_distributions": {
                    "value": "param_grid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'C': np.logspace(1, 10, 10, base=2), 'gamma': np.logspace(-8, 1, 10, base=2)}",
                            "Dict"
                        ],
                        [
                            "{'C': [0.001, 0.01, 0.1, 1.0, 2.5, 5.0, 10.0], 'epsilon': [0.001, 0.01, 0.1, 1.0, 2.5, 5.0, 10.0]}",
                            "Dict"
                        ]
                    ]
                },
                "cv": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "n_jobs": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "RandomizedSearchCV_159": {
                "variable": {
                    "value": "grid",
                    "type": "variable",
                    "possible_values": []
                },
                "estimator": {
                    "value": "LinearSVR()",
                    "type": "Call",
                    "possible_values": []
                },
                "param_distributions": {
                    "value": "param_grid",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'C': np.logspace(1, 10, 10, base=2), 'gamma': np.logspace(-8, 1, 10, base=2)}",
                            "Dict"
                        ],
                        [
                            "{'C': [0.001, 0.01, 0.1, 1.0, 2.5, 5.0, 10.0], 'epsilon': [0.001, 0.01, 0.1, 1.0, 2.5, 5.0, 10.0]}",
                            "Dict"
                        ]
                    ]
                },
                "cv": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "SVR_167": {
                "variable": {
                    "value": "regressor",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "best_params['C']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                },
                "gamma": {
                    "value": "best_params['gamma']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                }
            },
            "LinearSVR_169": {
                "variable": {
                    "value": "regressor",
                    "type": "variable",
                    "possible_values": []
                },
                "C": {
                    "value": "best_params['C']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                },
                "epsilon": {
                    "value": "best_params['epsilon']",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "grid.best_params_",
                            "Attribute"
                        ],
                        [
                            "evaluate_bvqa_one_split(i, X, y, args.log_short)",
                            "Call"
                        ],
                        [
                            "future.result()",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_squared_error_100": {
                "y_true": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.array(list(y), dtype=np.float)",
                            "Call"
                        ],
                        [
                            "array[1:, 1]",
                            "Subscript"
                        ],
                        [
                            "np.delete(y, gray_indices, axis=0)",
                            "Call"
                        ],
                        [
                            "array[1:, 4]",
                            "Subscript"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ],
                        [
                            "y",
                            "Method Argument"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "y_pred_logistic",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logistic_func(y_pred, *popt)",
                            "Call"
                        ]
                    ]
                }
            },
            "SVR_153": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LinearSVR_159": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}