{
    "LoCA_MountainCar/muzero/MuZeroAgent.py": {
        "torch": {
            "SummaryWriter_120": {
                "variable": {
                    "value": "summary_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "exp_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "muzero_config.set_config(args, domain_settings)",
                            "Call"
                        ]
                    ]
                },
                "flush_secs": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_132": {
                "f": {
                    "value": "muzero_config.model_path",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "torch.device('cpu')",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "device_132": {
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/config.py": {
        "torch": {
            "ones_135": {
                "variable": {
                    "value": "sign",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "x.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_150": {
                "variable": {
                    "value": "value_probs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_151": {
                "variable": {
                    "value": "value_support",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "value_probs.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_152": {
                "variable": {
                    "value": "value_support[:, :]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "data": {
                    "value": "[x for x in scalar_support.range]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "ones_157": {
                "variable": {
                    "value": "sign",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "value.shape",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_177": {
                "variable": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "x.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "x.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "set_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "is_available_109": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sqrt_137": {
                "input": {
                    "value": "torch.abs(x) + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_159": {
                "input": {
                    "value": "1 + 4 * epsilon * (torch.abs(value) + 1 + epsilon)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_137": {
                "input": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "abs_159": {
                "input": {
                    "value": "value",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(value_support * value_probs).sum(1, keepdim=True)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/env/__init__.py": {
        "torch": {
            "log_softmax_62": {
                "input": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_65": {
                "input": {
                    "value": "prediction",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/env/model.py": {
        "torch": {
            "Sequential_12": {
                "variable": {
                    "value": "self._representation",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(input_size, self.hx_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_14": {
                "variable": {
                    "value": "self._dynamics_state",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.hx_size + action_space_n, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_18": {
                "variable": {
                    "value": "self._dynamics_reward",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.hx_size + action_space_n, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_21": {
                "variable": {
                    "value": "self._prediction_actor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.hx_size, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_24": {
                "variable": {
                    "value": "self._prediction_value",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(self.hx_size, 16)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_46": {
                "variable": {
                    "value": "action_one_hot",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(action.shape[0], self.action_space_n)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "action.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_50": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(state, action_one_hot)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_12": {
                "in_features": {
                    "value": "input_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.hx_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_14": {
                "in_features": {
                    "value": "self.hx_size + action_space_n",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tanh_15": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_16": {
                "in_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.hx_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tanh_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_18": {
                "in_features": {
                    "value": "self.hx_size + action_space_n",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_19": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_20": {
                "in_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "reward_support_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_21": {
                "in_features": {
                    "value": "self.hx_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_23": {
                "in_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "action_space_n",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Linear_24": {
                "in_features": {
                    "value": "self.hx_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_25": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_26": {
                "in_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "value_support_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_56": {
                "*size": {
                    "value": "self.input_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/env/mountain_car.py": {
        "torch": {
            "tensor_262": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.obs(bootstrap_index)",
                            "Call"
                        ],
                        [
                            "torch.tensor(obs, dtype=torch.float32).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "self.obs(current_index)",
                            "Call"
                        ],
                        [
                            "torch.tensor(obs, dtype=torch.float32).unsqueeze(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_262": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_283": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.obs(bootstrap_index)",
                            "Call"
                        ],
                        [
                            "torch.tensor(obs, dtype=torch.float32).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "self.obs(current_index)",
                            "Call"
                        ],
                        [
                            "torch.tensor(obs, dtype=torch.float32).unsqueeze(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_283": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/evaluate.py": {
        "torch": {
            "no_grad_10": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "unsqueeze_28": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/game.py": {
        "torch": {
            "tensor_98": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.obs(bootstrap_index)",
                            "Call"
                        ],
                        [
                            "torch.tensor(obs, dtype=torch.float32).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "self.obs(current_index)",
                            "Call"
                        ],
                        [
                            "torch.tensor(obs, dtype=torch.float32).unsqueeze(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_98": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "tensor_119": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.obs(bootstrap_index)",
                            "Call"
                        ],
                        [
                            "torch.tensor(obs, dtype=torch.float32).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "self.obs(current_index)",
                            "Call"
                        ],
                        [
                            "torch.tensor(obs, dtype=torch.float32).unsqueeze(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_119": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/mcts.py": {
        "torch": {
            "tensor_83": {
                "data": {
                    "value": "[[history.last_action().index]]",
                    "type": "List",
                    "possible_values": []
                },
                "device": {
                    "value": "parent.hidden_state.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/model.py": {
        "torch": {
            "from_numpy_66": {
                "variable": {
                    "value": "p.grad",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "g",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/replay_buffer.py": {
        "torch": {
            "tensor_46": {
                "variable": {
                    "value": "indices",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "indices",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.random.choice(len(self.priorities), self.batch_size, p=probs)",
                            "Call"
                        ],
                        [
                            "torch.tensor(indices)",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_47": {
                "variable": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "weights",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(total * probs[indices]) ** (-beta)",
                            "BinOp"
                        ],
                        [
                            "weights / weights.max()",
                            "BinOp"
                        ],
                        [
                            "torch.tensor(weights).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_65": {
                "variable": {
                    "value": "obs_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "obs_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(obs_batch).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_66": {
                "variable": {
                    "value": "action_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "action_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(action_batch).long()",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_67": {
                "variable": {
                    "value": "reward_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "reward_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(reward_batch).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_68": {
                "variable": {
                    "value": "value_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "value_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(value_batch).float()",
                            "Call"
                        ]
                    ]
                }
            },
            "tensor_69": {
                "variable": {
                    "value": "policy_batch",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "policy_batch",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.tensor(policy_batch).float()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "LoCA_MountainCar/muzero/train.py": {
        "torch": {
            "zeros_272": {
                "variable": {
                    "value": "reward_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "config.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "config.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_325": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "config.lr_init",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "config.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "config.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_283": {
                "variable": {
                    "value": "predicted_values",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(predicted_values, config.inverse_value_transform(value))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_287": {
                "variable": {
                    "value": "predicted_policies",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(predicted_policies, torch.softmax(policy_logits, dim=1))",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "clip_grad_norm__297": {
                "parameters": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "max_norm": {
                    "value": "config.max_grad_norm",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_263": {
                "input": {
                    "value": "policy_logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "L1Loss_266": {
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "no_grad_177": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_285": {
                "tensors": {
                    "value": "(predicted_rewards, scaled_rewards)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "tensor_204": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "data": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "env.reset()",
                            "Call"
                        ],
                        [
                            "torch.tensor(obs, dtype=torch.float32).unsqueeze(0)",
                            "Call"
                        ]
                    ]
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_204": {
                "variable": {
                    "value": "obs",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_287": {
                "input": {
                    "value": "policy_logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_379": {
                "obj": {
                    "value": "evaluate_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "config.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_382": {
                "obj": {
                    "value": "evaluate_model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "config.model_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "log_softmax_271": {
                "input": {
                    "value": "policy_logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "log_softmax_277": {
                "input": {
                    "value": "policy_logits",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "L1Loss_222": {
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "tensor_223": {
                "data": {
                    "value": "[[root.value()]]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "LoCA_MountainCar/utils.py": {
        "torch": {
            "SummaryWriter_53": {
                "variable": {
                    "value": "summary_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "exp_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "muzero_config.set_config(config, domain_settings)",
                            "Call"
                        ]
                    ]
                },
                "flush_secs": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}