{
    "model.py": {
        "tensorflow": {
            "placeholder_15": {
                "variable": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, 66, 200, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "placeholder_16": {
                "variable": {
                    "value": "y_",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, 1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "relu_24": {
                "variable": {
                    "value": "h_conv1",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "conv2d(x_image, W_conv1, 2) + b_conv1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_30": {
                "variable": {
                    "value": "h_conv2",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "conv2d(h_conv1, W_conv2, 2) + b_conv2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_36": {
                "variable": {
                    "value": "h_conv3",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "conv2d(h_conv2, W_conv3, 2) + b_conv3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_42": {
                "variable": {
                    "value": "h_conv4",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "conv2d(h_conv3, W_conv4, 1) + b_conv4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_48": {
                "variable": {
                    "value": "h_conv5",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "conv2d(h_conv4, W_conv5, 1) + b_conv5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_54": {
                "variable": {
                    "value": "h_conv5_flat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "h_conv5",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.relu(conv2d(h_conv4, W_conv5, 1) + b_conv5)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[-1, 1152]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "relu_55": {
                "variable": {
                    "value": "h_fc1",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(h_conv5_flat, W_fc1) + b_fc1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "placeholder_57": {
                "variable": {
                    "value": "keep_prob",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "dropout_58": {
                "variable": {
                    "value": "h_fc1_drop",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "h_fc1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.relu(tf.matmul(h_conv5_flat, W_fc1) + b_fc1)",
                            "Call"
                        ]
                    ]
                },
                "rate": {
                    "value": "keep_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_64": {
                "variable": {
                    "value": "h_fc2",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(h_fc1_drop, W_fc2) + b_fc2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "dropout_66": {
                "variable": {
                    "value": "h_fc2_drop",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "h_fc2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.relu(tf.matmul(h_fc1_drop, W_fc2) + b_fc2)",
                            "Call"
                        ]
                    ]
                },
                "rate": {
                    "value": "keep_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_72": {
                "variable": {
                    "value": "h_fc3",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(h_fc2_drop, W_fc3) + b_fc3",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "dropout_74": {
                "variable": {
                    "value": "h_fc3_drop",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "h_fc3",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.relu(tf.matmul(h_fc2_drop, W_fc3) + b_fc3)",
                            "Call"
                        ]
                    ]
                },
                "rate": {
                    "value": "keep_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "relu_80": {
                "variable": {
                    "value": "h_fc4",
                    "type": "Variable",
                    "possible_values": []
                },
                "features": {
                    "value": "tf.matmul(h_fc3_drop, W_fc4) + b_fc4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "dropout_82": {
                "variable": {
                    "value": "h_fc4_drop",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "h_fc4",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.relu(tf.matmul(h_fc3_drop, W_fc4) + b_fc4)",
                            "Call"
                        ]
                    ]
                },
                "rate": {
                    "value": "keep_prob",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "multiply_88": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.atan(tf.matmul(h_fc4_drop, W_fc5) + b_fc5)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "truncated_normal_5": {
                "variable": {
                    "value": "initial",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "stddev": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_9": {
                "variable": {
                    "value": "initial",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0.1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shape": {
                    "value": "shape",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Variable_6": {
                "initial_value": {
                    "value": "initial",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.truncated_normal(shape, stddev=0.1)",
                            "Call"
                        ],
                        [
                            "tf.constant(0.1, shape=shape)",
                            "Call"
                        ]
                    ]
                }
            },
            "Variable_10": {
                "initial_value": {
                    "value": "initial",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.truncated_normal(shape, stddev=0.1)",
                            "Call"
                        ],
                        [
                            "tf.constant(0.1, shape=shape)",
                            "Call"
                        ]
                    ]
                }
            },
            "conv2d_13": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.placeholder(tf.float32, shape=[None, 66, 200, 3])",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                },
                "strides": {
                    "value": "[1, stride, stride, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "padding": {
                    "value": "VALID",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "atan_88": {
                "x": {
                    "value": "tf.matmul(h_fc4_drop, W_fc5) + b_fc5",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "matmul_55": {
                "a": {
                    "value": "h_conv5_flat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(h_conv5, [-1, 1152])",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "W_fc1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "weight_variable([1152, 1164])",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_64": {
                "a": {
                    "value": "h_fc1_drop",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.dropout(h_fc1, keep_prob)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "W_fc2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "weight_variable([1164, 100])",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_72": {
                "a": {
                    "value": "h_fc2_drop",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.dropout(h_fc2, keep_prob)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "W_fc3",
                    "type": "Name",
                    "possible_values": [
                        [
                            "weight_variable([100, 50])",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_80": {
                "a": {
                    "value": "h_fc3_drop",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.dropout(h_fc3, keep_prob)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "W_fc4",
                    "type": "Name",
                    "possible_values": [
                        [
                            "weight_variable([50, 10])",
                            "Call"
                        ]
                    ]
                }
            },
            "matmul_88": {
                "a": {
                    "value": "h_fc4_drop",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.nn.dropout(h_fc4, keep_prob)",
                            "Call"
                        ]
                    ]
                },
                "b": {
                    "value": "W_fc5",
                    "type": "Name",
                    "possible_values": [
                        [
                            "weight_variable([10, 1])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "run.py": {
        "tensorflow": {
            "InteractiveSession_7": {
                "variable": {
                    "value": "sess",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Saver_8": {
                "variable": {
                    "value": "saver",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "run_dataset.py": {
        "tensorflow": {
            "InteractiveSession_7": {
                "variable": {
                    "value": "sess",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Saver_8": {
                "variable": {
                    "value": "saver",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "tensorflow": {
            "InteractiveSession_9": {
                "variable": {
                    "value": "sess",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "trainable_variables_13": {
                "variable": {
                    "value": "train_vars",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "AdamOptimizer_16": {
                "variable": {
                    "value": "train_step",
                    "type": "Variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "0.0001",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Saver_24": {
                "variable": {
                    "value": "saver",
                    "type": "Variable",
                    "possible_values": []
                },
                "write_version": {
                    "value": "saver_pb2.SaverDef.V1",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SummaryWriter_28": {
                "variable": {
                    "value": "summary_writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "graph": {
                    "value": "tf.get_default_graph()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_15": {
                "input_tensor": {
                    "value": "tf.square(tf.sub(model.y_, model.y))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "initialize_all_variables_17": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "square_15": {
                "x": {
                    "value": "tf.sub(model.y_, model.y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "add_n_15": {
                "inputs": {
                    "value": "[tf.nn.l2_loss(v) for v in train_vars]",
                    "type": "ListComp",
                    "possible_values": []
                }
            },
            "get_default_graph_28": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "l2_loss_15": {
                "t": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}