{
    "core/inference.py": {
        "torch": {
            "DataLoader_25": {
                "variable": {
                    "value": "test_data_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_loader.get_dataset(utils.data_loaders.DatasetSubset.TEST)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "cfg.CONST.NUM_WORKERS",
                    "type": "Attribute",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "utils.data_loaders.collate_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_41": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "cfg.CONST.WEIGHTS",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_36": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_37": {
                "variable": {
                    "value": "grnet",
                    "type": "Name",
                    "possible_values": []
                },
                "module": {
                    "value": "grnet",
                    "type": "Name",
                    "possible_values": [
                        [
                            "GRNet(cfg)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(grnet).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_53": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "core/test.py": {
        "torch": {
            "DataLoader_28": {
                "variable": {
                    "value": "test_data_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_loader.get_dataset(utils.data_loaders.DatasetSubset.TEST)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "cfg.CONST.NUM_WORKERS",
                    "type": "Attribute",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "utils.data_loaders.collate_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "load_44": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "cfg.CONST.WEIGHTS",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_41": {
                "variable": {
                    "value": "grnet",
                    "type": "Name",
                    "possible_values": []
                },
                "module": {
                    "value": "grnet",
                    "type": "Name",
                    "possible_values": [
                        [
                            "GRNet(cfg)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(grnet).cuda()",
                            "Call"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "no_grad_66": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "core/train.py": {
        "torch": {
            "DataLoader_34": {
                "variable": {
                    "value": "train_data_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset_loader.get_dataset(utils.data_loaders.DatasetSubset.TRAIN)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "cfg.TRAIN.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "cfg.CONST.NUM_WORKERS",
                    "type": "Attribute",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "utils.data_loaders.collate_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_42": {
                "variable": {
                    "value": "val_data_loader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "test_dataset_loader.get_dataset(utils.data_loaders.DatasetSubset.VAL)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "cfg.CONST.NUM_WORKERS",
                    "type": "Attribute",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "utils.data_loaders.collate_fn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Adam_71": {
                "variable": {
                    "value": "grnet_optimizer",
                    "type": "Name",
                    "possible_values": []
                },
                "params": {
                    "value": "filter(lambda p: p.requires_grad, grnet.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "cfg.TRAIN.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "cfg.TRAIN.WEIGHT_DECAY",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "cfg.TRAIN.BETAS",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "MultiStepLR_75": {
                "variable": {
                    "value": "grnet_lr_scheduler",
                    "type": "Name",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "grnet_optimizer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.optim.Adam(filter(lambda p: p.requires_grad, grnet.parameters()), lr=cfg.TRAIN.LEARNING_RATE, weight_decay=cfg.TRAIN.WEIGHT_DECAY, betas=cfg.TRAIN.BETAS)",
                            "Call"
                        ]
                    ]
                },
                "milestones": {
                    "value": "cfg.TRAIN.LR_MILESTONES",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "cfg.TRAIN.GAMMA",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_67": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataParallel_68": {
                "variable": {
                    "value": "grnet",
                    "type": "Name",
                    "possible_values": []
                },
                "module": {
                    "value": "grnet",
                    "type": "Name",
                    "possible_values": [
                        [
                            "GRNet(cfg)",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(grnet).cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "load_90": {
                "variable": {
                    "value": "checkpoint",
                    "type": "Name",
                    "possible_values": []
                },
                "f": {
                    "value": "cfg.CONST.WEIGHTS",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_147": {
                "obj": {
                    "value": "{'epoch_index': epoch_idx, 'best_metrics': metrics.state_dict(), 'grnet': grnet.state_dict()}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "output_path",
                    "type": "Name",
                    "possible_values": [
                        [
                            "os.path.join(cfg.DIR.CHECKPOINTS, file_name)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "extensions/chamfer_dist/__init__.py": {
        "torch": {
            "sum_36": {
                "variable": {
                    "value": "non_zeros1",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "xyz1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "xyz1[non_zeros1].unsqueeze(dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ne_36": {
                "variable": {
                    "value": "non_zeros1",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_37": {
                "variable": {
                    "value": "non_zeros2",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "xyz2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "xyz2[non_zeros2].unsqueeze(dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ne_37": {
                "variable": {
                    "value": "non_zeros2",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "mean_42": {
                "input": {
                    "value": "dist2",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "extensions/chamfer_dist/setup.py": {
        "torch": {}
    },
    "extensions/chamfer_dist/test.py": {
        "torch": {
            "rand_24": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_25": {
                "variable": {
                    "value": "y",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradcheck_28": {
                "func": {
                    "value": "ChamferFunction.apply",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x.cuda(), y.cuda()]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "extensions/cubic_feature_sampling/__init__.py": {
        "torch": {}
    },
    "extensions/cubic_feature_sampling/setup.py": {
        "torch": {}
    },
    "extensions/cubic_feature_sampling/test.py": {
        "torch": {
            "rand_25": {
                "variable": {
                    "value": "cubic_features",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_34": {
                "variable": {
                    "value": "cubic_features",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_43": {
                "variable": {
                    "value": "cubic_features",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "device": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradcheck_29": {
                "func": {
                    "value": "CubicFeatureSamplingFunction.apply",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[ptcloud.double().cuda(), cubic_features.double().cuda()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gradcheck_38": {
                "func": {
                    "value": "CubicFeatureSamplingFunction.apply",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[ptcloud.double().cuda(), cubic_features.double().cuda(), 2]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gradcheck_47": {
                "func": {
                    "value": "CubicFeatureSamplingFunction.apply",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[ptcloud.double().cuda(), cubic_features.double().cuda(), 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "rand_24": {
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_33": {
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_42": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "extensions/gridding/__init__.py": {
        "torch": {
            "split_41": {
                "variable": {
                    "value": "_ptcloud",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "ptcloud",
                    "type": "Name",
                    "possible_values": [
                        [
                            "ptcloud * self.scale",
                            "BinOp"
                        ],
                        [
                            "gridding.rev_forward(scale, grid)",
                            "Call"
                        ],
                        [
                            "GriddingReverseFunction.apply(self.scale, grid)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_44": {
                "variable": {
                    "value": "non_zeros",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "p",
                    "type": "Name",
                    "possible_values": [
                        [
                            "_ptcloud",
                            "Name"
                        ],
                        [
                            "p[non_zeros].unsqueeze(dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ne_44": {
                "variable": {
                    "value": "non_zeros",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_48": {
                "tensors": {
                    "value": "grids",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "extensions/gridding/setup.py": {
        "torch": {}
    },
    "extensions/gridding/test.py": {
        "torch": {
            "rand_24": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_29": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_34": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                },
                "layout": {
                    "value": "16",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "rand_39": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "gradcheck_26": {
                "func": {
                    "value": "GriddingReverseFunction.apply",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[4, x.double().cuda()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gradcheck_31": {
                "func": {
                    "value": "GriddingReverseFunction.apply",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[8, x.double().cuda()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gradcheck_36": {
                "func": {
                    "value": "GriddingReverseFunction.apply",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[16, x.double().cuda()]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "gradcheck_41": {
                "func": {
                    "value": "GriddingFunction.apply",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[x.double().cuda()]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "extensions/gridding_loss/__init__.py": {
        "torch": {
            "min_55": {
                "variable": {
                    "value": "min_pred_x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_cloud[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_56": {
                "variable": {
                    "value": "max_pred_x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_cloud[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_57": {
                "variable": {
                    "value": "min_pred_y",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_cloud[:, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_58": {
                "variable": {
                    "value": "max_pred_y",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_cloud[:, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_59": {
                "variable": {
                    "value": "min_pred_z",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_cloud[:, :, 2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_60": {
                "variable": {
                    "value": "max_pred_z",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_cloud[:, :, 2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_62": {
                "variable": {
                    "value": "min_gt_x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "gt_cloud[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_63": {
                "variable": {
                    "value": "max_gt_x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "gt_cloud[:, :, 0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_64": {
                "variable": {
                    "value": "min_gt_y",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "gt_cloud[:, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_65": {
                "variable": {
                    "value": "max_gt_y",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "gt_cloud[:, :, 1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "min_66": {
                "variable": {
                    "value": "min_gt_z",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "gt_cloud[:, :, 2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "max_67": {
                "variable": {
                    "value": "max_gt_z",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "gt_cloud[:, :, 2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "split_76": {
                "variable": {
                    "value": "_pred_clouds",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "pred_cloud",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pred_cloud * self.scale / 2",
                            "BinOp"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "split_77": {
                "variable": {
                    "value": "_gt_clouds",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "gt_cloud",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gt_cloud * self.scale / 2",
                            "BinOp"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "L1Loss_98": {
                "variable": {
                    "value": "self.l1_loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "sum_81": {
                "variable": {
                    "value": "non_zeros",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "pc",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pc[non_zeros].unsqueeze(dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ne_81": {
                "variable": {
                    "value": "non_zeros",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_83": {
                "variable": {
                    "value": "non_zeros",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "gc",
                    "type": "Name",
                    "possible_values": [
                        [
                            "gc[non_zeros].unsqueeze(dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ne_83": {
                "variable": {
                    "value": "non_zeros",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "floor_69": {
                "input": {
                    "value": "torch.min(min_pred_x, min_gt_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ceil_70": {
                "input": {
                    "value": "torch.max(max_pred_x, max_gt_x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "floor_71": {
                "input": {
                    "value": "torch.min(min_pred_y, min_gt_y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ceil_72": {
                "input": {
                    "value": "torch.max(max_pred_y, max_gt_y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "floor_73": {
                "input": {
                    "value": "torch.min(min_pred_z, min_gt_z)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ceil_74": {
                "input": {
                    "value": "torch.max(max_pred_z, max_gt_z)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_89": {
                "tensors": {
                    "value": "gt_grids",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "min_69": {
                "input": {
                    "value": "min_pred_x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.min(pred_cloud[:, :, 0])",
                            "Call"
                        ]
                    ]
                }
            },
            "max_70": {
                "input": {
                    "value": "max_pred_x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.max(pred_cloud[:, :, 0])",
                            "Call"
                        ]
                    ]
                }
            },
            "min_71": {
                "input": {
                    "value": "min_pred_y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.min(pred_cloud[:, :, 1])",
                            "Call"
                        ]
                    ]
                }
            },
            "max_72": {
                "input": {
                    "value": "max_pred_y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.max(pred_cloud[:, :, 1])",
                            "Call"
                        ]
                    ]
                }
            },
            "min_73": {
                "input": {
                    "value": "min_pred_z",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.min(pred_cloud[:, :, 2])",
                            "Call"
                        ]
                    ]
                }
            },
            "max_74": {
                "input": {
                    "value": "max_pred_z",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.max(pred_cloud[:, :, 2])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "extensions/gridding_loss/setup.py": {
        "torch": {}
    },
    "models/grnet.py": {
        "torch": {
            "split_23": {
                "variable": {
                    "value": "_ptcloud",
                    "type": "Name",
                    "possible_values": []
                },
                "tensor": {
                    "value": "pred_cloud",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.cat([partial_cloud, pred_cloud], dim=1)",
                            "Call"
                        ]
                    ]
                },
                "split_size_or_sections": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_42": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Conv3d(1, 32, kernel_size=4, padding=2)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_48": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Conv3d(32, 64, kernel_size=4, padding=2)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_54": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Conv3d(64, 128, kernel_size=4, padding=2)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_60": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Conv3d(128, 256, kernel_size=4, padding=2)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_66": {
                "variable": {
                    "value": "self.fc5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Linear(16384, 2048)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_70": {
                "variable": {
                    "value": "self.fc6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Linear(2048, 16384)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_74": {
                "variable": {
                    "value": "self.dconv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.ConvTranspose3d(256, 128, kernel_size=4, stride=2, bias=False, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_79": {
                "variable": {
                    "value": "self.dconv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.ConvTranspose3d(128, 64, kernel_size=4, stride=2, bias=False, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_84": {
                "variable": {
                    "value": "self.dconv9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.ConvTranspose3d(64, 32, kernel_size=4, stride=2, bias=False, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_89": {
                "variable": {
                    "value": "self.dconv10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.ConvTranspose3d(32, 1, kernel_size=4, stride=2, bias=False, padding=1)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_97": {
                "variable": {
                    "value": "self.fc11",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Linear(1792, 1792)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_101": {
                "variable": {
                    "value": "self.fc12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Linear(1792, 448)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_105": {
                "variable": {
                    "value": "self.fc13",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "torch.nn.Linear(448, 112)",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_109": {
                "variable": {
                    "value": "self.fc14",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "112",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_146": {
                "variable": {
                    "value": "point_features",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[point_features_32, point_features_16, point_features_8]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_21": {
                "variable": {
                    "value": "pred_cloud",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[partial_cloud, pred_cloud]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_26": {
                "variable": {
                    "value": "non_zeros",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "p",
                    "type": "Name",
                    "possible_values": [
                        [
                            "_ptcloud",
                            "Name"
                        ],
                        [
                            "p[non_zeros].unsqueeze(dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ne_26": {
                "variable": {
                    "value": "non_zeros",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_35": {
                "tensors": {
                    "value": "ptclouds",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_30": {
                "variable": {
                    "value": "rnd_idx",
                    "type": "Name",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[torch.randint(0, n_pts, (self.n_points,))]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Conv3d_43": {
                "in_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_44": {
                "num_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_45": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool3d_46": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_49": {
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_50": {
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_51": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool3d_52": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_55": {
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_56": {
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_57": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool3d_58": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv3d_61": {
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_62": {
                "num_features": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "LeakyReLU_63": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool3d_64": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_67": {
                "in_features": {
                    "value": "16384",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_68": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_71": {
                "in_features": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "16384",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_72": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose3d_75": {
                "in_channels": {
                    "value": "256",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_76": {
                "num_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose3d_80": {
                "in_channels": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_81": {
                "num_features": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose3d_85": {
                "in_channels": {
                    "value": "64",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_86": {
                "num_features": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_87": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose3d_90": {
                "in_channels": {
                    "value": "32",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm3d_91": {
                "num_features": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_92": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_98": {
                "in_features": {
                    "value": "1792",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1792",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_102": {
                "in_features": {
                    "value": "1792",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "448",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_103": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_106": {
                "in_features": {
                    "value": "448",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "112",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_107": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "randperm_32": {
                "n": {
                    "value": "p.size(1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "randint_30": {
                "low": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "high": {
                    "value": "n_pts",
                    "type": "Name",
                    "possible_values": [
                        [
                            "p.size(1)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(self.n_points,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "runner.py": {
        "torch": {}
    },
    "utils/data_loaders.py": {
        "torch": {}
    },
    "utils/data_transforms.py": {
        "torch": {
            "from_numpy_56": {
                "ndarray": {
                    "value": "arr.copy()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "utils/helpers.py": {
        "torch": {
            "is_available_16": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}