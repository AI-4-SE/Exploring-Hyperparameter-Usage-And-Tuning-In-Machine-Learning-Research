{
    "CNet/model.py": {
        "torch": {
            "device_30": {
                "variable": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() and USEGPU else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Linear_14": {
                "variable": {
                    "value": "self.hidden",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_feature",
                    "type": "variable",
                    "possible_values": [
                        [
                            "n_feature",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hidden",
                    "type": "variable",
                    "possible_values": [
                        [
                            "n_hidden",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_15": {
                "variable": {
                    "value": "self.hidden2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hidden",
                    "type": "variable",
                    "possible_values": [
                        [
                            "n_hidden",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "n_hidden2",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_16": {
                "variable": {
                    "value": "self.predict",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "n_hidden2",
                    "type": "variable",
                    "possible_values": [
                        [
                            "n_hidden2",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "n_output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "n_output",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "relu_19": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_20": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.hidden2(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "SGD_37": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_38": {
                "variable": {
                    "value": "loss_func",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "randperm_52": {
                "variable": {
                    "value": "perm",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "len(data1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_72": {
                "obj": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "CNet(12 * 8 + 1, 200, 100, 12)",
                            "Call"
                        ],
                        [
                            "net.to(device)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "dict.pkl",
                    "type": "str",
                    "possible_values": []
                }
            },
            "is_available_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "tensor_57": {
                "data": {
                    "value": "data1[batch_size * j:batch_size * (j + 1)]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "CNet/test.py": {
        "torch": {
            "load_10": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "rootpath + '//CNet//dict.pkl'",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "zeros_20": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "97",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_24": {
                "input": {
                    "value": "net(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "GA/repair.py": {
        "torch": {
            "load_311": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "net_name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "net_name",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_220": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "97",
                    "type": "int",
                    "possible_values": []
                }
            },
            "softmax_224": {
                "variable": {
                    "value": "pro",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "net(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "LevelGenerator/GAN/dcgan.py": {
        "torch": {
            "Sequential_22": {
                "variable": {
                    "value": "main",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_72": {
                "variable": {
                    "value": "main",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ConvTranspose2d_30": {
                "in_channels": {
                    "value": "ns_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "ns_size",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "final_depth",
                            "variable"
                        ],
                        [
                            "first_depth * 2",
                            "BinOp"
                        ],
                        [
                            "first_depth",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_31": {
                "num_features": {
                    "value": "first_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "final_depth",
                            "variable"
                        ],
                        [
                            "first_depth * 2",
                            "BinOp"
                        ],
                        [
                            "first_depth",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "ReLU_32": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_54": {
                "in_channels": {
                    "value": "prev_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "first_depth",
                            "variable"
                        ],
                        [
                            "prev_depth * 2",
                            "BinOp"
                        ],
                        [
                            "first_depth",
                            "variable"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "out_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_depth",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_55": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_75": {
                "in_channels": {
                    "value": "in_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_depth",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "first_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "final_depth",
                            "variable"
                        ],
                        [
                            "first_depth * 2",
                            "BinOp"
                        ],
                        [
                            "first_depth",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_76": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_96": {
                "in_channels": {
                    "value": "prev_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "first_depth",
                            "variable"
                        ],
                        [
                            "prev_depth * 2",
                            "BinOp"
                        ],
                        [
                            "first_depth",
                            "variable"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_40": {
                "in_channels": {
                    "value": "prev_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "first_depth",
                            "variable"
                        ],
                        [
                            "prev_depth * 2",
                            "BinOp"
                        ],
                        [
                            "first_depth",
                            "variable"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "prev_depth // 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_41": {
                "num_features": {
                    "value": "prev_depth // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_42": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_49": {
                "in_channels": {
                    "value": "prev_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "first_depth",
                            "variable"
                        ],
                        [
                            "prev_depth * 2",
                            "BinOp"
                        ],
                        [
                            "first_depth",
                            "variable"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "prev_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "first_depth",
                            "variable"
                        ],
                        [
                            "prev_depth * 2",
                            "BinOp"
                        ],
                        [
                            "first_depth",
                            "variable"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_50": {
                "num_features": {
                    "value": "prev_depth // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_51": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_80": {
                "in_channels": {
                    "value": "in_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_depth",
                            "Method Argument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "in_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_depth",
                            "Method Argument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_81": {
                "num_features": {
                    "value": "in_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_depth",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "LeakyReLU_82": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv2d_89": {
                "in_channels": {
                    "value": "prev_depth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "first_depth",
                            "variable"
                        ],
                        [
                            "prev_depth * 2",
                            "BinOp"
                        ],
                        [
                            "first_depth",
                            "variable"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "prev_depth * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_90": {
                "num_features": {
                    "value": "prev_depth * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_91": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            }
        }
    },
    "LevelGenerator/GAN/generate_level.py": {
        "torch": {
            "load_20": {
                "f": {
                    "value": "model_to_load",
                    "type": "variable",
                    "possible_values": [
                        [
                            "name",
                            "variable"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "no_grad_22": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}