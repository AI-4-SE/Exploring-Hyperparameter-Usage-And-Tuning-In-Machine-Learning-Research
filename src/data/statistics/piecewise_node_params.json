{
    "billiards.py": {
        "torch": {}
    },
    "circles.py": {
        "torch": {}
    },
    "lines.py": {
        "torch": {}
    },
    "models.py": {
        "torch": {
            "Linear_23": {
                "variable": {
                    "value": "self.linear1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "input_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input_dim",
                            "Method Argument"
                        ],
                        [
                            "input_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "hidden_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_24": {
                "variable": {
                    "value": "self.linear2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "hidden_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "hidden_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.linear3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "hidden_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "hidden_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_26": {
                "variable": {
                    "value": "self.linear4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "hidden_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "target_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "GRUCell_46": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "hidden_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ],
                        [
                            "hidden_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "hidden_size": {
                    "value": "rnn_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "rnn_dim",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Linear_50": {
                "variable": {
                    "value": "self.dt_predictor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "rnn_dim",
                    "type": "variable",
                    "possible_values": [
                        [
                            "rnn_dim",
                            "Method Argument"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LeakyReLU_54": {
                "variable": {
                    "value": "self.leaky_relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_58": {
                "variable": {
                    "value": "self.f",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(hh, hh)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "cat_89": {
                "variable": {
                    "value": "h_next",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[z_next, dzdt]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_81": {
                "variable": {
                    "value": "h",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[z_next, dh0]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Linear_58": {
                "in_features": {
                    "value": "hh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(rnn_dim / 2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(rnn_dim / 2)",
                            "Call"
                        ]
                    ]
                }
            },
            "Tanh_59": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_59": {
                "in_features": {
                    "value": "hh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(rnn_dim / 2)",
                            "Call"
                        ]
                    ]
                },
                "out_features": {
                    "value": "hh",
                    "type": "variable",
                    "possible_values": [
                        [
                            "int(rnn_dim / 2)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "sample.py": {
        "torch": {
            "zeros_12": {
                "variable": {
                    "value": "h_i",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "x.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "out": {
                    "value": "model.rnn_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_58": {
                "tensors": {
                    "value": "xvals",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            },
            "arange_64": {
                "variable": {
                    "value": "t_interp",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "x.shape[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "zeros_like_14": {
                "input": {
                    "value": "x[0, ..., :1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "stack_42": {
                "tensors": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "teacher_forcing.py": {
        "torch": {
            "zeros_19": {
                "variable": {
                    "value": "h_i",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "args.rnn_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "z.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_39": {
                "variable": {
                    "value": "h_i",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "args.rnn_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "device": {
                    "value": "z.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_40": {
                "variable": {
                    "value": "dt_i",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "z.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_41": {
                "variable": {
                    "value": "dx_prev",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "dt_i",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones(batch_dim, 1, device=z.device)",
                            "Call"
                        ],
                        [
                            "(dt_i + 1) * M + 1.0 * (1 - M)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "stack_68": {
                "tensors": {
                    "value": "v",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_26": {
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_56": {
                "*size": {
                    "value": "batch_dim",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "x.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "stack_27": {
                "tensors": {
                    "value": "hs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "Adam_42": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "args.weight_decay",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "StepLR_43": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.optim.Adam(model.parameters(), args.learning_rate, weight_decay=args.weight_decay)",
                            "Call"
                        ]
                    ]
                },
                "step_size": {
                    "value": "args.decay_lr_every",
                    "type": "Attribute",
                    "possible_values": []
                },
                "gamma": {
                    "value": "args.gamma",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}