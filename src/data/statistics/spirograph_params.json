{
    "generate_spirograph.py": {
        "torch": {
            "TensorDataset_116": {
                "variable": {
                    "value": "data",
                    "type": "variable",
                    "possible_values": []
                },
                "*tensors": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "stack_44": {
                "variable": {
                    "value": "dataset_parameters",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_58": {
                "variable": {
                    "value": "aug_parameters",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "params",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "linspace_78": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "2 * pi",
                    "type": "BinOp",
                    "possible_values": []
                },
                "steps": {
                    "value": "40",
                    "type": "int",
                    "possible_values": []
                },
                "device": {
                    "value": "a.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_78": {
                "variable": {
                    "value": "t",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_83": {
                "variable": {
                    "value": "grid",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "torch.meshgrid(torch.linspace(-6, 6, 32), torch.linspace(-6, 6, 32))",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_85": {
                "variable": {
                    "value": "centres",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "unsqueeze_85": {
                "variable": {
                    "value": "centres",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "exp_88": {
                "variable": {
                    "value": "weights",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-d / all_params['sigma'].unsqueeze(-1).unsqueeze(-1)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_94": {
                "variable": {
                    "value": "col_fore_rgb",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[all_params['rfore'], all_params['gfore'], all_params['bfore']]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "stack_95": {
                "variable": {
                    "value": "col_back_rgb",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[all_params['rback'], all_params['gback'], all_params['bback']]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cat_115": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[gen_param[1].to(device), aug_param]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_129": {
                "obj": {
                    "value": "trainset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "param_to_rgb(train_gen_param, spirograph)",
                            "Call"
                        ],
                        [
                            "(dataset_parameters[:train_length, ...], dataset_parameters[:train_length, ...])",
                            "Tuple"
                        ]
                    ]
                },
                "f": {
                    "value": "destination_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join('./dataset', 'spirograph_train.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "save_131": {
                "obj": {
                    "value": "testset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "param_to_rgb(test_gen_param, spirograph)",
                            "Call"
                        ],
                        [
                            "(dataset_parameters[train_length:, ...], dataset_parameters[train_length:, ...])",
                            "Tuple"
                        ]
                    ]
                },
                "f": {
                    "value": "destination_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "os.path.join('./dataset', 'spirograph_test.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "no_grad_113": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_121": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cos_80": {
                "input": {
                    "value": "t * (a - b) / b",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sin_81": {
                "input": {
                    "value": "t * (a - b) / b",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ones_42": {
                "*size": {
                    "value": "train_length + test_length",
                    "type": "BinOp",
                    "possible_values": []
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if torch.cuda.is_available() else 'cpu'",
                            "IfExp"
                        ],
                        [
                            "'cpu'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ones_56": {
                "*size": {
                    "value": "B",
                    "type": "variable",
                    "possible_values": [
                        [
                            "shape[0]",
                            "Subscript"
                        ]
                    ]
                },
                "device": {
                    "value": "device",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'cuda' if torch.cuda.is_available() else 'cpu'",
                            "IfExp"
                        ],
                        [
                            "'cpu'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "meshgrid_83": {
                "*tensors": {
                    "value": "torch.linspace(-6, 6, 32)",
                    "type": "Call",
                    "possible_values": []
                },
                "indexing": {
                    "value": "torch.linspace(-6, 6, 32)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "linspace_83": {
                "start": {
                    "value": "-6",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "6",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    }
}