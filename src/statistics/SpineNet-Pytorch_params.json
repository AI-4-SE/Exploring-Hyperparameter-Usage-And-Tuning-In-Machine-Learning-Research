{
    "mmdet/models/backbones/spinenet.py": {
        "torch": {
            "ModuleList_133": {
                "variable": {
                    "value": "self.resample_ops",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "MaxPool2d_190": {
                "variable": {
                    "value": "self.maxpool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ModuleDict_209": {
                "variable": {
                    "value": "self.endpoint_convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_220": {
                "variable": {
                    "value": "self.merge_ops",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ModuleList_221": {
                "variable": {
                    "value": "self.scale_permuted_blocks",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "relu_267": {
                "variable": {
                    "value": "target_feat",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "target_feat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "parent0_feat + parent1_feat",
                            "BinOp"
                        ],
                        [
                            "self.merge_ops[i]([block_feats[feat_idx] for feat_idx in spec.input_offsets])",
                            "Call"
                        ],
                        [
                            "F.relu(target_feat, inplace=True)",
                            "Call"
                        ],
                        [
                            "self.scale_permuted_blocks[i](target_feat)",
                            "Call"
                        ],
                        [
                            "target_feat + j_feat",
                            "BinOp"
                        ]
                    ]
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "interpolate_110": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.downsample_conv(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, kernel_size=new_kernel_size, stride=int(0.5 / self.scale), padding=new_kernel_size // 2)",
                            "Call"
                        ]
                    ]
                },
                "scale_factor": {
                    "value": "self.scale",
                    "type": "Attribute",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool2d_115": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.downsample_conv(x)",
                            "Call"
                        ],
                        [
                            "F.max_pool2d(x, kernel_size=new_kernel_size, stride=int(0.5 / self.scale), padding=new_kernel_size // 2)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "new_kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3 if self.scale >= 0.25 else 5",
                            "IfExp"
                        ]
                    ]
                },
                "stride": {
                    "value": "int(0.5 / self.scale)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "new_kernel_size // 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}