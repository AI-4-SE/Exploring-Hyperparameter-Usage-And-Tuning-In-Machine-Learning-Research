{
    "src/algo/expfinder.py": {
        "sklearn": {
            "normalize_114": {
                "variable": {
                    "value": "pet_vec",
                    "type": "Name",
                    "possible_values": []
                },
                "X": {
                    "value": "pet_vec",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.et_matrix[topic].values.reshape(-1, 1).copy().astype(np.float32)",
                            "Call"
                        ],
                        [
                            "normalize(pet_vec, norm=norm, axis=0)",
                            "Call"
                        ],
                        [
                            "A",
                            "Name"
                        ]
                    ]
                },
                "norm": {
                    "value": "norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'l2'",
                            "MethodArgument"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "normalize_115": {
                "variable": {
                    "value": "ppt_vec",
                    "type": "Name",
                    "possible_values": []
                },
                "X": {
                    "value": "ppt_vec",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.dt_matrix[topic].values.reshape(-1, 1).copy().astype(np.float32)",
                            "Call"
                        ],
                        [
                            "normalize(ppt_vec, norm=norm, axis=0)",
                            "Call"
                        ],
                        [
                            "H",
                            "Name"
                        ]
                    ]
                },
                "norm": {
                    "value": "norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'l2'",
                            "MethodArgument"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "normalize_131": {
                "variable": {
                    "value": "A",
                    "type": "Name",
                    "possible_values": []
                },
                "X": {
                    "value": "A",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "np.sum([pet_vec.dot(1 - self.lamb_e), Ag_struct.dot(self.lamb_e)], axis=0)",
                            "Call"
                        ],
                        [
                            "normalize(A, norm=norm, axis=0)",
                            "Call"
                        ]
                    ]
                },
                "norm": {
                    "value": "norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'l2'",
                            "MethodArgument"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "normalize_132": {
                "variable": {
                    "value": "H",
                    "type": "Name",
                    "possible_values": []
                },
                "X": {
                    "value": "H",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "np.sum([ppt_vec.dot(1 - self.lamb_d), Hg_struct.dot(self.lamb_d)], axis=0)",
                            "Call"
                        ],
                        [
                            "normalize(H, norm=norm, axis=0)",
                            "Call"
                        ]
                    ]
                },
                "norm": {
                    "value": "norm",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'l2'",
                            "MethodArgument"
                        ]
                    ]
                },
                "axis": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/controller/generator.py": {
        "sklearn": {
            "CountVectorizer_61": {
                "variable": {
                    "value": "model",
                    "type": "Name",
                    "possible_values": []
                },
                "analyzer": {
                    "value": "word",
                    "type": "Constant",
                    "possible_values": []
                },
                "encoding": {
                    "value": "encoding",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'utf-8'",
                            "MethodArgument"
                        ]
                    ]
                },
                "token_pattern": {
                    "value": "token_pattern",
                    "type": "Name",
                    "possible_values": [
                        [
                            "'(?u)\\\\S\\\\S+'",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "cosine_similarity_156": {
                "X": {
                    "value": "topic_vec",
                    "type": "Name",
                    "possible_values": [
                        [
                            "pVectorizer.transform(topic)",
                            "Call"
                        ],
                        [
                            "np.sum(D, axis=0) / num_docs",
                            "BinOp"
                        ]
                    ]
                },
                "Y": {
                    "value": "phrase_vecs",
                    "type": "Name",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "trained_vecs",
                            "Name"
                        ]
                    ]
                }
            }
        }
    },
    "src/lib/vectorizer.py": {
        "torch": {
            "tensor_34": {
                "variable": {
                    "value": "in_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "encoded_phrase",
                    "type": "Name",
                    "possible_values": [
                        [
                            "self.tokenizer.encode(phrase)",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_34": {
                "variable": {
                    "value": "in_tensor",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    }
}