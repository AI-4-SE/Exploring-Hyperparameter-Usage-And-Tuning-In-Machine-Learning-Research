{
    "_correlation_grad.py": {
        "tensorflow": {
            "load_op_library_10": {
                "variable": {
                    "value": "correlation_grad_module",
                    "type": "Variable",
                    "possible_values": []
                },
                "library_filename": {
                    "value": "./build/libcorrelation_grad.so",
                    "type": "str",
                    "possible_values": []
                }
            },
            "RegisterGradient_12": {
                "op_type": {
                    "value": "Correlation",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "correlation_layer.py": {
        "tensorflow": {
            "load_op_library_2": {
                "variable": {
                    "value": "correlation_module",
                    "type": "Variable",
                    "possible_values": []
                },
                "library_filename": {
                    "value": "./build/libcorrelation.so",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "correlation_tests.py": {
        "tensorflow": {
            "placeholder_66": {
                "variable": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "my_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(1, 21, 21, 1)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, width, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_118": {
                "variable": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "my_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(1, 21, 21, 1)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, width, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_175": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "my_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(1, 21, 21, 1)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, width, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_277": {
                "variable": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "my_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(1, 21, 21, 1)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, width, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "placeholder_332": {
                "variable": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "my_shape",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "(1, 21, 21, 1)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, width, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ],
                        [
                            "(batch_size, height, width, depth)",
                            "Tuple"
                        ]
                    ]
                }
            },
            "Session_16": {
                "target": {
                    "value": "",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Session_25": {
                "target": {
                    "value": "",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Session_34": {
                "target": {
                    "value": "",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Session_52": {
                "target": {
                    "value": "",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gradients_75": {
                "variable": {
                    "value": "grad_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "ys": {
                    "value": "result_slices",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ],
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ],
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ]
                    ]
                },
                "xs": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.ones(my_shape)",
                            "Call"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "np.ones(my_shape, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "np.random.randint(10, size=my_shape).astype(np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "Session_104": {
                "target": {
                    "value": "",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gradients_127": {
                "variable": {
                    "value": "grad_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "ys": {
                    "value": "result_slices",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ],
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ],
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ]
                    ]
                },
                "xs": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.ones(my_shape)",
                            "Call"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "np.ones(my_shape, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "np.random.randint(10, size=my_shape).astype(np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "Session_156": {
                "target": {
                    "value": "",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gradients_181": {
                "variable": {
                    "value": "grad_b",
                    "type": "Variable",
                    "possible_values": []
                },
                "ys": {
                    "value": "result_slices",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ],
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ],
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ]
                    ]
                },
                "xs": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.ones(my_shape)",
                            "Call"
                        ],
                        [
                            "2 * np.ones(my_shape, dtype=np.float32)",
                            "BinOp"
                        ],
                        [
                            "2 * np.ones(my_shape, dtype=np.float32)",
                            "BinOp"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "2 * np.random.randint(10, size=my_shape).astype(np.float32)",
                            "BinOp"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ]
                    ]
                }
            },
            "Session_210": {
                "target": {
                    "value": "",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Session_260": {
                "target": {
                    "value": "",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gradients_307": {
                "variable": {
                    "value": "grad_a",
                    "type": "Variable",
                    "possible_values": []
                },
                "ys": {
                    "value": "result_slice",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ],
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ]
                    ]
                },
                "xs": {
                    "value": "a",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.ones(my_shape)",
                            "Call"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "np.ones(my_shape, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "np.random.randint(10, size=my_shape).astype(np.float32)",
                            "Call"
                        ]
                    ]
                }
            },
            "Session_313": {
                "target": {
                    "value": "",
                    "type": "str",
                    "possible_values": []
                }
            },
            "gradients_360": {
                "variable": {
                    "value": "grad_b",
                    "type": "Variable",
                    "possible_values": []
                },
                "ys": {
                    "value": "result_slice",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ],
                        [
                            "result[:, :, :, offset_index]",
                            "Subscript"
                        ]
                    ]
                },
                "xs": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.ones(my_shape)",
                            "Call"
                        ],
                        [
                            "2 * np.ones(my_shape, dtype=np.float32)",
                            "BinOp"
                        ],
                        [
                            "2 * np.ones(my_shape, dtype=np.float32)",
                            "BinOp"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ],
                        [
                            "2 * np.random.randint(10, size=my_shape).astype(np.float32)",
                            "BinOp"
                        ],
                        [
                            "tf.placeholder(tf.float32, shape=my_shape)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "flownet.py": {
        "tensorflow": {}
    }
}