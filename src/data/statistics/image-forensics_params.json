{
    "dataset.py": {
        "torch": {}
    },
    "grad_loc.py": {
        "torch": {
            "mean_54": {
                "variable": {
                    "value": "pooled_gradients",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "gradients",
                    "type": "Name",
                    "possible_values": [
                        [
                            "loc.gradients",
                            "Attribute"
                        ]
                    ]
                },
                "dim": {
                    "value": "[0, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "mean_60": {
                "variable": {
                    "value": "heatmap",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "activations",
                    "type": "Call",
                    "possible_values": [
                        [
                            "loc.activations(anchor).detach()",
                            "Call"
                        ],
                        [
                            "loc.activations(same).detach()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "squeeze_60": {
                "variable": {
                    "value": "heatmap",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_77": {
                "variable": {
                    "value": "loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "SimulatedDataset(opt.test_dir)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_62": {
                "input": {
                    "value": "heatmap",
                    "type": "Call",
                    "possible_values": [
                        [
                            "torch.mean(activations, dim=1).squeeze()",
                            "Call"
                        ],
                        [
                            "np.maximum(heatmap, 0)",
                            "Call"
                        ],
                        [
                            "heatmap / torch.max(heatmap)",
                            "BinOp"
                        ],
                        [
                            "cv2.resize(heatmap.numpy(), (img.shape[1], img.shape[0]))",
                            "Call"
                        ],
                        [
                            "np.uint8(255 * heatmap)",
                            "Call"
                        ],
                        [
                            "cv2.applyColorMap(heatmap, cv2.COLORMAP_JET)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_79": {
                "f": {
                    "value": "opt.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Conv2d_7": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "bias": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_11": {
                "in_channels": {
                    "value": "in_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "out_planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "bias",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_17": {
                "variable": {
                    "value": "self.bn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_29": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_62": {
                "variable": {
                    "value": "self.features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_64": {
                "variable": {
                    "value": "self.fc1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "8 * 8 * 128",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Linear_65": {
                "variable": {
                    "value": "self.fc2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_features": {
                    "value": "128",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sum_78": {
                "input": {
                    "value": "torch.abs(a - b)",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sigmoid_82": {
                "input": {
                    "value": "1 - distance(a, b)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LocalResponseNorm_20": {
                "variable": {
                    "value": "self.lrn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "lrn_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "abs_78": {
                "input": {
                    "value": "a - b",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_88": {
                "input": {
                    "value": "torch.log(sgm_same) + torch.log(1 - sgm_diff)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_96": {
                "input": {
                    "value": "(sgm_diff <= 0.5).float()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ReLU_60": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "log_88": {
                "input": {
                    "value": "1 - sgm_diff",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "torch": {
            "device_23": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "DataLoader_40": {
                "variable": {
                    "value": "loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "SimulatedDataset(opt.test_dir)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.bs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_23": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_42": {
                "f": {
                    "value": "opt.weights",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {
            "device_30": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda:0 if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "SummaryWriter_34": {
                "variable": {
                    "value": "writer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "DataLoader_36": {
                "variable": {
                    "value": "train_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "SimulatedDataset(opt.train_dir)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.bs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_39": {
                "variable": {
                    "value": "valid_loader",
                    "type": "Variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "SimulatedDataset(opt.valid_dir)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "opt.bs",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Adam_43": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_30": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_70": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_95": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "f'models/checkpoint_{epoch}.pth'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            },
            "save_96": {
                "obj": {
                    "value": "model.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "f'models/weights.pth'",
                    "type": "JoinedStr",
                    "possible_values": []
                }
            }
        }
    }
}