{
    "demo/demo.py": {
        "torch": {
            "inverse_40": {
                "variable": {
                    "value": "self.inv_K",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "K",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[[fx, 0.0, cx], [0.0, fy, cy], [0.0, 0.0, 1.0]]",
                            "List"
                        ],
                        [
                            "torch.FloatTensor(K).to(self.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_40": {
                "variable": {
                    "value": "self.inv_K",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "load_80": {
                "variable": {
                    "value": "cp",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "self.checkpoint_path",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_92": {
                "variable": {
                    "value": "grid_3d",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(grid_2d, torch.ones_like(depth))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_105": {
                "variable": {
                    "value": "normal",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[zero.repeat(b, h - 2, 1, 1), normal, zero.repeat(b, h - 2, 1, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_106": {
                "variable": {
                    "value": "normal",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[zero.repeat(b, 1, w, 1), normal, zero.repeat(b, 1, w, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "permute_136": {
                "variable": {
                    "value": "im",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_136": {
                "variable": {
                    "value": "im",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_140": {
                "variable": {
                    "value": "im",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "im",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.pad(im, ((crop, crop), (crop, crop), (0, 0)), mode='edge')",
                            "Call"
                        ],
                        [
                            "np.uint8(pil_im)",
                            "Call"
                        ],
                        [
                            "self.detect_face(im)",
                            "Call"
                        ],
                        [
                            "torch.FloatTensor(im / 255.0).permute(2, 0, 1).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(im, (self.image_size * 2, self.image_size * 2), mode='bilinear', align_corners=False)",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(im, (self.image_size, self.image_size), mode='bilinear', align_corners=False)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(self.image_size, self.image_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "linspace_203": {
                "variable": {
                    "value": "morph_s",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "morph_frames",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "15",
                            "Constant"
                        ]
                    ]
                }
            },
            "cat_212": {
                "variable": {
                    "value": "view_after",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[view_morph, view_zero.repeat(yaw_frames, b, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_139": {
                "variable": {
                    "value": "im",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "im",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "np.pad(im, ((crop, crop), (crop, crop), (0, 0)), mode='edge')",
                            "Call"
                        ],
                        [
                            "np.uint8(pil_im)",
                            "Call"
                        ],
                        [
                            "self.detect_face(im)",
                            "Call"
                        ],
                        [
                            "torch.FloatTensor(im / 255.0).permute(2, 0, 1).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(im, (self.image_size * 2, self.image_size * 2), mode='bilinear', align_corners=False)",
                            "Call"
                        ],
                        [
                            "nn.functional.interpolate(im, (self.image_size, self.image_size), mode='bilinear', align_corners=False)",
                            "Call"
                        ]
                    ]
                },
                "size": {
                    "value": "(self.image_size * 2, self.image_size * 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "zeros_153": {
                "variable": {
                    "value": "depth_border",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "w - 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pad_154": {
                "variable": {
                    "value": "depth_border",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "depth_border",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros(1, h, w - 4).to(self.input_im.device)",
                            "Call"
                        ],
                        [
                            "nn.functional.pad(depth_border, (2, 2), mode='constant', value=1)",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "constant",
                    "type": "str",
                    "possible_values": []
                },
                "value": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_165": {
                "variable": {
                    "value": "self.canon_light_d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[canon_light_dxy, torch.ones(b, 1).to(self.input_im.device)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_176": {
                "variable": {
                    "value": "self.view",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.view[:, :3] * np.pi / 180 * self.xyz_rotation_range, self.view[:, 3:5] * self.xy_translation_range, self.view[:, 5:] * self.z_translation_range]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_186": {
                "variable": {
                    "value": "self.canon_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.canon_depth.unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(self.output_size, self.output_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "squeeze_186": {
                "variable": {
                    "value": "self.canon_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_187": {
                "variable": {
                    "value": "self.canon_normal",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.canon_normal.permute(0, 3, 1, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "size": {
                    "value": "(self.output_size, self.output_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "permute_187": {
                "variable": {
                    "value": "self.canon_normal",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "interpolate_189": {
                "variable": {
                    "value": "self.canon_diffuse_shading",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.canon_diffuse_shading",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(self.output_size, self.output_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_190": {
                "variable": {
                    "value": "self.canon_albedo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.canon_albedo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(self.output_size, self.output_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "interpolate_191": {
                "variable": {
                    "value": "self.canon_im",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.canon_im",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(self.output_size, self.output_size)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                },
                "align_corners": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_218": {
                "variable": {
                    "value": "out_seq",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[morph_seq[:, :1].repeat(1, 5, 1, 1, 1), morph_seq, morph_seq[:, -1:].repeat(1, 5, 1, 1, 1), yaw_seq[:, yaw_frames // 2:], yaw_seq.flip(1), yaw_seq[:, :yaw_frames // 2], morph_seq[:, -1:].repeat(1, 5, 1, 1, 1), morph_seq.flip(1), morph_seq[:, :1].repeat(1, 5, 1, 1, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "no_grad_142": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_like_92": {
                "input": {
                    "value": "depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "depth.unsqueeze(-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_165": {
                "*size": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "demo/utils.py": {
        "torch": {
            "stack_123": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "torch.meshgrid([h_range, w_range])",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "flip_123": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "avg_pool2d_132": {
                "variable": {
                    "value": "vertices_center",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vertices.permute(0, 3, 1, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "permute_132": {
                "variable": {
                    "value": "vertices_center",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_133": {
                "variable": {
                    "value": "vertices",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vertices.view(b, h * w, 3), vertices_center.view(b, (h - 1) * (w - 1), 3)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "avg_pool2d_137": {
                "variable": {
                    "value": "vertice_textures_center",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vertice_textures.permute(0, 3, 1, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "permute_137": {
                "variable": {
                    "value": "vertice_textures_center",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "avg_pool2d_142": {
                "variable": {
                    "value": "vertice_normals_center",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "vertice_normals.permute(0, 3, 1, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "permute_142": {
                "variable": {
                    "value": "vertice_normals_center",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "dims": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_144": {
                "variable": {
                    "value": "vertice_normals",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[vertice_normals.view(b, h * w, 3), vertice_normals_center.view(b, (h - 1) * (w - 1), 3)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "arange_146": {
                "variable": {
                    "value": "idx_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "h * w",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_146": {
                "variable": {
                    "value": "idx_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_147": {
                "variable": {
                    "value": "idx_map_center",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "(h - 1) * (w - 1)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_147": {
                "variable": {
                    "value": "idx_map_center",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h - 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "w - 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "stack_148": {
                "variable": {
                    "value": "faces1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[idx_map[:h - 1, :w - 1], idx_map[1:, :w - 1], idx_map_center + h * w]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_148": {
                "variable": {
                    "value": "faces1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_149": {
                "variable": {
                    "value": "faces2",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[idx_map[1:, :w - 1], idx_map[1:, 1:], idx_map_center + h * w]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_149": {
                "variable": {
                    "value": "faces2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_150": {
                "variable": {
                    "value": "faces3",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[idx_map[1:, 1:], idx_map[:h - 1, 1:], idx_map_center + h * w]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_150": {
                "variable": {
                    "value": "faces3",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_151": {
                "variable": {
                    "value": "faces4",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[idx_map[:h - 1, 1:], idx_map[:h - 1, :w - 1], idx_map_center + h * w]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_151": {
                "variable": {
                    "value": "faces4",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_152": {
                "variable": {
                    "value": "faces",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[faces1, faces2, faces3, faces4]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Sequential_25": {
                "variable": {
                    "value": "self.network",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*network",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_83": {
                "variable": {
                    "value": "self.network",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*network",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "linspace_118": {
                "variable": {
                    "value": "h_range",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "linspace_119": {
                "variable": {
                    "value": "w_range",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_121": {
                "variable": {
                    "value": "h_range",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_122": {
                "variable": {
                    "value": "w_range",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Conv2d_12": {
                "in_channels": {
                    "value": "cin",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_13": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_14": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_15": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_16": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_17": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_18": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_19": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_20": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_21": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_22": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "cout",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_36": {
                "in_channels": {
                    "value": "cin",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_37": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LeakyReLU_38": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_39": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_40": {
                "num_groups": {
                    "value": "16 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_41": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_42": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_43": {
                "num_groups": {
                    "value": "16 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_44": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_45": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_46": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_47": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "zdim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_51": {
                "in_channels": {
                    "value": "zdim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_52": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_53": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_55": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_56": {
                "num_groups": {
                    "value": "16 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_57": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_58": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_59": {
                "num_groups": {
                    "value": "16 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_60": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_61": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_62": {
                "num_groups": {
                    "value": "16 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_64": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_65": {
                "num_groups": {
                    "value": "16 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_66": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_67": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_68": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_69": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_70": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_71": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_72": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_73": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_74": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_75": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_76": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_77": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_78": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_79": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_80": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "cout",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_138": {
                "tensors": {
                    "value": "[vertice_textures.view(b, h * w, 2), vertice_textures_center.view(b, (h - 1) * (w - 1), 2)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "meshgrid_123": {
                "*tensors": {
                    "value": "[h_range, w_range]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "run.py": {
        "torch": {}
    },
    "unsup3d/dataloaders.py": {
        "torch": {}
    },
    "unsup3d/meters.py": {
        "torch": {
            "is_tensor_105": {
                "obj": {
                    "value": "val",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "val.item()",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "unsup3d/model.py": {
        "torch": {
            "zeros_142": {
                "variable": {
                    "value": "depth_border",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "dtype": {
                    "value": "w - 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pad_143": {
                "variable": {
                    "value": "depth_border",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "depth_border",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros(1, h, w - 4).to(self.input_im.device)",
                            "Call"
                        ],
                        [
                            "nn.functional.pad(depth_border, (2, 2), mode='constant', value=1)",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(2, 2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "constant",
                    "type": "str",
                    "possible_values": []
                },
                "value": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_145": {
                "variable": {
                    "value": "self.canon_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.canon_depth, self.canon_depth.flip(2)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_149": {
                "variable": {
                    "value": "self.canon_albedo",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.canon_albedo, self.canon_albedo.flip(3)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_169": {
                "variable": {
                    "value": "self.canon_light_d",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[canon_light_dxy, torch.ones(b * 2, 1).to(self.input_im.device)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_180": {
                "variable": {
                    "value": "self.view",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.view[:, :3] * math.pi / 180 * self.xyz_rotation_range, self.view[:, 3:5] * self.xy_translation_range, self.view[:, 5:] * self.z_translation_range]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "grid_sample_190": {
                "variable": {
                    "value": "self.recon_im",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.canon_im",
                    "type": "Attribute",
                    "possible_values": []
                },
                "grid": {
                    "value": "grid_2d_from_canon",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.renderer.get_inv_warped_2d_grid(self.recon_depth)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_199": {
                "variable": {
                    "value": "canon_sym_axis",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "out": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "grid_sample_201": {
                "variable": {
                    "value": "self.recon_sym_axis",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "canon_sym_axis.repeat(b * 2, 1, 1, 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "grid": {
                    "value": "grid_2d_from_canon",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.renderer.get_inv_warped_2d_grid(self.recon_depth)",
                            "Call"
                        ]
                    ]
                },
                "mode": {
                    "value": "bilinear",
                    "type": "str",
                    "possible_values": []
                }
            },
            "stack_270": {
                "variable": {
                    "value": "canon_im_rotate_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "canon_im_rotate_grid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[torchvision.utils.make_grid(img, nrow=int(math.ceil(b0 ** 0.5))) for img in torch.unbind(canon_im_rotate, 1)]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(canon_im_rotate_grid, 0).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "[torchvision.utils.make_grid(img, nrow=int(math.ceil(b ** 0.5))) for img in torch.unbind(canon_im_rotate, 1)]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(canon_im_rotate_grid, 0).unsqueeze(0).numpy()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_270": {
                "variable": {
                    "value": "canon_im_rotate_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_272": {
                "variable": {
                    "value": "canon_normal_rotate_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "canon_normal_rotate_grid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[torchvision.utils.make_grid(img, nrow=int(math.ceil(b0 ** 0.5))) for img in torch.unbind(canon_normal_rotate, 1)]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(canon_normal_rotate_grid, 0).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "[torchvision.utils.make_grid(img, nrow=int(math.ceil(b ** 0.5))) for img in torch.unbind(canon_normal_rotate, 1)]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(canon_normal_rotate_grid, 0).unsqueeze(0).numpy()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_272": {
                "variable": {
                    "value": "canon_normal_rotate_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_373": {
                "variable": {
                    "value": "canon_im_rotate_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "canon_im_rotate_grid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[torchvision.utils.make_grid(img, nrow=int(math.ceil(b0 ** 0.5))) for img in torch.unbind(canon_im_rotate, 1)]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(canon_im_rotate_grid, 0).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "[torchvision.utils.make_grid(img, nrow=int(math.ceil(b ** 0.5))) for img in torch.unbind(canon_im_rotate, 1)]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(canon_im_rotate_grid, 0).unsqueeze(0).numpy()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_373": {
                "variable": {
                    "value": "canon_im_rotate_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_375": {
                "variable": {
                    "value": "canon_normal_rotate_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "canon_normal_rotate_grid",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[torchvision.utils.make_grid(img, nrow=int(math.ceil(b0 ** 0.5))) for img in torch.unbind(canon_normal_rotate, 1)]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(canon_normal_rotate_grid, 0).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "[torchvision.utils.make_grid(img, nrow=int(math.ceil(b ** 0.5))) for img in torch.unbind(canon_normal_rotate, 1)]",
                            "ListComp"
                        ],
                        [
                            "torch.stack(canon_normal_rotate_grid, 0).unsqueeze(0).numpy()",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unsqueeze_375": {
                "variable": {
                    "value": "canon_normal_rotate_grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_407": {
                "variable": {
                    "value": "all_scores",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.acc_mae_masked.detach().cpu(), self.acc_mse_masked.detach().cpu(), self.acc_sie_masked.detach().cpu(), self.acc_normal_masked.detach().cpu()]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_414": {
                "variable": {
                    "value": "self.all_scores",
                    "type": "Attribute",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[self.all_scores, all_scores]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Adam_47": {
                "params": {
                    "value": "filter(lambda p: p.requires_grad, model.parameters())",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "betas": {
                    "value": "(0.9, 0.999)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "float",
                    "possible_values": []
                }
            },
            "no_grad_245": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_346": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ones_169": {
                "*size": {
                    "value": "b * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unbind_269": {
                "input": {
                    "value": "canon_im_rotate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.renderer.render_yaw(self.canon_im[:b0], self.canon_depth[:b0], v_before=v0, maxr=90).detach().cpu() / 2.0 + 0.5",
                            "BinOp"
                        ],
                        [
                            "self.renderer.render_yaw(self.canon_im[:b], self.canon_depth[:b], v_before=v0, maxr=90, nsample=15)",
                            "Call"
                        ],
                        [
                            "canon_im_rotate.clamp(-1, 1).detach().cpu() / 2 + 0.5",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unbind_271": {
                "input": {
                    "value": "canon_normal_rotate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.renderer.render_yaw(self.canon_normal[:b0].permute(0, 3, 1, 2), self.canon_depth[:b0], v_before=v0, maxr=90).detach().cpu() / 2.0 + 0.5",
                            "BinOp"
                        ],
                        [
                            "self.renderer.render_yaw(self.canon_normal[:b].permute(0, 3, 1, 2), self.canon_depth[:b], v_before=v0, maxr=90, nsample=15)",
                            "Call"
                        ],
                        [
                            "canon_normal_rotate.clamp(-1, 1).detach().cpu() / 2 + 0.5",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unbind_372": {
                "input": {
                    "value": "canon_im_rotate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.renderer.render_yaw(self.canon_im[:b0], self.canon_depth[:b0], v_before=v0, maxr=90).detach().cpu() / 2.0 + 0.5",
                            "BinOp"
                        ],
                        [
                            "self.renderer.render_yaw(self.canon_im[:b], self.canon_depth[:b], v_before=v0, maxr=90, nsample=15)",
                            "Call"
                        ],
                        [
                            "canon_im_rotate.clamp(-1, 1).detach().cpu() / 2 + 0.5",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "unbind_374": {
                "input": {
                    "value": "canon_normal_rotate",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.renderer.render_yaw(self.canon_normal[:b0].permute(0, 3, 1, 2), self.canon_depth[:b0], v_before=v0, maxr=90).detach().cpu() / 2.0 + 0.5",
                            "BinOp"
                        ],
                        [
                            "self.renderer.render_yaw(self.canon_normal[:b].permute(0, 3, 1, 2), self.canon_depth[:b], v_before=v0, maxr=90, nsample=15)",
                            "Call"
                        ],
                        [
                            "canon_normal_rotate.clamp(-1, 1).detach().cpu() / 2 + 0.5",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "avg_pool2d_225": {
                "input": {
                    "value": "mask_gt.unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_225": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "avg_pool2d_226": {
                "input": {
                    "value": "recon_im_mask[:b].unsqueeze(1)",
                    "type": "Call",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "squeeze_226": {
                "input": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_369": {
                "tensors": {
                    "value": "[self.canon_light_a, self.canon_light_b, self.canon_light_d]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "unsup3d/networks.py": {
        "torch": {
            "Sequential_26": {
                "variable": {
                    "value": "self.network",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*network",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_84": {
                "variable": {
                    "value": "self.network",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*network",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_118": {
                "variable": {
                    "value": "self.network",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*network",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_129": {
                "variable": {
                    "value": "self.out_net1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*out_net1",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_133": {
                "variable": {
                    "value": "self.out_net2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*out_net2",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "Sequential_149": {
                "variable": {
                    "value": "self.slice1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_150": {
                "variable": {
                    "value": "self.slice2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_151": {
                "variable": {
                    "value": "self.slice3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_152": {
                "variable": {
                    "value": "self.slice4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_171": {
                "variable": {
                    "value": "im",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[im1, im2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_13": {
                "in_channels": {
                    "value": "cin",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_14": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_15": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_16": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_17": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_18": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_19": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_20": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_22": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_23": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "cout",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_37": {
                "in_channels": {
                    "value": "cin",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_38": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LeakyReLU_39": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_40": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_41": {
                "num_groups": {
                    "value": "16 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_42": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_43": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_44": {
                "num_groups": {
                    "value": "16 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_45": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_46": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_47": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "zdim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_52": {
                "in_channels": {
                    "value": "zdim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_54": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_55": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_56": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_57": {
                "num_groups": {
                    "value": "16 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_59": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_60": {
                "num_groups": {
                    "value": "16 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_61": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_62": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_63": {
                "num_groups": {
                    "value": "16 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_64": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_65": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_66": {
                "num_groups": {
                    "value": "16 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_67": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_68": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_69": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_70": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_71": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_72": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_73": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Upsample_74": {
                "scale_factor": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "mode": {
                    "value": "nearest",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv2d_75": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_76": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_78": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_79": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_80": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_81": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "cout",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_95": {
                "in_channels": {
                    "value": "cin",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_96": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LeakyReLU_97": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_98": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_99": {
                "num_groups": {
                    "value": "16 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_100": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_101": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_102": {
                "num_groups": {
                    "value": "16 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "LeakyReLU_103": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_104": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "LeakyReLU_105": {
                "negative_slope": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_106": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "zdim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_107": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_110": {
                "in_channels": {
                    "value": "zdim",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "128",
                            "MethodArgument"
                        ],
                        [
                            "128",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_111": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_112": {
                "in_channels": {
                    "value": "nf * 8",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_113": {
                "num_groups": {
                    "value": "16 * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_114": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_115": {
                "in_channels": {
                    "value": "nf * 4",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_116": {
                "num_groups": {
                    "value": "16 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "ReLU_117": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_121": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_122": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_123": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ConvTranspose2d_124": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "GroupNorm_125": {
                "num_groups": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "num_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "ReLU_126": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_127": {
                "in_channels": {
                    "value": "nf",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ],
                        [
                            "64",
                            "MethodArgument"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Softplus_128": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_131": {
                "in_channels": {
                    "value": "nf * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Softplus_132": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "chunk_177": {
                "input": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.slice1(im)",
                            "Call"
                        ],
                        [
                            "self.slice2(f)",
                            "Call"
                        ],
                        [
                            "self.slice3(f)",
                            "Call"
                        ],
                        [
                            "self.slice4(f)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "chunk_179": {
                "input": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.slice1(im)",
                            "Call"
                        ],
                        [
                            "self.slice2(f)",
                            "Call"
                        ],
                        [
                            "self.slice3(f)",
                            "Call"
                        ],
                        [
                            "self.slice4(f)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "chunk_181": {
                "input": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.slice1(im)",
                            "Call"
                        ],
                        [
                            "self.slice2(f)",
                            "Call"
                        ],
                        [
                            "self.slice3(f)",
                            "Call"
                        ],
                        [
                            "self.slice4(f)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "chunk_183": {
                "input": {
                    "value": "f",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.slice1(im)",
                            "Call"
                        ],
                        [
                            "self.slice2(f)",
                            "Call"
                        ],
                        [
                            "self.slice3(f)",
                            "Call"
                        ],
                        [
                            "self.slice4(f)",
                            "Call"
                        ]
                    ]
                },
                "chunks": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "avg_pool2d_194": {
                "variable": {
                    "value": "mask0",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "mask",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "(sh, sw)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "stride": {
                    "value": "(sh, sw)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "unsup3d/renderer/renderer.py": {
        "torch": {
            "zeros_32": {
                "variable": {
                    "value": "t",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "inverse_41": {
                "variable": {
                    "value": "self.inv_K",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "K",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[[fx, 0.0, cx], [0.0, fy, cy], [0.0, 0.0, 1.0]]",
                            "List"
                        ],
                        [
                            "torch.FloatTensor(K).to(self.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "unsqueeze_41": {
                "variable": {
                    "value": "self.inv_K",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_69": {
                "variable": {
                    "value": "grid_3d",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(grid_2d, torch.ones_like(depth))",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_127": {
                "variable": {
                    "value": "normal",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[zero.repeat(b, h - 2, 1, 1), normal, zero.repeat(b, h - 2, 1, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_128": {
                "variable": {
                    "value": "normal",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[zero.repeat(b, 1, w, 1), normal, zero.repeat(b, 1, w, 1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "linspace_161": {
                "variable": {
                    "value": "rotations",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-math.pi / 180 * maxr",
                    "type": "BinOp",
                    "possible_values": []
                },
                "end": {
                    "value": "math.pi / 180 * maxr",
                    "type": "BinOp",
                    "possible_values": []
                },
                "steps": {
                    "value": "nsample",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "9",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "stack_180": {
                "tensors": {
                    "value": "im_trans",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "im_trans + [warped_images]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_like_69": {
                "input": {
                    "value": "depth",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "depth.unsqueeze(-1)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "unsup3d/renderer/utils.py": {
        "torch": {
            "stack_29": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "torch.meshgrid([h_range, w_range])",
                    "type": "Call",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "flip_29": {
                "variable": {
                    "value": "grid",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_34": {
                "variable": {
                    "value": "m_x",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(len(tx), 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_35": {
                "variable": {
                    "value": "m_y",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(len(tx), 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_36": {
                "variable": {
                    "value": "m_z",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(len(tx), 3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "arange_75": {
                "variable": {
                    "value": "idx_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "h * w",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_75": {
                "variable": {
                    "value": "idx_map",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "h",
                    "type": "Variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "w",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "stack_76": {
                "variable": {
                    "value": "faces1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[idx_map[:h - 1, :w - 1], idx_map[1:, :w - 1], idx_map[:h - 1, 1:]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_76": {
                "variable": {
                    "value": "faces1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_77": {
                "variable": {
                    "value": "faces2",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[idx_map[:h - 1, 1:], idx_map[1:, :w - 1], idx_map[1:, 1:]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_77": {
                "variable": {
                    "value": "faces2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "shape": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "linspace_24": {
                "variable": {
                    "value": "h_range",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "linspace_25": {
                "variable": {
                    "value": "w_range",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "end": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "steps": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_27": {
                "variable": {
                    "value": "h_range",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "H",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "arange_28": {
                "variable": {
                    "value": "w_range",
                    "type": "Variable",
                    "possible_values": []
                },
                "start": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "end": {
                    "value": "W",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "matmul_49": {
                "input": {
                    "value": "m_y",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros((len(tx), 3, 3)).to(tx.device)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "m_x",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "torch.zeros((len(tx), 3, 3)).to(tx.device)",
                            "Call"
                        ]
                    ]
                }
            },
            "cat_78": {
                "tensors": {
                    "value": "[faces1, faces2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_99": {
                "variable": {
                    "value": "textures",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[im[:, :, :h - 1, :w - 1].reshape(b, c, -1), im[:, :, 1:, 1:].reshape(b, c, -1)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_64": {
                "variable": {
                    "value": "trans_xyz",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[delta_xy, torch.zeros(b, 1, 1).to(view.device)]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "stack_102": {
                "variable": {
                    "value": "textures1",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[im[:, :, :h - 1, :w - 1], im[:, :, :h - 1, 1:], im[:, :, 1:, :w - 1]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_102": {
                "variable": {
                    "value": "textures1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "view.size(0)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "stack_103": {
                "variable": {
                    "value": "textures2",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[im[:, :, 1:, :w - 1], im[:, :, :h - 1, 1:], im[:, :, 1:, 1:]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_103": {
                "variable": {
                    "value": "textures2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "view.size(0)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "c",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "rand_14": {
                "*size": {
                    "value": "size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_69": {
                "variable": {
                    "value": "trans_xyz",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "view.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_104": {
                "tensors": {
                    "value": "[textures1, textures2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_64": {
                "*size": {
                    "value": "b",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "view.size(0)",
                            "Call"
                        ]
                    ]
                },
                "out": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "dtype": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "rand_18": {
                "*size": {
                    "value": "size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "meshgrid_29": {
                "*tensors": {
                    "value": "[h_range, w_range]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "unsup3d/trainer.py": {
        "torch": {
            "load_44": {
                "variable": {
                    "value": "cp",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "checkpoint_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.checkpoint_dir, self.checkpoint_name)",
                            "Call"
                        ],
                        [
                            "checkpoints[-1]",
                            "Subscript"
                        ],
                        [
                            "os.path.join(self.checkpoint_dir, f'checkpoint{epoch:03}.pth')",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "self.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_63": {
                "obj": {
                    "value": "state_dict",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "self.model.get_model_state()",
                            "Call"
                        ],
                        [
                            "{**state_dict, **optimizer_state}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "checkpoint_path",
                    "type": "Variable",
                    "possible_values": [
                        [
                            "os.path.join(self.checkpoint_dir, self.checkpoint_name)",
                            "Call"
                        ],
                        [
                            "checkpoints[-1]",
                            "Subscript"
                        ],
                        [
                            "os.path.join(self.checkpoint_dir, f'checkpoint{epoch:03}.pth')",
                            "Call"
                        ]
                    ]
                }
            },
            "save_69": {
                "obj": {
                    "value": "self.model.get_model_state()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "no_grad_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_118": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "unsup3d/utils.py": {
        "torch": {
            "is_available_20": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_28": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_29": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_all_30": {
                "seed": {
                    "value": "args.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_40": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}