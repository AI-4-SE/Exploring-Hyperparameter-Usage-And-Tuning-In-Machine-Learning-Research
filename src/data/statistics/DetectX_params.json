{
    "adv_attacks.py": {
        "torch": {
            "clamp_20": {
                "variable": {
                    "value": "perturbed_image",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "perturbed_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image + epsilon * sign_data_grad",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(perturbed_image, 0, 1)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cross_entropy_33": {
                "variable": {
                    "value": "loss_ad",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "net(inp_var)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "true_label",
                    "type": "variable",
                    "possible_values": [
                        [
                            "true_label",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "sign_36": {
                "input": {
                    "value": "inp_var.grad.data",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "adv_dataset_gen.py": {
        "torch": {
            "DataParallel_65": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg11_bn()",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "tinyimagenet_net.ResNet().cuda()",
                            "Call"
                        ],
                        [
                            "net",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_48": {
                "variable": {
                    "value": "net.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_55": {
                "variable": {
                    "value": "net.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_66": {
                "f": {
                    "value": "model_pth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_pth",
                            "Attribute"
                        ]
                    ]
                }
            },
            "clamp_77": {
                "variable": {
                    "value": "perturbed_image",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "perturbed_image",
                    "type": "variable",
                    "possible_values": [
                        [
                            "image + epsilon * sign_data_grad",
                            "BinOp"
                        ],
                        [
                            "torch.clamp(perturbed_image, 0, 1)",
                            "Call"
                        ]
                    ]
                },
                "min": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "max": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cross_entropy_150": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(data)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "testloader",
                            "variable"
                        ],
                        [
                            "target.to(device)",
                            "Call"
                        ],
                        [
                            "target.to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_200": {
                "variable": {
                    "value": "ifadv",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_201": {
                "variable": {
                    "value": "ifnotadv",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_232": {
                "obj": {
                    "value": "adv_test_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_attack(net, 'cuda', test_loader)",
                            "Call"
                        ],
                        [
                            "pgd_attack(net, 'cuda', test_loader)",
                            "Call"
                        ],
                        [
                            "random_noise(net, 'cuda', test_loader)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.path + '/adv_test_set_' + args.type + '_fgsm_e=' + str(args.eps)",
                            "BinOp"
                        ],
                        [
                            "args.path + '/adv_test_set_' + args.type + '_pgd_e=' + str(args.eps) + '_a=' + str(args.alpha) + '_n=' + str(args.steps)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Linear_48": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_49": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_51": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_51": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_56": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_56": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_57": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_58": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_59": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_108": {
                "variable": {
                    "value": "Tdata_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[adv_data_batch[0], adv_data_batch[1], adv_data_batch[2], adv_data_batch[3], adv_data_batch[4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_110": {
                "variable": {
                    "value": "Tlabel_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[adv_label_batch[0], adv_label_batch[1], adv_label_batch[2], adv_label_batch[3], adv_label_batch[4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_175": {
                "variable": {
                    "value": "Tdata_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[adv_data_batch[0], adv_data_batch[1], adv_data_batch[2], adv_data_batch[3], adv_data_batch[4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_176": {
                "variable": {
                    "value": "Tlabel_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[adv_label_batch[0], adv_label_batch[1], adv_label_batch[2], adv_label_batch[3], adv_label_batch[4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_214": {
                "variable": {
                    "value": "Tdata_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[adv_data_batch[0], adv_data_batch[1], adv_data_batch[2], adv_data_batch[3], adv_data_batch[4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_216": {
                "variable": {
                    "value": "Tlabel_batch",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[adv_label_batch[0], adv_label_batch[1], adv_label_batch[2], adv_label_batch[3], adv_label_batch[4]]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_239": {
                "obj": {
                    "value": "adv_test_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_attack(net, 'cuda', test_loader)",
                            "Call"
                        ],
                        [
                            "pgd_attack(net, 'cuda', test_loader)",
                            "Call"
                        ],
                        [
                            "random_noise(net, 'cuda', test_loader)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.path + '/adv_test_set_' + args.type + '_fgsm_e=' + str(args.eps)",
                            "BinOp"
                        ],
                        [
                            "args.path + '/adv_test_set_' + args.type + '_pgd_e=' + str(args.eps) + '_a=' + str(args.alpha) + '_n=' + str(args.steps)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "randn_202": {
                "size": {
                    "value": "data.size()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "save_244": {
                "obj": {
                    "value": "adv_test_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_attack(net, 'cuda', test_loader)",
                            "Call"
                        ],
                        [
                            "pgd_attack(net, 'cuda', test_loader)",
                            "Call"
                        ],
                        [
                            "random_noise(net, 'cuda', test_loader)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "cifar10_random/adv_test_set_random",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "adv_train_set_gen.py": {
        "torch": {
            "DataParallel_61": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg11_bn()",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "net",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_48": {
                "variable": {
                    "value": "net.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_55": {
                "variable": {
                    "value": "net.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_90": {
                "variable": {
                    "value": "ifadv",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_91": {
                "variable": {
                    "value": "ifnotadv",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cross_entropy_119": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "model(data)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "target.to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_135": {
                "variable": {
                    "value": "ifadv",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "zeros_136": {
                "variable": {
                    "value": "ifnotadv",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                }
            },
            "save_152": {
                "obj": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_attack(net, 'cuda', train_loader)",
                            "Call"
                        ],
                        [
                            "pgd_attack(net, 'cuda', train_loader)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.path + '/adv_train_set_' + args.type + '_fgsm_e=' + str(args.eps)",
                            "BinOp"
                        ],
                        [
                            "args.path + '/adv_train_set_' + args.type + '_pgd_e=' + str(args.eps) + '_a=' + str(args.alpha) + '_n=' + str(args.steps)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Linear_48": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_49": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_49": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_50": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_51": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_51": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_55": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_56": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_56": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_57": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_58": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_58": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_59": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_63": {
                "f": {
                    "value": "model_pth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_pth",
                            "Attribute"
                        ]
                    ]
                }
            },
            "save_159": {
                "obj": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "test_attack(net, 'cuda', train_loader)",
                            "Call"
                        ],
                        [
                            "pgd_attack(net, 'cuda', train_loader)",
                            "Call"
                        ],
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.path + '/adv_train_set_' + args.type + '_fgsm_e=' + str(args.eps)",
                            "BinOp"
                        ],
                        [
                            "args.path + '/adv_train_set_' + args.type + '_pgd_e=' + str(args.eps) + '_a=' + str(args.alpha) + '_n=' + str(args.steps)",
                            "BinOp"
                        ]
                    ]
                }
            },
            "load_65": {
                "f": {
                    "value": "model_pth",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.model_pth",
                            "Attribute"
                        ]
                    ]
                }
            }
        }
    },
    "calculate_error_accuracy.py": {
        "torch": {
            "Sequential_42": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_47": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "tinyimagenet_net.ResNet().cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_52": {
                "variable": {
                    "value": "model_infer.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_57": {
                "variable": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "tinyimagenet_net_infer.ResNet().cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "load_69": {
                "variable": {
                    "value": "lut",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.lut_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Sequential_83": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_89": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "tinyimagenet_net.ResNet().cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_96": {
                "variable": {
                    "value": "model_infer.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_101": {
                "variable": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "tinyimagenet_net_infer.ResNet().cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "load_114": {
                "variable": {
                    "value": "lut",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.lut_path",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "save_213": {
                "obj": {
                    "value": "soi_list",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "soi_path",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.soi_path + '/soi_' + args.type + '_' + args.a_type + '_e=' + str(eps)",
                            "BinOp"
                        ],
                        [
                            "args.soi_path + '/soi_' + args.type + '_' + args.a_type + '_e=' + str(eps) + '_a=' + str(alpha) + '_n=' + str(steps)",
                            "BinOp"
                        ],
                        [
                            "args.soi_path + '/soi_' + args.type + '_clean'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Linear_42": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_43": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_43": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_45": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_46": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_48": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_53": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_55": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_55": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_56": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataParallel_125": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "tinyimagenet_net.ResNet().cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "DataParallel_130": {
                "variable": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "tinyimagenet_net_infer.ResNet().cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "load_138": {
                "variable": {
                    "value": "lut",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "./tinyimagenet/LUT",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_59": {
                "f": {
                    "value": "args.model_inference",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_83": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_84": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_84": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_85": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_86": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_86": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_87": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_96": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_97": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_97": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_98": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_99": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_99": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_100": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_61": {
                "f": {
                    "value": "args.model_inference",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_65": {
                "f": {
                    "value": "args.baseline_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_91": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_103": {
                "f": {
                    "value": "args.model_inference",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_128": {
                "f": {
                    "value": "./tinyimagenet/baseline/tinyimagenet_baseline.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_134": {
                "f": {
                    "value": "./tinyimagenet/adv_train_pgd8_newdata/good_tinyimagenet.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "argmax_191": {
                "variable": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output[idx, :].data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "argmax_195": {
                "variable": {
                    "value": "pred",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output[idx, :].data",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_67": {
                "f": {
                    "value": "args.baseline_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_93": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_105": {
                "f": {
                    "value": "args.model_inference",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_110": {
                "f": {
                    "value": "args.baseline_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_136": {
                "f": {
                    "value": "./tinyimagenet/baseline/tinyimagenet_baseline.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_137": {
                "f": {
                    "value": "./tinyimagenet/baseline/tinyimagenet_baseline.pth",
                    "type": "str",
                    "possible_values": []
                }
            },
            "load_112": {
                "f": {
                    "value": "args.baseline_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "dataset.py": {
        "torch": {
            "DataLoader_135": {
                "variable": {
                    "value": "trainloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torchvision.datasets.ImageFolder(traindir, transforms.Compose([transforms.RandomCrop(64, padding=8), transforms.RandomHorizontalFlip(), transforms.ToTensor()]))",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_139": {
                "variable": {
                    "value": "testloader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "torchvision.datasets.ImageFolder(valdir, transforms.Compose([transforms.ToTensor()]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "drop_last": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_14": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.CIFAR10(root=data_root, train=True, download=True, transform=transforms.Compose([transforms.Pad(4), transforms.RandomCrop(32), transforms.RandomHorizontalFlip(), transforms.ToTensor()]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_28": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.CIFAR10(root=data_root, train=False, download=True, transform=transforms.Compose([transforms.ToTensor()]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_47": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.CIFAR100(root=data_root, train=True, download=True, transform=transforms.Compose([transforms.Pad(4), transforms.RandomCrop(32), transforms.RandomHorizontalFlip(), transforms.ToTensor()]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_61": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.CIFAR100(root=data_root, train=False, download=True, transform=transforms.Compose([transforms.ToTensor()]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_80": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.SVHN(root=data_root, split='train', download=True, transform=transforms.Compose([transforms.Pad(4), transforms.RandomCrop(32), transforms.RandomHorizontalFlip(), transforms.ToTensor(), transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "DataLoader_94": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "datasets.SVHN(root=data_root, split='test', download=True, transform=transforms.Compose([transforms.ToTensor(), transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))]))",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ],
                        [
                            "batch_size",
                            "Method Argument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "phase1_training.py": {
        "torch": {
            "DataParallel_66": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg11_bn()",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "SGD_73": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "tensor_78": {
                "variable": {
                    "value": "lambda_adv",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[args.la]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "tensor_79": {
                "variable": {
                    "value": "lambda_clean",
                    "type": "variable",
                    "possible_values": []
                },
                "data": {
                    "value": "[args.lc]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "MSELoss_81": {
                "variable": {
                    "value": "mseloss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_82": {
                "variable": {
                    "value": "celoss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_84": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.train_pth",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_85": {
                "variable": {
                    "value": "test_loader_adv",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.test_pth",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_42": {
                "variable": {
                    "value": "load_file",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.baseline_model_pth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_44": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "load_50": {
                "variable": {
                    "value": "load_file",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "args.baseline_model_pth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "map_location": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_52": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Sequential_62": {
                "variable": {
                    "value": "net.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=2048, out_features=1024, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Linear_44": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_45": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_45": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_45": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_46": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_46": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_46": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_53": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_53": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_54": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_54": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_62": {
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_63": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_63": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_64": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_64": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "save_164": {
                "obj": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg11_bn()",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "new_file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.save_pth + '/' + args.type + '_' + args.pgd_params + '.pth'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "no_grad_124": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_146": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "phase2_training.py": {
        "torch": {
            "CrossEntropyLoss_131": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "SGD_132": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.01",
                    "type": "float",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0005",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Sequential_46": {
                "variable": {
                    "value": "net.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_65": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_76": {
                "variable": {
                    "value": "net.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_96": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_107": {
                "variable": {
                    "value": "net.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=2048, out_features=1024, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_111": {
                "variable": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_52": {
                "variable": {
                    "value": "model_adv_gen.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_58": {
                "variable": {
                    "value": "model_adv_gen",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_adv_gen",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "model_adv_gen.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_adv_gen)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "model_adv_gen.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_adv_gen)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "model_adv_gen.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_adv_gen)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_83": {
                "variable": {
                    "value": "model_adv_gen.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_89": {
                "variable": {
                    "value": "model_adv_gen",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_adv_gen",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "model_adv_gen.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_adv_gen)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "model_adv_gen.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_adv_gen)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "model_adv_gen.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_adv_gen)",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_119": {
                "variable": {
                    "value": "model_adv_gen.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=2048, out_features=1024, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_125": {
                "variable": {
                    "value": "model_adv_gen",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_adv_gen",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "model_adv_gen.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_adv_gen)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "model_adv_gen.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_adv_gen)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "model_adv_gen.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_adv_gen)",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_46": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_47": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_47": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_47": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_48": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_48": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_76": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_77": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_77": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_78": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_79": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_79": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_80": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_107": {
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_108": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_108": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_108": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_109": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_109": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_109": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "cat_158": {
                "variable": {
                    "value": "data_aug",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(data, data_adv)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_159": {
                "variable": {
                    "value": "target_aug",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(target, target)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_52": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_53": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_53": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_54": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_55": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_55": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_56": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_67": {
                "f": {
                    "value": "args.phase1_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_83": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_84": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_84": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_85": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_86": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_86": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_87": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_98": {
                "f": {
                    "value": "args.phase1_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_113": {
                "f": {
                    "value": "args.phase1_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_119": {
                "in_features": {
                    "value": "2048",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_120": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_120": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_121": {
                "in_features": {
                    "value": "1024",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_122": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_122": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_123": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "200",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "save_217": {
                "obj": {
                    "value": "net",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "net.cuda()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(net)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "new_file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.path + '/' + args.type + '_' + args.net + '_adv_train_phase2.pth'",
                            "BinOp"
                        ],
                        [
                            "args.path + '/' + args.type + '_' + args.net + '_clean_phase2.pth'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "load_60": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_69": {
                "f": {
                    "value": "args.phase1_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_91": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_100": {
                "f": {
                    "value": "args.phase1_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_115": {
                "f": {
                    "value": "args.phase1_model",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_127": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "no_grad_198": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_62": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_93": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_129": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_174": {
                "tensors": {
                    "value": "(indx_target, indx_target)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "soi_lut_gen.py": {
        "torch": {
            "Sequential_32": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_37": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg11_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_43": {
                "variable": {
                    "value": "model_infer.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_48": {
                "variable": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg11_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "save_153": {
                "obj": {
                    "value": "lut",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[p[1], prob_clean]",
                            "List"
                        ]
                    ]
                },
                "f": {
                    "value": "file",
                    "type": "variable",
                    "possible_values": [
                        [
                            "args.lut_path + '/' + args.type + '_' + args.a_type + '_LUT'",
                            "BinOp"
                        ]
                    ]
                }
            },
            "Sequential_62": {
                "variable": {
                    "value": "model.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_68": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg11_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model)",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ],
                        [
                            "model.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "Sequential_75": {
                "variable": {
                    "value": "model_infer.classifier",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "nn.Linear(in_features=512, out_features=512, bias=True)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataParallel_80": {
                "variable": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": []
                },
                "module": {
                    "value": "model_infer",
                    "type": "variable",
                    "possible_values": [
                        [
                            "models.vgg11_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "models.vgg16_bn()",
                            "Call"
                        ],
                        [
                            "torch.nn.DataParallel(model_infer)",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ],
                        [
                            "model_infer.cuda()",
                            "Call"
                        ]
                    ]
                }
            },
            "Linear_32": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_33": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_33": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_34": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_35": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_35": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_36": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_43": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_44": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_44": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_45": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_46": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_46": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_47": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "10",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_39": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_50": {
                "f": {
                    "value": "args.model_dual_phase",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_62": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_63": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_63": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_64": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_65": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_65": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_66": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Linear_75": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_76": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_76": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_77": {
                "in_features": {
                    "value": "512",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "ReLU_78": {
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Dropout_78": {
                "p": {
                    "value": "0.5",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_79": {
                "in_features": {
                    "value": "256",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "load_41": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_52": {
                "f": {
                    "value": "args.model_dual_phase",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_70": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_82": {
                "f": {
                    "value": "args.model_dual_phase",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_72": {
                "f": {
                    "value": "args.model_adv_gen",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "load_84": {
                "f": {
                    "value": "args.model_dual_phase",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    }
}