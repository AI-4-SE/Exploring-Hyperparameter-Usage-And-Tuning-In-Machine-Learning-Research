{
    "deep_hedging_basket.py": {
        "tensorflow": {
            "clip_by_value_48": {
                "variable": {
                    "value": "Xclipped",
                    "type": "variable",
                    "possible_values": []
                },
                "t": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "clip_value_min": {
                    "value": "-self.err_thresh",
                    "type": "UnaryOp",
                    "possible_values": []
                },
                "clip_value_max": {
                    "value": "self.err_thresh",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_111": {
                "variable": {
                    "value": "self.Y0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(shape=[1], minval=self.Yini[0], maxval=self.Yini[1], dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "collections": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "name": {
                    "value": "Y0",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Variable_118": {
                "variable": {
                    "value": "self.Z0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initial_value": {
                    "value": "tf.random_uniform(shape=[1, self.d], minval=-0.2, maxval=0.2, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "collections": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "name": {
                    "value": "Z0",
                    "type": "str",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "placeholder_125": {
                "variable": {
                    "value": "self.S",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.d, self.n_time_steps + 1]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "S",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_128": {
                "variable": {
                    "value": "self.dS",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[None, self.d, self.n_time_steps]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "dS",
                    "type": "str",
                    "possible_values": []
                }
            },
            "placeholder_129": {
                "variable": {
                    "value": "self.is_training",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.bool",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_132": {
                "variable": {
                    "value": "self.allones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shape": {
                    "value": "[tf.shape(self.dS)[0], 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "matmul_134": {
                "variable": {
                    "value": "Z",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "self.allones",
                    "type": "Attribute",
                    "possible_values": []
                },
                "b": {
                    "value": "self.Z0",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "convert_to_tensor_136": {
                "variable": {
                    "value": "self.w_tensor",
                    "type": "Attribute",
                    "possible_values": []
                },
                "value": {
                    "value": "np.asmatrix(self.w_normalized)",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "get_variable_251": {
                "variable": {
                    "value": "self.global_step",
                    "type": "Attribute",
                    "possible_values": []
                },
                "name": {
                    "value": "global_step",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                },
                "initializer": {
                    "value": "const_init(value=1, dtype=tf.int32)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "trainable_variables_257": {
                "variable": {
                    "value": "trainable_vars",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "gradients_258": {
                "variable": {
                    "value": "grads",
                    "type": "variable",
                    "possible_values": []
                },
                "ys": {
                    "value": "self.loss",
                    "type": "Attribute",
                    "possible_values": []
                },
                "xs": {
                    "value": "trainable_vars",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.trainable_variables()",
                            "Call"
                        ]
                    ]
                }
            },
            "AdamOptimizer_259": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "learning_rate": {
                    "value": "self.learning_rate",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "group_263": {
                "variable": {
                    "value": "self.train_op",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*inputs": {
                    "value": "*train_ops",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "maximum_36": {
                "x": {
                    "value": "basket_minus_strike",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(a=X, b=w, transpose_b=True) - self.K",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "tf.zeros([a, 1], tf.float64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_49": {
                "input_tensor": {
                    "value": "Xclipped ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "get_variable_178": {
                "variable": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "Matrix",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "[input_shape[1], out_sz]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "norm_init(mean=0.0, stddev=std / np.sqrt(input_shape[1] + out_sz), dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "matmul_185": {
                "variable": {
                    "value": "hidden",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "input_",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='Matrix', shape=[input_shape[1], out_sz], dtype=tf.float64, initializer=norm_init(mean=0.0, stddev=std / np.sqrt(input_shape[1] + out_sz), dtype=tf.float64))",
                            "Call"
                        ]
                    ]
                }
            },
            "get_variable_197": {
                "variable": {
                    "value": "beta",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "beta",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "params_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[x.get_shape()[-1]]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "norm_init(mean=0.0, stddev=0.1, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "get_variable_205": {
                "variable": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "gamma",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "params_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[x.get_shape()[-1]]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "unif_init(minval=0.1, maxval=0.5, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "get_variable_213": {
                "variable": {
                    "value": "mv_mean",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "moving_mean",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "params_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[x.get_shape()[-1]]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "const_init(value=0.0, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "get_variable_220": {
                "variable": {
                    "value": "mv_var",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "moving_variance",
                    "type": "str",
                    "possible_values": []
                },
                "shape": {
                    "value": "params_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[x.get_shape()[-1]]",
                            "List"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "initializer": {
                    "value": "const_init(value=1.0, dtype=tf.float64)",
                    "type": "Call",
                    "possible_values": []
                },
                "trainable": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "moments_228": {
                "variable": {
                    "value": "(mean, variance)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "axes": {
                    "value": "[0]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "moments",
                    "type": "str",
                    "possible_values": []
                }
            },
            "cond_235": {
                "variable": {
                    "value": "(mean, variance)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "pred": {
                    "value": "self.is_training",
                    "type": "Attribute",
                    "possible_values": []
                },
                "true_fn": {
                    "value": "lambda : (mean, variance)",
                    "type": "Lambda",
                    "possible_values": []
                },
                "false_fn": {
                    "value": "lambda : (mv_mean, mv_var)",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "batch_normalization_238": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "mean": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": []
                },
                "variance": {
                    "value": "variance",
                    "type": "variable",
                    "possible_values": []
                },
                "offset": {
                    "value": "beta",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='beta', shape=params_shape, dtype=tf.float64, initializer=norm_init(mean=0.0, stddev=0.1, dtype=tf.float64), trainable=True)",
                            "Call"
                        ]
                    ]
                },
                "scale": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='gamma', shape=params_shape, dtype=tf.float64, initializer=unif_init(minval=0.1, maxval=0.5, dtype=tf.float64), trainable=True)",
                            "Call"
                        ]
                    ]
                },
                "variance_epsilon": {
                    "value": "1e-06",
                    "type": "float",
                    "possible_values": []
                }
            },
            "matmul_34": {
                "a": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "b": {
                    "value": "w",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.get_variable(name='Matrix', shape=[input_shape[1], out_sz], dtype=tf.float64, initializer=norm_init(mean=0.0, stddev=std / np.sqrt(input_shape[1] + out_sz), dtype=tf.float64))",
                            "Call"
                        ]
                    ]
                },
                "transpose_b": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "shape_35": {
                "input": {
                    "value": "basket_minus_strike",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(a=X, b=w, transpose_b=True) - self.K",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_36": {
                "shape": {
                    "value": "[a, 1]",
                    "type": "List",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float64",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_140": {
                "name_or_scope": {
                    "value": "forward",
                    "type": "str",
                    "possible_values": []
                }
            },
            "reduce_sum_159": {
                "input_tensor": {
                    "value": "Z * dS[:, :, i]",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "variable_scope_162": {
                "name_or_scope": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'linear'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "variable_scope_176": {
                "name_or_scope": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'linear'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "variable_scope_194": {
                "name_or_scope": {
                    "value": "name",
                    "type": "variable",
                    "possible_values": [
                        [
                            "'linear'",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "global_variables_initializer_272": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_sum_25": {
                "input_tensor": {
                    "value": "tf.multiply(Z, X)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "keep_dims": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "multiply_25": {
                "x": {
                    "value": "Z",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.matmul(self.allones, self.Z0)",
                            "Call"
                        ],
                        [
                            "self._one_time_net(self.S[:, :, i + 1], str(i + 1))",
                            "Call"
                        ]
                    ]
                },
                "y": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "shape_132": {
                "input": {
                    "value": "self.dS",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "run_deep_hedging_basket.py": {
        "tensorflow": {
            "reset_default_graph_98": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "FileWriter_101": {
                "variable": {
                    "value": "writer",
                    "type": "variable",
                    "possible_values": []
                },
                "logdir": {
                    "value": "./graphs",
                    "type": "str",
                    "possible_values": []
                },
                "graph": {
                    "value": "sess.graph",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Session_99": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "set_random_seed_100": {
                "seed": {
                    "value": "my_seed",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "int"
                        ]
                    ]
                }
            }
        }
    }
}