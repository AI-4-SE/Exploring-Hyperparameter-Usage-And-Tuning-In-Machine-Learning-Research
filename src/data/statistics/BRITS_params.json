{
    "models/brits.py": {
        "sklearn": {},
        "torch": {
            "pow_57": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_f - pred_b",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "mean_57": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_67": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/brits_i.py": {
        "sklearn": {},
        "torch": {
            "pow_57": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "pred_f - pred_b",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "mean_57": {
                "variable": {
                    "value": "loss",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_67": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/rits.py": {
        "sklearn": {},
        "torch": {
            "Parameter_43": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(input_size, input_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_44": {
                "variable": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(input_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "linear_58": {
                "variable": {
                    "value": "z_h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "values[:, t, :]",
                            "Subscript"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.W * Variable(self.m)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Parameter_69": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(output_size, input_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_70": {
                "variable": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(output_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_90": {
                "variable": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-gamma",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "LSTMCell_99": {
                "variable": {
                    "value": "self.rnn_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "35 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "RNN_HID_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                }
            },
            "Linear_104": {
                "variable": {
                    "value": "self.hist_reg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "RNN_HID_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "35",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_107": {
                "variable": {
                    "value": "self.weight_combine",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "35 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "35",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Dropout_109": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.25",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Linear_110": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "RNN_HID_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_166": {
                "variable": {
                    "value": "imputations",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "imputations",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(imputations, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_172": {
                "variable": {
                    "value": "y_h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.out(h)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(y_h)",
                            "Call"
                        ]
                    ]
                }
            },
            "eye_74": {
                "variable": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": []
                },
                "n": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": []
                },
                "m": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "relu_87": {
                "variable": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "F.linear(d, self.W * Variable(self.m), self.b)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_89": {
                "variable": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "F.linear(d, self.W, self.b)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_127": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_160": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[c_c, m]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ones_46": {
                "*size": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": []
                },
                "out": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "eye_46": {
                "n": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": []
                },
                "m": {
                    "value": "input_size",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_124": {
                "*size": {
                    "value": "(values.size()[0], RNN_HID_SIZE)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_125": {
                "*size": {
                    "value": "(values.size()[0], RNN_HID_SIZE)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sum_170": {
                "input": {
                    "value": "is_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data['is_train'].view(-1, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "linear_87": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "deltas[:, t, :]",
                            "Subscript"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.W * Variable(self.m)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "linear_89": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "deltas[:, t, :]",
                            "Subscript"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "sum_146": {
                "input": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones(input_size, input_size) - torch.eye(input_size, input_size)",
                            "BinOp"
                        ],
                        [
                            "torch.eye(input_size, input_size)",
                            "Call"
                        ],
                        [
                            "masks[:, t, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "sum_151": {
                "input": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones(input_size, input_size) - torch.eye(input_size, input_size)",
                            "BinOp"
                        ],
                        [
                            "torch.eye(input_size, input_size)",
                            "Call"
                        ],
                        [
                            "masks[:, t, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "cat_153": {
                "tensors": {
                    "value": "[gamma_x, m]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_156": {
                "input": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.ones(input_size, input_size) - torch.eye(input_size, input_size)",
                            "BinOp"
                        ],
                        [
                            "torch.eye(input_size, input_size)",
                            "Call"
                        ],
                        [
                            "masks[:, t, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "abs_146": {
                "input": {
                    "value": "x - x_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_151": {
                "input": {
                    "value": "x - z_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_156": {
                "input": {
                    "value": "x - c_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "models/rits_i.py": {
        "sklearn": {},
        "torch": {
            "Parameter_44": {
                "variable": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(RNN_HID_SIZE, input_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_45": {
                "variable": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(RNN_HID_SIZE)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_55": {
                "variable": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "F.linear(d, self.W, self.b)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "exp_56": {
                "variable": {
                    "value": "gamma",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-gamma",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "LSTMCell_65": {
                "variable": {
                    "value": "self.rnn_cell",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "35 * 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "RNN_HID_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                }
            },
            "Linear_67": {
                "variable": {
                    "value": "self.regression",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "RNN_HID_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "35",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_70": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "RNN_HID_SIZE",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "int"
                        ]
                    ]
                },
                "out_features": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "cat_114": {
                "variable": {
                    "value": "imputations",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "imputations",
                    "type": "variable",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(imputations, dim=1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sigmoid_122": {
                "variable": {
                    "value": "y_h",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_h",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.out(h)",
                            "Call"
                        ],
                        [
                            "F.sigmoid(y_h)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_87": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_108": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[x_c, m]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "linear_55": {
                "input": {
                    "value": "d",
                    "type": "variable",
                    "possible_values": [
                        [
                            "deltas[:, t, :]",
                            "Subscript"
                        ]
                    ]
                },
                "weight": {
                    "value": "self.W",
                    "type": "Attribute",
                    "possible_values": []
                },
                "bias": {
                    "value": "self.b",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_84": {
                "*size": {
                    "value": "(values.size()[0], RNN_HID_SIZE)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_85": {
                "*size": {
                    "value": "(values.size()[0], RNN_HID_SIZE)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sum_120": {
                "input": {
                    "value": "is_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data['is_train'].view(-1, 1)",
                            "Call"
                        ]
                    ]
                }
            },
            "sum_106": {
                "input": {
                    "value": "m",
                    "type": "variable",
                    "possible_values": [
                        [
                            "masks[:, t, :]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "abs_106": {
                "input": {
                    "value": "x - x_h",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "data_loader.py": {
        "torch": {
            "DataLoader_57": {
                "variable": {
                    "value": "data_iter",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "data_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "MySet()",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "64",
                            "Method Argument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle",
                    "type": "variable",
                    "possible_values": [
                        [
                            "True",
                            "Method Argument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "collate_fn": {
                    "value": "collate_fn",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "main.py": {
        "torch": {}
    },
    "utils.py": {
        "torch": {
            "is_tensor_11": {
                "obj": {
                    "value": "var",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Variable(var)",
                            "Call"
                        ],
                        [
                            "var.cuda()",
                            "Call"
                        ],
                        [
                            "map(lambda x: to_var(x), var)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_13": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_34": {
                "*size": {
                    "value": "sz",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    }
}