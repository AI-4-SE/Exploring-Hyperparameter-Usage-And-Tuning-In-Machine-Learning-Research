{
    "cosine_optim.py": {
        "torch": {
            "LambdaLR_11": {
                "variable": {
                    "value": "scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "optimizer": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "lr_lambda": {
                    "value": "lambda step: _cosine_annealing(step, epochs, lr, 0)",
                    "type": "Lambda",
                    "possible_values": []
                }
            }
        }
    },
    "cross_entropy.py": {
        "torch": {
            "ones_217": {
                "variable": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "out": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Tensor_218": {
                "variable": {
                    "value": "labels",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "zeros_like_202": {
                "variable": {
                    "value": "smooth_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_softmax_204": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "kl_div_205": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "smooth_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros_like(input).fill_(self.smooth_eps / N)",
                            "Call"
                        ],
                        [
                            "torch.zeros_like(input).fill_(self.smooth_eps / N)",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_205": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_16": {
                "variable": {
                    "value": "smooth_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_softmax_19": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "kl_div_20": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "smooth_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.zeros_like(input).fill_(self.smooth_eps / N)",
                            "Call"
                        ],
                        [
                            "torch.zeros_like(input).fill_(self.smooth_eps / N)",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_20": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_43": {
                "variable": {
                    "value": "onehot_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_45": {
                "variable": {
                    "value": "tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_softmax_47": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "kl_div_48": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "interpolation_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - self.lam) * onehot_target + self.lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_48": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_71": {
                "variable": {
                    "value": "onehot_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_73": {
                "variable": {
                    "value": "tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "predict",
                    "type": "variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_softmax_75": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "kl_div_76": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "interpolation_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - self.lam) * onehot_target + self.lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_76": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_98": {
                "variable": {
                    "value": "onehot_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_100": {
                "variable": {
                    "value": "tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_106": {
                "variable": {
                    "value": "pre_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_softmax_110": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "kl_div_111": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "interpolation_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - self.lam) * onehot_target + self.lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_111": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_134": {
                "variable": {
                    "value": "onehot_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_like_137": {
                "variable": {
                    "value": "pre_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "log_softmax_140": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "kl_div_141": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "interpolation_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - self.lam) * onehot_target + self.lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_141": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "zeros_like_164": {
                "variable": {
                    "value": "onehot_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_166": {
                "variable": {
                    "value": "tmp",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "log_softmax_181": {
                "variable": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "kl_div_182": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "interpolation_target",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "(1 - self.lam) * onehot_target + self.lam * tmp",
                            "BinOp"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - self.lam) * onehot_target + self.lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ],
                        [
                            "((1 - lam) * onehot_target + lam * pre_target).detach()",
                            "Call"
                        ]
                    ]
                },
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "sum_182": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cross_entropy_29": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "self.reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cross_entropy_57": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "self.reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cross_entropy_85": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "self.reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cross_entropy_120": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "self.reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cross_entropy_150": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "self.reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_like_173": {
                "variable": {
                    "value": "pre_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                }
            },
            "softmax_177": {
                "variable": {
                    "value": "pre_target",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input / self.t",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "cross_entropy_191": {
                "input": {
                    "value": "input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target",
                    "type": "variable",
                    "possible_values": []
                },
                "reduction": {
                    "value": "self.reduction",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "is_available_5": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_27": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Conv2d_29": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AvgPool2d_31": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "pad_36": {
                "variable": {
                    "value": "shift_x",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "shift_x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x[:, :, 1:, 1:]",
                            "Subscript"
                        ],
                        [
                            "F.pad(shift_x, (0, 1, 0, 1))",
                            "Call"
                        ]
                    ]
                },
                "pad": {
                    "value": "(0, 1, 0, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "cat_38": {
                "variable": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[out1, out2]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2d_45": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "stride",
                    "type": "variable",
                    "possible_values": [
                        [
                            "2",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_47": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_48": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_50": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "planes",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Conv2d_95": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "bias": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "BatchNorm2d_97": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_features": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ReLU_98": {
                "variable": {
                    "value": "self.relu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "inplace": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "AvgPool2d_103": {
                "variable": {
                    "value": "self.avg_pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Linear_104": {
                "variable": {
                    "value": "self.fc_out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "out_features": {
                    "value": "num_classes",
                    "type": "variable",
                    "possible_values": [
                        [
                            "10",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Sequential_67": {
                "variable": {
                    "value": "self.skipping_branch",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "rand_78": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out1.size(0)",
                            "Call"
                        ]
                    ]
                }
            },
            "rand_79": {
                "variable": {
                    "value": "beta",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "batch_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out1.size(0)",
                            "Call"
                        ]
                    ]
                }
            },
            "Tensor_84": {
                "variable": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Sequential_120": {
                "*args": {
                    "value": "*layers",
                    "type": "Starred",
                    "possible_values": []
                }
            },
            "relu_53": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.relu(self.bn1(self.conv1(x)))",
                            "Call"
                        ],
                        [
                            "self.stage1(x)",
                            "Call"
                        ],
                        [
                            "self.stage2(x)",
                            "Call"
                        ],
                        [
                            "self.stage3(x)",
                            "Call"
                        ],
                        [
                            "self.avg_pool(x)",
                            "Call"
                        ],
                        [
                            "x.view(x.size(0), -1)",
                            "Call"
                        ],
                        [
                            "self.fc_out(x)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "relu_54": {
                "input": {
                    "value": "out",
                    "type": "variable",
                    "possible_values": [
                        [
                            "alpha * input1 + (1 - alpha) * input2",
                            "BinOp"
                        ],
                        [
                            "torch.cat([out1, out2], dim=1)",
                            "Call"
                        ],
                        [
                            "self.bn1(self.conv1(F.relu(x, inplace=False)))",
                            "Call"
                        ],
                        [
                            "self.bn2(self.conv2(F.relu(out, inplace=False)))",
                            "Call"
                        ],
                        [
                            "self.shake_shake(out1, out2, alpha, beta)",
                            "Call"
                        ],
                        [
                            "self.shake_shake(out1, out2, alpha)",
                            "Call"
                        ]
                    ]
                },
                "inplace": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                }
            }
        }
    },
    "new.py": {
        "torch": {}
    },
    "train.py": {
        "torch": {
            "DataLoader_60": {
                "variable": {
                    "value": "train_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_train",
                    "type": "variable",
                    "possible_values": [
                        [
                            "new.CIFAR10(root=file_name, train=True, download=False, transform=transforms_train)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "args.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_worker",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_62": {
                "variable": {
                    "value": "test_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "new.CIFAR10(root=file_name, train=False, download=False, transform=transforms_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_worker",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "DataLoader_64": {
                "variable": {
                    "value": "fre_loader",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset_test",
                    "type": "variable",
                    "possible_values": [
                        [
                            "new.CIFAR10(root=file_name, train=False, download=False, transform=transforms_test)",
                            "Call"
                        ]
                    ]
                },
                "batch_size": {
                    "value": "100",
                    "type": "int",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "args.num_worker",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_81": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "net.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "args.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "0.9",
                    "type": "float",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "0.0001",
                    "type": "float",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_40": {
                "variable": {
                    "value": "criterion",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_77": {
                "variable": {
                    "value": "checkpoint",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "'./save_model/' + args.resume",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "is_available_44": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "no_grad_129": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_160": {
                "obj": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "{'net': net.state_dict(), 'acc': acc, 'epoch': epoch}",
                            "Dict"
                        ]
                    ]
                },
                "f": {
                    "value": "./save_model/newckpt + save_name + .pth",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "no_grad_169": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "empty_cache_195": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    }
}