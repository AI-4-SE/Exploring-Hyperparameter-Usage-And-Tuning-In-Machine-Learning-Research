{
    "red_masks.py": {
        "tensorflow": {}
    },
    "scripts/accuracy.py": {
        "tensorflow": {
            "sum_10": {
                "variable": {
                    "value": "intersection",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "K.abs(y_true * y_pred)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "mean_12": {
                "variable": {
                    "value": "iou",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "(intersection + smooth) / (union + smooth)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                }
            },
            "abs_10": {
                "x": {
                    "value": "y_true * y_pred",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_11": {
                "a": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                }
            }
        }
    },
    "scripts/data_generator.py": {
        "tensorflow": {}
    },
    "scripts/model_builder.py": {
        "tensorflow": {
            "Input_60": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Model_83": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "resnet_layer(num_filters, kernel_size)(inputs)",
                            "Call"
                        ],
                        [
                            "kl.Input(shape=input_shape)",
                            "Call"
                        ]
                    ]
                },
                "outputs": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": [
                        [
                            "resnet_layer(num_classes, kernel_size=1, activation=kl.Activation('softmax'), batchnorm=False)(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "ReLU_18": {
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv2D_22": {
                "variable": {
                    "value": "conv",
                    "type": "variable",
                    "possible_values": []
                },
                "filters": {
                    "value": "num_filters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "initial_filters",
                            "Name"
                        ],
                        [
                            "num_filters // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "variable",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "strides": {
                    "value": "strides",
                    "type": "variable",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "he_uniform",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_regularizer": {
                    "value": "l2(1e-08)",
                    "type": "Call",
                    "possible_values": []
                },
                "bias_initializer": {
                    "value": "lecun_uniform",
                    "type": "str",
                    "possible_values": []
                },
                "bias_regularizer": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                },
                "activation": {
                    "value": "None",
                    "type": "NoneType",
                    "possible_values": []
                }
            },
            "add_50": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "[x, inputs]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "add_77": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "[x, residuals[i]]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "MaxPooling2D_68": {
                "pool_size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv2DTranspose_75": {
                "filters": {
                    "value": "num_filters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "initial_filters",
                            "Name"
                        ],
                        [
                            "num_filters // 2",
                            "BinOp"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Activation_81": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "scripts/red_masks.py": {
        "tensorflow": {}
    },
    "scripts/train.py": {
        "tensorflow": {
            "ones_like_61": {
                "variable": {
                    "value": "ones",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_67": {
                "variable": {
                    "value": "num",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "p0 * g0",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "(0, 1, 2, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sum_70": {
                "variable": {
                    "value": "T",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "weights * num / den",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "cast_74": {
                "variable": {
                    "value": "Ncl",
                    "type": "variable",
                    "possible_values": []
                },
                "x": {
                    "value": "K.shape(y_true)[-1]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_97": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr_schedule(0)",
                    "type": "Call",
                    "possible_values": []
                },
                "clipnorm": {
                    "value": "1.0",
                    "type": "float",
                    "possible_values": []
                }
            },
            "TensorBoard_104": {
                "variable": {
                    "value": "tb",
                    "type": "variable",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "os.path.normpath('.\\\\logs\\\\fit\\\\') + datetime.datetime.now().strftime('%Y%m%d-%H%M%S')",
                    "type": "BinOp",
                    "possible_values": []
                },
                "histogram_freq": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "LearningRateScheduler_111": {
                "variable": {
                    "value": "lr_scheduler",
                    "type": "variable",
                    "possible_values": []
                },
                "schedule": {
                    "value": "lr_schedule",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ModelCheckpoint_112": {
                "variable": {
                    "value": "checkpoints",
                    "type": "variable",
                    "possible_values": []
                },
                "filepath": {
                    "value": "os.path.normpath('.\\\\ckpts')",
                    "type": "Call",
                    "possible_values": []
                },
                "monitor": {
                    "value": "loss",
                    "type": "str",
                    "possible_values": []
                },
                "verbose": {
                    "value": "0",
                    "type": "int",
                    "possible_values": []
                },
                "save_weights_only": {
                    "value": "False",
                    "type": "bool",
                    "possible_values": []
                },
                "mode": {
                    "value": "auto",
                    "type": "str",
                    "possible_values": []
                },
                "save_freq": {
                    "value": "epoch",
                    "type": "str",
                    "possible_values": []
                }
            },
            "flatten_26": {
                "variable": {
                    "value": "y_true_f",
                    "type": "variable",
                    "possible_values": []
                },
                "structure": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "flatten_27": {
                "variable": {
                    "value": "y_pred_f",
                    "type": "variable",
                    "possible_values": []
                },
                "structure": {
                    "value": "y_pred",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_28": {
                "variable": {
                    "value": "intersection",
                    "type": "variable",
                    "possible_values": []
                },
                "a": {
                    "value": "y_true_f * y_pred_f",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sum_68": {
                "a": {
                    "value": "p0 * g1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "(0, 1, 2)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "shape_74": {
                "input": {
                    "value": "y_true",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "sum_30": {
                "a": {
                    "value": "y_pred_f * y_pred_f",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}