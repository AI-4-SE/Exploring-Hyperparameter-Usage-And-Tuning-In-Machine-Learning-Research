{
    "firenet/ml/fullsetpredictor.py": {
        "FullSetPredictor_6": {},
        "KFold_23": {
            "variable": {
                "value": "kf",
                "possible_values": []
            },
            "n_splits": {
                "value": "n_splits",
                "possible_values": []
            },
            "shuffle": {
                "value": "True",
                "possible_values": []
            },
            "random_state": {
                "value": "shuffle_state",
                "possible_values": []
            }
        }
    },
    "firenet/ml/modelbuilder.py": {
        "LoadCheckPointer_97": {},
        "TransformedTargetRegressor_93": {
            "variable": {
                "value": "regr",
                "possible_values": []
            },
            "regressor": {
                "value": "skorch_nnet",
                "possible_values": [
                    "default_skorch_nnet(**skorchnet_kwargs)"
                ]
            },
            "transformer": {
                "value": "StandardScaler()",
                "possible_values": []
            },
            "check_inverse": {
                "value": "False",
                "possible_values": []
            }
        },
        "StandardScaler_93": {
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "firenet/ml/singlepredictor.py": {
        "SinglePredictor_22": {},
        "SingleRegressor_244": {},
        "SingleUncertaintyEstimator_260": {},
        "Pipeline_231": {
            "steps": {
                "value": "pipeline",
                "possible_values": []
            }
        },
        "StandardScaler_219": {
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "firenet/ml/util.py": {},
    "firenet/plotting/truevspred.py": {
        "TrueVSPredPlotter_9": {},
        "TrueVSPredPanel_43": {},
        "TrueVSPredCell_265": {}
    }
}