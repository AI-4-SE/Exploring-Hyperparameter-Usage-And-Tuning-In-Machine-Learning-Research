{
    "src/DataLoader/Data_utils.py": {
        "sklearn": {
            "train_test_split_23": {
                "variable": {
                    "value": "(train, val)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "folder_path",
                    "type": "variable",
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.4",
                    "type": "float",
                    "possible_values": []
                },
                "random_state": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "DataLoader_30": {
                "variable": {
                    "value": "training_generator",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "training_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dataset(partition['train'], labels, 'float32', (0, 1))",
                            "Call"
                        ]
                    ]
                }
            },
            "DataLoader_33": {
                "variable": {
                    "value": "validation_generator",
                    "type": "variable",
                    "possible_values": []
                },
                "dataset": {
                    "value": "validation_set",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Dataset(partition['validation'], labels, 'float32', (0, 1))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/Models/load.py": {
        "tensorflow": {
            "to_categorical_69": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "y": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": [
                        [
                            "pad([[self.class_to_int[c] for c in s] for s in y], val=3, dtype=np.int32)",
                            "Call"
                        ],
                        [
                            "to_categorical(y, num_classes=len(self.classes))",
                            "Call"
                        ]
                    ]
                },
                "num_classes": {
                    "value": "len(self.classes)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "src/Models/network.py": {
        "tensorflow": {
            "Adam_124": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "params['learning_rate']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "clipnorm": {
                    "value": "params.get('clipnorm', 1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Input_136": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "params['input_shape']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "dtype": {
                    "value": "float32",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "inputs",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_146": {
                "variable": {
                    "value": "model",
                    "type": "variable",
                    "possible_values": []
                },
                "inputs": {
                    "value": "[inputs]",
                    "type": "List",
                    "possible_values": []
                },
                "outputs": {
                    "value": "[output]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "Model_app",
                    "type": "str",
                    "possible_values": []
                }
            },
            "zeros_like_57": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "BatchNormalization_8": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Activation_9": {
                "activation": {
                    "value": "params['conv_activation']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Conv1D_25": {
                "filters": {
                    "value": "num_filters",
                    "type": "variable",
                    "possible_values": [
                        [
                            "get_num_filters_at_index(index, params['conv_num_filters_start'], **params)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "filter_length",
                    "type": "variable",
                    "possible_values": []
                },
                "strides": {
                    "value": "subsample_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "params['conv_subsample_lengths']",
                            "Subscript"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "params['conv_init']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "concatenate_58": {
                "arys": {
                    "value": "[x, y]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "MaxPooling1D_66": {
                "pool_size": {
                    "value": "subsample_length",
                    "type": "variable",
                    "possible_values": [
                        [
                            "params['conv_subsample_lengths']",
                            "Subscript"
                        ],
                        [
                            "1",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Add_84": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "TimeDistributed_117": {
                "layer": {
                    "value": "Dense(params['num_categories'], name='output_app_dense')",
                    "type": "Call",
                    "possible_values": []
                },
                "name": {
                    "value": "output_app_time_distributed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Activation_119": {
                "activation": {
                    "value": "softmax",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "app_output",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_13": {
                "rate": {
                    "value": "params['conv_dropout']",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "Lambda_70": {
                "function": {
                    "value": "zeropad",
                    "type": "variable",
                    "possible_values": []
                },
                "output_shape": {
                    "value": "zeropad_output_shape",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Dense_117": {
                "units": {
                    "value": "params['num_categories']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "name": {
                    "value": "output_app_dense",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "src/Models/network_compression_AVGloss_prediction.py": {
        "tensorflow": {
            "CategoricalAccuracy_13": {
                "variable": {
                    "value": "acc_metric_first",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                }
            },
            "CategoricalAccuracy_14": {
                "variable": {
                    "value": "acc_metric_second",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                }
            },
            "CategoricalAccuracy_15": {
                "variable": {
                    "value": "acc_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_491": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dropout_31": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_33": {
                "variable": {
                    "value": "self.dense_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv1D_49": {
                "variable": {
                    "value": "self.conv_embeddings_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.layers.LeakyReLU(alpha)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_51": {
                "variable": {
                    "value": "self.conv_embeddings_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.layers.LeakyReLU(alpha)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_53": {
                "variable": {
                    "value": "self.conv_embeddings_25",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.layers.LeakyReLU(alpha)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_55": {
                "variable": {
                    "value": "self.conv_embeddings_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.layers.LeakyReLU(alpha)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_57": {
                "variable": {
                    "value": "self.conv_embeddings_35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.layers.LeakyReLU(alpha)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_59": {
                "variable": {
                    "value": "self.conv_embeddings_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.layers.LeakyReLU(alpha)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_61": {
                "variable": {
                    "value": "self.conv_embeddings_45",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.layers.LeakyReLU(alpha)",
                    "type": "Call",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_68": {
                "variable": {
                    "value": "self.dense_35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.layers.LeakyReLU(alpha)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_69": {
                "variable": {
                    "value": "self.dense_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.layers.LeakyReLU(alpha)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Conv1D_94": {
                "variable": {
                    "value": "self.conv_embeddings_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_95": {
                "variable": {
                    "value": "self.conv_embeddings_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_96": {
                "variable": {
                    "value": "self.conv_embeddings_25",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_97": {
                "variable": {
                    "value": "self.conv_embeddings_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_98": {
                "variable": {
                    "value": "self.conv_embeddings_35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_99": {
                "variable": {
                    "value": "self.conv_embeddings_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_100": {
                "variable": {
                    "value": "self.conv_embeddings_45",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_101": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_105": {
                "variable": {
                    "value": "self.dense_35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.swish",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_106": {
                "variable": {
                    "value": "self.dense_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.swish",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_141": {
                "variable": {
                    "value": "self.dense_critic_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CategoricalCrossentropy_207": {
                "variable": {
                    "value": "cce",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_210": {
                "variable": {
                    "value": "reconstruction_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.mean_squared_error(state, reconstrcuted_signal)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_212": {
                "variable": {
                    "value": "RR_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.Huber(reduction='none')(task_2_label, RR_loss)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Dense_343": {
                "variable": {
                    "value": "self.dense_critic_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_345": {
                "variable": {
                    "value": "self.dense_critic_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CategoricalCrossentropy_445": {
                "variable": {
                    "value": "cce",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_448": {
                "variable": {
                    "value": "reconstruction_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.mean_squared_error(state, reconstrcuted_signal)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_451": {
                "variable": {
                    "value": "prediction_downstream_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "h(app_loss, x_downstream_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_453": {
                "variable": {
                    "value": "prediction_recons_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "h(reconstruction_loss, x_reconstructed_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Lambda_19": {
                "function": {
                    "value": "lambda y: y[:, :5000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_22": {
                "function": {
                    "value": "lambda x: x[:, 10000 - 8960:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_24": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "reduce_mean_215": {
                "variable": {
                    "value": "prediction_downstream_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.mean_absolute_error(reconstruction_loss, x_downstream_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "CategoricalCrossentropy_405": {
                "variable": {
                    "value": "cce",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_408": {
                "variable": {
                    "value": "reconstruction_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.mean_squared_error(state, reconstrcuted_signal)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_411": {
                "variable": {
                    "value": "prediction_downstream_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "h(app_loss, x_downstream_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_413": {
                "variable": {
                    "value": "prediction_recons_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "h(reconstruction_loss, x_reconstructed_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Lambda_21": {
                "function": {
                    "value": "lambda y: y[:, 8960 - 5000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Flatten_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Flatten_79": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Flatten_116": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Concatenate_168": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_169": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_170": {
                "function": {
                    "value": "lambda y: y[:, 8000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_171": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons_first",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_172": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons_second",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_174": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_175": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_squared_error_210": {
                "y_true": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "reconstrcuted_signal",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "reduce_mean_218": {
                "variable": {
                    "value": "prediction_downstream_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.mean_squared_error(app_loss, x_downstream_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "GradientTape_246": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Concatenate_372": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_373": {
                "function": {
                    "value": "lambda y: y[:, 8000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_374": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_376": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_379": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GradientTape_400": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mean_squared_error_448": {
                "y_true": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "reconstrcuted_signal",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "LeakyReLU_49": {
                "alpha": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "float"
                        ]
                    ]
                }
            },
            "LeakyReLU_51": {
                "alpha": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "float"
                        ]
                    ]
                }
            },
            "LeakyReLU_54": {
                "alpha": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "float"
                        ]
                    ]
                }
            },
            "LeakyReLU_55": {
                "alpha": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "float"
                        ]
                    ]
                }
            },
            "LeakyReLU_57": {
                "alpha": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "float"
                        ]
                    ]
                }
            },
            "LeakyReLU_60": {
                "alpha": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "float"
                        ]
                    ]
                }
            },
            "LeakyReLU_61": {
                "alpha": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "float"
                        ]
                    ]
                }
            },
            "LeakyReLU_68": {
                "alpha": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "float"
                        ]
                    ]
                }
            },
            "LeakyReLU_69": {
                "alpha": {
                    "value": "alpha",
                    "type": "variable",
                    "possible_values": [
                        [
                            "0.2",
                            "float"
                        ]
                    ]
                }
            },
            "Lambda_155": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Huber_212": {
                "reduction": {
                    "value": "none",
                    "type": "str",
                    "possible_values": []
                }
            },
            "mean_absolute_error_216": {
                "y_true": {
                    "value": "reconstruction_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(tf.keras.losses.mean_squared_error(state, reconstrcuted_signal))",
                            "Call"
                        ],
                        [
                            "tf.reduce_mean(tf.keras.losses.mean_squared_error(state, reconstrcuted_signal))",
                            "Call"
                        ],
                        [
                            "tf.reduce_mean(tf.keras.losses.mean_squared_error(state, reconstrcuted_signal))",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "x_downstream_loss_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dense_critic_1(x_downstream_loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "reduce_mean_221": {
                "variable": {
                    "value": "prediction_downstream_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.mean_squared_error(RR_loss, x_downstream_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_228": {
                "variable": {
                    "value": "prediction_downstream_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.mean_absolute_error(total_tasks_loss, x_downstream_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Lambda_361": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "mean_squared_error_408": {
                "y_true": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "reconstrcuted_signal",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_158": {
                "padding": {
                    "value": "(0, 32)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_160": {
                "padding": {
                    "value": "(63, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "mean_squared_error_219": {
                "y_true": {
                    "value": "app_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "cce(task_1_label, app_result)",
                            "Call"
                        ],
                        [
                            "cce(annotation, app_result)",
                            "Call"
                        ],
                        [
                            "cce(annotation, app_result)",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "x_downstream_loss_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dense_critic_1(x_downstream_loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_squared_error_222": {
                "y_true": {
                    "value": "RR_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "tf.reduce_mean(tf.keras.losses.Huber(reduction='none')(task_2_label, RR_loss))",
                            "Call"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "x_downstream_loss_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dense_critic_1(x_downstream_loss)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_absolute_error_229": {
                "y_true": {
                    "value": "total_tasks_loss",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.loss_weigts['app_loss_weight'] * app_loss + self.loss_weigts['mse_loss_weight'] * reconstruction_loss + self.loss_weigts['RR_loss_weight'] * RR_loss",
                            "BinOp"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "x_downstream_loss_pred",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.dense_critic_1(x_downstream_loss)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/Models/network_compression_AVGloss_prediction_Embeddings.py": {
        "tensorflow": {
            "CategoricalAccuracy_10": {
                "variable": {
                    "value": "acc_metric_first",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                }
            },
            "CategoricalAccuracy_11": {
                "variable": {
                    "value": "acc_metric_second",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                }
            },
            "CategoricalAccuracy_12": {
                "variable": {
                    "value": "acc_metric",
                    "type": "variable",
                    "possible_values": []
                },
                "name": {
                    "value": "categorical_accuracy",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_304": {
                "variable": {
                    "value": "opt",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "0.001",
                    "type": "float",
                    "possible_values": []
                },
                "decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Conv1D_27": {
                "variable": {
                    "value": "self.conv_embeddings_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_28": {
                "variable": {
                    "value": "self.conv_embeddings_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_29": {
                "variable": {
                    "value": "self.conv_embeddings_25",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_30": {
                "variable": {
                    "value": "self.conv_embeddings_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_31": {
                "variable": {
                    "value": "self.conv_embeddings_35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_32": {
                "variable": {
                    "value": "self.conv_embeddings_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_33": {
                "variable": {
                    "value": "self.conv_embeddings_45",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dropout_34": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "rate": {
                    "value": "0.2",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Dense_38": {
                "variable": {
                    "value": "self.dense_35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.swish",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_39": {
                "variable": {
                    "value": "self.dense_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.swish",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Conv1D_63": {
                "variable": {
                    "value": "self.conv_embeddings_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_64": {
                "variable": {
                    "value": "self.conv_embeddings_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_65": {
                "variable": {
                    "value": "self.conv_embeddings_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_66": {
                "variable": {
                    "value": "self.conv_embeddings_35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_67": {
                "variable": {
                    "value": "self.conv_embeddings_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Dense_69": {
                "variable": {
                    "value": "self.dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "4",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.swish",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_98": {
                "variable": {
                    "value": "self.dense_critic_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_156": {
                "variable": {
                    "value": "self.dense_critic_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Dense_158": {
                "variable": {
                    "value": "self.dense_critic_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "tf.keras.activations.relu",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "CategoricalCrossentropy_258": {
                "variable": {
                    "value": "cce",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_261": {
                "variable": {
                    "value": "reconstruction_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.mean_squared_error(state, reconstrcuted_signal)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_264": {
                "variable": {
                    "value": "prediction_downstream_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "h(app_loss, x_downstream_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_266": {
                "variable": {
                    "value": "prediction_recons_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "h(reconstruction_loss, x_reconstructed_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Lambda_16": {
                "function": {
                    "value": "lambda y: y[:, :5000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_19": {
                "function": {
                    "value": "lambda x: x[:, 10000 - 8960:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_21": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "CategoricalCrossentropy_218": {
                "variable": {
                    "value": "cce",
                    "type": "variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "reduce_mean_221": {
                "variable": {
                    "value": "reconstruction_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.keras.losses.mean_squared_error(state, reconstrcuted_signal)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_224": {
                "variable": {
                    "value": "prediction_downstream_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "h(app_loss, x_downstream_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_226": {
                "variable": {
                    "value": "prediction_recons_loss",
                    "type": "variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "h(reconstruction_loss, x_reconstructed_loss_pred)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Lambda_18": {
                "function": {
                    "value": "lambda y: y[:, 8960 - 5000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Flatten_49": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Flatten_77": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Concatenate_135": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_136": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_137": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_185": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_186": {
                "function": {
                    "value": "lambda y: y[:, 8000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_187": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_189": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_192": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "GradientTape_213": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "mean_squared_error_261": {
                "y_true": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "reconstrcuted_signal",
                    "type": "variable",
                    "possible_values": []
                }
            },
            "Lambda_113": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_174": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "mean_squared_error_221": {
                "y_true": {
                    "value": "state",
                    "type": "variable",
                    "possible_values": [
                        [
                            "data[0]",
                            "Subscript"
                        ],
                        [
                            "data[0]",
                            "Subscript"
                        ]
                    ]
                },
                "y_pred": {
                    "value": "reconstrcuted_signal",
                    "type": "variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/Models/network_compression_IoT.py": {
        "tensorflow": {
            "Input_274": {
                "variable": {
                    "value": "inputs_combined",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "encoded_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(63 + 32, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "encoder_input_combined",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_301": {
                "variable": {
                    "value": "Decoder_16_32_skip",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs_combined",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=encoded_shape, name='encoder_input_combined')",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "[decoded_shared_32 + decoded_shared_64]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "decoder",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_312": {
                "variable": {
                    "value": "current_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(8960, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "encoder_input_combined_highCG_current",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_325": {
                "variable": {
                    "value": "model_u_unet",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "current_input",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, name='encoder_input_combined_highCG_current')",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "[recons_32CG, recons_64CG, recons_128CG]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "U-NET_32_64_128_iot",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_341": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(8960, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "encoder_input_combined",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_350": {
                "variable": {
                    "value": "model_u_unet",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, name='encoder_input_combined')",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "[recons_32CG, recons_64CG]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "U-NET_32_64_iot",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_424": {
                "variable": {
                    "value": "compression_application_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(8960, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "compression_application_input",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_28": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_29": {
                "variable": {
                    "value": "self.conv12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_30": {
                "variable": {
                    "value": "self.conv15",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_32": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_33": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1D_34": {
                "variable": {
                    "value": "self.conv22",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_35": {
                "variable": {
                    "value": "self.conv25",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_37": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "64_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_38": {
                "variable": {
                    "value": "self.conv32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "16_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_39": {
                "variable": {
                    "value": "self.conv35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "16_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_40": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1D_42": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "64_11",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_45": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "128_13",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_46": {
                "variable": {
                    "value": "self.conv55",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "128_13",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_48": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_50": {
                "variable": {
                    "value": "self.conv9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_51": {
                "variable": {
                    "value": "self.conv95",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_52": {
                "variable": {
                    "value": "self.conv100",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output32CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_55": {
                "variable": {
                    "value": "self.conv1100",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output64CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_57": {
                "variable": {
                    "value": "self.conv1300",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "out_64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_60": {
                "variable": {
                    "value": "self.conv14500",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output128CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_62": {
                "variable": {
                    "value": "self.conv14501",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output128CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_64": {
                "variable": {
                    "value": "self.conv1500",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "out_128",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_107": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_108": {
                "variable": {
                    "value": "self.conv12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_109": {
                "variable": {
                    "value": "self.conv15",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_111": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_112": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1D_113": {
                "variable": {
                    "value": "self.conv22",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_114": {
                "variable": {
                    "value": "self.conv25",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_116": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "64_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_117": {
                "variable": {
                    "value": "self.conv32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "16_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_118": {
                "variable": {
                    "value": "self.conv35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "16_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_119": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1D_121": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "64_11",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_124": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "128_13",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_125": {
                "variable": {
                    "value": "self.conv55",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "128_13",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_127": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_129": {
                "variable": {
                    "value": "self.conv9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_130": {
                "variable": {
                    "value": "self.conv95",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_131": {
                "variable": {
                    "value": "self.conv10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output32CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_134": {
                "variable": {
                    "value": "self.conv11",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output64CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_136": {
                "variable": {
                    "value": "self.conv13",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "out_64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_177": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_178": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_180": {
                "variable": {
                    "value": "self.upsam2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_181": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_182": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_183": {
                "variable": {
                    "value": "self.upsam3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_184": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_187": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_188": {
                "variable": {
                    "value": "self.conv9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_189": {
                "variable": {
                    "value": "self.flatten",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_191": {
                "variable": {
                    "value": "self.Dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "2000",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "outputs_decoder",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_225": {
                "variable": {
                    "value": "self.prepare_to_shared_32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layers": {
                    "value": "[Conv1D(filters=8, kernel_size=3, activation='swish', padding='same'), Conv1D(filters=16, kernel_size=3, activation='swish', padding='same'), UpSampling1D(size=2), Conv1D(filters=16, kernel_size=3, activation='swish', padding='same'), Conv1D(filters=32, kernel_size=3, activation='swish', padding='valid')]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "Sequential_234": {
                "variable": {
                    "value": "self.prepare_to_shared_64",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layers": {
                    "value": "[Conv1D(filters=16, kernel_size=7, activation='swish', padding='same'), Conv1D(filters=32, kernel_size=3, activation='swish', padding='same'), UpSampling1D(size=2), Conv1D(filters=32, kernel_size=3, activation='swish', padding='valid'), UpSampling1D(size=2)]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "prepared_64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Sequential_243": {
                "variable": {
                    "value": "self.prepare_to_shared_128",
                    "type": "Attribute",
                    "possible_values": []
                },
                "layers": {
                    "value": "[Conv1D(filters=16, kernel_size=7, activation='swish', padding='same'), Conv1D(filters=32, kernel_size=3, activation='swish', padding='same'), UpSampling1D(size=2), Conv1D(filters=16, kernel_size=7, activation='swish', padding='same'), Conv1D(filters=32, kernel_size=3, activation='swish', padding='same'), UpSampling1D(size=2), Conv1D(filters=32, kernel_size=3, activation='swish', padding='valid'), UpSampling1D(size=2)]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "prepared_128",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_443": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "params_config['learning_rate']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "clipnorm": {
                    "value": "params_config.get('clipnorm', 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Lambda_276": {
                "function": {
                    "value": "lambda y: y[:, 32:63 + 32]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_277": {
                "function": {
                    "value": "lambda y: y[:, 0:32]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Conv1D_279": {
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_280": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_282": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_283": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_285": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_288": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_289": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_290": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_291": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_292": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Reshape_211": {
                "target_shape": {
                    "value": "(2000, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_345": {
                "padding": {
                    "value": "(0, 32)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_346": {
                "padding": {
                    "value": "(63, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Concatenate_372": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_373": {
                "function": {
                    "value": "lambda y: y[:, 8000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_375": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_403": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_404": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_405": {
                "function": {
                    "value": "lambda y: y[:, 8000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_407": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons_low",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_408": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons_high",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_226": {
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_227": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_228": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_229": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_230": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_235": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_236": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_237": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_238": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_239": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_244": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_245": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_246": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_247": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_248": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_249": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_250": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_251": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_368": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_398": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            }
        }
    },
    "src/Models/network_compression_IoT_RR.py": {
        "tensorflow": {
            "Input_132": {
                "variable": {
                    "value": "inputs_combined",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "encoded_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(63 + 32, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "encoder_input_combined",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_156": {
                "variable": {
                    "value": "Decoder_16_32_skip",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs_combined",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=encoded_shape, name='encoder_input_combined')",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "[decoded_shared_32 + decoded_shared_64]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "decoder",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_167": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(8960, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "encoder_input_combined",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_176": {
                "variable": {
                    "value": "model_u_unet",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, name='encoder_input_combined')",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "[recons_32CG, recons_64CG]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "U-NET_32_64_iot",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_255": {
                "variable": {
                    "value": "compression_application_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(8960, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "compression_application_input",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_264": {
                "variable": {
                    "value": "inputs_signal",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(5000, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "input-RR",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_17": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_18": {
                "variable": {
                    "value": "self.conv12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_19": {
                "variable": {
                    "value": "self.conv15",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_21": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_22": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1D_23": {
                "variable": {
                    "value": "self.conv22",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_24": {
                "variable": {
                    "value": "self.conv25",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_26": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "64_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_27": {
                "variable": {
                    "value": "self.conv32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "16_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_28": {
                "variable": {
                    "value": "self.conv35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "16_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_29": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1D_31": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "64_11",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_34": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "128_13",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_35": {
                "variable": {
                    "value": "self.conv55",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "128_13",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_37": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_39": {
                "variable": {
                    "value": "self.conv9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_40": {
                "variable": {
                    "value": "self.conv95",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_41": {
                "variable": {
                    "value": "self.conv10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output32CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_43": {
                "variable": {
                    "value": "self.conv11",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output64CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_44": {
                "variable": {
                    "value": "self.conv13",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "out_64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_88": {
                "variable": {
                    "value": "self.upsam1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_89": {
                "variable": {
                    "value": "self.zeroPadding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv1D_90": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_91": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_93": {
                "variable": {
                    "value": "self.upsam2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_94": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_95": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_96": {
                "variable": {
                    "value": "self.upsam3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_97": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_100": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_101": {
                "variable": {
                    "value": "self.conv9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_102": {
                "variable": {
                    "value": "self.flatten",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_104": {
                "variable": {
                    "value": "self.Dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "2000",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "outputs_decoder",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_276": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "params_config['learning_rate']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "clipnorm": {
                    "value": "params_config.get('clipnorm', 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Lambda_134": {
                "function": {
                    "value": "lambda y: y[:, 32:63 + 32]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_135": {
                "function": {
                    "value": "lambda y: y[:, 0:32]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Conv1D_137": {
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_138": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_139": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_140": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_141": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_143": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_144": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_145": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_146": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_147": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_206": {
                "function": {
                    "value": "lambda y: y[:, :5000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_209": {
                "function": {
                    "value": "lambda x: x[:, 10000 - 8960:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_211": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Reshape_125": {
                "target_shape": {
                    "value": "(2000, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_171": {
                "padding": {
                    "value": "(0, 32)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_172": {
                "padding": {
                    "value": "(63, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Concatenate_197": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_198": {
                "function": {
                    "value": "lambda y: y[:, 8000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_200": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Lambda_208": {
                "function": {
                    "value": "lambda y: y[:, 8960 - 5000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_236": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_237": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_238": {
                "function": {
                    "value": "lambda y: y[:, 8000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_240": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons_low",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_241": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons_high",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Lambda_193": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_231": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            }
        }
    },
    "src/Models/network_compression_IoT_RR_NG.py": {
        "tensorflow": {
            "Input_135": {
                "variable": {
                    "value": "inputs_combined",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "encoded_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(63 + 32, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "encoder_input_combined",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_162": {
                "variable": {
                    "value": "Decoder_16_32_skip",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs_combined",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=encoded_shape, name='encoder_input_combined')",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "[decoded_shared_32 + decoded_shared_64]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "decoder",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_173": {
                "variable": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(8960, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "encoder_input_combined",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Model_182": {
                "variable": {
                    "value": "model_u_unet",
                    "type": "variable",
                    "possible_values": []
                },
                "*args": {
                    "value": "inputs",
                    "type": "variable",
                    "possible_values": [
                        [
                            "Input(shape=input_shape, name='encoder_input_combined')",
                            "Call"
                        ]
                    ]
                },
                "**kwargs": {
                    "value": "[recons_32CG, recons_64CG]",
                    "type": "List",
                    "possible_values": []
                },
                "name": {
                    "value": "U-NET_32_64_iot",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_269": {
                "variable": {
                    "value": "compression_application_input",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "input_shape",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(2000, 1)",
                            "Tuple"
                        ],
                        [
                            "(8960, 1)",
                            "Tuple"
                        ]
                    ]
                },
                "name": {
                    "value": "compression_application_input",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Input_280": {
                "variable": {
                    "value": "inputs_signal",
                    "type": "variable",
                    "possible_values": []
                },
                "shape": {
                    "value": "(5000, 1)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "name": {
                    "value": "input-RR",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_18": {
                "variable": {
                    "value": "self.conv1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_19": {
                "variable": {
                    "value": "self.conv12",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_20": {
                "variable": {
                    "value": "self.conv15",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_22": {
                "variable": {
                    "value": "self.conv2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_23": {
                "variable": {
                    "value": "self.bn1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1D_24": {
                "variable": {
                    "value": "self.conv22",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_25": {
                "variable": {
                    "value": "self.conv25",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_27": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "64_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_28": {
                "variable": {
                    "value": "self.conv32",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "16_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_29": {
                "variable": {
                    "value": "self.conv35",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "16_3",
                    "type": "str",
                    "possible_values": []
                }
            },
            "BatchNormalization_30": {
                "variable": {
                    "value": "self.bn2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv1D_32": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "11",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "64_11",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_35": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "128_13",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_36": {
                "variable": {
                    "value": "self.conv55",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "128_13",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_38": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_40": {
                "variable": {
                    "value": "self.conv9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_41": {
                "variable": {
                    "value": "self.conv95",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_42": {
                "variable": {
                    "value": "self.conv10",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output32CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_45": {
                "variable": {
                    "value": "self.conv11",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "strides": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "AE_encoder_output64CG_compressed",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_47": {
                "variable": {
                    "value": "self.conv13",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                },
                "name": {
                    "value": "out_64",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_91": {
                "variable": {
                    "value": "self.upsam1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_92": {
                "variable": {
                    "value": "self.zeroPadding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "padding": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv1D_93": {
                "variable": {
                    "value": "self.conv3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "64",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_94": {
                "variable": {
                    "value": "self.conv4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "128",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_96": {
                "variable": {
                    "value": "self.upsam2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_97": {
                "variable": {
                    "value": "self.conv5",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_98": {
                "variable": {
                    "value": "self.conv6",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "5",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_99": {
                "variable": {
                    "value": "self.upsam3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_100": {
                "variable": {
                    "value": "self.conv7",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_103": {
                "variable": {
                    "value": "self.conv8",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_104": {
                "variable": {
                    "value": "self.conv9",
                    "type": "Attribute",
                    "possible_values": []
                },
                "filters": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Flatten_105": {
                "variable": {
                    "value": "self.flatten",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Dense_107": {
                "variable": {
                    "value": "self.Dense",
                    "type": "Attribute",
                    "possible_values": []
                },
                "units": {
                    "value": "2000",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "outputs_decoder",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Adam_296": {
                "variable": {
                    "value": "optimizer",
                    "type": "variable",
                    "possible_values": []
                },
                "lr": {
                    "value": "params_config['learning_rate']",
                    "type": "Subscript",
                    "possible_values": []
                },
                "clipnorm": {
                    "value": "params_config.get('clipnorm', 1)",
                    "type": "Call",
                    "possible_values": []
                },
                "decay": {
                    "value": "1e-05",
                    "type": "float",
                    "possible_values": []
                }
            },
            "Lambda_137": {
                "function": {
                    "value": "lambda y: y[:, 32:63 + 32]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_138": {
                "function": {
                    "value": "lambda y: y[:, 0:32]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Conv1D_140": {
                "filters": {
                    "value": "8",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_141": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_143": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_144": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_146": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_149": {
                "filters": {
                    "value": "16",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "7",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Conv1D_150": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "same",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_151": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Conv1D_152": {
                "filters": {
                    "value": "32",
                    "type": "int",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "int",
                    "possible_values": []
                },
                "activation": {
                    "value": "swish",
                    "type": "str",
                    "possible_values": []
                },
                "padding": {
                    "value": "valid",
                    "type": "str",
                    "possible_values": []
                }
            },
            "UpSampling1D_153": {
                "size": {
                    "value": "2",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_214": {
                "function": {
                    "value": "lambda y: y[:, :5000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_217": {
                "function": {
                    "value": "lambda x: x[:, 10000 - 8960:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_219": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Reshape_128": {
                "target_shape": {
                    "value": "(2000, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_177": {
                "padding": {
                    "value": "(0, 32)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ZeroPadding1D_178": {
                "padding": {
                    "value": "(63, 0)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Concatenate_204": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_205": {
                "function": {
                    "value": "lambda y: y[:, 8000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_207": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Lambda_216": {
                "function": {
                    "value": "lambda y: y[:, 8960 - 5000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_246": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Concatenate_247": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "Lambda_248": {
                "function": {
                    "value": "lambda y: y[:, 8000:]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Concatenate_250": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons_low",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Concatenate_251": {
                "axis": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                },
                "name": {
                    "value": "out_recons_high",
                    "type": "str",
                    "possible_values": []
                }
            },
            "Lambda_200": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Lambda_241": {
                "function": {
                    "value": "lambda y: y[:, i * 2000:(i + 1) * 2000]",
                    "type": "Lambda",
                    "possible_values": []
                }
            }
        }
    },
    "src/DataLoader/MIT_BIH_Loader.py": {
        "torch": {
            "from_numpy_48": {
                "variable": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(X)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_52": {
                "variable": {
                    "value": "y",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.array(y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "min_50": {
                "input": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(np.array(X)).float()",
                            "Call"
                        ],
                        [
                            "(X - torch.min(X)) / (torch.max(X) - torch.min(X)) * (self.norm_scale[1] - self.norm_scale[0]) + self.norm_scale[0]",
                            "BinOp"
                        ]
                    ]
                }
            },
            "max_50": {
                "input": {
                    "value": "X",
                    "type": "variable",
                    "possible_values": [
                        [
                            "torch.from_numpy(np.array(X)).float()",
                            "Call"
                        ],
                        [
                            "(X - torch.min(X)) / (torch.max(X) - torch.min(X)) * (self.norm_scale[1] - self.norm_scale[0]) + self.norm_scale[0]",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "src/MISC/extra_utils.py": {
        "torch": {
            "nonzero_38": {
                "variable": {
                    "value": "idxs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.std(local_batch, dim=1) < threshold",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "sqrt_33": {
                "input": {
                    "value": "torch.var(local_batch, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "std_38": {
                "input": {
                    "value": "local_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "local_batch.view(-1, dimy)",
                            "Call"
                        ],
                        [
                            "(local_batch - torch.mean(local_batch, dim=1)[:, None]) / torch.sqrt(torch.var(local_batch, dim=1))[:, None]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_33": {
                "input": {
                    "value": "local_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "local_batch.view(-1, dimy)",
                            "Call"
                        ],
                        [
                            "(local_batch - torch.mean(local_batch, dim=1)[:, None]) / torch.sqrt(torch.var(local_batch, dim=1))[:, None]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "var_33": {
                "input": {
                    "value": "local_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "local_batch.view(-1, dimy)",
                            "Call"
                        ],
                        [
                            "(local_batch - torch.mean(local_batch, dim=1)[:, None]) / torch.sqrt(torch.var(local_batch, dim=1))[:, None]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            }
        }
    },
    "src/MISC/stats_utils.py": {
        "torch": {
            "nonzero_81": {
                "variable": {
                    "value": "idxs",
                    "type": "variable",
                    "possible_values": []
                },
                "input": {
                    "value": "torch.std(local_batch, dim=1) < threshold",
                    "type": "Compare",
                    "possible_values": []
                }
            },
            "mean_9": {
                "input": {
                    "value": "100 * torch.sqrt(torch.sum((original - reconstructed) ** 2, dim=1) / torch.sum(original ** 2, dim=1))",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_9": {
                "input": {
                    "value": "torch.sum((original - reconstructed) ** 2, dim=1) / torch.sum(original ** 2, dim=1)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_58": {
                "input": {
                    "value": "torch.var(local_batch, dim=1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "std_81": {
                "input": {
                    "value": "local_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(local_batch - torch.mean(local_batch, dim=1)[:, None]) / torch.sqrt(torch.var(local_batch, dim=1))[:, None]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "mean_37": {
                "input": {
                    "value": "torch.abs((reconstructed - original) / (original + torch.rand(original.shape[1]) * 0.001))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_41": {
                "input": {
                    "value": "torch.abs((reconstructed - original) / (original + torch.rand(original.shape[1]) * 0.001))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "min_45": {
                "input": {
                    "value": "torch.abs((reconstructed - original) / (original + torch.rand(original.shape[1]) * 0.001))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "mean_58": {
                "input": {
                    "value": "local_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(local_batch - torch.mean(local_batch, dim=1)[:, None]) / torch.sqrt(torch.var(local_batch, dim=1))[:, None]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "var_58": {
                "input": {
                    "value": "local_batch",
                    "type": "variable",
                    "possible_values": [
                        [
                            "(local_batch - torch.mean(local_batch, dim=1)[:, None]) / torch.sqrt(torch.var(local_batch, dim=1))[:, None]",
                            "BinOp"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "sum_9": {
                "input": {
                    "value": "original ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "abs_37": {
                "input": {
                    "value": "(reconstructed - original) / (original + torch.rand(original.shape[1]) * 0.001)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_41": {
                "input": {
                    "value": "(reconstructed - original) / (original + torch.rand(original.shape[1]) * 0.001)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "abs_45": {
                "input": {
                    "value": "(reconstructed - original) / (original + torch.rand(original.shape[1]) * 0.001)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "rand_37": {
                "*size": {
                    "value": "original.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "rand_41": {
                "*size": {
                    "value": "original.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "rand_45": {
                "*size": {
                    "value": "original.shape[1]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}