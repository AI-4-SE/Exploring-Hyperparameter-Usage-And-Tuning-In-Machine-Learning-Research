{
    "Baseline/Sub-word-GRU/Code/char-rnn.py": {
        "sklearn": {
            "train_test_split_168": {
                "variable": {
                    "value": "(X_train, X_valid, y_train, y_valid)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X_train",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "test_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ],
                        [
                            "args[10]",
                            "Subscript"
                        ]
                    ]
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_289": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X_train",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "Baseline/Sub-word-GRU/Code/char_rnn_test.py": {
        "sklearn": {}
    },
    "Baseline/Sub-word-GRU/Code/char_rnn_train.py": {
        "sklearn": {
            "train_test_split_204": {
                "variable": {
                    "value": "(X_train, X_valid, y_train, y_valid)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X_train",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "test_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ],
                        [
                            "args[10]",
                            "Subscript"
                        ]
                    ]
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_325": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X_train",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "Baseline/Sub-word-GRU/Code/visualize.py": {
        "sklearn": {}
    },
    "Baseline/Sub-word-GRU/Demo/visualize_predict_input.py": {
        "sklearn": {}
    },
    "Baseline/Sub-word-LSTM/Code/char-rnn.py": {
        "sklearn": {
            "train_test_split_168": {
                "variable": {
                    "value": "(X_train, X_valid, y_train, y_valid)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X_train",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "test_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ],
                        [
                            "args[10]",
                            "Subscript"
                        ]
                    ]
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_289": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X_train",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "Baseline/Sub-word-LSTM/Code/char_rnn_test.py": {
        "sklearn": {}
    },
    "Baseline/Sub-word-LSTM/Code/char_rnn_train.py": {
        "sklearn": {
            "train_test_split_205": {
                "variable": {
                    "value": "(X_train, X_valid, y_train, y_valid)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X_train",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "test_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.2",
                            "Constant"
                        ],
                        [
                            "args[10]",
                            "Subscript"
                        ]
                    ]
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "train_test_split_364": {
                "variable": {
                    "value": "(X_train, X_test, y_train, y_test)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "*arrays_0": {
                    "value": "X_train",
                    "type": null,
                    "possible_values": []
                },
                "*arrays_1": {
                    "value": "y_train",
                    "type": null,
                    "possible_values": []
                },
                "test_size": {
                    "value": "0.2",
                    "type": "Constant",
                    "possible_values": []
                },
                "random_state": {
                    "value": "42",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "Baseline/Sub-word-LSTM/Code/visualize.py": {
        "sklearn": {}
    },
    "Baseline/Sub-word-LSTM/Demo/visualize_predict_input.py": {
        "sklearn": {}
    },
    "src/main.py": {
        "sklearn": {
            "confusion_matrix_191": {
                "y_true": {
                    "value": "y.cpu().numpy()",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "max_preds.cpu().numpy()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "f1_score_190": {
                "y_true": {
                    "value": "y.cpu().numpy()",
                    "type": "Call",
                    "possible_values": []
                },
                "y_pred": {
                    "value": "predictions.cpu().numpy()",
                    "type": "Call",
                    "possible_values": []
                },
                "average": {
                    "value": "macro",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        },
        "torch": {
            "device_100": {
                "variable": {
                    "value": "device",
                    "type": "Variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_155": {
                "variable": {
                    "value": "criterion",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "NLLLoss_156": {
                "variable": {
                    "value": "nll_loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LogSoftmax_157": {
                "variable": {
                    "value": "log_softmax",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "manual_seed_28": {
                "seed": {
                    "value": "SEED",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1234",
                            "Constant"
                        ]
                    ]
                }
            },
            "zeros_229": {
                "variable": {
                    "value": "confusion_mat",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_230": {
                "variable": {
                    "value": "confusion_mat_temp",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_301": {
                "variable": {
                    "value": "confusion_mat",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_302": {
                "variable": {
                    "value": "confusion_mat_temp",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "(3, 3)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Adam_152": {
                "params": {
                    "value": "models[1].parameters()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "is_available_100": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_172": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_234": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_291": {
                "f": {
                    "value": "path",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "model_save_names[i]",
                            "Subscript"
                        ],
                        [
                            "model_save_names[i]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "no_grad_304": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_280": {
                "obj": {
                    "value": "models[i].state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "path",
                    "type": "Subscript",
                    "possible_values": [
                        [
                            "model_save_names[i]",
                            "Subscript"
                        ],
                        [
                            "model_save_names[i]",
                            "Subscript"
                        ]
                    ]
                }
            },
            "softmax_331": {
                "input": {
                    "value": "predictions1",
                    "type": "Call",
                    "possible_values": [
                        [
                            "models[1](batch.text, batch_size=len(batch)).squeeze(1)",
                            "Call"
                        ],
                        [
                            "models[1](batch.text, batch_size=len(batch)).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_311": {
                "input": {
                    "value": "predictions1",
                    "type": "Call",
                    "possible_values": [
                        [
                            "models[1](batch.text, batch_size=len(batch)).squeeze(1)",
                            "Call"
                        ],
                        [
                            "models[1](batch.text, batch_size=len(batch)).squeeze(1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/models/bert_attention_model.py": {
        "torch": {
            "LSTM_31": {
                "variable": {
                    "value": "self.lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "embedding_length",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_32": {
                "variable": {
                    "value": "self.label",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_size",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_size",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "bmm_61": {
                "variable": {
                    "value": "attn_weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "lstm_output",
                    "type": "Variable",
                    "possible_values": []
                },
                "mat2": {
                    "value": "hidden.unsqueeze(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_61": {
                "variable": {
                    "value": "attn_weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_62": {
                "variable": {
                    "value": "soft_attn_weights",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "attn_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.bmm(lstm_output, hidden.unsqueeze(2)).squeeze(2)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "bmm_63": {
                "variable": {
                    "value": "new_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "lstm_output.transpose(1, 2)",
                    "type": "Call",
                    "possible_values": []
                },
                "mat2": {
                    "value": "soft_attn_weights.unsqueeze(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_63": {
                "variable": {
                    "value": "new_hidden_state",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_82": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "zeros_86": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_87": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "self.batch_size",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_89": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_90": {
                "*size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "self.hidden_size",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "src/models/bert_cnn_model.py": {
        "torch": {
            "Conv2d_17": {
                "variable": {
                    "value": "self.conv_0",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_filters",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(filter_sizes[0], embedding_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_21": {
                "variable": {
                    "value": "self.conv_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_filters",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(filter_sizes[1], embedding_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Conv2d_25": {
                "variable": {
                    "value": "self.conv_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_filters",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(filter_sizes[2], embedding_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Linear_29": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "len(filter_sizes) * n_filters",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_31": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "relu_46": {
                "variable": {
                    "value": "conved_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv_0(embedded).squeeze(3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_47": {
                "variable": {
                    "value": "conved_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv_1(embedded).squeeze(3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "relu_48": {
                "variable": {
                    "value": "conved_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.conv_2(embedded).squeeze(3)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "max_pool1d_52": {
                "variable": {
                    "value": "pooled_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "conved_0",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.conv_0(embedded).squeeze(3))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "conved_0.shape[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "squeeze_52": {
                "variable": {
                    "value": "pooled_0",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool1d_53": {
                "variable": {
                    "value": "pooled_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "conved_1",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.conv_1(embedded).squeeze(3))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "conved_1.shape[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "squeeze_53": {
                "variable": {
                    "value": "pooled_1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool1d_54": {
                "variable": {
                    "value": "pooled_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "conved_2",
                    "type": "Name",
                    "possible_values": [
                        [
                            "F.relu(self.conv_2(embedded).squeeze(3))",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "conved_2.shape[2]",
                    "type": "Subscript",
                    "possible_values": []
                }
            },
            "squeeze_54": {
                "variable": {
                    "value": "pooled_2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "no_grad_37": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "cat_58": {
                "tensors": {
                    "value": "(pooled_0, pooled_1, pooled_2)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/models/bert_gru_model.py": {
        "torch": {
            "GRU_18": {
                "variable": {
                    "value": "self.rnn",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "embedding_dim",
                    "type": null,
                    "possible_values": []
                },
                "num_layers": {
                    "value": "n_layers",
                    "type": "Variable",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "bidirectional",
                    "type": "Variable",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "dropout": {
                    "value": "0 if n_layers < 2 else dropout",
                    "type": "IfExp",
                    "possible_values": []
                }
            },
            "Linear_25": {
                "variable": {
                    "value": "self.out",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "hidden_dim * 2 if bidirectional else hidden_dim",
                    "type": "IfExp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "Dropout_27": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    }
}