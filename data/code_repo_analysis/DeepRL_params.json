{
    "deep_rl/agent/BaseAgent.py": {
        "torch": {
            "load_30": {
                "variable": {
                    "value": "state_dict",
                    "type": "variable",
                    "possible_values": []
                },
                "f": {
                    "value": "'%s.model' % filename",
                    "type": "BinOp",
                    "possible_values": []
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "Pipe_119": {
                "variable": {
                    "value": "(self.__pipe, self.__worker_pipe)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "save_25": {
                "obj": {
                    "value": "self.network.state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "'%s.model' % filename",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    },
    "deep_rl/component/envs.py": {
        "torch": {}
    },
    "deep_rl/network/network_utils.py": {
        "torch": {
            "Parameter_39": {
                "variable": {
                    "value": "self.weight_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros((out_features, in_features))",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_40": {
                "variable": {
                    "value": "self.weight_sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros((out_features, in_features))",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_43": {
                "variable": {
                    "value": "self.bias_mu",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(out_features)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "Parameter_44": {
                "variable": {
                    "value": "self.bias_sigma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(out_features)",
                    "type": "Call",
                    "possible_values": []
                },
                "requires_grad": {
                    "value": "True",
                    "type": "bool",
                    "possible_values": []
                }
            },
            "linear_62": {
                "input": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                },
                "weight": {
                    "value": "weight",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.weight_mu + self.weight_sigma.mul(self.weight_epsilon)",
                            "BinOp"
                        ],
                        [
                            "self.weight_mu",
                            "Attribute"
                        ]
                    ]
                },
                "bias": {
                    "value": "bias",
                    "type": "variable",
                    "possible_values": [
                        [
                            "self.bias_mu + self.bias_sigma.mul(self.bias_epsilon)",
                            "BinOp"
                        ],
                        [
                            "self.bias_mu",
                            "Attribute"
                        ]
                    ]
                }
            },
            "zeros_39": {
                "*size": {
                    "value": "(out_features, in_features)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_40": {
                "*size": {
                    "value": "(out_features, in_features)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_41": {
                "*size": {
                    "value": "(out_features, in_features)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "zeros_43": {
                "*size": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_features",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_44": {
                "*size": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_features",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_45": {
                "*size": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_features",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_47": {
                "*size": {
                    "value": "in_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "in_features",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_48": {
                "*size": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_features",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_49": {
                "*size": {
                    "value": "out_features",
                    "type": "variable",
                    "possible_values": [
                        [
                            "out_features",
                            "Method Argument"
                        ]
                    ]
                }
            }
        }
    },
    "deep_rl/utils/config.py": {
        "torch": {
            "device_12": {
                "variable": {
                    "value": "DEVICE",
                    "type": "variable",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            }
        }
    },
    "deep_rl/utils/logger.py": {
        "torch": {
            "SummaryWriter_41": {
                "variable": {
                    "value": "self.writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "log_dir": {
                    "value": "self.log_dir",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "deep_rl/utils/misc.py": {
        "torch": {}
    },
    "deep_rl/utils/normalizer.py": {
        "torch": {}
    },
    "deep_rl/utils/torch_utils.py": {
        "torch": {
            "from_numpy_24": {
                "variable": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "x",
                    "type": "variable",
                    "possible_values": [
                        [
                            "np.asarray(x, dtype=np.float32)",
                            "Call"
                        ],
                        [
                            "torch.from_numpy(x).to(Config.DEVICE)",
                            "Call"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ],
                        [
                            "x",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_75": {
                "variable": {
                    "value": "output",
                    "type": "variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "dims",
                    "type": "variable",
                    "possible_values": [
                        [
                            "input.size()",
                            "Call"
                        ],
                        [
                            "dims + dims[-1:]",
                            "BinOp"
                        ]
                    ]
                },
                "device": {
                    "value": "input.device",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_15": {
                "variable": {
                    "value": "Config.DEVICE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "'cuda:%d' % gpu_id",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "device_17": {
                "variable": {
                    "value": "Config.DEVICE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "str",
                    "possible_values": []
                }
            },
            "arange_29": {
                "start": {
                    "value": "end",
                    "type": "variable",
                    "possible_values": [
                        [
                            "end",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "manual_seed_38": {
                "seed": {
                    "value": "np.random.randint(int(1000000.0))",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "set_num_threads_44": {
                "int": {
                    "value": "1",
                    "type": "int",
                    "possible_values": []
                }
            },
            "where_48": {
                "condition": {
                    "value": "x.abs() < k",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "0.5 * x.pow(2)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "k * (x.abs() - 0.5 * k)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Normal_92": {
                "variable": {
                    "value": "self.dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "loc": {
                    "value": "mean",
                    "type": "variable",
                    "possible_values": [
                        [
                            "mean",
                            "Call"
                        ],
                        [
                            "mean",
                            "Method Argument"
                        ]
                    ]
                },
                "scale": {
                    "value": "std",
                    "type": "variable",
                    "possible_values": [
                        [
                            "std",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "Categorical_109": {
                "variable": {
                    "value": "self.dist",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logits": {
                    "value": "logits",
                    "type": "variable",
                    "possible_values": [
                        [
                            "logits.view(-1, logits.size(-1))",
                            "Call"
                        ],
                        [
                            "logits",
                            "Method Argument"
                        ]
                    ]
                }
            },
            "zeros_134": {
                "*size": {
                    "value": "param.data.size()",
                    "type": "Call",
                    "possible_values": []
                },
                "device": {
                    "value": "Config.DEVICE",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "examples.py": {
        "torch": {}
    }
}