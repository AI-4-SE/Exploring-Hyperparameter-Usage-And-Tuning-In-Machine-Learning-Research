{
    "data.py": {
        "torch": {}
    },
    "main.py": {
        "torch": {
            "load_112": {
                "variable": {
                    "value": "modelCheckpoint",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "pathModel",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "'m-fake-net-num_classes-2-test_acc-0.633.pth.tar'",
                            "Constant"
                        ],
                        [
                            "None",
                            "Constant"
                        ],
                        [
                            "parentPath + pathModel",
                            "BinOp"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "device_123": {
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "model.py": {
        "torch": {
            "Embedding_50": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.vocab_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_53": {
                "variable": {
                    "value": "self.statement_convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_62": {
                "variable": {
                    "value": "self.subject_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.subject_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.subject_lstm_nlayers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "subject_lstm_bidirectional",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LSTM_77": {
                "variable": {
                    "value": "self.speaker_pos_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.speaker_pos_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.speaker_pos_lstm_nlayers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "speaker_pos_lstm_bidirectional",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LSTM_94": {
                "variable": {
                    "value": "self.context_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.context_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.context_lstm_nlayers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "context_lstm_bidirectional",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LSTM_107": {
                "variable": {
                    "value": "self.justification_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.justification_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.justification_lstm_nlayers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "justification_lstm_bidirectional",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_115": {
                "variable": {
                    "value": "self.dropout_query",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_query",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_116": {
                "variable": {
                    "value": "self.dropout_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_125": {
                "variable": {
                    "value": "self.fc_query",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.query_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_126": {
                "variable": {
                    "value": "self.fc_att",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_127": {
                "variable": {
                    "value": "self.fc_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_128": {
                "variable": {
                    "value": "self.fc_cat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_129": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "len(self.statement_kernel_size) * self.statement_kernel_num + self.query_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_135": {
                "variable": {
                    "value": "statement",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_136": {
                "variable": {
                    "value": "subject",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_137": {
                "variable": {
                    "value": "speaker",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_138": {
                "variable": {
                    "value": "speaker_pos",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_139": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_140": {
                "variable": {
                    "value": "party",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_141": {
                "variable": {
                    "value": "context",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_142": {
                "variable": {
                    "value": "justification",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool1d_151": {
                "variable": {
                    "value": "subject_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "subject_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(subject)",
                            "Call"
                        ],
                        [
                            "F.max_pool1d(subject_, self.subject_hidden_dim).view(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "self.subject_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_pool1d_159": {
                "variable": {
                    "value": "speaker_pos_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "speaker_pos_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(speaker_pos)",
                            "Call"
                        ],
                        [
                            "F.max_pool1d(speaker_pos_, self.speaker_pos_hidden_dim).view(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "self.speaker_pos_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_pool1d_170": {
                "variable": {
                    "value": "context_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "context_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(context)",
                            "Call"
                        ],
                        [
                            "F.max_pool1d(context_, self.context_hidden_dim).view(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "self.context_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_pool1d_175": {
                "variable": {
                    "value": "justification_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "justification_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(justification)",
                            "Call"
                        ],
                        [
                            "F.max_pool1d(justification_, self.justification_hidden_dim).view(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "self.justification_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_178": {
                "variable": {
                    "value": "query",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(subject_, speaker_, speaker_pos_, state_, party_, context_, justification_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "leaky_relu_179": {
                "variable": {
                    "value": "query",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "self.fc_query(query)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "softmax_192": {
                "variable": {
                    "value": "alpha",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "alpha / math.sqrt(self.embed_dim)",
                    "type": "BinOp",
                    "possible_values": []
                },
                "dim": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_196": {
                "variable": {
                    "value": "statement_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "statement_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(statement).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "alpha * statement_",
                            "BinOp"
                        ],
                        [
                            "[F.relu(conv(statement_)).squeeze(3) for conv in self.statement_convs]",
                            "ListComp"
                        ],
                        [
                            "[F.max_pool1d(i, i.size(2)).squeeze(2) for i in statement_]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(statement_, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_199": {
                "variable": {
                    "value": "features",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(statement_, subject_, speaker_, speaker_pos_, state_, party_, context_, justification_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_softmax_202": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.fc(features)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(out, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Parameter_186": {
                "variable": {
                    "value": "conv.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "conv.weight * query_conv",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "relu_194": {
                "input": {
                    "value": "conv(statement_)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_194": {
                "input": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool1d_195": {
                "input": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "i.size(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_195": {
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_55": {
                "in_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.statement_kernel_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(kernel_, self.embed_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "model_baseline.py": {
        "torch": {
            "Embedding_49": {
                "variable": {
                    "value": "self.embedding",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_embeddings": {
                    "value": "self.vocab_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "embedding_dim": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ModuleList_52": {
                "variable": {
                    "value": "self.statement_convs",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "LSTM_61": {
                "variable": {
                    "value": "self.subject_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.subject_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.subject_lstm_nlayers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "subject_lstm_bidirectional",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LSTM_76": {
                "variable": {
                    "value": "self.speaker_pos_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.speaker_pos_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.speaker_pos_lstm_nlayers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "speaker_pos_lstm_bidirectional",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LSTM_93": {
                "variable": {
                    "value": "self.context_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.context_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.context_lstm_nlayers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "context_lstm_bidirectional",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "LSTM_106": {
                "variable": {
                    "value": "self.justification_lstm",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input_size": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "hidden_size": {
                    "value": "self.justification_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "num_layers": {
                    "value": "self.justification_lstm_nlayers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "batch_first": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "bidirectional": {
                    "value": "justification_lstm_bidirectional",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_114": {
                "variable": {
                    "value": "self.dropout_query",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_query",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Dropout_115": {
                "variable": {
                    "value": "self.dropout_features",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_features",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Linear_124": {
                "variable": {
                    "value": "self.fc_query",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.query_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_125": {
                "variable": {
                    "value": "self.fc_att",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_126": {
                "variable": {
                    "value": "self.fc_conv",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_127": {
                "variable": {
                    "value": "self.fc_cat",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.embed_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Linear_128": {
                "variable": {
                    "value": "self.fc",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_features": {
                    "value": "len(self.statement_kernel_size) * self.statement_kernel_num + self.query_dim",
                    "type": "BinOp",
                    "possible_values": []
                },
                "out_features": {
                    "value": "self.num_classes",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "unsqueeze_134": {
                "variable": {
                    "value": "statement",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_135": {
                "variable": {
                    "value": "subject",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_136": {
                "variable": {
                    "value": "speaker",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_137": {
                "variable": {
                    "value": "speaker_pos",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_138": {
                "variable": {
                    "value": "state",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_139": {
                "variable": {
                    "value": "party",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_140": {
                "variable": {
                    "value": "context",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "unsqueeze_141": {
                "variable": {
                    "value": "justification",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool1d_150": {
                "variable": {
                    "value": "subject_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "subject_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(subject)",
                            "Call"
                        ],
                        [
                            "F.max_pool1d(subject_, self.subject_hidden_dim).view(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "self.subject_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_pool1d_158": {
                "variable": {
                    "value": "speaker_pos_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "speaker_pos_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(speaker_pos)",
                            "Call"
                        ],
                        [
                            "F.max_pool1d(speaker_pos_, self.speaker_pos_hidden_dim).view(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "self.speaker_pos_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_pool1d_169": {
                "variable": {
                    "value": "context_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "context_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(context)",
                            "Call"
                        ],
                        [
                            "F.max_pool1d(context_, self.context_hidden_dim).view(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "self.context_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "max_pool1d_174": {
                "variable": {
                    "value": "justification_",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "justification_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(justification)",
                            "Call"
                        ],
                        [
                            "F.max_pool1d(justification_, self.justification_hidden_dim).view(1, -1)",
                            "Call"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "self.justification_hidden_dim",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "cat_181": {
                "variable": {
                    "value": "statement_",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "statement_",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.embedding(statement).unsqueeze(0)",
                            "Call"
                        ],
                        [
                            "[F.relu(conv(statement_)).squeeze(3) for conv in self.statement_convs]",
                            "ListComp"
                        ],
                        [
                            "[F.max_pool1d(i, i.size(2)).squeeze(2) for i in statement_]",
                            "ListComp"
                        ],
                        [
                            "torch.cat(statement_, 1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_184": {
                "variable": {
                    "value": "features",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "(statement_, subject_, speaker_, speaker_pos_, state_, party_, context_, justification_)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_softmax_187": {
                "variable": {
                    "value": "out",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "out",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.fc(features)",
                            "Call"
                        ],
                        [
                            "F.log_softmax(out, dim=-1)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "relu_179": {
                "input": {
                    "value": "conv(statement_)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_179": {
                "input": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "max_pool1d_180": {
                "input": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "i.size(2)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "squeeze_180": {
                "input": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_54": {
                "in_channels": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "self.statement_kernel_num",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "(kernel_, self.embed_dim)",
                    "type": "Tuple",
                    "possible_values": []
                }
            }
        }
    },
    "test.py": {
        "torch": {}
    },
    "train.py": {
        "torch": {
            "Adam_37": {
                "variable": {
                    "value": "optimizer",
                    "type": "Variable",
                    "possible_values": []
                },
                "params": {
                    "value": "model.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "lr",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "device_31": {
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "nll_loss_59": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "prediction",
                    "type": "Call",
                    "possible_values": [
                        [
                            "model(sample)",
                            "Call"
                        ],
                        [
                            "model(sample)",
                            "Call"
                        ],
                        [
                            "int(np.argmax(prediction.cpu().data.numpy()))",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "label",
                    "type": "Name",
                    "possible_values": [
                        [
                            "Variable(torch.LongTensor([sample.label])).to(device)",
                            "Call"
                        ]
                    ]
                }
            },
            "save_76": {
                "obj": {
                    "value": "{'state_dict': model.state_dict(), 'word2num': word2num, 'hyper': hyper}",
                    "type": "Dict",
                    "possible_values": []
                },
                "f": {
                    "value": "'./models/' + modelName",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}