{
    "cde/BaseConditionalDensity.py": {
        "ConditionalDensity_26": {
            "base_class_0": {
                "value": "sklearn.base.BaseEstimator",
                "possible_values": []
            }
        }
    },
    "cde/density_estimator/BaseDensityEstimator.py": {
        "BaseDensityEstimator_9": {},
        "GridSearchCV_68": {
            "variable": {
                "value": "cv_model",
                "possible_values": []
            },
            "estimator": {
                "value": "self",
                "possible_values": []
            },
            "param_grid": {
                "value": "param_grid",
                "possible_values": []
            },
            "n_jobs": {
                "value": "n_jobs",
                "possible_values": []
            },
            "refit": {
                "value": "True",
                "possible_values": []
            },
            "cv": {
                "value": "n_folds",
                "possible_values": []
            },
            "verbose": {
                "value": "verbose",
                "possible_values": []
            }
        }
    },
    "cde/density_estimator/BaseNNEstimator.py": {
        "BaseNNEstimator_16": {},
        "ParameterGrid_70": {
            "param_grid": {
                "value": "param_grid",
                "possible_values": []
            }
        },
        "KFold_71": {
            "n_splits": {
                "value": "n_folds",
                "possible_values": []
            },
            "shuffle": {
                "value": "False",
                "possible_values": []
            },
            "random_state": {
                "value": "random_state",
                "possible_values": []
            }
        }
    },
    "cde/density_estimator/BaseNNMixtureEstimator.py": {
        "BaseNNMixtureEstimator_11": {},
        "GaussianMixture_212": {
            "variable": {
                "value": "gmm",
                "possible_values": []
            },
            "n_components": {
                "value": "self.n_centers",
                "possible_values": []
            },
            "covariance_type": {
                "value": "diag",
                "possible_values": []
            },
            "max_iter": {
                "value": "5",
                "possible_values": []
            },
            "tol": {
                "value": "0.1",
                "possible_values": []
            }
        }
    },
    "cde/density_estimator/KMN.py": {
        "KernelMixtureNetwork_26": {}
    },
    "cde/density_estimator/NKDE.py": {
        "NeighborKernelDensityEstimation_17": {}
    },
    "cde/density_simulation/GMM.py": {
        "GaussianMixture_7": {}
    },
    "cde/density_simulation/toy_densities.py": {},
    "cde/evaluation/eurostoxx_eval/empirical_benchmark.py": {},
    "cde/evaluation/eurostoxx_eval/fit_density.py": {
        "PCA_10": {
            "variable": {
                "value": "pca",
                "possible_values": []
            },
            "n_components": {
                "value": "n_components",
                "possible_values": []
            }
        },
        "PCA_14": {
            "variable": {
                "value": "pca",
                "possible_values": []
            },
            "params": {
                "value": "default",
                "possible_values": []
            }
        }
    },
    "cde/utils/center_point_select.py": {
        "KMeans_76": {
            "variable": {
                "value": "model",
                "possible_values": []
            },
            "n_clusters": {
                "value": "k",
                "possible_values": [
                    "k - n_edge_points"
                ]
            },
            "n_jobs": {
                "value": "n_jobs",
                "possible_values": [
                    "1",
                    "-2"
                ]
            },
            "random_state": {
                "value": "random_state",
                "possible_values": [
                    "np.random.RandomState()"
                ]
            }
        },
        "AgglomerativeClustering_82": {
            "variable": {
                "value": "model",
                "possible_values": []
            },
            "n_clusters": {
                "value": "k",
                "possible_values": [
                    "k - n_edge_points"
                ]
            },
            "linkage": {
                "value": "complete",
                "possible_values": []
            }
        }
    }
}