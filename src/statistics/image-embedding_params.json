{
    "src/cmc_score.py": {
        "torch": {
            "topk_38": {
                "input": {
                    "value": "pairwise_distance_matrix",
                    "possible_values": []
                },
                "k": {
                    "value": "k_threshold",
                    "possible_values": [
                        [
                            "5",
                            "MethodArgument"
                        ],
                        [
                            "5",
                            "MethodArgument"
                        ]
                    ]
                },
                "dim": {
                    "value": "1",
                    "possible_values": []
                },
                "largest": {
                    "value": "False",
                    "possible_values": []
                }
            }
        }
    },
    "src/datasets/evaluation_datasetbase.py": {
        "torch": {}
    },
    "src/datasets/triplet_datasetbase.py": {
        "torch": {}
    },
    "src/euclidean_pairwise_distance.py": {
        "torch": {
            "pow_37": {
                "variable": {
                    "value": "squared_x",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "sum_37": {
                "variable": {
                    "value": "squared_x",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "t_40": {
                "variable": {
                    "value": "yt",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "pow_41": {
                "variable": {
                    "value": "squared_y",
                    "possible_values": []
                },
                "input": {
                    "value": "y",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "exponent": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "sum_41": {
                "variable": {
                    "value": "squared_y",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "t_43": {
                "variable": {
                    "value": "yt",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "possible_values": []
                }
            }
        }
    },
    "src/main_predict_evaluate.py": {
        "torch": {
            "DataLoader_59": {
                "variable": {
                    "value": "dataloader_query",
                    "possible_values": []
                },
                "dataset": {
                    "value": "dataset",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "possible_values": [
                        [
                            "min(len(dataset), 32)",
                            "Call"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "possible_values": []
                }
            },
            "stack_68": {
                "variable": {
                    "value": "embeddings",
                    "possible_values": []
                },
                "tensors": {
                    "value": "embeddings",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(embeddings)",
                            "Call"
                        ]
                    ]
                }
            },
            "stack_69": {
                "variable": {
                    "value": "class_person",
                    "possible_values": []
                },
                "tensors": {
                    "value": "class_person",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.stack(class_person)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/model_resnet.py": {
        "torch": {}
    },
    "src/model_snapshotter.py": {
        "torch": {
            "save_36": {
                "obj": {
                    "value": "model",
                    "possible_values": []
                },
                "f": {
                    "value": "snapshot_path",
                    "possible_values": [
                        [
                            "snapshot_prefix + 'model.pt'",
                            "BinOp"
                        ]
                    ]
                }
            }
        }
    },
    "src/online_tripletloss.py": {
        "torch": {
            "relu_69": {
                "variable": {
                    "value": "losses",
                    "possible_values": []
                },
                "input": {
                    "value": "pos_distance - neg_distance + self.margin",
                    "possible_values": []
                }
            },
            "pow_87": {
                "variable": {
                    "value": "result",
                    "possible_values": []
                },
                "input": {
                    "value": "x - y",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "sum_87": {
                "variable": {
                    "value": "result",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "tensor_106": {
                "variable": {
                    "value": "valid",
                    "possible_values": []
                },
                "data": {
                    "value": "list(all_triplet_combinations)",
                    "possible_values": []
                },
                "device": {
                    "value": "target.device",
                    "possible_values": []
                }
            },
            "topk_73": {
                "input": {
                    "value": "losses",
                    "possible_values": [
                        [
                            "torch.relu(pos_distance - neg_distance + self.margin)",
                            "Call"
                        ],
                        [
                            "torch.topk(losses, k=min(losses.shape[0], self.topk))[0]",
                            "Subscript"
                        ]
                    ]
                },
                "k": {
                    "value": "min(losses.shape[0], self.topk)",
                    "possible_values": []
                }
            }
        }
    },
    "src/predictor.py": {
        "torch": {
            "device_38": {
                "variable": {
                    "value": "self.device",
                    "possible_values": []
                },
                "type": {
                    "value": "cuda if torch.cuda.is_available() else cpu",
                    "possible_values": []
                }
            },
            "load_39": {
                "variable": {
                    "value": "self.model",
                    "possible_values": []
                },
                "f": {
                    "value": "model_file",
                    "possible_values": [
                        [
                            "model_dir_or_filepath",
                            "Name"
                        ],
                        [
                            "self._find_artifact(model_dir_or_filepath)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "self.device",
                    "possible_values": []
                }
            },
            "no_grad_67": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "is_available_38": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            }
        }
    },
    "src/pretrained_model_loader.py": {
        "torch": {
            "save_54": {
                "obj": {
                    "value": "model",
                    "possible_values": [
                        [
                            "model_func(pretrained=True)",
                            "Call"
                        ]
                    ]
                },
                "f": {
                    "value": "model_name_path",
                    "possible_values": [
                        [
                            "PretrainedModelLoader()(args.modelname, args.modelpath)",
                            "Call"
                        ],
                        [
                            "os.path.join(model_dir, 'model.pt')",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/train.py": {
        "torch": {
            "cat_205": {
                "variable": {
                    "value": "predictions",
                    "possible_values": []
                },
                "tensors": {
                    "value": "predictions",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(predictions, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "cat_206": {
                "variable": {
                    "value": "target_items",
                    "possible_values": []
                },
                "tensors": {
                    "value": "target_items",
                    "possible_values": [
                        [
                            "[]",
                            "List"
                        ],
                        [
                            "torch.cat(target_items, dim=0)",
                            "Call"
                        ]
                    ]
                },
                "dim": {
                    "value": "0",
                    "possible_values": []
                }
            },
            "Tensor_208": {
                "variable": {
                    "value": "losses",
                    "possible_values": []
                }
            },
            "no_grad_169": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            },
            "is_available_35": {
                "params": {
                    "value": "default",
                    "possible_values": []
                }
            }
        }
    },
    "src/train_factory.py": {
        "torch": {
            "SGD_69": {
                "variable": {
                    "value": "optimiser",
                    "possible_values": []
                },
                "lr": {
                    "value": "learning_rate",
                    "possible_values": [
                        [
                            "float(self._get_value(self.additional_args, 'learning_rate', '.0001'))",
                            "Call"
                        ]
                    ]
                },
                "params": {
                    "value": "model.parameters()",
                    "possible_values": []
                },
                "momentum": {
                    "value": "momentum",
                    "possible_values": [
                        [
                            "float(self._get_value(self.additional_args, 'momentum', '.9'))",
                            "Call"
                        ]
                    ]
                },
                "weight_decay": {
                    "value": "weight_decay",
                    "possible_values": [
                        [
                            "float(self._get_value(self.additional_args, 'weight_decay', '5e-5'))",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "src/train_pipeline.py": {
        "torch": {
            "DataLoader_34": {
                "variable": {
                    "value": "train_data",
                    "possible_values": []
                },
                "dataset": {
                    "value": "train_dataset",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "self.num_workers",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "possible_values": []
                }
            },
            "DataLoader_35": {
                "variable": {
                    "value": "val_data",
                    "possible_values": []
                },
                "dataset": {
                    "value": "val_dataset",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "self.num_workers",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "self.batch_size",
                    "possible_values": []
                }
            }
        }
    },
    "src/tripletloss.py": {
        "torch": {
            "relu_66": {
                "variable": {
                    "value": "losses",
                    "possible_values": []
                },
                "input": {
                    "value": "pos_distance - neg_distance + self.margin",
                    "possible_values": []
                }
            },
            "pow_84": {
                "variable": {
                    "value": "result",
                    "possible_values": []
                },
                "input": {
                    "value": "x - y",
                    "possible_values": []
                },
                "exponent": {
                    "value": "2",
                    "possible_values": []
                }
            },
            "sum_84": {
                "variable": {
                    "value": "result",
                    "possible_values": []
                },
                "input": {
                    "value": "1",
                    "possible_values": []
                }
            },
            "topk_70": {
                "input": {
                    "value": "losses",
                    "possible_values": [
                        [
                            "torch.relu(pos_distance - neg_distance + self.margin)",
                            "Call"
                        ],
                        [
                            "torch.topk(losses, k=min(losses.shape[0], self.topk))[0]",
                            "Subscript"
                        ]
                    ]
                },
                "k": {
                    "value": "min(losses.shape[0], self.topk)",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_cmcscore.py": {
        "torch": {
            "tensor_11": {
                "variable": {
                    "value": "pairwise_distance",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 11112, 1], [11112, 0, 3], [1, 3, 0]]",
                    "possible_values": []
                }
            },
            "tensor_24": {
                "variable": {
                    "value": "pairwise_distance",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 11112, 1], [11112, 0, 3], [1, 3, 0], [1, 999, 0]]",
                    "possible_values": []
                }
            },
            "tensor_25": {
                "variable": {
                    "value": "target_y_query",
                    "possible_values": []
                },
                "data": {
                    "value": "[2, 1, 2, 1]",
                    "possible_values": []
                }
            },
            "tensor_26": {
                "variable": {
                    "value": "target_x_gallery",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 1, 2]",
                    "possible_values": []
                }
            },
            "tensor_40": {
                "variable": {
                    "value": "pairwise_distance",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 11112, 1], [11112, 0, 3]]",
                    "possible_values": []
                }
            },
            "tensor_41": {
                "variable": {
                    "value": "target_y_query",
                    "possible_values": []
                },
                "data": {
                    "value": "[2, 1]",
                    "possible_values": []
                }
            },
            "tensor_42": {
                "variable": {
                    "value": "target_x_gallery",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 1, 2]",
                    "possible_values": []
                }
            },
            "tensor_16": {
                "data": {
                    "value": "[2, 1, 2]",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_euclideanpairwisedistance.py": {
        "torch": {
            "tensor_16": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 1, 1], [2, 2, 2], [3, 3, 3], [4, 4, 4]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "possible_values": []
                }
            },
            "tensor_18": {
                "variable": {
                    "value": "expected",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0.0, 3.0, 12.0, 27.0], [3.0, 0.0, 3.0, 12.0], [12.0, 3.0, 0.0, 3.0], [27.0, 12, 3, 0.0]]",
                    "possible_values": []
                }
            },
            "tensor_38": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 1, 1]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "possible_values": []
                }
            },
            "tensor_39": {
                "variable": {
                    "value": "y",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 2, 2], [3, 3, 3]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "possible_values": []
                }
            },
            "tensor_41": {
                "variable": {
                    "value": "expected",
                    "possible_values": []
                },
                "data": {
                    "value": "[[3.0, 12.0]]",
                    "possible_values": []
                }
            },
            "tensor_58": {
                "variable": {
                    "value": "x",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 1, 1], [2, 2, 2]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "possible_values": []
                }
            },
            "tensor_59": {
                "variable": {
                    "value": "y",
                    "possible_values": []
                },
                "data": {
                    "value": "[[3, 3, 3]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "possible_values": []
                }
            },
            "tensor_61": {
                "variable": {
                    "value": "expected",
                    "possible_values": []
                },
                "data": {
                    "value": "[[12.0], [3.0]]",
                    "possible_values": []
                }
            },
            "equal_27": {
                "input": {
                    "value": "actual",
                    "possible_values": [
                        [
                            "sut(x)",
                            "Call"
                        ],
                        [
                            "sut(x, y)",
                            "Call"
                        ],
                        [
                            "sut(x, y)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "expected",
                    "possible_values": [
                        [
                            "torch.tensor([[0.0, 3.0, 12.0, 27.0], [3.0, 0.0, 3.0, 12.0], [12.0, 3.0, 0.0, 3.0], [27.0, 12, 3, 0.0]])",
                            "Call"
                        ],
                        [
                            "torch.tensor([[3.0, 12.0]])",
                            "Call"
                        ],
                        [
                            "torch.tensor([[12.0], [3.0]])",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_47": {
                "input": {
                    "value": "actual",
                    "possible_values": [
                        [
                            "sut(x)",
                            "Call"
                        ],
                        [
                            "sut(x, y)",
                            "Call"
                        ],
                        [
                            "sut(x, y)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "expected",
                    "possible_values": [
                        [
                            "torch.tensor([[0.0, 3.0, 12.0, 27.0], [3.0, 0.0, 3.0, 12.0], [12.0, 3.0, 0.0, 3.0], [27.0, 12, 3, 0.0]])",
                            "Call"
                        ],
                        [
                            "torch.tensor([[3.0, 12.0]])",
                            "Call"
                        ],
                        [
                            "torch.tensor([[12.0], [3.0]])",
                            "Call"
                        ]
                    ]
                }
            },
            "equal_67": {
                "input": {
                    "value": "actual",
                    "possible_values": [
                        [
                            "sut(x)",
                            "Call"
                        ],
                        [
                            "sut(x, y)",
                            "Call"
                        ],
                        [
                            "sut(x, y)",
                            "Call"
                        ]
                    ]
                },
                "other": {
                    "value": "expected",
                    "possible_values": [
                        [
                            "torch.tensor([[0.0, 3.0, 12.0, 27.0], [3.0, 0.0, 3.0, 12.0], [12.0, 3.0, 0.0, 3.0], [27.0, 12, 3, 0.0]])",
                            "Call"
                        ],
                        [
                            "torch.tensor([[3.0, 12.0]])",
                            "Call"
                        ],
                        [
                            "torch.tensor([[12.0], [3.0]])",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "tests/test_onlinetripletLoss.py": {
        "torch": {
            "tensor_32": {
                "variable": {
                    "value": "predicted",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1], [0, 0, 1], [1, 1, 2]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_34": {
                "variable": {
                    "value": "target",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 1, 0]",
                    "possible_values": []
                }
            },
            "tensor_52": {
                "variable": {
                    "value": "predicted",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1], [0, 0, 1], [1, 1, 2]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_54": {
                "variable": {
                    "value": "target",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 1, 0]",
                    "possible_values": []
                }
            },
            "tensor_70": {
                "variable": {
                    "value": "input_x",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_71": {
                "variable": {
                    "value": "input_y",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_73": {
                "variable": {
                    "value": "expected",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "possible_values": []
                }
            },
            "tensor_87": {
                "variable": {
                    "value": "input_x",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 8, 7]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_88": {
                "variable": {
                    "value": "input_y",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 3, 4]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_90": {
                "variable": {
                    "value": "expected",
                    "possible_values": []
                },
                "data": {
                    "value": "[35]",
                    "possible_values": []
                }
            },
            "tensor_104": {
                "variable": {
                    "value": "input_target",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 1]",
                    "possible_values": []
                }
            },
            "tensor_105": {
                "variable": {
                    "value": "expected_triplet_indices",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 2]]",
                    "possible_values": []
                }
            },
            "tensor_120": {
                "variable": {
                    "value": "input_target",
                    "possible_values": []
                },
                "data": {
                    "value": "[1, 0, 0]",
                    "possible_values": []
                }
            },
            "tensor_121": {
                "variable": {
                    "value": "expected_triplet_indices",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 2, 0]]",
                    "possible_values": []
                }
            },
            "tensor_135": {
                "variable": {
                    "value": "input_target",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 1, 2]",
                    "possible_values": []
                }
            },
            "tensor_136": {
                "variable": {
                    "value": "expected_triplet_indices",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 2], [0, 1, 3]]",
                    "possible_values": []
                }
            },
            "tensor_150": {
                "variable": {
                    "value": "input_target",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 1, 4]",
                    "possible_values": []
                }
            },
            "tensor_151": {
                "variable": {
                    "value": "expected_triplet_indices",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 2], [0, 1, 3]]",
                    "possible_values": []
                }
            },
            "tensor_165": {
                "variable": {
                    "value": "input_target",
                    "possible_values": []
                },
                "data": {
                    "value": "[0, 0, 1, 2]",
                    "possible_values": []
                }
            },
            "tensor_166": {
                "variable": {
                    "value": "expected_triplet_indices",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 1, 2], [0, 1, 3]]",
                    "possible_values": []
                }
            }
        }
    },
    "tests/test_pretrainedmodelloader.py": {
        "torch": {}
    },
    "tests/test_sit_predictor.py": {
        "torch": {}
    },
    "tests/test_tripletLoss.py": {
        "torch": {
            "tensor_32": {
                "variable": {
                    "value": "p",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_33": {
                "variable": {
                    "value": "q",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_34": {
                "variable": {
                    "value": "n",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 1, 2]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_36": {
                "variable": {
                    "value": "target",
                    "possible_values": []
                },
                "data": {
                    "value": "[1]",
                    "possible_values": []
                }
            },
            "tensor_54": {
                "variable": {
                    "value": "p",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_55": {
                "variable": {
                    "value": "q",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_56": {
                "variable": {
                    "value": "n",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 1, 2]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_58": {
                "variable": {
                    "value": "target",
                    "possible_values": []
                },
                "data": {
                    "value": "[1]",
                    "possible_values": []
                }
            },
            "tensor_74": {
                "variable": {
                    "value": "input_x",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_75": {
                "variable": {
                    "value": "input_y",
                    "possible_values": []
                },
                "data": {
                    "value": "[[0, 0, 1]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_77": {
                "variable": {
                    "value": "expected",
                    "possible_values": []
                },
                "data": {
                    "value": "[0]",
                    "possible_values": []
                }
            },
            "tensor_91": {
                "variable": {
                    "value": "input_x",
                    "possible_values": []
                },
                "data": {
                    "value": "[[1, 8, 7]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_92": {
                "variable": {
                    "value": "input_y",
                    "possible_values": []
                },
                "data": {
                    "value": "[[2, 3, 4]]",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float",
                    "possible_values": []
                }
            },
            "tensor_94": {
                "variable": {
                    "value": "expected",
                    "possible_values": []
                },
                "data": {
                    "value": "[35]",
                    "possible_values": []
                }
            }
        }
    }
}