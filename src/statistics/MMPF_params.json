{
    "MinimaxParetoFair/MMPF_trainer.py": {
        "sklearn": {
            "LogisticRegression_373": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "solver": {
                    "value": "lbfgs",
                    "type": "Constant",
                    "possible_values": []
                },
                "max_iter": {
                    "value": "10000",
                    "type": "Constant",
                    "possible_values": []
                },
                "warm_start": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "C": {
                    "value": "C_reg",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10000000.0",
                            "MethodArgument"
                        ]
                    ]
                }
            }
        },
        "torch": {
            "from_numpy_31": {
                "variable": {
                    "value": "self.config.mu_penalty",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.config.mu_init / self.config.mu_init.sum()",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_51": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.classifier_network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.config.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_53": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.classifier_network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.config.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_128": {
                "variable": {
                    "value": "self.config.mu_penalty",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "mu_i / mu_i.sum()",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Adam_135": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.classifier_network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.config.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "SGD_137": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "self.classifier_network.parameters()",
                    "type": "Call",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.config.LEARNING_RATE",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/config.py": {
        "torch": {}
    },
    "MinimaxParetoFair/dataloader_utils.py": {
        "torch": {
            "Tensor_70": {
                "variable": {
                    "value": "self.U_torch",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_71": {
                "variable": {
                    "value": "self.S_torch",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_79": {
                "variable": {
                    "value": "X",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Tensor_97": {
                "variable": {
                    "value": "self.U_torch",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_98": {
                "variable": {
                    "value": "self.S_torch",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_99": {
                "variable": {
                    "value": "self.X_torch",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_119": {
                "variable": {
                    "value": "self.U_torch",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "Tensor_121": {
                "variable": {
                    "value": "self.S_torch",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "from_numpy_149": {
                "variable": {
                    "value": "ret_dict[key]",
                    "type": "Subscript",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "val",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/dataset_loaders.py": {
        "torch": {
            "WeightedRandomSampler_144": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": []
                },
                "weights": {
                    "value": "train_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[secret_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "len(train_weights)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_159": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "PandasDatasetNPKW(pd=val_pd, transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_164": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "PandasDatasetNPKW(pd=test_pd, transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "WeightedRandomSampler_234": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": []
                },
                "weights": {
                    "value": "train_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[secret_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "len(train_weights)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_287": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset(pd=test_pd, utility_tag='utility_cat', secret_tag='sensitive_cat', transform=composed_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "WeightedRandomSampler_369": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": []
                },
                "weights": {
                    "value": "train_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[secret_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "len(train_weights)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_385": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=val_pd, cov_list=config.cov_tags, utility_tag='utility_cat', sensitive_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_391": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=test_pd, cov_list=config.cov_tags, utility_tag='utility_cat', sensitive_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "WeightedRandomSampler_548": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": []
                },
                "weights": {
                    "value": "train_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[secret_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "len(train_weights)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_565": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=val_pd, cov_list=config.cov_tags, utility_tag='utility_cat', sensitive_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_571": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=test_pd, cov_list=config.cov_tags, utility_tag='utility_cat', sensitive_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "WeightedRandomSampler_636": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": []
                },
                "weights": {
                    "value": "train_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ],
                        [
                            "torch.DoubleTensor(train_pd[secret_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "len(train_weights)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_660": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset(pd=val_pd, utility_tag='utility_cat', secret_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_666": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset(pd=test_pd, utility_tag='utility_cat', secret_tag='secret_cat', transform=composed_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_149": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "PandasDatasetNPKW(pd=train_pd, transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_154": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "PandasDatasetNPKW(pd=train_pd, transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_262": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset(pd=train_pd, utility_tag='utility_cat', secret_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_268": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset(pd=train_pd, utility_tag='utility_cat', secret_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_275": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset(pd=val_pd, utility_tag='utility_cat', secret_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_281": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset(pd=val_pd, utility_tag='utility_cat', secret_tag='sensitive_cat', transform=composed_test)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "False",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_373": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=config.cov_tags, utility_tag='utility_cat', sensitive_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_379": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=config.cov_tags, utility_tag='utility_cat', sensitive_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_552": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=config.cov_tags, utility_tag='utility_cat', sensitive_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_558": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=config.cov_tags, utility_tag='utility_cat', sensitive_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_648": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset(pd=train_pd, utility_tag='utility_cat', secret_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ],
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_654": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "ImageDataset(pd=train_pd, utility_tag='utility_cat', secret_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "shuffle_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ],
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/logger.py": {
        "torch": {}
    },
    "MinimaxParetoFair/losses.py": {
        "torch": {
            "abs_47": {
                "variable": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs - targets",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "mean_64": {
                "input": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.abs(inputs - targets)",
                            "Call"
                        ],
                        [
                            "-1 * (inputs * targets)",
                            "BinOp"
                        ],
                        [
                            "(inputs - targets) ** 2",
                            "BinOp"
                        ],
                        [
                            "torch.mean(ret, -1) if self.reduction == 'mean' else torch.sum(ret, -1)",
                            "IfExp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sum_64": {
                "input": {
                    "value": "ret",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.abs(inputs - targets)",
                            "Call"
                        ],
                        [
                            "-1 * (inputs * targets)",
                            "BinOp"
                        ],
                        [
                            "(inputs - targets) ** 2",
                            "BinOp"
                        ],
                        [
                            "torch.mean(ret, -1) if self.reduction == 'mean' else torch.sum(ret, -1)",
                            "IfExp"
                        ]
                    ]
                },
                "dtype": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Softmax_44": {
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "LogSoftmax_51": {
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "Softmax_58": {
                "dim": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/main.py": {
        "torch": {
            "device_76": {
                "variable": {
                    "value": "DEVICE",
                    "type": "Name",
                    "possible_values": []
                },
                "type": {
                    "value": "'cuda:%d' % config.GPU_ID",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "device_78": {
                "variable": {
                    "value": "DEVICE",
                    "type": "Name",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "manual_seed_80": {
                "seed": {
                    "value": "config.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "is_available_75": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/misc.py": {
        "torch": {}
    },
    "MinimaxParetoFair/network/network_heads.py": {
        "torch": {
            "Dropout_18": {
                "variable": {
                    "value": "self.reg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "dropout_p",
                    "type": "Name",
                    "possible_values": [
                        [
                            "0.5",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Identity_20": {
                "variable": {
                    "value": "self.reg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Linear_15": {
                "in_features": {
                    "value": "body.feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "Linear_33": {
                "in_features": {
                    "value": "body.feature_dim",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out_features": {
                    "value": "output_dim",
                    "type": "Name",
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/network/network_utils.py": {
        "torch": {}
    },
    "MinimaxParetoFair/synthetic_data_utils.py": {
        "torch": {
            "WeightedRandomSampler_208": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": []
                },
                "weights": {
                    "value": "train_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "len(train_weights)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_225": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=val_pd, cov_list=cov_tags, utility_tag='utility_cat', sensitive_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "shuffle_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "n_dataloader",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_231": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=test_pd, cov_list=cov_tags, utility_tag='utility_cat', sensitive_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "n_dataloader",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_213": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=cov_tags, utility_tag='utility_cat', sensitive_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "n_dataloader",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_219": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=cov_tags, utility_tag='utility_cat', sensitive_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "shuffle_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "n_dataloader",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/synthetic_loaders.py": {
        "torch": {
            "WeightedRandomSampler_232": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": []
                },
                "weights": {
                    "value": "train_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "len(train_weights)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_250": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=val_pd, cov_list=config.cov_tags, utility_tag='utility_cat', secret_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_256": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=test_pd, cov_list=config.cov_tags, utility_tag='utility_cat', secret_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_238": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=config.cov_tags, utility_tag='utility_cat', secret_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_244": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=config.cov_tags, utility_tag='utility_cat', secret_tag='secret_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "config.BATCH_SIZE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "shuffle": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "config.n_dataloader",
                    "type": "Attribute",
                    "possible_values": []
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "manual_seed_263": {
                "seed": {
                    "value": "config.seed",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/syntheticdata_utils_TOBEREMOVED.py": {
        "torch": {
            "WeightedRandomSampler_331": {
                "variable": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": []
                },
                "weights": {
                    "value": "train_weights",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.DoubleTensor(train_pd[balanced_tag].apply(lambda x: weight_dic[x]).values)",
                            "Call"
                        ]
                    ]
                },
                "num_samples": {
                    "value": "len(train_weights)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "DataLoader_348": {
                "variable": {
                    "value": "val_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=val_pd, cov_list=cov_tags, utility_tag='utility_cat', sensitive_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "shuffle_val",
                    "type": "Name",
                    "possible_values": [
                        [
                            "False",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "n_dataloader",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_354": {
                "variable": {
                    "value": "test_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=test_pd, cov_list=cov_tags, utility_tag='utility_cat', sensitive_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "num_workers": {
                    "value": "n_dataloader",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_336": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=cov_tags, utility_tag='utility_cat', sensitive_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "sampler": {
                    "value": "train_sampler",
                    "type": "Name",
                    "possible_values": [
                        [
                            "torch.utils.data.sampler.WeightedRandomSampler(train_weights, len(train_weights))",
                            "Call"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "n_dataloader",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "DataLoader_342": {
                "variable": {
                    "value": "train_dataloader",
                    "type": "Name",
                    "possible_values": []
                },
                "dataset": {
                    "value": "TablePandasDataset(pd=train_pd, cov_list=cov_tags, utility_tag='utility_cat', sensitive_tag='sensitive_cat', transform=composed)",
                    "type": "Call",
                    "possible_values": []
                },
                "batch_size": {
                    "value": "batch_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "shuffle": {
                    "value": "shuffle_train",
                    "type": "Name",
                    "possible_values": [
                        [
                            "True",
                            "MethodArgument"
                        ]
                    ]
                },
                "num_workers": {
                    "value": "n_dataloader",
                    "type": "Name",
                    "possible_values": [
                        [
                            "32",
                            "MethodArgument"
                        ]
                    ]
                },
                "pin_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/torch_utils.py": {
        "torch": {
            "tensor_22": {
                "variable": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": []
                },
                "data": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "np.asarray(x, dtype=np.float)",
                            "Call"
                        ],
                        [
                            "torch.tensor(x, device=Config.DEVICE, dtype=torch.float32)",
                            "Call"
                        ]
                    ]
                },
                "device": {
                    "value": "Config.DEVICE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "torch.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "device_13": {
                "variable": {
                    "value": "Config.DEVICE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "'cuda:%d' % gpu_id",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "device_15": {
                "variable": {
                    "value": "Config.DEVICE",
                    "type": "Attribute",
                    "possible_values": []
                },
                "type": {
                    "value": "cpu",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "manual_seed_32": {
                "seed": {
                    "value": "np.random.randint(int(1000000.0))",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "MinimaxParetoFair/train_utils.py": {
        "torch": {
            "load_339": {
                "variable": {
                    "value": "(classifier_dic, optimizer_dic)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "Name",
                    "possible_values": []
                },
                "map_location": {
                    "value": "DEVICE",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "load_332": {
                "variable": {
                    "value": "(classifier_network, criteria, optimizer)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "f": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "save_336": {
                "obj": {
                    "value": "[classifier_network.state_dict(), optimizer.state_dict()]",
                    "type": "List",
                    "possible_values": []
                },
                "f": {
                    "value": "filename",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "save_328": {
                "obj": {
                    "value": "[classifier_network, criteria, optimizer]",
                    "type": "List",
                    "possible_values": []
                },
                "f": {
                    "value": "f",
                    "type": "Name",
                    "possible_values": []
                }
            },
            "max_111": {
                "input": {
                    "value": "sensitive.sum(0)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "ones_like_111": {
                "input": {
                    "value": "sensitive.sum(0)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    }
}