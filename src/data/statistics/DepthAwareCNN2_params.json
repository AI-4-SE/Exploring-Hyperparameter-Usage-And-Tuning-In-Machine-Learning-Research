{
    "utils/visualizer.py": {
        "tensorflow": {
            "FileWriter_24": {
                "variable": {
                    "value": "self.writer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "logdir": {
                    "value": "self.log_dir",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "data/VOC_dataset.py": {
        "torch": {}
    },
    "data/base_dataset.py": {
        "torch": {
            "from_numpy_169": {
                "variable": {
                    "value": "torchtensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "numpyarray.copy()",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "from_numpy_171": {
                "variable": {
                    "value": "torchtensor",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "np.expand_dims(numpyarray, axis=0).copy()",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "data/custom_dataset_data_loader.py": {
        "torch": {}
    },
    "data/nyuv2_dataset.py": {
        "torch": {
            "from_numpy_125": {
                "variable": {
                    "value": "image",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "img",
                    "type": "Call",
                    "possible_values": [
                        [
                            "imread(path_img, mode='RGB')",
                            "Call"
                        ],
                        [
                            "img.astype(np.float32) / 255.0",
                            "BinOp"
                        ],
                        [
                            "img.transpose((2, 0, 1))",
                            "Call"
                        ]
                    ]
                }
            },
            "from_numpy_126": {
                "variable": {
                    "value": "segmentation",
                    "type": "Variable",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "seg",
                    "type": "Call",
                    "possible_values": [
                        [
                            "imread(path_seg)",
                            "Call"
                        ],
                        [
                            "imresize(seg, (self.segSize, self.segSize), interp='nearest')",
                            "Call"
                        ],
                        [
                            "seg.astype(np.int) - 1",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_131": {
                "variable": {
                    "value": "image",
                    "type": "Variable",
                    "possible_values": []
                },
                "*size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "out": {
                    "value": "self.imgSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dtype": {
                    "value": "self.imgSize",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "ones_132": {
                "*size": {
                    "value": "self.segSize",
                    "type": "Attribute",
                    "possible_values": []
                },
                "out": {
                    "value": "self.segSize",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "data/nyuv2_dataset_crop.py": {
        "torch": {
            "Tensor_40": {
                "variable": {
                    "value": "self.label_weight",
                    "type": "Attribute",
                    "possible_values": []
                }
            }
        }
    },
    "data/stanfordindoor_dataset.py": {
        "torch": {}
    },
    "data/sunrgbd_dataset.py": {
        "torch": {}
    },
    "models/Deeplab.py": {
        "torch": {}
    },
    "models/Deeplab_HHA.py": {
        "torch": {
            "Sequential_31": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[self.model_rgb, self.model_HHA]",
                    "type": null,
                    "possible_values": []
                }
            },
            "upsample_104": {
                "variable": {
                    "value": "self.segpred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "input": {
                    "value": "self.segpred",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(input_size[2], input_size[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "CrossEntropyLoss_34": {
                "variable": {
                    "value": "self.criterionSeg",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "255",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "SGD_51": {
                "variable": {
                    "value": "self.optimizer",
                    "type": "Attribute",
                    "possible_values": []
                },
                "params": {
                    "value": "params_rgb + params_HHA",
                    "type": "BinOp",
                    "possible_values": []
                },
                "lr": {
                    "value": "self.opt.lr",
                    "type": "Attribute",
                    "possible_values": []
                },
                "momentum": {
                    "value": "self.opt.momentum",
                    "type": "Attribute",
                    "possible_values": []
                },
                "weight_decay": {
                    "value": "self.opt.wd",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "squeeze_108": {
                "input": {
                    "value": "self.seggt",
                    "type": "Attribute",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "models/VGG_Deeplab.py": {
        "torch": {
            "Conv2d_45": {
                "variable": {
                    "value": "conv2d",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ],
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "stride",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "padding",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                },
                "dilation": {
                    "value": "dilation",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ],
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "Sequential_54": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[conv2d] + layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_71": {
                "variable": {
                    "value": "self.layers",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[conv2d] + layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "AvgPool2d_100": {
                "variable": {
                    "value": "self.downsample_depth2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_108": {
                "variable": {
                    "value": "self.downsample_depth3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_133": {
                "variable": {
                    "value": "self.pool5a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_221": {
                "variable": {
                    "value": "self.pool5a",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_285": {
                "*args": {
                    "value": "*layers",
                    "type": null,
                    "possible_values": []
                }
            },
            "Sequential_299": {
                "variable": {
                    "value": "self.fc7_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[nn.ReLU(True), nn.Dropout(), nn.Conv2d(1024, 1024, kernel_size=1, stride=1), nn.ReLU(True), nn.Dropout()]",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_302": {
                "variable": {
                    "value": "self.fc8_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_310": {
                "variable": {
                    "value": "self.fc7_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[nn.ReLU(True), nn.Dropout(), nn.Conv2d(1024, 1024, kernel_size=1, stride=1), nn.ReLU(True), nn.Dropout()]",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_313": {
                "variable": {
                    "value": "self.fc8_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_321": {
                "variable": {
                    "value": "self.fc7_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[nn.ReLU(True), nn.Dropout(), nn.Conv2d(1024, 1024, kernel_size=1, stride=1), nn.ReLU(True), nn.Dropout()]",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_324": {
                "variable": {
                    "value": "self.fc8_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_332": {
                "variable": {
                    "value": "self.fc7_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[nn.ReLU(True), nn.Dropout(), nn.Conv2d(1024, 1024, kernel_size=1, stride=1), nn.ReLU(True), nn.Dropout()]",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_335": {
                "variable": {
                    "value": "self.fc8_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Sequential_382": {
                "variable": {
                    "value": "self.fc7_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "*args": {
                    "value": "*[nn.ReLU(True), nn.Dropout(), nn.Conv2d(1024, 1024, kernel_size=1, stride=1), nn.ReLU(True), nn.Dropout()]",
                    "type": null,
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_389": {
                "variable": {
                    "value": "self.globalpooling",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_390": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_392": {
                "variable": {
                    "value": "self.fc8_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "2048",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "num_classes",
                    "type": "Name",
                    "possible_values": [
                        [
                            "20",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "bias": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Upsample_406": {
                "variable": {
                    "value": "upsample",
                    "type": "Variable",
                    "possible_values": []
                },
                "size": {
                    "value": "(out2_size[2], out2_size[3])",
                    "type": "Tuple",
                    "possible_values": []
                },
                "mode": {
                    "value": "bilinear",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "cat_414": {
                "variable": {
                    "value": "out2",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensors": {
                    "value": "[out2, globalpool]",
                    "type": "List",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_117": {
                "variable": {
                    "value": "self.downsample_depth4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_188": {
                "variable": {
                    "value": "self.downsample_depth2_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_196": {
                "variable": {
                    "value": "self.downsample_depth3_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_205": {
                "variable": {
                    "value": "self.downsample_depth4_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_297": {
                "variable": {
                    "value": "self.fc6_1",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "6",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_308": {
                "variable": {
                    "value": "self.fc6_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_319": {
                "variable": {
                    "value": "self.fc6_3",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "18",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "18",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_330": {
                "variable": {
                    "value": "self.fc6_4",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "24",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AvgPool2d_379": {
                "variable": {
                    "value": "self.downsample_depth",
                    "type": "Attribute",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "9",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "8",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_380": {
                "variable": {
                    "value": "self.fc6_2",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "inplanes",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                },
                "dilation": {
                    "value": "12",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Conv2d_279": {
                "variable": {
                    "value": "conv2d",
                    "type": "Variable",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "in_channels",
                    "type": "Constant",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "v",
                            "Name"
                        ],
                        [
                            "3",
                            "Constant"
                        ],
                        [
                            "3",
                            "Constant"
                        ]
                    ]
                },
                "out_channels": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "3",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_48": {
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_48": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_50": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_52": {
                "kernel_size": {
                    "value": "pool_kernel",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "MethodArgument"
                        ]
                    ]
                },
                "stride": {
                    "value": "pool_stride",
                    "type": "Name",
                    "possible_values": [
                        [
                            "2",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "pool_pad",
                    "type": "Name",
                    "possible_values": [
                        [
                            "1",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "BatchNorm2d_68": {
                "num_features": {
                    "value": "planes",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_68": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_70": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "MaxPool2d_274": {
                "kernel_size": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "2",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "BatchNorm2d_281": {
                "num_features": {
                    "value": "v",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ReLU_281": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_283": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_300": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_300": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_301": {
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_301": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_301": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_311": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_311": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_312": {
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_312": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_312": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_322": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_322": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_323": {
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_323": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_323": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_333": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_333": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_334": {
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_334": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_334": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "ReLU_383": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_383": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "Conv2d_384": {
                "in_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "1024",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "stride": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "ReLU_384": {
                "inplace": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Dropout_384": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/base_model.py": {
        "torch": {
            "load_145": {
                "variable": {
                    "value": "load_dict",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "save_path",
                    "type": "Call",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, save_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(save_dir, save_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(pretraineddir, save_filename)",
                            "Call"
                        ]
                    ]
                },
                "map_location": {
                    "value": "lambda storage, loc: storage",
                    "type": "Lambda",
                    "possible_values": []
                }
            },
            "save_97": {
                "obj": {
                    "value": "network.cpu().state_dict()",
                    "type": "Call",
                    "possible_values": []
                },
                "f": {
                    "value": "save_path",
                    "type": "Call",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, save_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(save_dir, save_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(pretraineddir, save_filename)",
                            "Call"
                        ]
                    ]
                }
            },
            "is_available_98": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "load_116": {
                "variable": {
                    "value": "pretrained_dict",
                    "type": "Variable",
                    "possible_values": []
                },
                "f": {
                    "value": "save_path",
                    "type": "Call",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, save_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(save_dir, save_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(pretraineddir, save_filename)",
                            "Call"
                        ]
                    ]
                }
            },
            "load_114": {
                "f": {
                    "value": "save_path",
                    "type": "Call",
                    "possible_values": [
                        [
                            "os.path.join(self.model_dir, save_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(save_dir, save_filename)",
                            "Call"
                        ],
                        [
                            "os.path.join(pretraineddir, save_filename)",
                            "Call"
                        ]
                    ]
                }
            }
        }
    },
    "models/losses.py": {
        "torch": {
            "nll_loss_32": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "log_p",
                    "type": "Call",
                    "possible_values": [
                        [
                            "F.log_softmax(input).cuda()",
                            "Call"
                        ],
                        [
                            "F.log_softmax(input, dim=1).cuda()",
                            "Call"
                        ],
                        [
                            "log_p.transpose(1, 2).transpose(2, 3).contiguous()",
                            "Call"
                        ],
                        [
                            "log_p[target.view(n, h, w, 1).repeat(1, 1, 1, c) >= 0]",
                            "Subscript"
                        ],
                        [
                            "log_p.view(-1, c)",
                            "Call"
                        ],
                        [
                            "probs.log()",
                            "Call"
                        ]
                    ]
                },
                "target": {
                    "value": "target",
                    "type": "Variable",
                    "possible_values": []
                },
                "weight": {
                    "value": "weight",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ],
                        [
                            "None",
                            "MethodArgument"
                        ]
                    ]
                },
                "size_average": {
                    "value": "False",
                    "type": "Constant",
                    "possible_values": []
                },
                "ignore_index": {
                    "value": "255",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "log_softmax_21": {
                "variable": {
                    "value": "log_p",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "log_softmax_24": {
                "variable": {
                    "value": "log_p",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "input",
                    "type": "Variable",
                    "possible_values": []
                },
                "dim": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "softmax_77": {
                "variable": {
                    "value": "P",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "log_softmax_13": {
                "input": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "zeros_80": {
                "*size": {
                    "value": "[b, c + 1, h, w]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "log_softmax_44": {
                "input": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "ones_66": {
                "*size": {
                    "value": "class_num + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "pow_92": {
                "input": {
                    "value": "1 - probs",
                    "type": "BinOp",
                    "possible_values": []
                },
                "exponent": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "softmax_44": {
                "input": {
                    "value": "inputs",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "models/model_utils.py": {
        "torch": {
            "Parameter_34": {
                "variable": {
                    "value": "self.scale",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "10.0 * torch.ones(features)",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "Conv2d_50": {
                "variable": {
                    "value": "self.model",
                    "type": "Attribute",
                    "possible_values": []
                },
                "in_channels": {
                    "value": "n_features",
                    "type": "Variable",
                    "possible_values": []
                },
                "out_channels": {
                    "value": "n_out",
                    "type": "Variable",
                    "possible_values": []
                },
                "kernel_size": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "padding": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "AdaptiveAvgPool2d_51": {
                "variable": {
                    "value": "self.pool",
                    "type": "Attribute",
                    "possible_values": []
                },
                "output_size": {
                    "value": "(1, 1)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "Dropout_54": {
                "variable": {
                    "value": "self.dropout",
                    "type": "Attribute",
                    "possible_values": []
                },
                "p": {
                    "value": "0.3",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "Parameter_13": {
                "variable": {
                    "value": "self.gamma",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.ones(features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_14": {
                "variable": {
                    "value": "self.beta",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.zeros(features)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "UpsamplingBilinear2d_104": {
                "variable": {
                    "value": "self.upsample",
                    "type": "Attribute",
                    "possible_values": []
                },
                "size": {
                    "value": "(out2_size[2], out2_size[3])",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "ones_13": {
                "*size": {
                    "value": "features",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.model(features)",
                            "Call"
                        ],
                        [
                            "self.pool(features)",
                            "Call"
                        ]
                    ]
                }
            },
            "zeros_14": {
                "*size": {
                    "value": "features",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.model(features)",
                            "Call"
                        ],
                        [
                            "self.pool(features)",
                            "Call"
                        ]
                    ]
                }
            },
            "ones_34": {
                "*size": {
                    "value": "features",
                    "type": "Call",
                    "possible_values": [
                        [
                            "self.model(features)",
                            "Call"
                        ],
                        [
                            "self.pool(features)",
                            "Call"
                        ]
                    ]
                }
            },
            "mean_81": {
                "variable": {
                    "value": "mean_feat",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "output_ins",
                    "type": "Name",
                    "possible_values": [
                        [
                            "features[indices[0], indices[1] + j, indices[2], indices[3]]",
                            "Subscript"
                        ]
                    ]
                }
            }
        }
    },
    "models/models.py": {
        "torch": {}
    },
    "models/ops/depthavgpooling/build.py": {
        "torch": {
            "is_available_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/ops/depthavgpooling/functions/depthavgpooling.py": {
        "torch": {}
    },
    "models/ops/depthavgpooling/modules/depthavgpooling.py": {
        "torch": {}
    },
    "models/ops/depthconv/build.py": {
        "torch": {
            "is_available_12": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            },
            "is_available_35": {
                "params": {
                    "value": "default",
                    "type": null,
                    "possible_values": []
                }
            }
        }
    },
    "models/ops/depthconv/functions/depthconv.py": {
        "torch": {}
    },
    "models/ops/depthconv/modules/depthconv.py": {
        "torch": {
            "Parameter_27": {
                "variable": {
                    "value": "self.weight",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels, in_channels, *self.kernel_size)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "Parameter_31": {
                "variable": {
                    "value": "self.bias",
                    "type": "Attribute",
                    "possible_values": []
                },
                "data": {
                    "value": "torch.Tensor(out_channels)",
                    "type": "Call",
                    "possible_values": []
                }
            }
        }
    },
    "options/base_options.py": {
        "torch": {
            "set_device_83": {
                "device": {
                    "value": "self.opt.gpu_ids[0]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    },
    "train.py": {
        "torch": {}
    },
    "utils/util.py": {
        "torch": {
            "from_numpy_77": {
                "variable": {
                    "value": "self.cmap",
                    "type": "Attribute",
                    "possible_values": []
                },
                "ndarray": {
                    "value": "self.cmap[:n]",
                    "type": "Subscript",
                    "possible_values": []
                }
            }
        }
    }
}