{
    "src/network.py": {
        "tensorflow": {
            "conv2d_13": {
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "inst_norm(inp)",
                            "Call"
                        ],
                        [
                            "apply_conv(x, filters=filters)",
                            "Call"
                        ],
                        [
                            "inst_norm(x)",
                            "Call"
                        ],
                        [
                            "activation(x)",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "filters",
                    "type": "MethodArgument",
                    "possible_values": [
                        [
                            "FILTERS",
                            "MethodArgument"
                        ],
                        [
                            "FILTERS",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "kernel_size",
                    "type": "Name",
                    "possible_values": [
                        [
                            "KSIZE",
                            "MethodArgument"
                        ]
                    ]
                },
                "padding": {
                    "value": "SAME",
                    "type": "Constant",
                    "possible_values": []
                },
                "kernel_initializer": {
                    "value": "initializer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tc.layers.variance_scaling_initializer()",
                            "Call"
                        ]
                    ]
                },
                "kernel_regularizer": {
                    "value": "kernel_regularizer",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tc.layers.l2_regularizer(scale=1e-05)",
                            "Call"
                        ]
                    ]
                }
            },
            "conv2d_32": {
                "variable": {
                    "value": "result",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "inst_norm(inp)",
                            "Call"
                        ],
                        [
                            "apply_conv(x, filters=filters)",
                            "Call"
                        ],
                        [
                            "inst_norm(x)",
                            "Call"
                        ],
                        [
                            "activation(x)",
                            "Call"
                        ]
                    ]
                },
                "filters": {
                    "value": "n_out",
                    "type": "Name",
                    "possible_values": [
                        [
                            "N_OUT",
                            "MethodArgument"
                        ]
                    ]
                },
                "kernel_size": {
                    "value": "KSIZE",
                    "type": "Name",
                    "possible_values": [
                        [
                            "3",
                            "Constant"
                        ]
                    ]
                },
                "padding": {
                    "value": "SAME",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "name_scope_19": {
                "name": {
                    "value": "activation",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "leaky_relu_20": {
                "features": {
                    "value": "x",
                    "type": "Call",
                    "possible_values": [
                        [
                            "inst_norm(inp)",
                            "Call"
                        ],
                        [
                            "apply_conv(x, filters=filters)",
                            "Call"
                        ],
                        [
                            "inst_norm(x)",
                            "Call"
                        ],
                        [
                            "activation(x)",
                            "Call"
                        ]
                    ]
                }
            },
            "name_scope_26": {
                "name": {
                    "value": "convnet",
                    "type": "Constant",
                    "possible_values": []
                }
            }
        }
    },
    "src/operators.py": {
        "tensorflow": {
            "sign_40": {
                "x": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                }
            },
            "maximum_40": {
                "x": {
                    "value": "tf.abs(x) - alpha",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "abs_40": {
                "x": {
                    "value": "x",
                    "type": "Variable",
                    "possible_values": []
                }
            }
        }
    },
    "src/optimization.py": {
        "tensorflow": {
            "reduce_sum_25": {
                "variable": {
                    "value": "dot",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "x * y",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "reduce_sum_29": {
                "variable": {
                    "value": "norm",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "x ** 2",
                    "type": "BinOp",
                    "possible_values": []
                },
                "axis": {
                    "value": "[1, 2, 3]",
                    "type": "List",
                    "possible_values": []
                },
                "keepdims": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "sqrt_35": {
                "variable": {
                    "value": "safe_sqrt",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "norm_sq(x) + 1",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_40": {
                "variable": {
                    "value": "safe_sqrt",
                    "type": "Variable",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.where(tf.equal(x, 0.0), x + 1, x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "reduce_mean_48": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "norm_sq(x - y)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "shape_52": {
                "variable": {
                    "value": "shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reshape_53": {
                "variable": {
                    "value": "x_flat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "[shape[0], -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_mean_54": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.reduce_sum(tf.abs(x_flat), axis=-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "shape_62": {
                "variable": {
                    "value": "shape",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "where_63": {
                "variable": {
                    "value": "y",
                    "type": "Variable",
                    "possible_values": []
                },
                "condition": {
                    "value": "tf.abs(x) < gamma",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "0.5 * x ** 2 / gamma",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.abs(x) - 0.5 * gamma",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "reshape_66": {
                "variable": {
                    "value": "y_flat",
                    "type": "Variable",
                    "possible_values": []
                },
                "tensor": {
                    "value": "y",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.where(tf.abs(x) < gamma, 0.5 * x ** 2 / gamma, tf.abs(x) - 0.5 * gamma)",
                            "Call"
                        ]
                    ]
                },
                "shape": {
                    "value": "[shape[0], -1]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "reduce_mean_67": {
                "variable": {
                    "value": "loss",
                    "type": "Variable",
                    "possible_values": []
                },
                "input_tensor": {
                    "value": "tf.reduce_sum(y_flat, axis=-1)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "zeros_like_80": {
                "variable": {
                    "value": "dx",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "constant_81": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "while_loop_106": {
                "variable": {
                    "value": "(i, xn, xn_prev, dx, losses)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "cond",
                    "type": "Variable",
                    "possible_values": []
                },
                "body": {
                    "value": "body",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[i, xn, xn_prev, dx, losses]",
                    "type": "List",
                    "possible_values": []
                },
                "swap_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_119": {
                "variable": {
                    "value": "dx1",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_like_120": {
                "variable": {
                    "value": "dx2",
                    "type": "Variable",
                    "possible_values": []
                },
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "constant_121": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "while_loop_180": {
                "variable": {
                    "value": "(i, xn, xn_prev, grad_f, dx1, dx2, losses)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "cond",
                    "type": "Variable",
                    "possible_values": []
                },
                "body": {
                    "value": "body",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[i, xn, xn_prev, grad_f, dx1, dx2, losses]",
                    "type": "List",
                    "possible_values": []
                },
                "swap_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_196": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "while_loop_211": {
                "variable": {
                    "value": "(i, xn, losses)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "cond",
                    "type": "Variable",
                    "possible_values": []
                },
                "body": {
                    "value": "body",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[i, xn, losses]",
                    "type": "List",
                    "possible_values": []
                },
                "swap_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_224": {
                "variable": {
                    "value": "tn",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_225": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "while_loop_244": {
                "variable": {
                    "value": "(i, xn, yn, tn, losses)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "cond",
                    "type": "Variable",
                    "possible_values": []
                },
                "body": {
                    "value": "body",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[i, xn, yn, tn, losses]",
                    "type": "List",
                    "possible_values": []
                },
                "swap_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_255": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "while_loop_271": {
                "variable": {
                    "value": "(i, xn, losses)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "cond",
                    "type": "Variable",
                    "possible_values": []
                },
                "body": {
                    "value": "body",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[i, xn, losses]",
                    "type": "List",
                    "possible_values": []
                },
                "swap_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "constant_283": {
                "variable": {
                    "value": "tn",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "1",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "constant_284": {
                "variable": {
                    "value": "i",
                    "type": "Variable",
                    "possible_values": []
                },
                "value": {
                    "value": "0",
                    "type": "Constant",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.int32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "while_loop_303": {
                "variable": {
                    "value": "(i, xn, yn, tn, losses)",
                    "type": "Tuple",
                    "possible_values": []
                },
                "cond": {
                    "value": "cond",
                    "type": "Variable",
                    "possible_values": []
                },
                "body": {
                    "value": "body",
                    "type": "Variable",
                    "possible_values": []
                },
                "loop_vars": {
                    "value": "[i, xn, yn, tn, losses]",
                    "type": "List",
                    "possible_values": []
                },
                "swap_memory": {
                    "value": "True",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "where_41": {
                "condition": {
                    "value": "tf.equal(x, 0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "x": {
                    "value": "tf.zeros_like(x)",
                    "type": "Call",
                    "possible_values": []
                },
                "y": {
                    "value": "safe_sqrt",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.sqrt(norm_sq(x) + 1)",
                            "Call"
                        ],
                        [
                            "tf.sqrt(tf.where(tf.equal(x, 0.0), x + 1, x))",
                            "Call"
                        ]
                    ]
                }
            },
            "where_59": {
                "condition": {
                    "value": "tf.abs(x) < gamma",
                    "type": "Compare",
                    "possible_values": []
                },
                "x": {
                    "value": "x / gamma",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "tf.sign(x)",
                    "type": "Call",
                    "possible_values": []
                }
            },
            "one_hot_99": {
                "variable": {
                    "value": "index",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "i",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "depth": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "one_hot_167": {
                "variable": {
                    "value": "index",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "i",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "depth": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "one_hot_205": {
                "variable": {
                    "value": "index",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "i",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "depth": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "one_hot_238": {
                "variable": {
                    "value": "index",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "i",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "depth": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "one_hot_265": {
                "variable": {
                    "value": "index",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "i",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "depth": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "one_hot_297": {
                "variable": {
                    "value": "index",
                    "type": "Variable",
                    "possible_values": []
                },
                "indices": {
                    "value": "i",
                    "type": "Call",
                    "possible_values": [
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ],
                        [
                            "tf.constant(0, dtype=tf.int32)",
                            "Call"
                        ]
                    ]
                },
                "depth": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                }
            },
            "where_40": {
                "condition": {
                    "value": "tf.equal(x, 0.0)",
                    "type": "Call",
                    "possible_values": []
                },
                "x": {
                    "value": "x + 1",
                    "type": "BinOp",
                    "possible_values": []
                },
                "y": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "equal_41": {
                "x": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "zeros_like_41": {
                "input": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_54": {
                "input_tensor": {
                    "value": "tf.abs(x_flat)",
                    "type": "Call",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "sign_59": {
                "x": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "reduce_sum_67": {
                "input_tensor": {
                    "value": "y_flat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(y, shape=[shape[0], -1])",
                            "Call"
                        ]
                    ]
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_91": {
                "variable": {
                    "value": "inp",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[xn, grad_f, grad_h, dx]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "concat_130": {
                "variable": {
                    "value": "inp1",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[xn, grad_f, dx1]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "equal_40": {
                "x": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                },
                "y": {
                    "value": "0.0",
                    "type": "Constant",
                    "possible_values": []
                }
            },
            "abs_54": {
                "x": {
                    "value": "x_flat",
                    "type": "Name",
                    "possible_values": [
                        [
                            "tf.reshape(x, shape=[shape[0], -1])",
                            "Call"
                        ]
                    ]
                }
            },
            "abs_59": {
                "x": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "abs_63": {
                "x": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "abs_65": {
                "x": {
                    "value": "x",
                    "type": "Name",
                    "possible_values": [
                        [
                            "x / safe_sqrt",
                            "BinOp"
                        ]
                    ]
                }
            },
            "zeros_75": {
                "shape": {
                    "value": "tf.reshape(n_iter, (1,))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_90": {
                "name_or_scope": {
                    "value": "body",
                    "type": "Constant",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_102": {
                "tensor": {
                    "value": "norm(xn - xn_prev)",
                    "type": "Call",
                    "possible_values": []
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_114": {
                "shape": {
                    "value": "tf.reshape(n_iter, (1,))",
                    "type": "Call",
                    "possible_values": []
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "variable_scope_129": {
                "name_or_scope": {
                    "value": "body",
                    "type": "Constant",
                    "possible_values": []
                },
                "reuse": {
                    "value": "tf.AUTO_REUSE",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "concat_133": {
                "variable": {
                    "value": "inp2",
                    "type": "Variable",
                    "possible_values": []
                },
                "values": {
                    "value": "[xn, grad_f, dx2, dx1]",
                    "type": "List",
                    "possible_values": []
                },
                "axis": {
                    "value": "-1",
                    "type": "UnaryOp",
                    "possible_values": []
                }
            },
            "reshape_176": {
                "tensor": {
                    "value": "Wn",
                    "type": "Name",
                    "possible_values": [
                        [
                            "l2(T(yn), y) + lam * l1(W(xn)) + dot(grad_f, xn - yn) + 0.5 / beta * norm_sq(yn - xn) + (2 * beta - gamma_n) / (2 * beta * gamma_n) * norm_sq(xn - xn_prev - beta / (2 * beta - gamma_n) * dx2_n)",
                            "BinOp"
                        ]
                    ]
                },
                "shape": {
                    "value": "[]",
                    "type": "List",
                    "possible_values": []
                }
            },
            "zeros_192": {
                "shape": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_219": {
                "shape": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_252": {
                "shape": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "zeros_279": {
                "shape": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "dtype": {
                    "value": "tf.float32",
                    "type": "Attribute",
                    "possible_values": []
                }
            },
            "reshape_75": {
                "tensor": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "reshape_114": {
                "tensor": {
                    "value": "n_iter",
                    "type": "Name",
                    "possible_values": [
                        [
                            "10",
                            "MethodArgument"
                        ]
                    ]
                },
                "shape": {
                    "value": "(1,)",
                    "type": "Tuple",
                    "possible_values": []
                }
            },
            "sqrt_235": {
                "x": {
                    "value": "1 + 4 * tn ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            },
            "sqrt_294": {
                "x": {
                    "value": "1 + 4 * tn ** 2",
                    "type": "BinOp",
                    "possible_values": []
                }
            }
        }
    }
}